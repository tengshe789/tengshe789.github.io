<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[window terminal Áé©Ê≥ïÂ§ßÂÖ®]]></title>
    <url>%2F2020%2F07%2F01%2Fwindow-terminal-%E7%8E%A9%E6%B3%95%E5%A4%A7%E5%85%A8%2F</url>
    <content type="text"><![CDATA[window terminal Áé©Ê≥ïÂ§ßÂÖ®Ê∑ªÂä†Âà∞Âè≥ÈîÆËèúÂçïÁ¨¨‰∏ÄÊ≠•ÔºåÂàõÂª∫Êñá‰ª∂Â§πÈ¶ñÂÖàÊâìÂºÄcmdÔºåÊ≥®ÊÑèÔºågitbashÊó†Êïà„ÄÇ ËøêË°å‰∏ãÊñπÂëΩ‰ª§Ôºö 1mkdir "%USERPROFILE%\AppData\Local\Terminal" Á¨¨‰∫åÊ≠•Ôºå‰∏ãËΩΩwindow terminal icoÂõæÊ†áÊâìÂºÄ‰∏ãÊñπÁΩëÂùÄÔºåÂ∞ÜÂõæÊ†áÂ§çÂà∂Âà∞‰∏äÊñπÔºåÂëΩ‰ª§ÁöÑË∑ØÂæÑ https://raw.githubusercontent.com/microsoft/terminal/master/res/terminal.ico Á¨¨‰∏âÊ≠•ÔºåÊ∑ªÂä†Ê≥®ÂÜåË°®Êñá‰ª∂ÂàõÂª∫Êñá‰ª∂Ôºå‰ª£Á†ÅÂ¶Ç‰∏ãÔºåÈáçÂëΩÂêçÊàê.regÊ†ºÂºè 12345678Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\Directory\Background\shell\wt]@=&quot;Windows Terminal here&quot;&quot;Icon&quot;=&quot;C:\\Users\\[‰Ω†ÁöÑÁî®Êà∑Âêç]\\AppData\\Local\\Terminal\\terminal.ico&quot;[HKEY_CLASSES_ROOT\Directory\Background\shell\wt\command]@=&quot;C:\\Users\\[‰Ω†ÁöÑÁî®Êà∑Âêç]\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe&quot;]]></content>
      <tags>
        <tag>ËΩØ‰ª∂ÂàÜ‰∫´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âø´ÈÄügit pullÊõ¥Êñ∞ÊâÄÊúâÈ°πÁõÆÊñá‰ª∂]]></title>
    <url>%2F2019%2F09%2F17%2F%E5%BF%AB%E9%80%9Fgit-pull%E6%89%80%E6%9C%89%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[Ê≤≥ËüπÔºåÊú¨Â±±Â§ßÁéãÂõûÊù•‰∫Ü„ÄÇÂõûÊÉ≥‰∏Ä‰∏ãÔºåÂ∑≤ÁªèÂ§ßÊ¶ÇÊï¥Êï¥7‰∏™ÊúàÊ≤°Áî®Êõ¥Êñ∞ÂçöÂÆ¢‰∫ÜÔºÅÔºÅÔºÅÁ≠âÊàëÊÑèËØÜÂà∞Ëøô‰∏™ÈóÆÈ¢òÁöÑÊó∂ÂÄôÔºåÂ±ÖÁÑ∂ËøûmarkdownÈÉΩ‰∏ç‰ºöÂÜô‰∫ÜÔºåÁΩ™ÊÅ∂ÁΩ™ÊÅ∂„ÄÇ‰ªäÊó•ÔºåÈáçÊãæÊàëÁöÑÁ∫∏Â∏ÅÔºåÁªßÁª≠Êõ¥Êñ∞ÂçöÂÆ¢ÔºåËØ∑ÂêÑ‰ΩçÁúãÂÆ¢Áªô‰∫àÈºìÂä±„ÄÇ ÈúÄÊ±ÇÂàÜÊûêÊïÖ‰∫ãÁöÑÂºÄÂßãÊòØËøôÊ†∑ÁöÑÔºåÊúâ‰ΩçÊê¨Á†ñÂ∑•ÔºåÂêçÂ≠óÂè´Â∞èÂæêÔºå‰ªñÊâÄÂú®ÁöÑÂÖ¨Âè∏Áî®ÁöÑÊòØVMware Horizon 7ËôöÊãüÊ°åÈù¢ÁéØÂ¢ÉÔºåËΩØ‰ª∂ÂºÄÂèëÊ†πÊú¨Ëøû‰∏ç‰∏äÂ§ñÈÉ®ÁΩëÁªúÔºåËøôËÆ©‰ªñÈùûÂ∏∏Ëã¶ÊÅº„ÄÇ Á™ÅÁÑ∂Êúâ‰∏ÄÂ§©ÔºåÂÖ¨Âè∏ÂÜÖÈÉ®Â§ßÂèòÈù©ÔºåË¶ÅÂºÄÂßã‰ΩøÁî®mavenÁßÅÊúçÔºåË¶ÅÂºÄÂßã‰ΩøÁî®ÂÜÖÈÉ®PaaSÔºåËøôËÆ©Â∞èÂæêÂøÉÈáå‰πêÂºÄ‰∫ÜËä±„ÄÇ‚ÄúÂèØÊòØÊñ∞Áü•ËØÜÂ§™Â§öÔºåËøôËØ•Â¶Ç‰ΩïÂ≠¶‰π†Âë¢Ôºü‚ÄùÂ∞èÂæêÊ≥õËµ∑‰∫ÜÂòÄÂíï„ÄÇ ÂäüÂ§´‰∏çË¥üÊúâÂøÉ‰∫∫ÔºåÂú®Â∞èÂæêÁöÑÊó•Â§úÂä™Âäõ‰∏≠ÔºåÂú®‰∏Ä‰∏™Âè∑Áß∞ÂÖ®ÁêÉÊúÄÂ§ßÁöÑÂêåÊÄß‰∫§ÂèãÁΩëÁ´ô‰∏äÔºåÊâæÂà∞‰∫ÜÂæàÂ§öÂ≠¶‰π†ËµÑÊñô„ÄÇÂ∞èÂæêÂú®Ëá™Â∑±Êü•ËØ¢Â§ñÈÉ®‰∫íËÅîÁΩëËµÑÊñôÁöÑÁ¨îËÆ∞Êú¨‰∏äÔºåÁÜüÁªÉÁöÑgit cloneÂêÑÁßçÂêÑÊ†∑ÁöÑ‰ªìÂ∫ìÔºåÂæàÂø´ÔºåÊª°Êª°‰∏Ä‰∏™Á°¨ÁõòÈÉΩÊòØËøô‰∫õ‰ªìÂ∫ìÁöÑÊñá‰ª∂Â§π„ÄÇ Êó∂Èó¥ËøáÁöÑÂæàÂø´ÔºåËΩ¨Áúº7‰∏™ÊúàËøáÂéª‰∫Ü„ÄÇ ÊäÄÊúØÂèòÂåñÁöÑÂæàÂø´ÔºåËΩ¨ÁúºÔºåÊª°Êª°Á°¨ÁõòÁöÑÂ≠¶‰π†ËµÑÊñôÈÉΩËøáÊó∂‰∫ÜÔºåÊÄé‰πà‰∏Ä‰∏ãÂ≠êÂ∞Ü‰ªñ‰ª¨Êõ¥Êñ∞Âë¢Ôºü ‰ª•‰∏äÂ∞±ÊòØÂ∞èÂæêÂêëÊàëÊèêÂá∫‰∫ÜÈúÄÊ±Ç„ÄÇ ËÆæËÆ°ËΩØ‰ª∂pythonÊòØ‰∏ñÁïå‰∏äÊúÄÂ•ΩÁöÑËØ≠Ë®ÄÔºÅüòÜ ËÆæËÆ°ÊÄùË∑ØÂæàÁÆÄÂçïÔºåÂà§Êñ≠ÂΩìÂâçÁõÆÂΩïÁöÑÊâÄÊúâÊñá‰ª∂Â§π‰∏≠ÔºåÊòØÂê¶ÂÖ∂‰∏≠ÂåÖÂê´ÂêéÁºÄÊòØ.gitÁöÑÊñá‰ª∂Â§πÔºåÂ¶ÇÊûúÊòØÔºåÂàô‰∏∫‰ªìÂ∫ìÔºåËøõË°åÊõ¥Êñ∞Ôºå‰∏çÊòØÂ∞±Ë∑≥Ëøá„ÄÇ ÂÖ∂‰∏≠ÈúÄË¶Å‰æùËµñgitpythonËøô‰∏™ÂåÖÔºåÊù•ËøõË°ågit pullÊìç‰Ωú„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748import gitfrom git import *import threadingimport osdef isGitDir(dir): repdir = os.path.join(os.path.abspath('.'), dir) repgitdir = os.path.join(repdir, '.git') if not os.path.exists(repgitdir): return False return Truedef updateSub(subdir): repdir = os.path.join(os.path.abspath('.'), subdir) try: repo = git.Repo(repdir) if repo.is_dirty(): dirSubDir.append(subdir) return remote = repo.remote() print("start pulling from remote for: %s\r\n" %subdir) remote.pull() print("Done pulling for %s\r\n" %subdir) except NoSuchPathError as e: pass except InvalidGitRepositoryError as e: pass finally: passcurrDir = os.path.abspath('.')subDirs = [x for x in os.listdir('.') if isGitDir(x)]print("ready to update git repo:")for dir in subDirs: print(dir+ '\r\n')dirSubDir = []poole = []for subdir in subDirs: t = threading.Thread(target=updateSub,args=(subdir,)) t.start() poole.append(t)for t in poole: t.join(30)print('\r\n')if len(dirSubDir)!= 0: print('these repos have uncommitted changes:') for dirtyDir in dirSubDir: print('dir %s has uncommited change, please check' % dirtyDir) ÊµãËØïÊäï‰∫ßÊâìÂºÄÁîµËÑëÔºåÂú®cmd‰∏≠ËøêË°åpip install gitpythonÊàñËÄÖconda install gitpythonÔºåÊù•ÂÆâË£ÖÂøÖË¶ÅÁöÑÂåÖ„ÄÇ Â∞Ü‰∏äËø∞Êñá‰ª∂‰øùÂ≠òÂà∞‰ªìÂ∫ìÁöÑÁõÆÂΩïÔºåÂπ∂‰∏îÂëΩÂêç‰∏∫update.pyÔºåÂè≥ÈîÆ‰ΩøÁî®VS CodeËøêË°åÔºåÂç≥ÂèØÂèëÁé∞ÁõÆÂΩï‰∏≠ÊâÄÊúâ‰ªìÂ∫ìÈÉΩÊàêÂäügit pull ‰∫ÜÔºåÂ§ßÊàêÂäüÔºÅ Áª≠1sÊó∂Èó¥ÂÜôÂÆåËøô‰∏™ÂçöÂÆ¢ÁöÑÊó∂ÂÄôÔºåÂÅ∑ÂÅ∑Áúã‰∫Ü‰∏Ä‰∏ãËÆ∞ÂΩïÂçöÂÆ¢ÊµèËßàÈáèÁöÑÁΩëÁ´ôÔºåÁàÜÁÇ∏‰∫ÜÔºÅÔºÅÔºÅËøô7‰∏™ÊúàÊàë‰∏çÂú®Á∫øÁöÑÊó•Â≠êÔºåËøô‰πàÂ§ö‰∫∫ËÆøÈóÆÊàëÂçöÂÆ¢Âïä„ÄÇÂæàÂºÄÂøÉÔºåË∞¢Ë∞¢‰Ω†ÈÇ£‰πàÂèØÁà±ÔºåËøò‰∏ÄÁõ¥ÂÖ≥Ê≥®ÁùÄÊàë~‚ù§üòù ÂÖ®ÁâáÁªìÊùüÔºåËßâÂæóÊàëÂÜôÁöÑ‰∏çÈîôÔºüÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËµ∂Âø´ÊâìÂºÄÊàëÁöÑüëâ‰∏™‰∫∫ÂçöÂÆ¢ üëàÂêßÔºÅ]]></content>
      <tags>
        <tag>ÂàÜ‰∫´</tag>
        <tag>Á™çÈó®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂàÜ‰∫´‰∏Ä‰∏ãÂæÆÊúçÂä°ÁõëÊéßËΩØ‰ª∂‰ª•ÂèäÂÖ∂ÈÉ®ÁΩ≤]]></title>
    <url>%2F2019%2F02%2F15%2F%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%8B%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9B%91%E6%8E%A7%E8%BD%AF%E4%BB%B6%E4%BB%A5%E5%8F%8A%E5%85%B6%E9%83%A8%E7%BD%B2%2F</url>
    <content type="text"><![CDATA[ÊúÄËøëÂú®ÂØªÊâæÊúâÂà©ÁöÑÁõëÊéßËΩØ‰ª∂‰∏∫ÊàëÁöÑÂæÆÊúçÂä°ÁåÆË∫´Ôºå‰∫éÊòØ‰πéÊï¥ÁêÜÊñáÊ°£ÔºåËØïÈ™åÔºåËä±‰∫ÜÂæàÈïøÊó∂Èó¥„ÄÇ‰ªäÂ§©ÂàÜ‰∫´‰∏Ä‰∏ãÊï¥ÁêÜÁöÑÈÉ®ÂàÜÂ∑•ÂÖ∑ÔºåÊúâÊó∂Èó¥‰ºöÁªßÁª≠Âú®Ê≠§post‰∏≠Êõ¥Êñ∞ÁöÑÔºÅüôÉ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢„ÄÇ influxDB‰ªÄ‰πàÊòØinfluxDBinfluxDBÊòØ‰∏Ä‰∏™ÂàÜÂ∏ÉÂºèÊó∂Èó¥Â∫èÂàóÊï∞ÊçÆÂ∫ì„ÄÇcAdvisor‰ªÖ‰ªÖÊòæÁ§∫ÂÆûÊó∂‰ø°ÊÅØÔºå‰ΩÜÊòØ‰∏çÂ≠òÂÇ®ÁõëËßÜÊï∞ÊçÆ„ÄÇÂõ†Ê≠§ÔºåÊàë‰ª¨ÈúÄË¶ÅÊèê‰æõÊó∂Â∫èÊï∞ÊçÆÂ∫ìÁî®‰∫éÂ≠òÂÇ®cAdvisorÁªÑ‰ª∂ÊâÄÊèê‰æõÁöÑÁõëÊéß‰ø°ÊÅØÔºå‰ª•‰æøÊòæÁ§∫Èô§ÂÆûÊó∂‰ø°ÊÅØ‰πãÂ§ñÁöÑÊó∂Â∫èÊï∞ÊçÆ„ÄÇ influxDBÂÆâË£ÖÔºà1Ôºâ‰∏ãËΩΩÈïúÂÉè1docker pull tutum/influxdb Ôºà2ÔºâÂàõÂª∫ÂÆπÂô®1234567docker run ‚Äêdi \‚Äêp 8083:8083 \‚Äêp 8086:8086 \‚Äê‚Äêexpose 8090 \‚Äê‚Äêexpose 8099 \‚Äê‚Äêname influxsrv \tutum/influxdb Á´ØÂè£Ê¶ÇËø∞Ôºö 8083Á´ØÂè£:webËÆøÈóÆÁ´ØÂè£ 8086:Êï∞ÊçÆÂÜôÂÖ•Á´ØÂè£ÊâìÂºÄÊµèËßàÂô® http://192.168.184.135:8083/ (ipËá™ËßâÊõøÊç¢) influxDBÂ∏∏Áî®Êìç‰ΩúÂàõÂª∫Êï∞ÊçÆÂ∫ì1CREATE DATABASE &quot;cadvisor&quot; ÂõûËΩ¶ÂàõÂª∫Êï∞ÊçÆÂ∫ì1SHOW DATABASES Êü•ÁúãÊï∞ÊçÆÂ∫ì ÂàõÂª∫Áî®Êà∑Âπ∂ÊéàÊùÉÂàõÂª∫Áî®Êà∑1CREATE USER &quot;cadvisor&quot; WITH PASSWORD &apos;cadvisor&apos; WITH ALL PRIVILEGES Êü•ÁúãÁî®Êà∑1SHOW USRES Áî®Êà∑ÊéàÊùÉ123grant all privileges on cadvisor to cadvisorgrant WRITE on cadvisor to cadvisorgrant READ on cadvisor to cadvisor Êü•ÁúãÈááÈõÜÁöÑÊï∞ÊçÆÂàáÊç¢Âà∞cadvisorÊï∞ÊçÆÂ∫ìÔºå‰ΩøÁî®‰ª•‰∏ãÂëΩ‰ª§Êü•ÁúãÈááÈõÜÁöÑÊï∞ÊçÆ1SHOW MEASUREMENTS Â¶ÇÊûúÊÉ≥ÈááÈõÜÁ≥ªÁªüÁöÑÊï∞ÊçÆÔºåÊàë‰ª¨ÈúÄË¶Å‰ΩøÁî®CadvisorËΩØ‰ª∂Êù•ÂÆûÁé∞ MoreÂÆòÊñπÊñáÊ°£ Ôºö https://github.com/influxdata/docs.influxdata.com cAdvisorÂï•‰πàÊòØcAdvisorGoogleÂºÄÊ∫êÁöÑÁî®‰∫éÁõëÊéßÂü∫Á°ÄËÆæÊñΩÂ∫îÁî®ÁöÑÂ∑•ÂÖ∑ÔºåÂÆÉÊòØ‰∏Ä‰∏™Âº∫Â§ßÁöÑÁõëÊéßÂ∑•ÂÖ∑Ôºå‰∏çÈúÄË¶Å‰ªª‰ΩïÈÖçÁΩÆÂ∞±ÂèØ‰ª•ÈÄöËøáËøêË°åÂú®Docker‰∏ªÊú∫‰∏äÁöÑÂÆπÂô®Êù•ÁõëÊéßDockerÂÆπÂô®ÔºåËÄå‰∏îÂèØ‰ª•ÁõëÊéßDocker‰∏ªÊú∫„ÄÇ cAdvisorÂÆâË£ÖÔºà1Ôºâ‰∏ãËΩΩÈïúÂÉèdocker pull google/cadvisorÔºà2ÔºâÂàõÂª∫ÂÆπÂô® 12345docker run ‚Äê‚Äêvolume=/:/rootfs:ro ‚Äê‚Äêvolume=/var/run:/var/run:rw ‚Äê‚Äêvolume=/sys:/sys:ro ‚Äê‚Äêvolume=/var/lib/docker/:/var/lib/docker:ro ‚Äê‚Äêpublish=8080:8080 ‚Äê‚Äêdetach=true ‚Äê‚Äêlink influxsrv:influxsrv ‚Äê‚Äêname=cadvisorgoogle/cadvisor ‚Äêstorage_driver=influxdb ‚Äêstorage_driver_db=cadvisor ‚Äêstorage_driver_host=influxsrv:8086 WEBÂâçÁ´ØËÆøÈóÆÂú∞ÂùÄhttp://192.168.184.135:8080/containers/ (ËØ∑Ëá™ËßâÊõøÊç¢ÂÆûÈôÖip)ÊÄßËÉΩÊåáÊ†áÂê´‰πâÂèÇÁÖßÂ¶Ç‰∏ãÂú∞ÂùÄhttps://blog.csdn.net/ZHANG_H_A/article/details/53097084ÂÜçÊ¨°Êü•ÁúãinfluxDBÔºåÂèëÁé∞Â∑≤ÁªèÊúâÂæàÂ§öÊï∞ÊçÆË¢´ÈááÈõÜËøõÂéª‰∫Ü„ÄÇ GrafanaGrafanaÊòØ‰∏Ä‰∏™ÂèØËßÜÂåñÈù¢ÊùøÔºàDashboardÔºâÔºåÊúâÁùÄÈùûÂ∏∏ÊºÇ‰∫ÆÁöÑÂõæË°®ÂíåÂ∏ÉÂ±ÄÂ±ïÁ§∫ÔºåÂäüËÉΩÈΩêÂÖ®ÁöÑÂ∫¶Èáè‰ª™Ë°®ÁõòÂíåÂõæÂΩ¢ÁºñËæëÂô®„ÄÇÊîØÊåÅGraphite„ÄÅzabbix„ÄÅInfluxDB„ÄÅPrometheusÂíåOpenTSDB‰Ωú‰∏∫Êï∞ÊçÆÊ∫ê„ÄÇ Grafana‰∏ªË¶ÅÁâπÊÄßÔºöÁÅµÊ¥ª‰∏∞ÂØåÁöÑÂõæÂΩ¢ÂåñÈÄâÈ°πÔºõÂèØ‰ª•Ê∑∑ÂêàÂ§öÁßçÈ£éÊ†ºÔºõÊîØÊåÅÁôΩÂ§©ÂíåÂ§úÈó¥Ê®°ÂºèÔºõÂ§ö‰∏™Êï∞ÊçÆÊ∫ê„ÄÇ GrafanaÂÆâË£ÖÔºà1Ôºâ‰∏ãËΩΩÈïúÂÉèdocker pull grafana/grafanaÔºà2ÔºâÂàõÂª∫ÂÆπÂô®1234docker run ‚Äêd ‚Äêp 3001:3000 ‚Äêe INFLUXDB_HOST=influxsrv ‚ÄêeINFLUXDB_PORT=8086 ‚Äêe INFLUXDB_NAME=cadvisor ‚Äêe INFLUXDB_USER=cadvisor ‚ÄêeINFLUXDB_PASS=cadvisor ‚Äê‚Äêlink influxsrv:influxsrv ‚Äê‚Äêname grafanagrafana/grafana Ê≥®ÊÑèÔºåINFLUXDBÈÖçÁΩÆËØ∑‰∏é‰∏äÊñáÊàëÁöÑÂÜôÁöÑÈÖçÁΩÆÁõ∏Âêå„ÄÇÔºà3ÔºâËÆøÈóÆhttp://192.168.184.135:3001 ÔºàËá™ËßâÊõ¥Êç¢ipÔºâÁî®Êà∑ÂêçÂØÜÁ†ÅÂùá‰∏∫admin ‰ΩøÁî®//TODO pinpointÊòØÂï•pinpointÊòØÂºÄÊ∫êÂú®github‰∏äÁöÑ‰∏ÄÊ¨æAPMÁõëÊéßÂ∑•ÂÖ∑ÔºåÂÆÉÊòØÁî®JavaÁºñÂÜôÁöÑÔºåÁî®‰∫éÂ§ßËßÑÊ®°ÂàÜÂ∏ÉÂºèÁ≥ªÁªüÁõëÊéß„ÄÇÂÆÉÂØπÊÄßËÉΩÁöÑÂΩ±ÂìçÊúÄÂ∞èÔºàÂè™Â¢ûÂä†Á∫¶3ÔºÖËµÑÊ∫êÂà©Áî®ÁéáÔºâÔºåÂÆâË£ÖagentÊòØÊó†‰æµÂÖ•ÂºèÁöÑÔºåÂè™ÈúÄË¶ÅÂú®Ë¢´ÊµãËØïÁöÑTomcat‰∏≠Âä†‰∏ä3Âè•ËØùÔºåÊâì‰∏ãÊé¢ÈíàÔºåÂ∞±ÂèØ‰ª•ÁõëÊéßÊï¥Â•óÁ®ãÂ∫è‰∫Ü„ÄÇ ÊâÄÈúÄËΩØ‰ª∂1234567hbase-1.2.6-bin.tar.gzpinpoint-1.6.2.zip pinpointÊ∫êÁ†ÅÔºå‰ΩøÁî®hbase-create.hbaseËÑöÊú¨ÂàùÂßãÂåñhbasepinpoint-collector-1.6.2.war collectorÊ®°ÂùóÔºå‰ΩøÁî®tomcatËøõË°åÈÉ®ÁΩ≤pinpoint-web-1.6.2.war webÁÆ°ÊéßÂè∞Ôºå‰ΩøÁî®tomcatËøõË°åÈÉ®ÁΩ≤pinpoint-agent-1.6.2.tar.gz ‰∏çÈúÄË¶ÅÈÉ®ÁΩ≤ÔºåÂú®Ë¢´ÁõëÊéßÂ∫îÁî®‰∏ÄÁ´Øapache-tomcat-8.5.15.zip ÂáÜÂ§á‰∏§‰∏™tomcatÁéØÂ¢ÉÔºå‰∏Ä‰∏™ÈÉ®ÁΩ≤pinpoint-collector-1.6.2.warÔºåÂè¶‰∏Ä‰∏™ÈÉ®ÁΩ≤pinpoint-web-1.6.2.war ÂÆâË£ÖhbaseÁéØÂ¢ÉÈÖçÁΩÆËß£Âéãhbase-1.2.6-bin.tar.gzÔºå‰øÆÊîπhbase/conf/hbase-site.xmlÊñá‰ª∂ÂÜÖÂÆπÂ¶Ç‰∏ã123456789101112131415161718&lt;configuration&gt;&lt;property&gt;&lt;name&gt;hbase.rootdir&lt;/name&gt;&lt;value&gt;file:///pinpoint/data/hbase&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;hbase.zookeeper.property.dataDir&lt;/name&gt;&lt;value&gt;/pinpoint/data/zookeeper&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;hbase.master.port&lt;/name&gt;&lt;value&gt;60000&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;hbase.regionserver.port&lt;/name&gt;&lt;value&gt;60020&lt;/value&gt;&lt;/property&gt;&lt;/configuration&gt; ‰øÆÊîπhbase/conf/hbase-env.shÊñá‰ª∂ÔºåËÆæÁΩÆJAVA_HOMEÁéØÂ¢ÉÂèòÈáèexport JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home ÂêØÂä®hbasehbase/bin/start-hbase.sh ÊâßË°åjpsÊü•ÁúãÊòØÂê¶ÊúâHMasterËøõÁ®ãËÆøÈóÆ http://127.0.0.1:16010/master-status Êü•Áúãhbase webÁÆ°ÊéßÂè∞ÂØºÂÖ•hbaseÂàùÂßãÂåñËÑöÊ≠•1234567891011121314151617181920212223242526272829303132333435363738hbase/bin/hbase shell /pinpoint-1.6.2/hbase/scripts/hbase-create.hbase...0 row(s) in 1.4160 seconds0 row(s) in 1.2420 seconds0 row(s) in 2.2410 seconds0 row(s) in 1.2400 seconds0 row(s) in 1.2450 seconds0 row(s) in 1.2420 seconds0 row(s) in 1.2360 seconds0 row(s) in 1.2400 seconds0 row(s) in 1.2370 seconds0 row(s) in 2.2450 seconds0 row(s) in 4.2480 seconds0 row(s) in 1.2310 seconds0 row(s) in 1.2430 seconds0 row(s) in 1.2390 seconds0 row(s) in 1.2440 seconds0 row(s) in 1.2440 secondsTABLEAgentEventAgentInfoAgentLifeCycleAgentStatAgentStatV2ApiMetaDataApplicationIndexApplicationMapStatisticsCallee_Ver2ApplicationMapStatisticsCaller_Ver2ApplicationMapStatisticsSelf_Ver2ApplicationTraceIndexHostApplicationMap_Ver2SqlMetaData_Ver2StringMetaDataTraceV2Traces16 row(s) in 0.0190 seconds ËøõÂÖ•hbase shell12345hbase/bin/hbase shellHBase Shell; enter &apos;help&lt;RETURN&gt;&apos; for list of supported commands.Type &quot;exit&lt;RETURN&gt;&quot; to leave the HBase ShellVersion 1.2.6, rUnknown, Mon May 29 02:25:32 CDT 2017hbase(main):001:0&gt; ËæìÂÖ•status ‚Äòdetailed‚ÄôÊü•ÁúãÂàöÊâçÂàùÂßãÂåñÁöÑË°®ÔºåÊòØÂê¶Â≠òÂú®1hbase(main):001:0&gt; status &apos;detailed&apos; ËÆøÈóÆ http://127.0.0.1:16010/master-status Êü•Áúãhbase webÁÆ°ÊéßÂè∞ ÈÉ®ÁΩ≤collectorËß£Âéãapache-tomcat-8.5.15.zipÂπ∂ÈáçÂëΩÂêç‰∏∫collectorÊã∑Ë¥ùpinpoint-collector-1.6.2.warÂà∞collector\webapps\ÁõÆÂΩï‰∏ãÂπ∂ÈáçÂëΩÂêç‰∏∫ROOT.warÊ∂âÂèäÂà∞‰∏§‰∏™ÈÖçÁΩÆÊñá‰ª∂ hbase.propertiesÁî±‰∫é‰ΩøÁî®ÁöÑ‰∏∫hbaseËá™Â∏¶ÁöÑzookeeperÂç≥hbaseÂíåzookeeperÂú®Âêå‰∏ÄÂè∞Êú∫Âô®‰∏äÔºåÂàô‰∏çÈúÄË¶Å‰øÆÊîπcollector/webapps/ROOT/WEB-INF/classes/hbase.propertiesÊñá‰ª∂ pinpoint-collector.propertiesÊ≥®ÊÑèËßÇÂØüËØ•ÈÖçÁΩÆÊñá‰ª∂‰∏≠‰∏≠ÁöÑ‰∏â‰∏™Á´ØÂè£9994„ÄÅ9995„ÄÅ9996 ÈªòËÆ§‰∏çÈúÄË¶Å‰øÆÊîπÔºåÂÖ∂‰∏≠9994‰∏∫collectorÁõëÂê¨ÁöÑtcpÁ´ØÂè£Ôºå9995‰∏∫collectorÁõëÂê¨ÁöÑudpÁ´ØÂè£ ÊâßË°åcollector/bin/startup.shÂêØÂä®collectorÈÉ®ÁΩ≤webÁÆ°ÊéßÂè∞Ëß£Âéãapache-tomcat-8.5.15.zipÂπ∂ÈáçÂëΩÂêç‰∏∫webÊã∑Ë¥ùpinpoint-web-1.6.2.warÂà∞web\webapps\ÁõÆÂΩï‰∏ãÂπ∂ÈáçÂëΩÂêç‰∏∫ROOT.warÂêåÊ†∑ÁïôÊÑèweb/webapps/ROOT/WEB-INF/classes/hbase.properties‰∏≠ÁöÑÈÖçÁΩÆÔºåËã•‰∏éhbaseÂú®Âêå‰∏ÄÂè∞Êú∫Âô®Âàô‰∏çÈúÄË¶Å‰øÆÊîπÊâßË°åweb/bin/startup.shÂêØÂä®webÁÆ°ÊéßÂè∞(Ê≥®ÊÑè‰øÆÊîπtomcatÁ´ØÂè£Âè∑ÔºåÈò≤Ê≠¢ÂÜ≤Á™ÅÔºåËøôÈáå‰øÆÊîπÁ´ØÂè£‰∏∫8088)ÊµèËßàÂô®ËÆøÈóÆ http://127.0.0.1:8088/ Êü•ÁúãpinpointÁÆ°ÊéßÂè∞ ÁõëÊéßspring bootÂ∫îÁî®ËøôÈáåÊúâ‰∏Ä‰∏™spring-boot-example.jarÁöÑÂ∫îÁî®ÔºåÁé∞Âú®Ë¶Å‰ΩøÁî®pinpointÊù•ÂØπÂÖ∂ÁõëÊéßË∑üË∏™„ÄÇÊìç‰ΩúÂæàÁÆÄÂçïÔºåÂàÜ‰∏§Ê≠•Ëß£Âéãpinpoint-agent-1.6.2.tar.gzÂπ∂ÂØπÂÖ∂ËøõË°åÈÖçÁΩÆ1tar zxvf pinpoint-agent-1.6.2.tar.gz -C pinpoint-agent ‰øÆÊîπpinpoint-agent/pinpoint.config‰∏≠ÁöÑÈÖçÁΩÆ‰∏écollectorÊúçÂä°‰∏ÄËá¥„ÄÇÊ≠§Â§ÑÂõ†‰∏∫pinpoint-agent‰∏écollectorÂú®Âêå‰∏ÄÂè∞Êú∫Âô®ÔºåÂõ†Ê≠§ÈªòËÆ§ÈÖçÁΩÆÂç≥ÂèØ‰∏çÈúÄË¶Å‰øÆÊîπ„ÄÇ‰∏∫spring-bootÂ∫îÁî®ÈÖçÁΩÆpinpoint-agentÂêØÂä®spring-bootÂ∫îÁî®Êó∂Ê∑ªÂä†Â¶Ç‰∏ãÂèÇÊï∞123-javaagent:$AGENT_PATH/pinpoint-bootstrap-$VERSION.jar-Dpinpoint.agentId-Dpinpoint.applicationName Êú¨‰æã‰∏≠ÁöÑÂêØÂä®ÂèÇÊï∞‰∏∫1java -javaagent:/pinpoint-agent/pinpoint-bootstrap-1.6.2.jar -Dpinpoint.agentId=spring-boot-app -Dpinpoint.applicationName=spring-boot-app -jar spring-boot-docker-example-1.0.jar ËÆøÈóÆ http://127.0.0.1:8088/ ÔºåÁ¨¨‰∏ÄÊ¨°ËÆøÈóÆÂèØËÉΩÊ≤°ÊúâÊï∞ÊçÆÔºåÂèØ‰ª•ÂÖàËÆøÈóÆ‰∏ãÂ∫îÁî®ÔºåÁÑ∂ÂêéÂú®Âà∑Êñ∞pinpointÁÆ°ÊéßÂè∞Âç≥ÂèØ morehttps://www.cnblogs.com/yyhh/p/6106472.html Open-FalconOpen-FalconÔºåÂ∞èÁ±≥ÂÆ∂ÁöÑÂºÄÊ∫êÁõëÊéßÁ≥ªÁªü„ÄÇ ÁâπÁÇπ1„ÄÅÂº∫Â§ßÁÅµÊ¥ªÁöÑÊï∞ÊçÆÈááÈõÜÔºöËá™Âä®ÂèëÁé∞ÔºåÊîØÊåÅfalcon-agent„ÄÅsnmp„ÄÅÊîØÊåÅÁî®Êà∑‰∏ªÂä®push„ÄÅÁî®Êà∑Ëá™ÂÆö‰πâÊèí‰ª∂ÊîØÊåÅ„ÄÅopentsdb data model likeÔºàtimestamp„ÄÅendpoint„ÄÅmetric„ÄÅkey-value tagsÔºâ 2„ÄÅÊ∞¥Âπ≥Êâ©Â±ïËÉΩÂäõÔºöÊîØÊåÅÊØè‰∏™Âë®Êúü‰∏ä‰∫øÊ¨°ÁöÑÊï∞ÊçÆÈááÈõÜ„ÄÅÂëäË≠¶Âà§ÂÆö„ÄÅÂéÜÂè≤Êï∞ÊçÆÂ≠òÂÇ®ÂíåÊü•ËØ¢ 3„ÄÅÈ´òÊïàÁéáÁöÑÂëäË≠¶Á≠ñÁï•ÁÆ°ÁêÜÔºöÈ´òÊïàÁöÑportal„ÄÅÊîØÊåÅÁ≠ñÁï•Ê®°Êùø„ÄÅÊ®°ÊùøÁªßÊâøÂíåË¶ÜÁõñ„ÄÅÂ§öÁßçÂëäË≠¶ÊñπÂºè„ÄÅÊîØÊåÅcallbackË∞ÉÁî® 4„ÄÅ‰∫∫ÊÄßÂåñÁöÑÂëäË≠¶ËÆæÁΩÆÔºöÊúÄÂ§ßÂëäË≠¶Ê¨°Êï∞„ÄÅÂëäË≠¶Á∫ßÂà´„ÄÅÂëäË≠¶ÊÅ¢Â§çÈÄöÁü•„ÄÅÂëäË≠¶ÊöÇÂÅú„ÄÅ‰∏çÂêåÊó∂ÊÆµ‰∏çÂêåÈòàÂÄº„ÄÅÊîØÊåÅÁª¥Êä§Âë®Êúü 5„ÄÅÈ´òÊïàÁéáÁöÑgraphÁªÑ‰ª∂ÔºöÂçïÊú∫ÊîØÊíë200‰∏ámetricÁöÑ‰∏äÊä•„ÄÅÂΩíÊ°£„ÄÅÂ≠òÂÇ®ÔºàÂë®Êúü‰∏∫1ÂàÜÈíüÔºâ 6„ÄÅÈ´òÊïàÁöÑÂéÜÂè≤Êï∞ÊçÆqueryÁªÑ‰ª∂ÔºöÈááÁî®rrdtoolÁöÑÊï∞ÊçÆÂΩíÊ°£Á≠ñÁï•ÔºåÁßíÁ∫ßËøîÂõû‰∏äÁôæ‰∏™metric‰∏ÄÂπ¥ÁöÑÂéÜÂè≤Êï∞ÊçÆ 7„ÄÅdashboardÔºöÂ§öÁª¥Â∫¶ÁöÑÊï∞ÊçÆÂ±ïÁ§∫ÔºåÁî®Êà∑Ëá™ÂÆö‰πâScreen 8„ÄÅÈ´òÂèØÁî®ÔºöÊï¥‰∏™Á≥ªÁªüÊó†Ê†∏ÂøÉÂçïÁÇπÔºåÊòìËøêÁª¥ÔºåÊòìÈÉ®ÁΩ≤ÔºåÂèØÊ∞¥Âπ≥Êâ©Â±ï 9„ÄÅÂºÄÂèëËØ≠Ë®ÄÔºö Êï¥‰∏™Á≥ªÁªüÁöÑÂêéÁ´ØÔºåÂÖ®ÈÉ®golangÁºñÂÜôÔºåportalÂíådashboard‰ΩøÁî®pythonÁºñÂÜô„ÄÇ Á§æÂå∫ÂíåÊñáÊ°£ÊîØÊåÅhttp://book.open-falcon.org/zh/index.html ÁéØÂ¢ÉÂáÜÂ§áÂÆâË£ÖredisyumÂÆâË£Ö1yum install -y redis ‰øÆÊîπÈÖçÁΩÆredis.conf1vi /etc/redis.conf ÂêØÂä®redisÔºöredis-server &amp; ÂÆâË£Ömysql1yum install -y mysql-server ÂêØÂä®mysqlÔºöservice mysqld startÊü•ÁúãmysqlÁä∂ÊÄÅÔºöservice mysqld status ÂàùÂßãÂåñmysqlÊï∞ÊçÆÂ∫ìË°®Êï∞ÊçÆÈªòËÆ§Ê≤°ÊúâËÆæÁΩÆÂØÜÁ†ÅÔºåÊâßË°åÁöÑÊó∂ÂÄôÂá∫Áé∞ËæìÂÖ•ÂØÜÁ†ÅÔºåÁõ¥Êé•ÂõûËΩ¶„ÄÇ12345678cd /tmp/ &amp;&amp; git clone https://github.com/open-falcon/falcon-plus.git cd /tmp/falcon-plus/scripts/mysql/db_schema/mysql -h 127.0.0.1 -u root -p &lt; 1_uic-db-schema.sqlmysql -h 127.0.0.1 -u root -p &lt; 2_portal-db-schema.sqlmysql -h 127.0.0.1 -u root -p &lt; 3_dashboard-db-schema.sqlmysql -h 127.0.0.1 -u root -p &lt; 4_graph-db-schema.sqlmysql -h 127.0.0.1 -u root -p &lt; 5_alarms-db-schema.sqlrm -rf /tmp/falcon-plus/ ËÆæÁΩÆmysqlÁöÑrootÁî®Êà∑ÂØÜÁ†ÅÔºömysql ‚Äìu rootÊü•ÁúãmysqlÁî®Êà∑ÂíåÂØÜÁ†Åselect user,host,password from mysql.user; ÂèëÁé∞Êü•ËØ¢ÂØÜÁ†ÅÈÉΩÊòØÁ©∫ÔºåÁÑ∂ÂêéÂºÄÂßãËÆæÁΩÆrootÁöÑÂØÜÁ†Å‰∏∫bigdata1mysql&gt; set password for root@localhost=password(&apos;bigdata&apos;); ÈÄÄÂá∫Ôºömysql&gt;exit ‰∏ãËΩΩÁºñËØëÂêéÁöÑ‰∫åËøõÂà∂ÂåÖ12cd /data/program/softwarewget https://github.com/open-falcon/falcon-plus/releases/download/v0.2.1/open-falcon-v0.2.1.tar.gz ÂêéÁ´ØÂÆâË£ÖÂàõÂª∫Â∑•‰ΩúÁõÆÂΩï123export FALCON_HOME=/home/workexport WORKSPACE=$FALCON_HOME/open-falconmkdir -p $WORKSPACE Ëß£Âéã‰∫åËøõÂà∂ÂåÖ12cd /data/program/softwaretar -xzvf open-falcon-v0.2.1.tar.gz -C $WORKSPACE ÈÖçÁΩÆÊï∞ÊçÆÂ∫ìË¥¶Âè∑ÂíåÂØÜÁ†Å12cd $WORKSPACEgrep -Ilr 3306 ./ | xargs -n1 -- sed -i &apos;s/root:/root:bigdata/g&apos; Ê≥®ÊÑèroot:ÂêéÈù¢ÈªòËÆ§ÂØÜÁ†Å‰∏∫Á©∫. ÂêØÂä®Êü•ÁúãÁõÆÂΩï‰∏ãÂåÖÊã¨Open-FalconÁöÑÊâÄÊúâÁªÑ‰ª∂12cd $WORKSPACE./open-falcon start Ê£ÄÊü•ÊâÄÊúâÊ®°ÂùóÁöÑÂêØÂä®Áä∂ÂÜµ./open-falcon check Êõ¥Â§öÂëΩ‰ª§Ë°åÂ∑•ÂÖ∑12345678910111213141516./open-falcon [start|stop|restart|check|monitor|reload] module./open-falcon start agent./open-falcon check falcon-graph UP 53007 falcon-hbs UP 53014 falcon-judge UP 53020 falcon-transfer UP 53026 falcon-nodata UP 53032 falcon-aggregator UP 53038 falcon-agent UP 53044 falcon-gateway UP 53050 falcon-api UP 53056 falcon-alarm UP 53063For debugging , You can check $WorkDir/$moduleName/log/logs/xxx.log ÂâçÁ´ØÂÆâË£ÖÂàõÂª∫Â∑•‰ΩúÁõÆÂΩïËøô‰∏ÄÊ≠•Âú®ÂàõÂª∫ÂêéÁ´ØÊúçÂä°ÁöÑÊó∂ÂÄôÂ∑≤ÁªèÂª∫Á´ãÂ•ΩÔºåÊâÄ‰ª•‰∏çÈúÄË¶ÅÂÜçËøõË°åÊìç‰Ωú„ÄÇ1234export HOME=/home/workexport WORKSPACE=$HOME/open-falconmkdir -p $WORKSPACEcd $WORKSPACE ÂÖãÈöÜÂâçÁ´ØÁªÑ‰ª∂‰ª£Á†Å12cd $WORKSPACEgit clone https://github.com/open-falcon/dashboard.git ÂÆâË£Ö‰æùËµñÂåÖ12345yum install -y python-virtualenvyum install -y python-develyum install -y openldap-develyum install -y mysql-develyum groupinstall &quot;Development tools&quot; 12cd $WORKSPACE/dashboard/virtualenv ./env 1./env/bin/pip install -r pip_requirements.txt -i https://pypi.douban.com/simple Ê≥®ÊÑèÔºöÂ¶ÇÊûúÊâßË°å‰∏äÈù¢ÊúâÈóÆÈ¢òÔºåÂ∞±Áõ¥Êé•ÊâßË°å./env/bin/pip install -r pip_requirements.txt ‰øÆÊîπÈÖçÁΩÆdashboardÁöÑÈÖçÁΩÆÊñá‰ª∂‰∏∫Ôºö ‚Äòrrd/config.py‚ÄôÔºåËØ∑Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµ‰øÆÊîπ1234## API_ADDR Ë°®Á§∫ÂêéÁ´ØapiÁªÑ‰ª∂ÁöÑÂú∞ÂùÄAPI_ADDR = &quot;http://127.0.0.1:8080/api/v1&quot; ## Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµÔºå‰øÆÊîπPORTAL_DB_*, ÈªòËÆ§Áî®Êà∑Âêç‰∏∫rootÔºåÈªòËÆ§ÂØÜÁ†Å‰∏∫&quot;&quot;## Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµÔºå‰øÆÊîπALARM_DB_*, ÈªòËÆ§Áî®Êà∑Âêç‰∏∫rootÔºåÈªòËÆ§ÂØÜÁ†Å‰∏∫&quot;&quot; ÂêØÂä®1bash control start open http://127.0.0.1:8081 in your browser. ÂÅúÊ≠¢bash control stop ÂÆâË£Ö-Agent‰ªãÁªçagentÁî®‰∫éÈááÈõÜÊú∫Âô®Ë¥üËΩΩÁõëÊéßÊåáÊ†áÔºåÊØîÂ¶Çcpu.idle„ÄÅload.1min„ÄÅdisk.io.utilÁ≠âÁ≠âÔºåÊØèÈöî60ÁßípushÁªôTransfer„ÄÇagent‰∏éTransferÂª∫Á´ã‰∫ÜÈïøËøûÊé•ÔºåÊï∞ÊçÆÂèëÈÄÅÈÄüÂ∫¶ÊØîËæÉÂø´ÔºåagentÊèê‰æõ‰∫Ü‰∏Ä‰∏™httpÊé•Âè£/v1/pushÁî®‰∫éÊé•Êî∂Áî®Êà∑ÊâãÂ∑•pushÁöÑ‰∏Ä‰∫õÊï∞ÊçÆÔºåÁÑ∂ÂêéÈÄöËøáÈïøËøûÊé•ËøÖÈÄüËΩ¨ÂèëÁªôTransfer„ÄÇ ÈÉ®ÁΩ≤agentÈúÄË¶ÅÈÉ®ÁΩ≤Âà∞ÊâÄÊúâË¶ÅË¢´ÁõëÊéßÁöÑÊú∫Âô®‰∏äÔºåÊØîÂ¶ÇÂÖ¨Âè∏Êúâ10‰∏áÂè∞Êú∫Âô®ÔºåÈÇ£Â∞±Ë¶ÅÈÉ®ÁΩ≤10‰∏á‰∏™agent„ÄÇagentÊú¨Ë∫´ËµÑÊ∫êÊ∂àËÄóÂæàÂ∞ëÔºå‰∏çÁî®ÊãÖÂøÉ„ÄÇÈ¶ñÂÖàÊâæÂà∞‰πãÂâçÂêéÁ´ØÊúçÂä°ÁöÑËß£ÂéãÁõÆÂΩïÔºö/home/work/open-falcon/Êã∑Ë¥ùagentÂà∞ÈúÄË¶ÅÁõëÊéßÁöÑÊúçÂä°Âô®‰∏äÈù¢scp -r agent/ root@dst1:/home/work/open-falconÊã∑Ë¥ùopen-falconÂà∞ÈúÄË¶ÅÁõëÊéßÁöÑÊúçÂä°Âô®‰∏äÈù¢scp -r open-falcon root@dst1:/home/work/open-falcon‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ÔºöÈÖçÁΩÆÊñá‰ª∂ÂøÖÈ°ªÂè´cfg.jsonÔºåÂ¶Ç‰∏ãÂèÇÁÖß‰øÆÊîπÔºö123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354&#123; &quot;debug&quot;: true, # ÊéßÂà∂‰∏Ä‰∫õdebug‰ø°ÊÅØÁöÑËæìÂá∫ÔºåÁîü‰∫ßÁéØÂ¢ÉÈÄöÂ∏∏ËÆæÁΩÆ‰∏∫false &quot;hostname&quot;: &quot;&quot;, # agentÈááÈõÜ‰∫ÜÊï∞ÊçÆÂèëÁªôtransferÔºåendpointÂ∞±ËÆæÁΩÆ‰∏∫‰∫ÜhostnameÔºåÈªòËÆ§ÈÄöËøá`hostname`Ëé∑ÂèñÔºåÂ¶ÇÊûúÈÖçÁΩÆ‰∏≠ÈÖçÁΩÆ‰∫ÜhostnameÔºåÂ∞±Áî®ÈÖçÁΩÆ‰∏≠ÁöÑ &quot;ip&quot;: &quot;&quot;, # agent‰∏éhbsÂøÉË∑≥ÁöÑÊó∂ÂÄô‰ºöÊääËá™Â∑±ÁöÑipÂú∞ÂùÄÂèëÁªôhbsÔºåagent‰ºöËá™Âä®Êé¢ÊµãÊú¨Êú∫ipÔºåÂ¶ÇÊûú‰∏çÊÉ≥ËÆ©agentËá™Âä®Êé¢ÊµãÔºåÂèØ‰ª•ÊâãÂ∑•‰øÆÊîπËØ•ÈÖçÁΩÆ &quot;plugin&quot;: &#123; &quot;enabled&quot;: false, # ÈªòËÆ§‰∏çÂºÄÂêØÊèí‰ª∂Êú∫Âà∂ &quot;dir&quot;: &quot;./plugin&quot;, # ÊääÊîæÁΩÆÊèí‰ª∂ËÑöÊú¨ÁöÑgit repo cloneÂà∞Ëøô‰∏™ÁõÆÂΩï &quot;git&quot;: &quot;https://github.com/open-falcon/plugin.git&quot;, # ÊîæÁΩÆÊèí‰ª∂ËÑöÊú¨ÁöÑgit repoÂú∞ÂùÄ &quot;logs&quot;: &quot;./logs&quot; # Êèí‰ª∂ÊâßË°åÁöÑlogÔºåÂ¶ÇÊûúÊèí‰ª∂ÊâßË°åÊúâÈóÆÈ¢òÔºåÂèØ‰ª•ÂéªËøô‰∏™ÁõÆÂΩïÁúãlog &#125;, &quot;heartbeat&quot;: &#123; &quot;enabled&quot;: true, # Ê≠§Â§ÑenabledË¶ÅËÆæÁΩÆ‰∏∫true &quot;addr&quot;: &quot;127.0.0.1:6030&quot;, # hbsÁöÑÂú∞ÂùÄÔºåÁ´ØÂè£ÊòØhbsÁöÑrpcÁ´ØÂè£ &quot;interval&quot;: 60, # ÂøÉË∑≥Âë®ÊúüÔºåÂçï‰ΩçÊòØÁßí &quot;timeout&quot;: 1000 # ËøûÊé•hbsÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåÂçï‰ΩçÊòØÊØ´Áßí &#125;, &quot;transfer&quot;: &#123; &quot;enabled&quot;: true, &quot;addrs&quot;: [ &quot;127.0.0.1:18433&quot; ], # transferÁöÑÂú∞ÂùÄÔºåÁ´ØÂè£ÊòØtransferÁöÑrpcÁ´ØÂè£, ÂèØ‰ª•ÊîØÊåÅÂÜôÂ§ö‰∏™transferÁöÑÂú∞ÂùÄÔºåagent‰ºö‰øùËØÅHA &quot;interval&quot;: 60, # ÈááÈõÜÂë®ÊúüÔºåÂçï‰ΩçÊòØÁßíÔºåÂç≥agent‰∏ÄÂàÜÈíüÈááÈõÜ‰∏ÄÊ¨°Êï∞ÊçÆÂèëÁªôtransfer &quot;timeout&quot;: 1000 # ËøûÊé•transferÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåÂçï‰ΩçÊòØÊØ´Áßí &#125;, &quot;http&quot;: &#123; &quot;enabled&quot;: true, # ÊòØÂê¶Ë¶ÅÁõëÂê¨httpÁ´ØÂè£ &quot;listen&quot;: &quot;:1988&quot;, &quot;backdoor&quot;: false &#125;, &quot;collector&quot;: &#123; &quot;ifacePrefix&quot;: [&quot;eth&quot;, &quot;em&quot;], # ÈªòËÆ§ÈÖçÁΩÆÂè™‰ºöÈááÈõÜÁΩëÂç°ÂêçÁß∞ÂâçÁºÄÊòØeth„ÄÅemÁöÑÁΩëÂç°ÊµÅÈáèÔºåÈÖçÁΩÆ‰∏∫Á©∫Â∞±‰ºöÈááÈõÜÊâÄÊúâÁöÑÔºåloÁöÑ‰πü‰ºöÈááÈõÜ„ÄÇÂèØ‰ª•‰ªé/proc/net/devÁúãÂà∞ÂêÑ‰∏™ÁΩëÂç°ÁöÑÊµÅÈáè‰ø°ÊÅØ &quot;mountPoint&quot;: [] &#125;, &quot;default_tags&quot;: &#123; &#125;, &quot;ignore&quot;: &#123; # ÈªòËÆ§ÈááÈõÜ‰∫Ü200Â§ö‰∏™metricÔºåÂèØ‰ª•ÈÄöËøáignoreËÆæÁΩÆ‰∏∫‰∏çÈááÈõÜ &quot;cpu.busy&quot;: true, &quot;df.bytes.free&quot;: true, &quot;df.bytes.total&quot;: true, &quot;df.bytes.used&quot;: true, &quot;df.bytes.used.percent&quot;: true, &quot;df.inodes.total&quot;: true, &quot;df.inodes.free&quot;: true, &quot;df.inodes.used&quot;: true, &quot;df.inodes.used.percent&quot;: true, &quot;mem.memtotal&quot;: true, &quot;mem.memused&quot;: true, &quot;mem.memused.percent&quot;: true, &quot;mem.memfree&quot;: true, &quot;mem.swaptotal&quot;: true, &quot;mem.swapused&quot;: true, &quot;mem.swapfree&quot;: true &#125;&#125; ÂêØÂä®./open-falcon start agent ÂêØÂä®ËøõÁ®ã./open-falcon stop agent ÂÅúÊ≠¢ËøõÁ®ã./open-falcon monitor agent Êü•ÁúãÊó•ÂøóÁúãvarÁõÆÂΩï‰∏ãÁöÑlogÊòØÂê¶Ê≠£Â∏∏ÔºåÊàñËÄÖÊµèËßàÂô®ËÆøÈóÆÂÖ∂1988Á´ØÂè£„ÄÇÂè¶Â§ñagentÊèê‰æõ‰∫Ü‰∏Ä‰∏™‚ÄìcheckÂèÇÊï∞ÔºåÂèØ‰ª•Ê£ÄÊü•agentÊòØÂê¶ÂèØ‰ª•Ê≠£Â∏∏Ë∑ëÂú®ÂΩìÂâçÊú∫Âô®‰∏ä./falcon-agent --checkÂèØËøõÂÖ•ÁõëÊéßÁïåÈù¢Êü•Áúã ÂÆâË£ÖÊï∞ÊçÆËΩ¨ÂèëÊúçÂä°-TransferÁÆÄ‰ªãtransferÊòØÊï∞ÊçÆËΩ¨ÂèëÊúçÂä°„ÄÇÂÆÉÊé•Êî∂agent‰∏äÊä•ÁöÑÊï∞ÊçÆÔºåÁÑ∂ÂêéÊåâÁÖßÂìàÂ∏åËßÑÂàôËøõË°åÊï∞ÊçÆÂàÜÁâá„ÄÅÂπ∂Â∞ÜÂàÜÁâáÂêéÁöÑÊï∞ÊçÆÂàÜÂà´pushÁªôgraph&amp;judgeÁ≠âÁªÑ‰ª∂„ÄÇ ÊúçÂä°ÈÉ®ÁΩ≤ÊúçÂä°ÈÉ®ÁΩ≤ÔºåÂåÖÊã¨ÈÖçÁΩÆ‰øÆÊîπ„ÄÅÂêØÂä®ÊúçÂä°„ÄÅÊ£ÄÈ™åÊúçÂä°„ÄÅÂÅúÊ≠¢ÊúçÂä°Á≠â„ÄÇËøô‰πãÂâçÔºåÈúÄË¶ÅÂ∞ÜÂÆâË£ÖÂåÖËß£ÂéãÂà∞ÊúçÂä°ÁöÑÈÉ®ÁΩ≤ÁõÆÂΩï‰∏ã„ÄÇ12# ‰øÆÊîπÈÖçÁΩÆ, ÈÖçÁΩÆÈ°πÂê´‰πâËßÅ‰∏ãÊñávim cfg.json 12# ÂêØÂä®ÊúçÂä°./open-falcon start transfer 12# Ê†°È™åÊúçÂä°,ËøôÈáåÂÅáÂÆöÊúçÂä°ÂºÄÂêØ‰∫Ü6060ÁöÑhttpÁõëÂê¨Á´ØÂè£„ÄÇÊ£ÄÈ™åÁªìÊûú‰∏∫okË°®ÊòéÊúçÂä°Ê≠£Â∏∏ÂêØÂä®„ÄÇcurl -s &quot;127.0.0.1:6060/health&quot; 12# ÂÅúÊ≠¢ÊúçÂä°./open-falcon stop transfer 12# Êü•ÁúãÊó•Âøó./open-falcon monitor transfer ÈÖçÁΩÆËØ¥ÊòéÈÖçÁΩÆÊñá‰ª∂ÈªòËÆ§‰∏∫./cfg.jsondebug: true/false, Â¶ÇÊûú‰∏∫trueÔºåÊó•Âøó‰∏≠‰ºöÊâìÂç∞debug‰ø°ÊÅØ123456789101112131415161718192021222324252627282930313233343536373839404142434445minStep: 30, ÂÖÅËÆ∏‰∏äÊä•ÁöÑÊï∞ÊçÆÊúÄÂ∞èÈó¥ÈöîÔºåÈªòËÆ§‰∏∫30Áßíhttp - enabled: true/false, Ë°®Á§∫ÊòØÂê¶ÂºÄÂêØËØ•httpÁ´ØÂè£ÔºåËØ•Á´ØÂè£‰∏∫ÊéßÂà∂Á´ØÂè£Ôºå‰∏ªË¶ÅÁî®Êù•ÂØπtransferÂèëÈÄÅÊéßÂà∂ÂëΩ‰ª§„ÄÅÁªüËÆ°ÂëΩ‰ª§„ÄÅdebugÂëΩ‰ª§Á≠â - listen: Ë°®Á§∫ÁõëÂê¨ÁöÑhttpÁ´ØÂè£rpc - enabled: true/false, Ë°®Á§∫ÊòØÂê¶ÂºÄÂêØËØ•jsonrpcÊï∞ÊçÆÊé•Êî∂Á´ØÂè£, AgentÂèëÈÄÅÊï∞ÊçÆ‰ΩøÁî®ÁöÑÂ∞±ÊòØËØ•Á´ØÂè£ - listen: Ë°®Á§∫ÁõëÂê¨ÁöÑhttpÁ´ØÂè£socket #Âç≥Â∞ÜË¢´Â∫üÂºÉ,ËØ∑ÈÅøÂÖç‰ΩøÁî® - enabled: true/false, Ë°®Á§∫ÊòØÂê¶ÂºÄÂêØËØ•telnetÊñπÂºèÁöÑÊï∞ÊçÆÊé•Êî∂Á´ØÂè£ÔºåËøôÊòØ‰∏∫‰∫ÜÊñπ‰æøÁî®Êà∑‰∏ÄË°åË°åÁöÑÂèëÈÄÅÊï∞ÊçÆÁªôtransfer - listen: Ë°®Á§∫ÁõëÂê¨ÁöÑhttpÁ´ØÂè£judge - enabled: true/false, Ë°®Á§∫ÊòØÂê¶ÂºÄÂêØÂêëjudgeÂèëÈÄÅÊï∞ÊçÆ - batch: Êï∞ÊçÆËΩ¨ÂèëÁöÑÊâπÈáèÂ§ßÂ∞èÔºåÂèØ‰ª•Âä†Âø´ÂèëÈÄÅÈÄüÂ∫¶ÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ÂÄº - connTimeout: Âçï‰ΩçÊòØÊØ´ÁßíÔºå‰∏éÂêéÁ´ØÂª∫Á´ãËøûÊé•ÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåÂèØ‰ª•Ê†πÊçÆÁΩëÁªúË¥®ÈáèÂæÆË∞ÉÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - callTimeout: Âçï‰ΩçÊòØÊØ´ÁßíÔºåÂèëÈÄÅÊï∞ÊçÆÁªôÂêéÁ´ØÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåÂèØ‰ª•Ê†πÊçÆÁΩëÁªúË¥®ÈáèÂæÆË∞ÉÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - pingMethod: ÂêéÁ´ØÊèê‰æõÁöÑpingÊé•Âè£ÔºåÁî®Êù•Êé¢ÊµãËøûÊé•ÊòØÂê¶ÂèØÁî®ÔºåÂøÖÈ°ª‰øùÊåÅÈªòËÆ§ - maxConns: ËøûÊé•Ê±†Áõ∏ÂÖ≥ÈÖçÁΩÆÔºåÊúÄÂ§ßËøûÊé•Êï∞ÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - maxIdle: ËøûÊé•Ê±†Áõ∏ÂÖ≥ÈÖçÁΩÆÔºåÊúÄÂ§ßÁ©∫Èó≤ËøûÊé•Êï∞ÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - replicas: ËøôÊòØ‰∏ÄËá¥ÊÄßhashÁÆóÊ≥ïÈúÄË¶ÅÁöÑËäÇÁÇπÂâØÊú¨Êï∞ÈáèÔºåÂª∫ËÆÆ‰∏çË¶ÅÂèòÊõ¥Ôºå‰øùÊåÅÈªòËÆ§Âç≥ÂèØ - cluster: key-valueÂΩ¢ÂºèÁöÑÂ≠óÂÖ∏ÔºåË°®Á§∫ÂêéÁ´ØÁöÑjudgeÂàóË°®ÔºåÂÖ∂‰∏≠key‰ª£Ë°®ÂêéÁ´ØjudgeÂêçÂ≠óÔºåvalue‰ª£Ë°®ÁöÑÊòØÂÖ∑‰ΩìÁöÑip:portgraph - enabled: true/false, Ë°®Á§∫ÊòØÂê¶ÂºÄÂêØÂêëgraphÂèëÈÄÅÊï∞ÊçÆ - batch: Êï∞ÊçÆËΩ¨ÂèëÁöÑÊâπÈáèÂ§ßÂ∞èÔºåÂèØ‰ª•Âä†Âø´ÂèëÈÄÅÈÄüÂ∫¶ÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ÂÄº - connTimeout: Âçï‰ΩçÊòØÊØ´ÁßíÔºå‰∏éÂêéÁ´ØÂª∫Á´ãËøûÊé•ÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåÂèØ‰ª•Ê†πÊçÆÁΩëÁªúË¥®ÈáèÂæÆË∞ÉÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - callTimeout: Âçï‰ΩçÊòØÊØ´ÁßíÔºåÂèëÈÄÅÊï∞ÊçÆÁªôÂêéÁ´ØÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåÂèØ‰ª•Ê†πÊçÆÁΩëÁªúË¥®ÈáèÂæÆË∞ÉÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - pingMethod: ÂêéÁ´ØÊèê‰æõÁöÑpingÊé•Âè£ÔºåÁî®Êù•Êé¢ÊµãËøûÊé•ÊòØÂê¶ÂèØÁî®ÔºåÂøÖÈ°ª‰øùÊåÅÈªòËÆ§ - maxConns: ËøûÊé•Ê±†Áõ∏ÂÖ≥ÈÖçÁΩÆÔºåÊúÄÂ§ßËøûÊé•Êï∞ÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - maxIdle: ËøûÊé•Ê±†Áõ∏ÂÖ≥ÈÖçÁΩÆÔºåÊúÄÂ§ßÁ©∫Èó≤ËøûÊé•Êï∞ÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - replicas: ËøôÊòØ‰∏ÄËá¥ÊÄßhashÁÆóÊ≥ïÈúÄË¶ÅÁöÑËäÇÁÇπÂâØÊú¨Êï∞ÈáèÔºåÂª∫ËÆÆ‰∏çË¶ÅÂèòÊõ¥Ôºå‰øùÊåÅÈªòËÆ§Âç≥ÂèØ - cluster: key-valueÂΩ¢ÂºèÁöÑÂ≠óÂÖ∏ÔºåË°®Á§∫ÂêéÁ´ØÁöÑgraphÂàóË°®ÔºåÂÖ∂‰∏≠key‰ª£Ë°®ÂêéÁ´ØgraphÂêçÂ≠óÔºåvalue‰ª£Ë°®ÁöÑÊòØÂÖ∑‰ΩìÁöÑip:port(Â§ö‰∏™Âú∞ÂùÄÁî®ÈÄóÂè∑ÈöîÂºÄ, transfer‰ºöÂ∞ÜÂêå‰∏Ä‰ªΩÊï∞ÊçÆÂèëÈÄÅËá≥ÂêÑ‰∏™Âú∞ÂùÄÔºåÂà©Áî®Ëøô‰∏™ÁâπÊÄßÂèØ‰ª•ÂÆûÁé∞Êï∞ÊçÆÁöÑÂ§öÈáçÂ§á‰ªΩ)tsdb - enabled: true/false, Ë°®Á§∫ÊòØÂê¶ÂºÄÂêØÂêëopen tsdbÂèëÈÄÅÊï∞ÊçÆ - batch: Êï∞ÊçÆËΩ¨ÂèëÁöÑÊâπÈáèÂ§ßÂ∞èÔºåÂèØ‰ª•Âä†Âø´ÂèëÈÄÅÈÄüÂ∫¶ - connTimeout: Âçï‰ΩçÊòØÊØ´ÁßíÔºå‰∏éÂêéÁ´ØÂª∫Á´ãËøûÊé•ÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåÂèØ‰ª•Ê†πÊçÆÁΩëÁªúË¥®ÈáèÂæÆË∞ÉÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - callTimeout: Âçï‰ΩçÊòØÊØ´ÁßíÔºåÂèëÈÄÅÊï∞ÊçÆÁªôÂêéÁ´ØÁöÑË∂ÖÊó∂Êó∂Èó¥ÔºåÂèØ‰ª•Ê†πÊçÆÁΩëÁªúË¥®ÈáèÂæÆË∞ÉÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - maxConns: ËøûÊé•Ê±†Áõ∏ÂÖ≥ÈÖçÁΩÆÔºåÊúÄÂ§ßËøûÊé•Êï∞ÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - maxIdle: ËøûÊé•Ê±†Áõ∏ÂÖ≥ÈÖçÁΩÆÔºåÊúÄÂ§ßÁ©∫Èó≤ËøûÊé•Êï∞ÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ - retry: ËøûÊé•ÂêéÁ´ØÁöÑÈáçËØïÊ¨°Êï∞ÂíåÂèëÈÄÅÊï∞ÊçÆÁöÑÈáçËØïÊ¨°Êï∞ - address: tsdbÂú∞ÂùÄÊàñËÄÖtsdbÈõÜÁæ§vipÂú∞ÂùÄ, ÈÄöËøátcpËøûÊé•tsdb. ÈÉ®ÁΩ≤ÂÆåÊàêtransferÁªÑ‰ª∂ÂêéÔºåËØ∑‰øÆÊîπagentÁöÑÈÖçÁΩÆÔºå‰ΩøÂÖ∂ÊåáÂêëÊ≠£Á°ÆÁöÑtransferÂú∞ÂùÄ„ÄÇÂú®ÂÆâË£ÖÂÆågraphÂíåjudgeÂêéÔºåËØ∑‰øÆÊîπtransferÁöÑÁõ∏Â∫îÈÖçÁΩÆ„ÄÅ‰ΩøÂÖ∂ËÉΩÂ§üÊ≠£Á°ÆÂØªÂùÄÂà∞Ëøô‰∏§‰∏™ÁªÑ‰ª∂„ÄÇ ÂÆâË£ÖÊü•ËØ¢ÁªÑ‰ª∂-API‰ªãÁªçapiÁªÑ‰ª∂ÔºåÊèê‰æõÁªü‰∏ÄÁöÑrestAPIÊìç‰ΩúÊé•Âè£„ÄÇÊØîÂ¶ÇÔºöapiÁªÑ‰ª∂Êé•Êî∂Êü•ËØ¢ËØ∑Ê±ÇÔºåÊ†πÊçÆ‰∏ÄËá¥ÊÄßÂìàÂ∏åÁÆóÊ≥ïÂéªÁõ∏Â∫îÁöÑgraphÂÆû‰æãÊü•ËØ¢‰∏çÂêåmetricÁöÑÊï∞ÊçÆÔºåÁÑ∂ÂêéÊ±áÊÄªÊãøÂà∞ÁöÑÊï∞ÊçÆÔºåÊúÄÂêéÁªü‰∏ÄËøîÂõûÁªôÁî®Êà∑„ÄÇ ÊúçÂä°ÈÉ®ÁΩ≤ÊúçÂä°ÈÉ®ÁΩ≤ÔºåÂåÖÊã¨ÈÖçÁΩÆ‰øÆÊîπ„ÄÅÂêØÂä®ÊúçÂä°„ÄÅÊ£ÄÈ™åÊúçÂä°„ÄÅÂÅúÊ≠¢ÊúçÂä°Á≠â„ÄÇËøô‰πãÂâçÔºåÈúÄË¶ÅÂ∞ÜÂÆâË£ÖÂåÖËß£ÂéãÂà∞ÊúçÂä°ÁöÑÈÉ®ÁΩ≤ÁõÆÂΩï‰∏ã„ÄÇ1234567891011# ‰øÆÊîπÈÖçÁΩÆ, ÈÖçÁΩÆÈ°πÂê´‰πâËßÅ‰∏ãÊñá, Ê≥®ÊÑègraphÈõÜÁæ§ÁöÑÈÖçÁΩÆvim cfg.json# ÂêØÂä®ÊúçÂä°./open-falcon start api# ÂÅúÊ≠¢ÊúçÂä°./open-falcon stop api# Êü•ÁúãÊó•Âøó./open-falcon monitor api ÊúçÂä°ËØ¥ÊòéÊ≥®ÊÑè: ËØ∑Á°Æ‰øù graphsÁöÑÂÜÖÂÆπ‰∏étransferÁöÑÈÖçÁΩÆÂÆåÂÖ®‰∏ÄËá¥1234567891011121314151617181920212223242526272829&#123; &quot;log_level&quot;: &quot;debug&quot;, &quot;db&quot;: &#123; //Êï∞ÊçÆÂ∫ìÁõ∏ÂÖ≥ÁöÑËøûÊé•ÈÖçÁΩÆ‰ø°ÊÅØ &quot;faclon_portal&quot;: &quot;root:@tcp(127.0.0.1:3306)/falcon_portal?charset=utf8&amp;parseTime=True&amp;loc=Local&quot;, &quot;graph&quot;: &quot;root:@tcp(127.0.0.1:3306)/graph?charset=utf8&amp;parseTime=True&amp;loc=Local&quot;, &quot;uic&quot;: &quot;root:@tcp(127.0.0.1:3306)/uic?charset=utf8&amp;parseTime=True&amp;loc=Local&quot;, &quot;dashboard&quot;: &quot;root:@tcp(127.0.0.1:3306)/dashboard?charset=utf8&amp;parseTime=True&amp;loc=Local&quot;, &quot;alarms&quot;: &quot;root:@tcp(127.0.0.1:3306)/alarms?charset=utf8&amp;parseTime=True&amp;loc=Local&quot;, &quot;db_bug&quot;: true &#125;, &quot;graphs&quot;: &#123; // graphÊ®°ÂùóÁöÑÈÉ®ÁΩ≤ÂàóË°®‰ø°ÊÅØ &quot;cluster&quot;: &#123; &quot;graph-00&quot;: &quot;127.0.0.1:6070&quot; &#125;, &quot;max_conns&quot;: 100, &quot;max_idle&quot;: 100, &quot;conn_timeout&quot;: 1000, &quot;call_timeout&quot;: 5000, &quot;numberOfReplicas&quot;: 500 &#125;, &quot;metric_list_file&quot;: &quot;./api/data/metric&quot;, &quot;web_port&quot;: &quot;:8080&quot;, // httpÁõëÂê¨Á´ØÂè£ &quot;access_control&quot;: true, // Â¶ÇÊûúËÆæÁΩÆ‰∏∫falseÔºåÈÇ£‰πà‰ªª‰ΩïÁî®Êà∑ÈÉΩÂèØ‰ª•ÂÖ∑Â§áÁÆ°ÁêÜÂëòÊùÉÈôê &quot;salt&quot;: &quot;pleaseinputwhichyouareusingnow&quot;, //Êï∞ÊçÆÂ∫ìÂä†ÂØÜÂØÜÁ†ÅÁöÑÊó∂ÂÄôÁöÑsalt &quot;skip_auth&quot;: false, //Â¶ÇÊûúËÆæÁΩÆ‰∏∫trueÔºåÈÇ£‰πàËÆøÈóÆapiÂ∞±‰∏çÈúÄË¶ÅÁªèËøáËÆ§ËØÅ &quot;default_token&quot;: &quot;default-token-used-in-server-side&quot;, //Áî®‰∫éÊúçÂä°Á´ØÂêÑÊ®°ÂùóÈó¥ÁöÑËÆøÈóÆÊéàÊùÉ &quot;gen_doc&quot;: false, &quot;gen_doc_path&quot;: &quot;doc/module.html&quot;&#125; Â§áÊ≥®Ôºö ÈÉ®ÁΩ≤ÂÆåÊàêapiÁªÑ‰ª∂ÂêéÔºåËØ∑‰øÆÊîπdashboardÁªÑ‰ª∂ÁöÑÈÖçÁΩÆ„ÄÅ‰ΩøÂÖ∂ËÉΩÂ§üÊ≠£Á°ÆÂØªÂùÄÂà∞apiÁªÑ‰ª∂„ÄÇËØ∑Á°Æ‰øùapiÁªÑ‰ª∂ÁöÑgraphÂàóË°® ‰∏é transferÁöÑÈÖçÁΩÆ ‰∏ÄËá¥„ÄÇ ÂÆâË£ÖÁªòÂõæÊï∞ÊçÆÁöÑÁªÑ‰ª∂- Graph‰ªãÁªçgraphÊòØÂ≠òÂÇ®ÁªòÂõæÊï∞ÊçÆÁöÑÁªÑ‰ª∂„ÄÇgraphÁªÑ‰ª∂ Êé•Êî∂transferÁªÑ‰ª∂Êé®ÈÄÅ‰∏äÊù•ÁöÑÁõëÊéßÊï∞ÊçÆÔºåÂêåÊó∂Â§ÑÁêÜapiÁªÑ‰ª∂ÁöÑÊü•ËØ¢ËØ∑Ê±Ç„ÄÅËøîÂõûÁªòÂõæÊï∞ÊçÆ„ÄÇ ÊúçÂä°ÈÉ®ÁΩ≤ÊúçÂä°ÈÉ®ÁΩ≤ÔºåÂåÖÊã¨ÈÖçÁΩÆ‰øÆÊîπ„ÄÅÂêØÂä®ÊúçÂä°„ÄÅÊ£ÄÈ™åÊúçÂä°„ÄÅÂÅúÊ≠¢ÊúçÂä°Á≠â„ÄÇËøô‰πãÂâçÔºåÈúÄË¶ÅÂ∞ÜÂÆâË£ÖÂåÖËß£ÂéãÂà∞ÊúçÂä°ÁöÑÈÉ®ÁΩ≤ÁõÆÂΩï‰∏ã„ÄÇÔºàÈÄöÁü•‰πãÂâçÁöÑ‰∏ÄÊ†∑ÔºåÊã∑Ë¥ùÈúÄË¶ÅÁöÑÂåÖÂà∞ÊåáÂÆöÁöÑÊúçÂä°Âô®Ôºâ ‰øÆÊîπÈÖçÁΩÆ, ÈÖçÁΩÆÈ°πÂê´‰πâËßÅ‰∏ãÊñá12345678910vim cfg.json# ÂêØÂä®ÊúçÂä°./open-falcon start graph# ÂÅúÊ≠¢ÊúçÂä°./open-falcon stop graph# Êü•ÁúãÊó•Âøó ./open-falcon monitor graph ‰∏â„ÄÅ ÈÖçÁΩÆËØ¥ÊòéÈÖçÁΩÆÊñá‰ª∂ÈªòËÆ§‰∏∫./cfg.jsonÔºåÈÖçÁΩÆÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627&#123; &quot;debug&quot;: false, //true or false, ÊòØÂê¶ÂºÄÂêØdebugÊó•Âøó &quot;http&quot;: &#123; &quot;enabled&quot;: true, //true or false, Ë°®Á§∫ÊòØÂê¶ÂºÄÂêØËØ•httpÁ´ØÂè£ÔºåËØ•Á´ØÂè£‰∏∫ÊéßÂà∂Á´ØÂè£Ôºå‰∏ªË¶ÅÁî®Êù•ÂØπgraphÂèëÈÄÅÊéßÂà∂ÂëΩ‰ª§„ÄÅÁªüËÆ°ÂëΩ‰ª§„ÄÅdebugÂëΩ‰ª§ &quot;listen&quot;: &quot;0.0.0.0:6071&quot; //Ë°®Á§∫ÁõëÂê¨ÁöÑhttpÁ´ØÂè£ &#125;, &quot;rpc&quot;: &#123; &quot;enabled&quot;: true, //true or false, Ë°®Á§∫ÊòØÂê¶ÂºÄÂêØËØ•rpcÁ´ØÂè£ÔºåËØ•Á´ØÂè£‰∏∫Êï∞ÊçÆÊé•Êî∂Á´ØÂè£ &quot;listen&quot;: &quot;0.0.0.0:6070&quot; //Ë°®Á§∫ÁõëÂê¨ÁöÑrpcÁ´ØÂè£ &#125;, &quot;rrd&quot;: &#123; &quot;storage&quot;: &quot;./data/6070&quot; // ÂéÜÂè≤Êï∞ÊçÆÁöÑÊñá‰ª∂Â≠òÂÇ®Ë∑ØÂæÑÔºàÂ¶ÇÊúâÂøÖË¶ÅÔºåËØ∑‰øÆÊîπ‰∏∫ÂêàÈÄÇÁöÑË∑ØÂæÑÔºâ &#125;, &quot;db&quot;: &#123; &quot;dsn&quot;: &quot;root:@tcp(127.0.0.1:3306)/graph?loc=Local&amp;parseTime=true&quot;, //MySQLÁöÑËøûÊé•‰ø°ÊÅØÔºåÈªòËÆ§Áî®Êà∑ÂêçÊòØrootÔºåÂØÜÁ†Å‰∏∫Á©∫Ôºåhost‰∏∫127.0.0.1Ôºådatabase‰∏∫graphÔºàÂ¶ÇÊúâÂøÖË¶ÅÔºåËØ∑‰øÆÊîπ) &quot;maxIdle&quot;: 4 //MySQLËøûÊé•Ê±†ÈÖçÁΩÆÔºåËøûÊé•Ê±†ÂÖÅËÆ∏ÁöÑÊúÄÂ§ßËøûÊé•Êï∞Ôºå‰øùÊåÅÈªòËÆ§Âç≥ÂèØ &#125;, &quot;callTimeout&quot;: 5000, //RPCË∞ÉÁî®Ë∂ÖÊó∂Êó∂Èó¥ÔºåÂçï‰Ωçms &quot;migrate&quot;: &#123; //Êâ©ÂÆπgraphÊó∂ÂéÜÂè≤Êï∞ÊçÆËá™Âä®ËøÅÁßª &quot;enabled&quot;: false, //true or false, Ë°®Á§∫graphÊòØÂê¶Â§Ñ‰∫éÊï∞ÊçÆËøÅÁßªÁä∂ÊÄÅ &quot;concurrency&quot;: 2, //Êï∞ÊçÆËøÅÁßªÊó∂ÁöÑÂπ∂ÂèëËøûÊé•Êï∞ÔºåÂª∫ËÆÆ‰øùÊåÅÈªòËÆ§ &quot;replicas&quot;: 500, //ËøôÊòØ‰∏ÄËá¥ÊÄßhashÁÆóÊ≥ïÈúÄË¶ÅÁöÑËäÇÁÇπÂâØÊú¨Êï∞ÈáèÔºåÂª∫ËÆÆ‰∏çË¶ÅÂèòÊõ¥Ôºå‰øùÊåÅÈªòËÆ§Âç≥ÂèØÔºàÂøÖÈ°ªÂíåtransferÁöÑÈÖçÁΩÆ‰∏≠‰øùÊåÅ‰∏ÄËá¥Ôºâ &quot;cluster&quot;: &#123; //Êú™Êâ©ÂÆπÂâçËÄÅÁöÑgraphÂÆû‰æãÂàóË°® &quot;graph-00&quot; : &quot;127.0.0.1:6070&quot; &#125; &#125;&#125; Â§áÊ≥®Â¶ÇÊûú‰∏äÂõæÁ∫¢Ê°Ü‰∏≠Âá∫Áé∞Âêå‰∏ÄÂè∞ÊúçÂä°Âô®ÁöÑ‰∏çÂêåÂêçÂ≠óÁöÑÈÖçÁΩÆÔºåÂàôËøõÂÖ•Êï∞ÊçÆÂ∫ìÔºåËøõË°åÂ¶Ç‰∏ãÊìç‰ΩúÔºöËøõÂÖ•Êï∞ÊçÆÂ∫ìÔºömysql ‚Äìu root ‚ÄìpÊü•ÁúãÊâÄÊúâÊï∞ÊçÆÂ∫ìÔºöshow databses;ÈÄâÊã©Êï∞ÊçÆÂ∫ìÔºöuse graph;Êü•ÁúãË°®Ôºöshow tables;Êü•ËØ¢Ë°®Ôºöselect * from endpoint;Âà†Èô§‰∏çÈúÄË¶ÅÁöÑÊï∞ÊçÆÔºödelete from endpoint where id=153;Â¶Ç‰∏ãÂèØ‰ª•‰∏çÊìç‰ΩúÔºöÂèØ‰ª•‰∏ÄËµ∑Âà†Èô§falcon_portalÂ∫ì‰∏≠ÁöÑhostË°®‰∏≠ÁöÑÊó†Áî®Êï∞ÊçÆ„ÄÇ MysqlÁõëÊéßÂ∑•‰ΩúÂéüÁêÜÂú®Êï∞ÊçÆÈááÈõÜ‰∏ÄËäÇ‰∏≠Êàë‰ª¨‰ªãÁªç‰∫ÜÂ∏∏ËßÅÁöÑÁõëÊéßÊï∞ÊçÆÊ∫ê„ÄÇopen-falcon‰Ωú‰∏∫‰∏Ä‰∏™ÁõëÊéßÊ°ÜÊû∂ÔºåÂèØ‰ª•ÂéªÈááÈõÜ‰ªª‰ΩïÁ≥ªÁªüÁöÑÁõëÊéßÊåáÊ†áÊï∞ÊçÆÔºåÂè™Ë¶ÅÂ∞ÜÁõëÊéßÊï∞ÊçÆÁªÑÁªá‰∏∫open-falconËßÑËåÉÁöÑÊ†ºÂºèÂ∞±OK‰∫Ü„ÄÇMySQLÁöÑÊï∞ÊçÆÈááÈõÜÂèØ‰ª•ÈÄöËøámymonÊù•ÂÅö„ÄÇmymonÊòØ‰∏Ä‰∏™cronÔºåÊØèÂàÜÈíüË∑ë‰∏ÄÊ¨°ÔºåÈÖçÁΩÆÊñá‰ª∂‰∏≠ÈÖçÁΩÆ‰∫ÜÊï∞ÊçÆÂ∫ìËøûÊé•Âú∞ÂùÄÔºåmymonËøûÂà∞ËØ•Êï∞ÊçÆÂ∫ìÔºåÈááÈõÜ‰∏Ä‰∫õÁõëÊéßÊåáÊ†áÔºåÊØîÂ¶Çglobal status, global variables, slave statusÁ≠âÁ≠âÔºåÁÑ∂ÂêéÁªÑË£Ö‰∏∫open-falconËßÑÂÆöÁöÑÊ†ºÂºèÁöÑÊï∞ÊçÆÔºåpostÁªôÊú¨Êú∫ÁöÑfalcon-agent„ÄÇfalcon-agentÊèê‰æõ‰∫Ü‰∏Ä‰∏™httpÊé•Âè£Ôºå‰ΩøÁî®ÊñπÊ≥ïÂèØ‰ª•ÂèÇËÄÉÊï∞ÊçÆÈááÈõÜ‰∏≠ÁöÑ‰æãÂ≠ê„ÄÇÊØîÂ¶ÇÊàë‰ª¨Êúâ1000Âè∞Êú∫Âô®ÈÉΩÈÉ®ÁΩ≤‰∫ÜMySQLÂÆû‰æãÔºåÂèØ‰ª•Âú®Ëøô1000Âè∞Êú∫Âô®‰∏äÂàÜÂà´ÈÉ®ÁΩ≤1000‰∏™cronÔºåÂç≥Ôºö‰∏éÊï∞ÊçÆÂ∫ìÂÆû‰æã‰∏Ä‰∏ÄÂØπÂ∫î„ÄÇ ÈÖçÁΩÆÂÆâË£Ö‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://github.com/open-falcon/mymonÂÆâË£ÖÔºöËÆæÁΩÆ$GOPATHÔºöexport $GOPATH =/src/123456789mkdir -p $GOPATH/src/github.com/open-falconcd $GOPATH/src/github.com/open-falcongit clone https://github.com/open-falcon/mymon.gitcd mymongo get ./...go build -o mymonecho &apos;* * * * * cd $GOPATH/src/github.com/open-falcon/mymon &amp;&amp; ./mymon -c etc/mon.cfg&apos; &gt; /etc/cron.d/mymon ÊâßË°ågo get ./‚Ä¶ÁöÑÊó∂ÂÄôÂá∫Áé∞Â¶Ç‰∏ãÈîôËØØÔºö12package golang.org/x/crypto/ssh/terminal: unrecognized import path &quot;golang.org/x/crypto/ssh/terminal&quot; (https fetch: Get https://golang.org/x/crypto/ssh/terminal?go-get=1: dial tcp 216.239.37.1:443: i/o timeout)package golang.org/x/sys/unix: unrecognized import path &quot;golang.org/x/sys/unix&quot; (https fetch: Get https://golang.org/x/sys/unix?go-get=1: dial tcp 216.239.37.1:443: i/o timeout) Ëß£ÂÜ≥ÂäûÊ≥ïÔºöÊñπÊ≥ï‰∏ÄÔºöÁõ¥Êé•‰∏ãËΩΩÊñá‰ª∂ÔºåÁÑ∂ÂêéÊääËß£ÂéãÂá∫Êù•ÁöÑÊñá‰ª∂Â§πÊîæÂú®srcÈáå„ÄÇ‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://pan.baidu.com/s/1boVAtJp ÊñπÊ≥ï‰∫åÔºöÁõ¥Êé•‰ªégit‰∏ä‰∏ãËΩΩÂØπÂ∫îÊñá‰ª∂ÊîæÂà∞src‰∏ãÈù¢„ÄÇmkdir -p $GOPATH/src/golang.org/xcd $GOPATH/src/golang.org/xgit clone https://github.com/golang/crypto.gitgit clone https://github.com/golang/sys.git ‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂Ôºö/src/github.com/open-falcon/mymon/etcvi mon.cfg1234567891011121314151617181920[default] log_file=mymon.log # Êó•ÂøóË∑ØÂæÑÂíåÊñá‰ª∂Âêç # Panic 0 # Fatal 1 # Error 2 # Warn 3 # Info 4 # Debug 5 log_level=4 # Êó•ÂøóÁ∫ßÂà´ falcon_client=http://127.0.0.1:1988/v1/push # falcon agentËøûÊé•Âú∞ÂùÄ #Ëá™ÂÆö‰πâendpoint endpoint=127.0.0.1 #Ëã•‰∏çËÆæÁΩÆÂàô‰ΩøÁî®OSÁöÑhostname [mysql] user=root # Êï∞ÊçÆÂ∫ìÁî®Êà∑Âêç password= # Êï∞ÊçÆÂ∫ìÂØÜÁ†Å host=127.0.0.1 # Êï∞ÊçÆÂ∫ìËøûÊé•Âú∞ÂùÄ port=3306 # Êï∞ÊçÆÂ∫ìÁ´ØÂè£ ÈááÈõÜÊàêÂäü! RedisÁõëÊéß‰ªãÁªç~RedisÁöÑÊï∞ÊçÆÈááÈõÜÂèØ‰ª•ÈÄöËøáÈááÈõÜËÑöÊú¨redis-monitor ÊàñËÄÖ redismonÊù•ÂÅö„ÄÇ redis-monitorÊòØ‰∏Ä‰∏™cronÔºåÊØèÂàÜÈíüË∑ë‰∏ÄÊ¨°ÈááÈõÜËÑöÊú¨redis-monitor.pyÔºåÂÖ∂‰∏≠ÈÖçÁΩÆ‰∫ÜredisÊúçÂä°ÁöÑÂú∞ÂùÄÔºåredis-monitorËøûÂà∞redisÂÆû‰æãÔºåÈááÈõÜ‰∏Ä‰∫õÁõëÊéßÊåáÊ†áÔºåÊØîÂ¶Çconnected_clients„ÄÅused_memoryÁ≠âÁ≠âÔºåÁÑ∂ÂêéÁªÑË£Ö‰∏∫open-falconËßÑÂÆöÁöÑÊ†ºÂºèÁöÑÊï∞ÊçÆÔºåpostÁªôÊú¨Êú∫ÁöÑfalcon-agent„ÄÇfalcon-agentÊèê‰æõ‰∫Ü‰∏Ä‰∏™httpÊé•Âè£Ôºå‰ΩøÁî®ÊñπÊ≥ïÂèØ‰ª•ÂèÇËÄÉÊï∞ÊçÆÈááÈõÜ‰∏≠ÁöÑ‰æãÂ≠ê„ÄÇ ÊØîÂ¶ÇÔºåÊàë‰ª¨Êúâ1000Âè∞Êú∫Âô®ÈÉΩÈÉ®ÁΩ≤‰∫ÜRedisÂÆû‰æãÔºåÂèØ‰ª•Âú®Ëøô1000Âè∞Êú∫Âô®‰∏äÂàÜÂà´ÈÉ®ÁΩ≤1000‰∏™cronÔºåÂç≥Ôºö‰∏éRedisÂÆû‰æã‰∏Ä‰∏ÄÂØπÂ∫î„ÄÇ ÂÆâË£Ö‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://github.com/iambocai/falcon-monit-scripts ËøõÂÖ•ÁõÆÂΩïÔºö/data/program/software/falcon-monit-scripts-master/redis ‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂Ôºövi redis-monitor.py‰øÆÊîπÂØπÂ∫îËøûÊé•Âà∞agentÁöÑÂú∞ÂùÄÔºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122#!/bin/env python#-*- coding:utf-8 -*-__author__ = 'iambocai'import jsonimport timeimport socketimport osimport reimport sysimport commandsimport urllib2, base64class RedisStats: # ƒ∫√Ω√ç√Ω?ƒÉ≈î√≠≈•ƒê≈Ø??√ù≈•√ü≈£√ìƒëredis≈Å≈π??≈Ø≈•≈ò√º√Æ√ú?√¥ƒë???√ìƒëredis-cli√ñ≈ò? _redis_cli = '/usr/local/redis/redis-cli' _stat_regex = re.compile(ur'(\w+):([0-9]+\.?[0-9]*)\r') def __init__(self, port='6379', passwd=None, host='127.0.0.1'): self._cmd = '%s -h %s -p %s info' % (self._redis_cli, host, port) if passwd not in ['', None]: self._cmd = '%s -h %s -p %s -a %s info' % (self._redis_cli, host, port, passwd) def stats(self): ' Return a dict containing redis stats ' info = commands.getoutput(self._cmd) return dict(self._stat_regex.findall(info))def main(): ip = "dst6-redis" timestamp = int(time.time()) step = 60 # inst_list≈Ñ√©√ú√Åƒë√≠√ñ≈ëredis≈∞≈ê√∂√á≈Æ≈£√ãƒõ√ñ≈û≈ô√∫≈Å≈πƒèƒè√ü√≠???≈¢√Å≈∞≈ê√∂√á≈Ñ√©?√∂Àòport≈±√∫password≈Å≈π√ãƒè?≈¢ƒπ√©√Ñ????√Æ√ú≈∞¬∞≈∞√∂?√îƒë≈Å≈πƒ∫√Ω≈Å≈ü # inst_list = [ i for i in commands.getoutput("find /etc/ -name 'redis*.conf'" ).split('\n') ] insts_list = [ '/usr/local/redis/redis.conf' ] p = [] monit_keys = [ ('connected_clients','GAUGE'), ('blocked_clients','GAUGE'), ('used_memory','GAUGE'), ('used_memory_rss','GAUGE'), ('mem_fragmentation_ratio','GAUGE'), ('total_commands_processed','COUNTER'), ('rejected_connections','COUNTER'), ('expired_keys','COUNTER'), ('evicted_keys','COUNTER'), ('keyspace_hits','COUNTER'), ('keyspace_misses','COUNTER'), ('keyspace_hit_ratio','GAUGE'), ] for inst in insts_list: port = commands.getoutput("sed -n 's/^port *\([0-9]\&#123;4,5\&#125;\)/\\1/p' %s" % inst) passwd = commands.getoutput("sed -n 's/^requirepass *\([^ ]*\)/\\1/p' %s" % inst) metric = "redis" endpoint = ip tags = 'port=%s' % port try: conn = RedisStats(port, passwd) stats = conn.stats() except Exception,e: continue for key,vtype in monit_keys: #ƒõ√©≈¢√Å√ñ≈ê√∑√∫√ú√¢√Æ√úredis≈Ñ√©info?≈ë√≥√Æ√úƒÉ√°ƒÉ√ì?√°¬¥≈Å≈πƒ∫√Ω√ç√Ωƒö≈î√°¬¥ƒõ√©≈¢√Å√§Àõ?√¢√ç√©≈†√≥√∫√≥Àò√Æ√úkey√∂≈ö√î≈ª? if key not in stats.keys(): continue #?√ü≈†≈Æ¬§≈Ñ√©√°ƒÉ if key == 'keyspace_hit_ratio': try: value = float(stats['keyspace_hits'])/(int(stats['keyspace_hits']) + int(stats['keyspace_misses'])) except ZeroDivisionError: value = 0 #√°ƒè≈ô¬∏√°ƒÉƒÉ≈î√ù≈†ƒèƒÇ? elif key == 'mem_fragmentation_ratio': value = float(stats[key]) else: #ƒêƒõ√∂√¢√Æ√ú√î¬¥√≥√∫√≥Àò≈ï√∑counter≈Å≈πint try: value = int(stats[key]) except: continue i = &#123; 'Metric': '%s.%s' % (metric, key), 'Endpoint': endpoint, 'Timestamp': timestamp, 'Step': step, 'Value': value, 'CounterType': vtype, 'TAGS': tags &#125; p.append(i) print json.dumps(p, sort_keys=True,indent=4) method = "POST" handler = urllib2.HTTPHandler() opener = urllib2.build_opener(handler) url = 'http://127.0.0.1:1988/v1/push' request = urllib2.Request(url, data=json.dumps(p) ) request.add_header("Content-Type",'application/json') request.get_method = lambda: method try: connection = opener.open(request) except urllib2.HTTPError,e: connection = e # check. Substitute with appropriate HTTP code. if connection.code == 200: print connection.read() else: print '&#123;"err":1,"msg":"%s"&#125;' % connectionif __name__ == '__main__': proc = commands.getoutput(' ps -ef|grep %s|grep -v grep|wc -l ' % os.path.basename(sys.argv[0])) sys.stdout.flush() if int(proc) &lt; 5: main() ÂêØÂä®ÊµãËØïpython redis-monitor.py Â∞ÜËÑöÊú¨Âä†ÂÖ•crontabÊâßË°åÂç≥ÂèØ Êü•ÁúãÊúçÂä°Áä∂ÊÄÅÔºöservice crond status ÁºñËæëÔºöcrontab ‚Äìe Âä†ÂÖ•ÂëΩ‰ª§Ôºå‰∏ÄÂàÜÈíüÊâßË°å‰∏ÄÊ¨°ÔºåÁÑ∂Âêé‰øùÂ≠ò„ÄÇ 1*/1 * * * * python /data/program/software/falcon-monit-scripts-master/redis/redis-monitor.py ÈáçÂêØÊúçÂä°service crond restart Ê±áÊä•Â≠óÊÆµ key tag type note redis.connected_clients port GAUGE Â∑≤ËøûÊé•ÂÆ¢Êà∑Á´ØÁöÑÊï∞Èáè redis.blocked_clients port GAUGE Ê≠£Âú®Á≠âÂæÖÈòªÂ°ûÂëΩ‰ª§ÔºàBLPOP„ÄÅBRPOP„ÄÅBRPOPLPUSHÔºâÁöÑÂÆ¢Êà∑Á´ØÁöÑÊï∞Èáè redis.used_memory port GAUGE Áî± Redis ÂàÜÈÖçÂô®ÂàÜÈÖçÁöÑÂÜÖÂ≠òÊÄªÈáèÔºå‰ª•Â≠óËäÇÔºàbyteÔºâ‰∏∫Âçï‰Ωç redis.used_memory_rss port GAUGE ‰ªéÊìç‰ΩúÁ≥ªÁªüÁöÑËßíÂ∫¶ÔºåËøîÂõû Redis Â∑≤ÂàÜÈÖçÁöÑÂÜÖÂ≠òÊÄªÈáèÔºà‰øóÁß∞Â∏∏È©ªÈõÜÂ§ßÂ∞èÔºâ redis.mem_fragmentation_ratio port GAUGE used_memory_rss Âíå used_memory ‰πãÈó¥ÁöÑÊØîÁéá redis.total_commands_processed port COUNTER ÈááÈõÜÂë®ÊúüÂÜÖÊâßË°åÂëΩ‰ª§ÊÄªÊï∞ redis.rejected_connections port COUNTER ÈááÈõÜÂë®ÊúüÂÜÖÊãíÁªùËøûÊé•ÊÄªÊï∞ redis.expired_keys port COUNTER ÈááÈõÜÂë®ÊúüÂÜÖËøáÊúükeyÊÄªÊï∞ redis.evicted_keys port COUNTER ÈááÈõÜÂë®ÊúüÂÜÖË∏¢Âá∫keyÊÄªÊï∞ redis.keyspace_hits port COUNTER ÈááÈõÜÂë®ÊúüÂÜÖkeyÂëΩ‰∏≠ÊÄªÊï∞ redis.keyspace_misses port COUNTER ÈááÈõÜÂë®ÊúüÂÜÖkeyÊãíÁªùÊÄªÊï∞ redis.keyspace_hit_ratio port GAUGE ËÆøÈóÆÂëΩ‰∏≠Áéá Â¶ÇÈúÄÂ¢ûÂáèÂ≠óÊÆµÔºåËØ∑‰øÆÊîπmonit_keysÂèòÈáè RabbitmqÁõëÊéß‰ªãÁªçÂú®Êï∞ÊçÆÈááÈõÜ‰∏ÄËäÇ‰∏≠Êàë‰ª¨‰ªãÁªç‰∫ÜÂ∏∏ËßÅÁöÑÁõëÊéßÊï∞ÊçÆÊ∫ê„ÄÇopen-falcon‰Ωú‰∏∫‰∏Ä‰∏™ÁõëÊéßÊ°ÜÊû∂ÔºåÂèØ‰ª•ÂéªÈááÈõÜ‰ªª‰ΩïÁ≥ªÁªüÁöÑÁõëÊéßÊåáÊ†áÊï∞ÊçÆÔºåÂè™Ë¶ÅÂ∞ÜÁõëÊéßÊï∞ÊçÆÁªÑÁªá‰∏∫open-falconËßÑËåÉÁöÑÊ†ºÂºèÂ∞±OK‰∫Ü„ÄÇ RMQÁöÑÊï∞ÊçÆÈááÈõÜÂèØ‰ª•ÈÄöËøáËÑöÊú¨rabbitmq-monitorÊù•ÂÅö„ÄÇ rabbitmq-monitorÊòØ‰∏Ä‰∏™cronÔºåÊØèÂàÜÈíüË∑ë‰∏ÄÊ¨°ËÑöÊú¨rabbitmq-monitor.pyÔºåÂÖ∂‰∏≠ÈÖçÁΩÆ‰∫ÜRMQÁöÑÁî®Êà∑Âêç&amp;ÂØÜÁ†ÅÁ≠âÔºåËÑöÊú¨ËøûÂà∞ËØ•RMQÂÆû‰æãÔºåÈááÈõÜ‰∏Ä‰∫õÁõëÊéßÊåáÊ†áÔºåÊØîÂ¶Çmessages_ready„ÄÅmessages_total„ÄÅdeliver_rate„ÄÅpublish_rateÁ≠âÁ≠âÔºåÁÑ∂ÂêéÁªÑË£Ö‰∏∫open-falconËßÑÂÆöÁöÑÊ†ºÂºèÁöÑÊï∞ÊçÆÔºåpostÁªôÊú¨Êú∫ÁöÑfalcon-agent„ÄÇfalcon-agentÊèê‰æõ‰∫Ü‰∏Ä‰∏™httpÊé•Âè£Ôºå‰ΩøÁî®ÊñπÊ≥ïÂèØ‰ª•ÂèÇËÄÉÊï∞ÊçÆÈááÈõÜ‰∏≠ÁöÑ‰æãÂ≠ê„ÄÇ ÂÆâË£ÖÈÖçÁΩÆ‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://github.com/iambocai/falcon-monit-scripts/tree/master/rabbitmq‰øÆÊîπÈÖçÁΩÆÔºövi rabbitmq-monitor.py 1„ÄÅÊ†πÊçÆÂÆûÈôÖÈÉ®ÁΩ≤ÊÉÖÂÜµÔºå‰øÆÊîπ15,16Ë°åÁöÑrabbitmq-serverÁÆ°ÁêÜÁ´ØÂè£ÂíåÁôªÂΩïÁî®Êà∑ÂêçÂØÜÁ†Å 2„ÄÅÁ°ÆËÆ§1‰∏≠ÈÖçÁΩÆÁöÑrabbitmqÁî®Êà∑Êúâ‰Ω†ÊÉ≥ÁõëÊéßÁöÑqueue/vhostsÁöÑÊùÉÈôê3„ÄÅÂ∞ÜËÑöÊú¨Âä†ÂÖ•crontabÂç≥ÂèØÊñ∞Âª∫ËÑöÊú¨ : vi rabbitmq_cron12* * * * * root (cd /data/program/software/falcon-monit-scripts-master/rabbitmq &amp;&amp; python rabbitmq-monitor.py &gt; /dev/null)cp rabbitmq_cron /etc/cron.d/ Ê±áÊä•Â≠óÊÆµ key tag type note rabbitmq.messages_ready name(QueueÂêçÂ≠ó) GAUGE ÈòüÂàó‰∏≠Â§Ñ‰∫éÁ≠âÂæÖË¢´Ê∂àË¥πÁä∂ÊÄÅÊ∂àÊÅØÊï∞ rabbitmq.messages_unacknowledged name(QueueÂêçÂ≠ó) GAUGE ÈòüÂàó‰∏≠Â§Ñ‰∫éÊ∂àË¥π‰∏≠Áä∂ÊÄÅÁöÑÊ∂àÊÅØÊï∞ rabbitmq.messages_total name(QueueÂêçÂ≠ó) GAUGE ÈòüÂàó‰∏≠ÊâÄÊúâÊú™ÂÆåÊàêÊ∂àË¥πÁöÑÊ∂àÊÅØÊï∞ÔºåÁ≠â‰∫émessages_ready+messages_unacknowledged rabbitmq.ack_rate name(QueueÂêçÂ≠ó) GAUGE Ê∂àË¥πËÄÖackÁöÑÈÄüÁéá rabbitmq.deliver_rate name(QueueÂêçÂ≠ó) GAUGE deliverÁöÑÈÄüÁéá rabbitmq.deliver_get_rate name(QueueÂêçÂ≠ó) GAUGE deliver_getÁöÑÈÄüÁéá rabbitmq.publish_rate name(QueueÂêçÂ≠ó) GAUGE publishÁöÑÈÄüÁéá ÂÆåÂÖ®ÁâáÁªìÊùüÔºåËßâÂæóÊàëÂÜôÁöÑ‰∏çÈîôÔºüÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËµ∂Âø´ÊâìÂºÄÊàëÁöÑüëâ‰∏™‰∫∫ÂçöÂÆ¢ üëàÂêßÔºÅ Ë∞¢Ë∞¢‰Ω†ÈÇ£‰πàÂèØÁà±ÔºåËøò‰∏ÄÁõ¥ÂÖ≥Ê≥®ÁùÄÊàë~‚ù§üòù]]></content>
      <tags>
        <tag>ÂàÜ‰∫´</tag>
        <tag>ËΩØ‰ª∂ÊïôÂ≠¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ∞ÂΩï‰∏ÄÊ¨°GitlabÂÆâË£ÖÂπ∂‰∏éGitbookÈõÜÊàêÁöÑÁªèÂéÜ]]></title>
    <url>%2F2019%2F01%2F25%2F%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1Gitlab%E5%AE%89%E8%A3%85%E5%B9%B6%E4%B8%8EGitbook%E9%9B%86%E6%88%90%E7%9A%84%E7%BB%8F%E5%8E%86%2F</url>
    <content type="text"><![CDATA[ËÄÅÊùø‰ªäÂ§©ÂèàÊù•ÊèêÈúÄÊ±ÇÂï¶d=====(Ôø£‚ñΩÔø£*)b ÈúÄË¶ÅÊääÂÖ¨Âè∏ÁöÑ‰∏Ä‰∫õÊäÄÊúØÊñáÊ°£ÊîæÂà∞‰∏Ä‰∏™Âπ≥Âè∞‰∏äÔºåÂëòÂ∑•ÈòÖËØªÔºåÂêåÊó∂ÊñáÊ°£Ë¶ÅÊúâËæÉÂ•ΩÁöÑÁª¥Êä§ÊÄßÔºåÊàêÊú¨Â∞ΩÂèØËÉΩ‰Ωé„ÄÇ ÊâÄ‰ª•ÔºåÂ∞±Êúâ‰ªäÂ§©ÂçöÂÆ¢ÁöÑÂÜÖÂÆπ‰∫ÜÔºÅ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢https://blog.tengshe789.tech/Ôºàüòò ÂÆâË£Ögitlab1. ÂÆâË£ÖÂπ∂ÈÖçÁΩÆÂøÖË¶ÅÁöÑ‰æùËµñÂÖ≥Á≥ªÂú®CentOS 7ÔºàÂíåRedHat / Oracle / Scientific Linux 7Ôºâ‰∏äÔºå‰ª•‰∏ãÂëΩ‰ª§ËøòÂ∞ÜÂú®Á≥ªÁªüÈò≤ÁÅ´Â¢ô‰∏≠ÊâìÂºÄHTTPÂíåSSHËÆøÈóÆ„ÄÇ 12345sudo yum install -y curl policycoreutils-python openssh-serversudo systemctl enable sshdsudo systemctl start sshdsudo firewall-cmd --permanent --add-service=httpsudo systemctl reload firewalld Êé•‰∏ãÊù•ÔºåÂÆâË£ÖPostfix‰ª•ÂèëÈÄÅÈÄöÁü•ÁîµÂ≠êÈÇÆ‰ª∂„ÄÇÂ¶ÇÊûúÊÇ®ÊÉ≥‰ΩøÁî®ÂÖ∂‰ªñËß£ÂÜ≥ÊñπÊ°àÂèëÈÄÅÁîµÂ≠êÈÇÆ‰ª∂ÔºåËØ∑Âú®ÂÆâË£ÖGitLabÂêéË∑≥ËøáÊ≠§Ê≠•È™§Âπ∂[ÈÖçÁΩÆÂ§ñÈÉ®SMTPÊúçÂä°Âô®]Ôºàhttps://docs.gitlab.com/omnibus/settings/smtp.htmlÔºâ„ÄÇ 123sudo yum install postfixsudo systemctl enable postfixsudo systemctl start postfix Âú®PostfixÂÆâË£ÖÊúüÈó¥ÔºåÂèØËÉΩ‰ºöÂá∫Áé∞ÈÖçÁΩÆÂ±èÂπï„ÄÇÈÄâÊã©‚ÄúInternet Site‚ÄùÂπ∂ÊåâEnterÈîÆ„ÄÇ‰ΩøÁî®ÊúçÂä°Âô®ÁöÑÂ§ñÈÉ®DNS‰Ωú‰∏∫‚ÄúÈÇÆ‰ª∂ÂêçÁß∞‚ÄùÔºåÁÑ∂ÂêéÊåâEnterÈîÆ„ÄÇÂ¶ÇÊûúÂá∫Áé∞ÂÖ∂‰ªñÂ±èÂπïÔºåËØ∑ÁªßÁª≠ÊåâEnterÈîÆÊé•ÂèóÈªòËÆ§ÂÄº„ÄÇ 2. Ê∑ªÂä†GitlabÂåÖÂ≠òÂÇ®Â∫ìÂπ∂ÂÆâË£ÖÂåÖAdd the GitLab package repository. 1curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.rpm.sh | sudo bash Êé•‰∏ãÊù•ÔºåÂÆâË£ÖGitLabÂåÖ„ÄÇÂ∞ÜhttpÔºö// gitlab.example.comÊõ¥Êîπ‰∏∫ÊÇ®Ë¶ÅËÆøÈóÆGitLabÂÆû‰æãÁöÑURL„ÄÇÂÆâË£ÖÂ∞ÜËá™Âä®ÈÖçÁΩÆÂπ∂ÂêØÂä®ËØ•URLÁöÑGitLab„ÄÇ HTTPSÂú®ÂÆâË£ÖÂêéÈúÄË¶ÅÂÖ∂‰ªñÈÖçÁΩÆ„ÄÇ 1sudo EXTERNAL_URL="http://192.168.190.132:33333" yum install -y gitlab-ee 3. ÁôªÈôÜÂπ∂È™åËØÅÂú®ÊÇ®Á¨¨‰∏ÄÊ¨°ËÆøÈóÆÊó∂ÔºåÊÇ®Â∞ÜË¢´ÈáçÂÆöÂêëÂà∞ÂØÜÁ†ÅÈáçÁΩÆÂ±èÂπï„ÄÇÊèê‰æõÂàùÂßãÁÆ°ÁêÜÂëòÂ∏êÊà∑ÁöÑÂØÜÁ†ÅÔºåÊÇ®Â∞ÜË¢´ÈáçÂÆöÂêëÂõûÁôªÂΩïÂ±èÂπï„ÄÇ‰ΩøÁî®ÈªòËÆ§Â∏êÊà∑ÁöÑÁî®Êà∑ÂêçrootÁôªÂΩï„ÄÇ See our documentation for detailed instructions on installing and configuration. ‰∏égitbookÈõÜÊàêÂÆâË£ÖnodeJsÂè™ËÉΩÂÆâË£ÖÁ¨¨‰∏âÊñπ‰ªìÂ∫ì‰∏≠Â≠òÂú®ÁöÑÁâàÊú¨Ôºå‰∏ÄËà¨ËêΩÂêé node ÊúÄÊñ∞ÁâàÊú¨ ÂÆâË£ÖEPEL ‰ªìÂ∫ìyum install epel-release ÂÆâË£Ö nodejsyum install nodejs ÂÆâË£Ö npm yum install npm ÂÆâË£ÖgitbookGitBook ÊòØ‰∏Ä‰∏™Âü∫‰∫é Node.js ÁöÑÂëΩ‰ª§Ë°åÂ∑•ÂÖ∑ÔºåÂèØ‰ΩøÁî® Github/Git Âíå Markdown Êù•Âà∂‰ΩúÁ≤æÁæéÁöÑÁîµÂ≠ê‰π¶„ÄÇGitBookÊîØÊåÅËæìÂá∫‰ª•‰∏ãÂá†ÁßçÊñáÊ°£Ê†ºÂºè ÈùôÊÄÅÁ´ôÁÇπÔºöGitBookÈªòËÆ§ËæìÂá∫ËØ•ÁßçÊ†ºÂºè PDFÔºöÈúÄË¶ÅÂÆâË£Ögitbook-pdf‰æùËµñ eBookÔºöÈúÄË¶ÅÂÆâË£Öebook-convert 12npm install gitbook -gnpm install -g gitbook-cli QA Âá∫Áé∞npm ERR! Error: connect ECONNREFUSED 104.16.24.35:443ÈóÆÈ¢ò‰ΩøÁî®Â¶Ç‰∏ãËØ≠Âè•ÂÖ≥Èó≠‰ª£ÁêÜËß£ÂÜ≥ÈóÆÈ¢òÔºönpm config set proxy null ÂÆâË£ÖGitLab Ci Runner Ê∑ªÂä†repositorycurl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.rpm.sh | sudo bash ÂÆâË£ÖÂåÖyum install gitlab-runner ÊâßË°å‰∏äËø∞ÂëΩ‰ª§‰πãÂêéÔºå‰πãÂêéÁöÑÊµÅÁ®ãÂ¶Ç‰∏ãÔºö Á¨¨‰∏ÄÂ§ÑÁ∫¢Á∫øÔºöËæìÂÖ•ÈÉ®ÁΩ≤ÂÆåÊàêÁöÑgitlabÂú∞ÂùÄÊØîÂ¶Çhttp://111.111.111.111:8080/ Á¨¨‰∫åÂ§ÑÁ∫¢Á∫ø: ÁôªÈôÜgitlabÔºåÂÖàÁÇπÂáªÂè≥‰∏äÊñπAdmin SettingsÔºåÂÜçÊâæÂà∞Â∑¶‰æßÂàóË°®ÁöÑ‰∏≠ÁöÑoverview‰∏ÄÊ†èÊâæÂà∞runnerÈÄâÈ°πÔºåÊâæÂà∞Âπ∂Âú®shell‰∏≠ËæìÂÖ•token. Ââ©‰∏ãÁöÑËøáÁ®ãÈöè‰æøÂÜôÂç≥ÂèØ ÊúÄÂêéÁúãÂà∞Runner registered successfullyË°®Á§∫Ê≥®ÂÜåÊàêÂäü„ÄÇ ÊúÄÂêéÂèØ‰ª•ÁôªÂΩïgitlabËøõË°åÈ™åËØÅÔºåÊúâÂ¶ÇÂõæÊâÄÊúâÂàóË°®ËØ¥ÊòéÊ≥®ÂÜåÊàêÂäü ÈÖçÁΩÆÊåÅÁª≠ÈõÜÊàêhttps://docs.gitlab.com/ce/ci/quick_start/README.html#creating-a-gitlab-ciyml-file Âú®‰ªìÂ∫ì‰∏ãÔºåÂàõÂª∫.gitlab-ci.yml,ÂÜôÂÖ•‰ª•‰∏ãÈÖçÁΩÆÔºö 123456789stages: - buildGenerateHTML: stage: build script: - p=`pwd` - echo $p - gitbook build - gitbook serve ÊâìÂºÄgitlabÈáåÈù¢ÁöÑpinelineÔºåÊü•Áúãlog„ÄÇ QA Âá∫Áé∞This job is in pending state and is waiting to be picked by a runnerÈîôËØØ Ëß£ÂÜ≥ÔºöÊ≤°ÊâæÂà∞‰ºòÈõÖÁöÑÊñπÂºè„ÄÇÁ≤óÊö¥ÁÇπÔºåÂèØ‰ª•Âú®ÊúçÂä°Âô®Á´ØÈáçÂêØrunnerÔºå‰ΩøÁî®ÂëΩ‰ª§gitlab-ci-multi-runner restart„ÄÇ Êú¨Âú∞‰ΩøÁî® Â∞Ü‰ªìÂ∫ìclone‰∏ãÊù•Ôºågitbook init bookname ÂâµÂª∫Êõ∏ÂêçÁà≤booknameÁöÑÊõ∏ ÂÜô‰π¶ÔºåÂøÖË¶ÅÊó∂‰ΩøÁî®gitbook serve È¢ÑËßà‰π¶„ÄÇ ÂàõÂª∫.gitlab-ci.yml,ÂÜôÂÖ•ÈÖçÁΩÆ„ÄÇÁÑ∂Âêé‰ΩøÁî®gitÂëΩ‰ª§‰∏ä‰º†Âà∞‰π¶Â∫ì„ÄÇ QA CI/CDÁöÑlogÁïåÈù¢Âá∫Áé∞Êó†Ê≥ïÂà†Èô§Âõæ‰π¶ÈîôËØØ Ëß£ÂÜ≥Ôºö CI/CDÂõæÂΩ¢ÁïåÈù¢ÔºåÂè≥‰æßÔºåÁÇπÂáªcancelÂç≥ÂèØ„ÄÇ Âá∫Áé∞RangeError: Maximum call stack size exceededÈîôËØØ Ëß£ÂÜ≥Ôºö ÊñáÁ´†ÂÜÖÂÆπËøáÈïøÔºåÂØºËá¥jsÂ†ÜÊ†àÊ∫¢Âá∫„ÄÇ ÂèÇËÄÉgitbookÈÖçÁΩÆÂÆû‰æãhttps://gitlab.com/pages/gitbook#building-locally ÂÖ∂ÂÆûÁ±ª‰ººgitbookÁöÑËΩØ‰ª∂ËøòÊúâÂæàÂ§öÔºåÂ∞±Ë≠¨Â¶ÇdocsifyÔºåÂ§ßÂÆ∂ÂèØ‰ª•Â§öÊü•ÈòÖÁõ∏ÂÖ≥ËµÑÊñô‰ΩøÁî®„ÄÇ ÂÆåÂÖ®ÁâáÁªìÊùüÔºåËßâÂæóÊàëÂÜôÁöÑ‰∏çÈîôÔºüÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËµ∂Âø´ÊâìÂºÄÊàëÁöÑüëâ‰∏™‰∫∫ÂçöÂÆ¢ üëàÂêßÔºÅ Ë∞¢Ë∞¢‰Ω†ÈÇ£‰πàÂèØÁà±ÔºåËøò‰∏ÄÁõ¥ÂÖ≥Ê≥®ÁùÄÊàë~‚ù§üòù]]></content>
      <tags>
        <tag>Êìç‰ΩúÁ≥ªÁªü</tag>
        <tag>ÂàÜ‰∫´</tag>
        <tag>ËΩØ‰ª∂ÊïôÂ≠¶</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰ªé0ÂºÄÂßãÈÉ®ÁΩ≤Rancher2.0Âà∞ÂæÆÊúçÂä°ÂÆπÂô®ÈÉ®ÁΩ≤‰∏éÊåÅÁª≠ÈõÜÊàê]]></title>
    <url>%2F2019%2F01%2F22%2F%E4%BB%8E0%E5%BC%80%E5%A7%8B%E9%83%A8%E7%BD%B2Rancher2-0%2F</url>
    <content type="text"><![CDATA[RancherÊòØ‰∏Ä‰∏™ÂºÄÊ∫êÁöÑ‰ºÅ‰∏öÁ∫ßÂÆπÂô®ÁÆ°ÁêÜÂπ≥Âè∞„ÄÇÈÄöËøáRancherÔºå‰ºÅ‰∏öÂÜç‰πü‰∏çÂøÖËá™Â∑±‰ΩøÁî®‰∏ÄÁ≥ªÂàóÁöÑÂºÄÊ∫êËΩØ‰ª∂Âéª‰ªéÂ§¥Êê≠Âª∫ÂÆπÂô®ÊúçÂä°Âπ≥Âè∞„ÄÇRancherÊèê‰æõ‰∫ÜÂú®Áîü‰∫ßÁéØÂ¢É‰∏≠‰ΩøÁî®ÁöÑÁÆ°ÁêÜDockerÂíåKubernetesÁöÑÂÖ®Ê†àÂåñÂÆπÂô®ÈÉ®ÁΩ≤‰∏éÁÆ°ÁêÜÂπ≥Âè∞„ÄÇ‰ªäÂ§©ÂàÜ‰∫´‰∏Ä‰∏ãÊàë‰ªé0ÂºÄÂßãÈÉ®ÁΩ≤Rancher2.0Âà∞ÂæÆÊúçÂä°ÂÆπÂô®ÈÉ®ÁΩ≤‰∏éÊåÅÁª≠ÈõÜÊàêÁöÑÂéÜÁ®ã„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢https://blog.tengshe789.tech/Ôºàüòò dockerÂÆâË£ÖËØ∑ÁúãÊàë‰∏äÁØáÂçöÊñá„ÄÇ ÂÆπÂô®‰∏ãÂÆâË£ÖrancherÂü∫Á°ÄÁéØÂ¢ÉÈÖçÁΩÆÂàáÊç¢Âà∞ÂèóÊîØÊåÅÁöÑdockerÁâàÊú¨1sudo ros engine switch docker-17.03.2-ce ÂÖ≥Èó≠Èò≤ÁÅ´Â¢ô(ÂèØÈÄâ)ÊàñËÄÖÊîæË°åÁõ∏Â∫îÁ´ØÂè£ÂØπ‰∫éÂàöÂàöÊé•Ëß¶RancherÁöÑÁî®Êà∑ÔºåÂª∫ËÆÆÂú®ÂÖ≥Èó≠Èò≤ÁÅ´Â¢ôÁöÑÊµãËØïÁéØÂ¢ÉÊàñÊ°åÈù¢ËôöÊãüÊú∫Êù•ËøêË°årancherÔºå‰ª•ÈÅøÂÖçÂá∫Áé∞ÁΩëÁªúÈÄö‰ø°ÈóÆÈ¢ò„ÄÇ ÂÖ≥Èó≠Èò≤ÁÅ´Â¢ô 1„ÄÅCentOS systemctl stop firewalld.service &amp;&amp; systemctl disable firewalld.service 2„ÄÅUbuntu ufw disable Á´ØÂè£ÊîæË°å Á´ØÂè£ÊîæË°åËØ∑Êü•ÁúãÁ´ØÂè£ÈúÄÊ±Ç CentOSÂÖ≥Èó≠selinux1sudo sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config ÈÖçÁΩÆ‰∏ªÊú∫Êó∂Èó¥„ÄÅÊó∂Âå∫„ÄÅÁ≥ªÁªüËØ≠Ë®Ä Êü•ÁúãÊó∂Âå∫ date -RÊàñËÄÖtimedatectl ‰øÆÊîπÊó∂Âå∫ ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime ‰øÆÊîπÁ≥ªÁªüËØ≠Ë®ÄÁéØÂ¢É sudo echo &#39;LANG=&quot;en_US.UTF-8&quot;&#39; &gt;&gt; /etc/profile;source /etc/profile ÈÖçÁΩÆ‰∏ªÊú∫NTPÊó∂Èó¥ÂêåÊ≠• KernelÊÄßËÉΩË∞É‰ºò1234567cat &gt;&gt; /etc/sysctl.conf&lt;&lt;EOFnet.ipv4.ip_forward=1net.bridge.bridge-nf-call-iptables=1net.ipv4.neigh.default.gc_thresh1=4096net.ipv4.neigh.default.gc_thresh2=6144net.ipv4.neigh.default.gc_thresh3=8192EOF HostsÈÖçÁΩÆÊØèÂè∞‰∏ªÊú∫ÁöÑhosts(/etc/hosts),Ê∑ªÂä†host_ip $hostnameÂà∞/etc/hostsÊñá‰ª∂‰∏≠„ÄÇ ÂÆâË£ÖËøêË°årancherÁΩëÁªúÁªÑ‰ª∂ÂÆâË£Örancher‰ª•ÂêéÂèØËÉΩ‰ºöÁ¢∞Âà∞‰∏Ä‰∫õËé´ÂêçÂÖ∂Â¶ôÁöÑËøûÊé•ÈóÆÈ¢òÔºåË≠¨Â¶ÇÊâæ‰∏çÂà∞ÂëΩÂêçËôöÊãüÊú∫‰∏ãËÉΩ‰ΩøÁî®curlÂëΩÂêçËÆøÈóÆÂÖ∂‰ªñËôöÊãüÊú∫Ôºå‰ΩÜÊòØÂÆπÂô®Âç¥‰∏çËÉΩËÆøÈóÆÂÖ∂‰ªñÂÆπÂô®ÔºåËøôÊó∂ÂÄôÂ∞±ÈúÄË¶ÅÂÖàÂÆâË£ÖweaveÁΩëÁªúÁªÑ‰ª∂‰∫Ü„ÄÇ 1docker pull weaveworks/weave-npc:2.5.0 Ê≠£ÂºèÂÆâË£ÖÂèØ‰ª•ÂèÇËÄÉÂ¶Ç‰∏ãÂëΩ‰ª§ÂÆâË£Örancher 1sudo docker run -d --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher ÂΩìÁÑ∂ÂëΩ‰ª§ÂèØ‰ª•Êâ©Â±ïÔºåËØ¶ÊÉÖËßÑÂàôÂ¶Ç‰∏ãÔºö 1$sudo docker run -d -v &lt;‰∏ªÊú∫Ë∑ØÂæÑ&gt;:/var/lib/rancher/ --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher:stable ÁôªÈôÜrancherRancher ServerÂÆπÂô®ÂêØÂä®ÂæàÂø´ÈÄüÔºå‰∏çÂà∞‰∏ÄÂàÜÈíü‰Ω†Â∞±ÂèØ‰ª•ÈÄöËøáhttps://&lt;server_ip&gt;ËÆøÈóÆRancher UI„ÄÇ Á¨¨‰∏ÄÊ¨°ÁôªÂΩï‰ºöË¶ÅÊ±ÇËÆæÁΩÆÁÆ°ÁêÜÂëòÂØÜÁ†ÅÔºåÈªòËÆ§ÁÆ°ÁêÜÂëòË¥¶Âè∑‰∏∫: admin„ÄÇ‰∏ÄÊó¶Rancher ServerÊàêÂäüÂÆâË£ÖÔºåÁî®Êà∑ÁïåÈù¢Â∞ÜÊåáÂØº‰Ω†Ê∑ªÂä†Á¨¨‰∏Ä‰∏™ÈõÜÁæ§ ÂàõÂª∫K8SÈõÜÁæ§È¶ñÂÖàÔºåÂè≥‰∏ãËßíÊâæËØ≠Ë®ÄÈÄâÈ°πÔºåÈÄâ‰∏≠Êñá„ÄÇÁÇπÂáªÊ∑ªÂä†ÈõÜÁæ§„ÄÇ Êé•‰∏ãÊù•ÂÜô‰∏Ä‰∏ãÈõÜÁæ§ÁöÑÂêçÁß∞ÔºåÁÇπÂºÄÂ¶ÇÂõæÊâÄÁ§∫ÁöÑÈÄâÈ°πÔºåÊääÂëΩ‰ª§Â§çÂà∂‰∏Ä‰∏ãÔºåÁ≤òË¥¥Âà∞ÂÆø‰∏ªÊú∫‰∏≠ËøêË°å„ÄÇ Ê≥®ÊÑèÔºårancher2.0Âü∫‰∫ék8sÔºåËÄåk8sÈúÄË¶ÅetcdËäÇÁÇπÂíåcontrolËäÇÁÇπ„ÄÇÁé∞Âú®Ôºårancher‰ºöËá™Âä®Â∏Æ‰Ω†ÂãæÈÄâ‰∏äworkerËäÇÁÇπÔºåÂ¶ÇÊûú‰Ω†ÊòØÂçïÊú∫ÁéØÂ¢ÉÔºåÂøÖÈ°ªË¶ÅÂÖ®ÈÉ®ÂãæÈÄâËøô‰∏â‰∏™‰∏ªÊú∫ËßíËâ≤Âú®Â§çÂà∂ÂëΩ‰ª§„ÄÇ DockerÁßÅÊúâ‰ªìÂ∫ìÁßÅÊúâ‰ªìÂ∫ìÊê≠Âª∫‰∏éÈÖçÁΩÆÔºà1ÔºâÊãâÂèñÁßÅÊúâ‰ªìÂ∫ìÈïúÂÉèÔºàÊ≠§Ê≠•ÁúÅÁï•Ôºâ1docker pull registry Ôºà2ÔºâÂêØÂä®ÁßÅÊúâ‰ªìÂ∫ìÂÆπÂô®1docker run -di --name=registry -p 5000:5000 registry Ôºà3ÔºâÊâìÂºÄÊµèËßàÂô® ËæìÂÖ•Âú∞ÂùÄhttp://192.168.190.137:5000/v2/_catalog ÁúãÂà∞123&#123;repositories: [ ]&#125; Ë°®Á§∫ÁßÅÊúâ‰ªìÂ∫ìÊê≠Âª∫ÊàêÂäüÂπ∂‰∏îÂÜÖÂÆπ‰∏∫Á©∫ Ôºà4Ôºâ‰øÆÊîπdockerÁöÑdaemon.json1vim /etc/docker/daemon.json Ê∑ªÂä†Â¶Ç‰∏ãÂÜÖÂÆπÔºö123&#123; "insecure-registries":[&lt;server ip&gt;:5000]&#125; Ôºà5ÔºâÈáçÂêØdocker ÊúçÂä°Ê≥®ÊÑèÔºåÂ¶ÇÊûú‰∏äÈù¢ÁöÑdaemon.jsonÊ†ºÂºèÂá∫ÈîôÔºåÊ≠§‰Ωødocker‰ºöÊä•ÈîôÔºåÂêØÂä®Ëµ∑‰∏çÊù•„ÄÇËØ∑‰ªîÁªÜÊü•Áúã„ÄÇ1systemctl restart docker ÈïúÂÉè‰∏ä‰º†Ëá≥ÁßÅÊúâ‰ªìÂ∫ìÔºà1ÔºâÊ†áËÆ∞Ê≠§ÈïúÂÉè‰∏∫ÁßÅÊúâ‰ªìÂ∫ìÁöÑÈïúÂÉè1docker tag &lt;imgName&gt; &lt;server ip&gt;:5000/&lt;‰ªìÂ∫ì name&gt; Ôºà2ÔºâÂÜçÊ¨°ÂêØÂä®ÁßÅÊúçÂÆπÂô®1docker start registry Ôºà3Ôºâ‰∏ä‰º†Ê†áËÆ∞ÁöÑÈïúÂÉè1docker push &lt;server ip&gt;:5000/&lt;‰ªìÂ∫ì name&gt; Êõ¥Â§öÁßÅÊúâ‰ªìÂ∫ìÁªèÂéÜËøáÁâàÊú¨Ëø≠‰ª£Ôºå‰πüÊúâÊéàÊùÉËÆ§ËØÅÁ≠âÂäüËÉΩÔºåÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öËµÑÊñôËØ∑ÁúãÂçöÊñáÔºåhttps://www.cnblogs.com/wade-luffy/p/6590849.html dockerfileDockerfileÊòØÁî±‰∏ÄÁ≥ªÂàóÂëΩ‰ª§ÂíåÂèÇÊï∞ÊûÑÊàêÁöÑËÑöÊú¨ÔºåËøô‰∫õÂëΩ‰ª§Â∫îÁî®‰∫éÂü∫Á°ÄÈïúÂÉèÂπ∂ÊúÄÁªàÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÈïúÂÉè„ÄÇ ÂØπ‰∫éÂºÄÂèë‰∫∫ÂëòÔºöÂèØ‰ª•‰∏∫ÂºÄÂèëÂõ¢ÈòüÊèê‰æõ‰∏Ä‰∏™ÂÆåÂÖ®‰∏ÄËá¥ÁöÑÂºÄÂèëÁéØÂ¢ÉÔºõ ÂØπ‰∫éÊµãËØï‰∫∫ÂëòÔºöÂèØ‰ª•Áõ¥Êé•ÊãøÂºÄÂèëÊó∂ÊâÄÊûÑÂª∫ÁöÑÈïúÂÉèÊàñËÄÖÈÄöËøáDockerfileÊñá‰ª∂ÊûÑÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÈïúÂÉèÂºÄÂßãÂ∑•‰Ωú‰∫ÜÔºõ ÂØπ‰∫éËøêÁª¥‰∫∫ÂëòÔºöÂú®ÈÉ®ÁΩ≤Êó∂ÔºåÂèØ‰ª•ÂÆûÁé∞Â∫îÁî®ÁöÑÊó†ÁºùÁßªÊ§ç dockerfileÂÜÖÂÆπËØ¶Ëß£1234567891011121314151617181920# FROM : ÊåáÂÆöÂü∫Á°ÄÈïúÂÉèÔºåË¶ÅÂú®Âì™‰∏™ÈïúÂÉèÂª∫Á´ãFROM anapsix/alpine-java:8_server-jre_unlimited ## ÊàëË¶ÅÁöÑÂæÆÊúçÂä°ÈúÄË¶Å‰æùËµñjreÁéØÂ¢É# ÂÆπÂô®Âç∑ÔºåÊåÅ‰πÖÂåñÁöÑÁéØÂ¢ÉVOLUME /tmp# MAINTAINERÔºöÊåáÂÆöÁª¥Êä§ËÄÖ‰ø°ÊÅØMAINTAINER randyvan007@qq.com# RUNÔºöÂú®ÈïúÂÉè‰∏≠Ë¶ÅÊâßË°åÁöÑÂëΩ‰ª§ Ëøô‰∏™ÂëΩÂêçÊòØÂêåÊ≠•ÂÆπÂô®ÂÜÖÊó∂Èó¥ÔºåÈò≤Ê≠¢ÈÉ®ÂàÜÊìç‰ΩúÂá∫ÈîôÁöÑ„ÄÇ‰∏çÈúÄË¶ÅÂèØ‰ª•‰∏çÊâßË°åRUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtimeRUN mkdir -p /miaosha-redis# WORKDIRÔºöÊåáÂÆöÂΩìÂâçÂ∑•‰ΩúÁõÆÂΩïÔºåÁõ∏ÂΩì‰∫é cdWORKDIR /miaosha-redis# EXPOSEÔºöÊåáÂÆöÂÆπÂô®Ë¶ÅÊâìÂºÄÁöÑÁ´ØÂè£EXPOSE 8080# ADDÔºöÁõ∏ÂΩì‰∫é COPYÔºå‰ΩÜÊòØÊØî COPY ÂäüËÉΩÊõ¥Âº∫Â§ß COPY ÔºöÂ§çÂà∂Êú¨Âú∞‰∏ªÊú∫ÁöÑ Ôºà‰∏∫ Dockerfile ÊâÄÂú®ÁõÆÂΩïÁöÑÁõ∏ÂØπË∑ØÂæÑÔºâÂà∞ÂÆπÂô®‰∏≠ÁöÑADD ./miaosha-redis/target/miaosha-redis.jar ./# ÂÆπÂô®ÂêØÂä®Êó∂ÊâßË°åÊåá‰ª§ENTRYPOINT ["java", "-Djava.security.egd=file:/dev/./urandom", "-jar", "app.jar"]# ÂÆπÂô®ÂêØÂä®Êó∂ÊâßË°åÊåá‰ª§CMD ["--spring.profiles.active=test"] ÊâßË°åÂëΩ‰ª§ÊûÑÂª∫ÈïúÂÉèÂú®dockerfileÁöÑÁõÆÂΩï‰∏ãÔºåËæìÂÖ•1docker build [options] PATH | URL docker buildÔºö Áî® Dockerfile ÊûÑÂª∫ÈïúÂÉèÁöÑÂëΩ‰ª§ÂÖ≥ÈîÆËØç„ÄÇ [OPTIONS] : ÂëΩ‰ª§ÈÄâÈ°πÔºåÂ∏∏Áî®ÁöÑÊåá‰ª§ÂåÖÊã¨ -t ÊåáÂÆöÈïúÂÉèÁöÑÂêçÂ≠óÔºå-f ÊòæÁ§∫ÊåáÂÆöÊûÑÂª∫ÈïúÂÉèÁöÑ Dockerfile Êñá‰ª∂ÔºàDockerfile ÂèØ‰∏çÂú®ÂΩìÂâçË∑ØÂæÑ‰∏ãÔºâÔºåÂ¶ÇÊûú‰∏ç‰ΩøÁî® -fÔºåÂàôÈªòËÆ§Â∞Ü‰∏ä‰∏ãÊñáË∑ØÂæÑ‰∏ãÁöÑÂêç‰∏∫ Dockerfile ÁöÑÊñá‰ª∂ËÆ§‰∏∫ÊòØÊûÑÂª∫ÈïúÂÉèÁöÑ ‚ÄúDockerfile‚Äù „ÄÇ ‰∏ä‰∏ãÊñáË∑ØÂæÑ|URLÔºö ÊåáÂÆöÊûÑÂª∫ÈïúÂÉèÁöÑ‰∏ä‰∏ãÊñáÁöÑË∑ØÂæÑÔºåÊûÑÂª∫ÈïúÂÉèÁöÑËøáÁ®ã‰∏≠ÔºåÂèØ‰ª•‰∏îÂè™ÂèØ‰ª•ÂºïÁî®‰∏ä‰∏ãÊñá‰∏≠ÁöÑ‰ªª‰ΩïÊñá‰ª∂ „ÄÇ Êü•ÁúãÈïúÂÉèÊòØÂê¶Âª∫Á´ãÂÆåÊàê1docker images ÂàõÂª∫ÂÆπÂô®1docker run -di --name=ÊôØË±°ÂêçÁß∞ /bin/bash ÂæÆÊúçÂä°ÈÉ®ÁΩ≤ÂæÆÊúçÂä°ÈÉ®ÁΩ≤Êúâ‰∏§ÁßçÊñπÊ≥ïÔºö ÊâãÂä®ÈÉ®ÁΩ≤Ôºö È¶ñÂÖàÂü∫‰∫éÊ∫êÁ†ÅÊâìÂåÖÁîüÊàêjarÂåÖÔºàÊàñwarÂåÖÔºâ,Â∞ÜjarÂåÖÔºàÊàñwarÂåÖÔºâ‰∏ä‰º†Ëá≥ËôöÊãüÊú∫Âπ∂Êã∑Ë¥ùËá≥JDKÂÆπÂô®„ÄÇ ÈÄöËøáMavenÊèí‰ª∂Ëá™Âä®ÈÉ®ÁΩ≤„ÄÇ ÂØπ‰∫éÊï∞Èáè‰ºóÂ§öÁöÑÂæÆÊúçÂä°ÔºåÊâãÂä®ÈÉ®ÁΩ≤Êó†ÁñëÊòØÈùûÂ∏∏È∫ªÁÉ¶ÁöÑÂÅöÊ≥ïÔºåÂπ∂‰∏îÂÆπÊòìÂá∫Èîô„ÄÇÊâÄ‰ª•Êàë‰ª¨ËøôÈáåÂ≠¶‰π†Â¶Ç‰ΩïËá™Âä®ÈÉ®ÁΩ≤ÔºåËøô‰πüÊòØ‰ºÅ‰∏öÂÆûÈôÖÂºÄÂèë‰∏≠ÁªèÂ∏∏‰ΩøÁî®ÁöÑÊñπÊ≥ï„ÄÇ MavenÊèí‰ª∂Ëá™Âä®ÈÉ®ÁΩ≤Ê≠•È™§ÔºöÔºà1Ôºâ‰øÆÊîπÂÆø‰∏ªÊú∫ÁöÑdockerÈÖçÁΩÆÔºåËÆ©ÂÖ∂ÂèØ‰ª•ËøúÁ®ãËÆøÈóÆ 1vi /lib/systemd/system/docker.service ÂÖ∂‰∏≠ExecStart=ÂêéÊ∑ªÂä†ÈÖçÁΩÆ ‚ÄêH tcp://0.0.0.0:2375 ‚ÄêH unix:///var/run/docker.sock Ôºà2ÔºâÂà∑Êñ∞ÈÖçÁΩÆÔºåÈáçÂêØÊúçÂä° 123systemctl daemon‚Äêreloadsystemctl restart dockerdocker start registry Ôºà3ÔºâÂæÆÊúçÂä°ÁöÑmavenÂ∑•Á®ãpom.xml Â¢ûÂä†ÈÖçÁΩÆ123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596 &lt;build&gt; &lt;finalName&gt;$&#123;project.name&#125;&lt;/finalName&gt; &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;src/main/resources&lt;/directory&gt; &lt;filtering&gt;true&lt;/filtering&gt; &lt;/resource&gt; &lt;/resources&gt; &lt;pluginManagement&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;spring-boot.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;finalName&gt;$&#123;project.build.finalName&#125;&lt;/finalName&gt; &lt;/configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;goals&gt; &lt;goal&gt;repackage&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt;&lt;!-- dockerÁöÑmavenÊèí‰ª∂ÔºåÂÆòÁΩëÔºöhttps://github.com/spotify/docker-maven-plugin --&gt; &lt;plugin&gt; &lt;groupId&gt;com.spotify&lt;/groupId&gt; &lt;artifactId&gt;docker-maven-plugin&lt;/artifactId&gt; &lt;version&gt;0.4.12&lt;/version&gt; &lt;configuration&gt; &lt;!-- Ê≥®ÊÑèimageName‰∏ÄÂÆöË¶ÅÊòØÁ¨¶ÂêàÊ≠£Âàô[a-z0-9-_.]ÁöÑÔºåÂê¶ÂàôÊûÑÂª∫‰∏ç‰ºöÊàêÂäü --&gt; &lt;!-- ËØ¶ËßÅÔºöhttps://github.com/spotify/docker-maven-plugin Invalid repository name ... only [a-z0-9-_.] are allowed--&gt; &lt;imageName&gt;$&#123;registry.url&#125;/$&#123;project.name&#125;:0.0.1&lt;/imageName&gt; &lt;dockerHost&gt;$&#123;docker.url&#125;&lt;/dockerHost&gt; &lt;dockerDirectory&gt;$&#123;project.basedir&#125;&lt;/dockerDirectory&gt; &lt;baseImage&gt;java&lt;/baseImage&gt; &lt;entryPoint&gt;["java", "-jar", "/$&#123;project.build.finalName&#125;.jar"]&lt;/entryPoint&gt; &lt;resources&gt; &lt;resource&gt; &lt;targetPath&gt;/&lt;/targetPath&gt; &lt;directory&gt;$&#123;project.build.directory&#125;&lt;/directory&gt; &lt;include&gt;$&#123;project.build.finalName&#125;.jar&lt;/include&gt; &lt;/resource&gt; &lt;/resources&gt; &lt;serverId&gt;docker-hub&lt;/serverId&gt; &lt;registryUrl&gt;https://index.docker.io/v1/&lt;/registryUrl&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;com.spotify&lt;/groupId&gt; &lt;artifactId&gt;dockerfile-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.4.4&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;default&lt;/id&gt; &lt;goals&gt; &lt;goal&gt;build&lt;/goal&gt; &lt;goal&gt;push&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;javax.activation&lt;/groupId&gt; &lt;artifactId&gt;activation&lt;/artifactId&gt; &lt;version&gt;1.1.1&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;configuration&gt; &lt;!--‰∏ä‰∏ãÊñáË∑ØÂæÑÈÖçÁΩÆÔºåÊ≠§Â§ÑËÆæÁΩÆ‰∏∫È°πÁõÆÊ†πË∑ØÂæÑ--&gt; &lt;contextDirectory&gt;$&#123;project.basedir&#125;&lt;/contextDirectory&gt; &lt;useMavenSettingsForAuth&gt;true&lt;/useMavenSettingsForAuth&gt; &lt;repository&gt;$&#123;registryUrl&#125;/hush/$&#123;project.build.finalName&#125;&lt;/repository&gt; &lt;tag&gt;$&#123;imageVersion&#125;&lt;/tag&gt; &lt;!--‰Ωú‰∏∫DockerfileÊñá‰ª∂‰º†ÂÖ•--&gt; &lt;buildArgs&gt; &lt;JAR_FILE&gt;$&#123;project.build.finalName&#125;.jar&lt;/JAR_FILE&gt; &lt;/buildArgs&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/pluginManagement&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;3.8.0&lt;/version&gt; &lt;configuration&gt; &lt;target&gt;$&#123;maven.compiler.target&#125;&lt;/target&gt; &lt;source&gt;$&#123;maven.compiler.source&#125;&lt;/source&gt; &lt;encoding&gt;UTF-8&lt;/encoding&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; ‰ΩøÁî®‰ª•‰∏äÊèí‰ª∂ÂèØ‰ª•Ëá™Âä®ÁîüÊàêdockerfile Ôºà5ÔºâÂú®windowsÁöÑCMD‰∏ãÔºåËøõÂÖ•ÂæÆÊúçÂä°Â∑•Á®ãÊâÄÂú®ÁöÑÁõÆÂΩïÔºåËæìÂÖ•‰ª•‰∏ãÂëΩ‰ª§ÔºåËøõË°åÊâìÂåÖÂíå‰∏ä‰º†ÈïúÂÉè 1mvn clean package docker:build -DpushImage Ôºà6ÔºâÂéªÈïúÂÉèÂ∫ìÊü•ÁúãÈïúÂÉèÊµèËßàÂô®ËÆøÈóÆhttp://&lt;server ip&gt;:5000/v2/_catalog ÔºåËæìÂá∫‰∫ÜÊàë‰ª¨‰∏ä‰∏ÄÊ≠•ÂëΩÂêçÁöÑÈïúÂÉèÂêçÁß∞ÔºåÂàô‰∏ä‰º†ÊàêÂäü„ÄÇ Ôºà7ÔºâÂú®ËôöÊãüÊú∫Êü•ÁúãÈïúÂÉè‰∏éÂêØÂä®ÂÆπÂô® 1docker images ÊâìÂÆå‰ª•ÂêéÊòæÁ§∫ÈïúÂÉèÂêçÁß∞„ÄÇ‰∏ãÈù¢ËØ•ÂêØÂä®ÂÆπÂô®‰∫ÜÔºÅ1docker run -di --name=ÊúçÂä°ÂêçÁß∞ -p ÂÆπÂô®ÂÜÖÊúçÂä°ÁöÑÁ´ØÂè£Âè∑:ÂÆπÂô®ÂèëÂ∏ÉÁöÑÁ´ØÂè£Âè∑ &lt;server ip&gt;:5000/ÈïúÂÉèÂêçÁß∞ ÊåÅÁª≠ÈõÜÊàêÊåÅÁª≠ÈÉ®ÁΩ≤‰ªÄ‰πàÊòØÊåÅÁª≠ÈõÜÊàêÊåÅÁª≠ÈõÜÊàê Continuous integration ÔºåÁÆÄÁß∞CIÈöèÁùÄËΩØ‰ª∂ÂºÄÂèëÂ§çÊùÇÂ∫¶ÁöÑ‰∏çÊñ≠ÊèêÈ´òÔºåÂõ¢ÈòüÂºÄÂèëÊàêÂëòÈó¥Â¶Ç‰ΩïÊõ¥Â•ΩÂú∞ÂçèÂêåÂ∑•‰Ωú‰ª•Á°Æ‰øùËΩØ‰ª∂ÂºÄÂèëÁöÑË¥®ÈáèÂ∑≤ÁªèÊÖ¢ÊÖ¢Êàê‰∏∫ÂºÄÂèëËøáÁ®ã‰∏≠‰∏çÂèØÂõûÈÅøÁöÑÈóÆÈ¢ò„ÄÇÂ∞§ÂÖ∂ÊòØËøë‰∫õÂπ¥Êù•ÔºåÊïèÊç∑ÔºàAgileÔºâÂú®ËΩØ‰ª∂Â∑•Á®ãÈ¢ÜÂüüË∂äÊù•Ë∂äÁ∫¢ÁÅ´ÔºåÂ¶Ç‰ΩïËÉΩÂÜç‰∏çÊñ≠ÂèòÂåñÁöÑÈúÄÊ±Ç‰∏≠Âø´ÈÄüÈÄÇÂ∫îÂíå‰øùËØÅËΩØ‰ª∂ÁöÑË¥®Èáè‰πüÊòæÂæóÂ∞§ÂÖ∂ÁöÑÈáçË¶Å„ÄÇÊåÅÁª≠ÈõÜÊàêÊ≠£ÊòØÈíàÂØπËøô‰∏ÄÁ±ªÈóÆÈ¢òÁöÑ‰∏ÄÁßçËΩØ‰ª∂ÂºÄÂèëÂÆûË∑µ„ÄÇÂÆÉÂÄ°ÂØºÂõ¢ÈòüÂºÄÂèëÊàêÂëòÂøÖÈ°ªÁªèÂ∏∏ÈõÜÊàê‰ªñ‰ª¨ÁöÑÂ∑•‰ΩúÔºåÁîöËá≥ÊØèÂ§©ÈÉΩÂèØËÉΩÂèëÁîüÂ§öÊ¨°ÈõÜÊàê„ÄÇËÄåÊØèÊ¨°ÁöÑÈõÜÊàêÈÉΩÊòØÈÄöËøáËá™Âä®ÂåñÁöÑÊûÑÂª∫Êù•È™åËØÅÔºåÂåÖÊã¨Ëá™Âä®ÁºñËØë„ÄÅÂèëÂ∏ÉÂíåÊµãËØïÔºå‰ªéËÄåÂ∞ΩÂø´Âú∞ÂèëÁé∞ÈõÜÊàêÈîôËØØÔºåËÆ©Âõ¢ÈòüËÉΩÂ§üÊõ¥Âø´ÁöÑÂºÄÂèëÂÜÖËÅöÁöÑËΩØ‰ª∂„ÄÇ ÊåÅÁª≠ÈõÜÊàêÁöÑÁâπÁÇπÂÆÉÊòØ‰∏Ä‰∏™Ëá™Âä®ÂåñÁöÑÂë®ÊúüÊÄßÁöÑÈõÜÊàêÊµãËØïËøáÁ®ãÔºå‰ªéÊ£ÄÂá∫‰ª£Á†Å„ÄÅÁºñËØëÊûÑÂª∫„ÄÅËøêË°åÊµãËØï„ÄÅÁªìÊûúËÆ∞ÂΩï„ÄÅÊµãËØïÁªüËÆ°Á≠âÈÉΩÊòØËá™Âä®ÂÆåÊàêÁöÑÔºåÊó†ÈúÄ‰∫∫Â∑•Âπ≤È¢ÑÔºõÈúÄË¶ÅÊúâ‰∏ìÈó®ÁöÑÈõÜÊàêÊúçÂä°Âô®Êù•ÊâßË°åÈõÜÊàêÊûÑÂª∫ÔºõÈúÄË¶ÅÊúâ‰ª£Á†ÅÊâòÁÆ°Â∑•ÂÖ∑ÊîØÊåÅÔºåÊàë‰ª¨‰∏ã‰∏ÄÂ∞èËäÇÂ∞Ü‰ªãÁªçGit‰ª•ÂèäÂèØËßÜÂåñÁïåÈù¢GogsÁöÑ‰ΩøÁî® ÊåÅÁª≠ÈõÜÊàê‰ΩúÁî®‰øùËØÅÂõ¢ÈòüÂºÄÂèë‰∫∫ÂëòÊèê‰∫§‰ª£Á†ÅÁöÑË¥®ÈáèÔºåÂáèËΩª‰∫ÜËΩØ‰ª∂ÂèëÂ∏ÉÊó∂ÁöÑÂéãÂäõÔºõÊåÅÁª≠ÈõÜÊàê‰∏≠ÁöÑ‰ªª‰Ωï‰∏Ä‰∏™ÁéØËäÇÈÉΩÊòØËá™Âä®ÂÆåÊàêÁöÑÔºåÊó†ÈúÄÂ§™Â§öÁöÑ‰∫∫Â∑•Âπ≤È¢ÑÔºåÊúâÂà©‰∫éÂáèÂ∞ëÈáçÂ§çËøáÁ®ã‰ª•ËäÇÁúÅÊó∂Èó¥„ÄÅË¥πÁî®ÂíåÂ∑•‰ΩúÈáèÔºõ rancherÂíåÊåÅÁª≠ÈõÜÊàêrancherÊîØÊåÅ‰∏éGitHubÂπ≥Âè∞‰∏éGitLabÂπ≥Âè∞ÊåÅÁª≠ÈõÜÊàê„ÄÇÊé•‰∏ãÊù•Êàë‰ºöÊñ∞ÂºÄÁØáÊñáÁ´†ËÆ≤ËÆ≤gitÂπ≥Âè∞ÁßÅÊúçÁöÑÊê≠Âª∫‰ª•ÂèäÊåÅÁª≠ÈõÜÊàê„ÄÇ ÂèÇËÄÉËµÑÊñôrancherÂÆòÊñπÊñáÊ°£]]></content>
      <tags>
        <tag>Êìç‰ΩúÁ≥ªÁªü</tag>
        <tag>k8s</tag>
        <tag>ÂàÜ‰∫´</tag>
        <tag>ËΩØ‰ª∂ÊïôÂ≠¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ∞ÂΩïdocker ÂÆâË£Ö‰∏éË∞É‰ºò]]></title>
    <url>%2F2019%2F01%2F18%2F%E8%AE%B0%E5%BD%95docker-%E5%AE%89%E8%A3%85%E4%B8%8E%E8%B0%83%E4%BC%98%2F</url>
    <content type="text"><![CDATA[k8sÊòØÂÆπÂô®ÁºñÊéíÁ≥ªÁªüÔºåÈúÄË¶ÅdockerÁöÑÊîØÊåÅÔºå‰ªäÂ§©ÂàÜ‰∫´‰∏ÄÊ≥¢dockerÁöÑÂÆâË£Ö‰∏éË∞É‰ºòËøáÁ®ã„ÄÇ ‰∏ç‰∫ÜËß£dockerÁöÑÁ´•ÈûãÂèØ‰ª•ÂèÇËÄÉÂçöÊñáÔºåÊú¨ÁØáÊñáÁ´†ÁöÑ‰∏ªÈ¢ò‰∏çÂú®ËÆ≤Ëß£dockerÂéüÁêÜ~ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆhttps://blog.tengshe789.tech/üßêüßêüßêüßêüßêüßêüßêüßêüßê docker ÂÆâË£Öcentos7‰∏ãÊõ¥Êñ∞ yum Ê∫ê1yum -y update ‰øÆÊîπÁ≥ªÁªüÊ∫ê 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455sudo cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bakcat &gt; /etc/yum.repos.d/CentOS-Base.repo &lt;&lt; EOF[base]name=CentOS-$releasever - Base - mirrors.aliyun.comfailovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/os/$basearch/ http://mirrors.aliyuncs.com/centos/$releasever/os/$basearch/ http://mirrors.cloud.aliyuncs.com/centos/$releasever/os/$basearch/gpgcheck=1gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7#released updates[updates]name=CentOS-$releasever - Updates - mirrors.aliyun.comfailovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/updates/$basearch/ http://mirrors.aliyuncs.com/centos/$releasever/updates/$basearch/ http://mirrors.cloud.aliyuncs.com/centos/$releasever/updates/$basearch/gpgcheck=1gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7#additional packages that may be useful[extras]name=CentOS-$releasever - Extras - mirrors.aliyun.comfailovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/extras/$basearch/ http://mirrors.aliyuncs.com/centos/$releasever/extras/$basearch/ http://mirrors.cloud.aliyuncs.com/centos/$releasever/extras/$basearch/gpgcheck=1gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7#additional packages that extend functionality of existing packages[centosplus]name=CentOS-$releasever - Plus - mirrors.aliyun.comfailovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/ http://mirrors.aliyuncs.com/centos/$releasever/centosplus/$basearch/ http://mirrors.cloud.aliyuncs.com/centos/$releasever/centosplus/$basearch/gpgcheck=1enabled=0gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7#contrib - packages by Centos Users[contrib]name=CentOS-$releasever - Contrib - mirrors.aliyun.comfailovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/contrib/$basearch/ http://mirrors.aliyuncs.com/centos/$releasever/contrib/$basearch/ http://mirrors.cloud.aliyuncs.com/centos/$releasever/contrib/$basearch/gpgcheck=1enabled=0gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7EOF ÂÆâË£Ö netstatÔºàÁî®‰∫éÊü•ÁúãÂΩìÂâçÊú∫Âô®Á´ØÂè£Âç†Áî®ÊÉÖÂÜµÔºâ1234#ÂÆâË£Öyum install net-tools#‰ΩøÁî®netstat -ntlp Ê∑ªÂä† yum Ê∫ê12345678cat &gt;/etc/yum.repos.d/docker.repo &lt;&lt;-EOF [dockerrepo] name=Docker Repository baseurl=https://yum.dockerproject.org/repo/main/centos/7 enabled=1 gpgcheck=1 gpgkey=https://yum.dockerproject.org/gpgEOF ÂÆâË£Ö docker1yum install -y docker-selinux 1yum install -y docker-engine ÈÖçÁΩÆdocker ÈÖçÁΩÆÊâÄÊúâipÁöÑÊï∞ÊçÆÂåÖËΩ¨Âèë 1234vi /lib/systemd/system/docker.service #ÊâæÂà∞ExecStart=xxxÔºåÂú®ËøôË°å‰∏ãÈù¢Âä†ÂÖ•‰∏ÄË°åÔºåÂÜÖÂÆπÂ¶Ç‰∏ãÔºö(k8sÁöÑÁΩëÁªúÈúÄË¶Å)ExecStartPost=/sbin/iptables -I FORWARD -s 0.0.0.0/0 -j ACCEPT ÂêØÂä®ÊúçÂä° 12345#ËÆæÁΩÆ docker ÂºÄÊú∫ÊúçÂä°ÂêØÂä®systemctl enable docker.service #Á´ãÂç≥ÂêØÂä® docker ÊúçÂä°$ systemctl start docker.service docker ce Âõ†‰∏∫CentOSÁöÑÂÆâÂÖ®ÈôêÂà∂ÔºåÈÄöËøáRKEÂÆâË£ÖK8SÈõÜÁæ§Êó∂ÂÄôÊó†Ê≥ï‰ΩøÁî®rootË¥¶Êà∑„ÄÇÊâÄ‰ª•ÔºåÂª∫ËÆÆCentOSÁî®Êà∑‰ΩøÁî®ÈùûrootÁî®Êà∑Êù•ËøêË°ådocker,‰∏çÁÆ°ÊòØRKEËøòÊòØcustomÂÆâË£Ök8s,ËØ¶ÊÉÖÊü•ÁúãÊó†Ê≥ï‰∏∫‰∏ªÊú∫ÈÖçÁΩÆSSHÈößÈÅì„ÄÇ 1234567891011121314151617181920212223242526272829303132333435# Ê∑ªÂä†Áî®Êà∑(ÂèØÈÄâ)sudo adduser `&lt;new_user&gt;`# ‰∏∫Êñ∞Áî®Êà∑ËÆæÁΩÆÂØÜÁ†Åsudo passwd `&lt;new_user&gt;`# ‰∏∫Êñ∞Áî®Êà∑Ê∑ªÂä†sudoÊùÉÈôêsudo echo '&lt;new_user&gt; ALL=(ALL) ALL' &gt;&gt; /etc/sudoers# Âç∏ËΩΩÊóßÁâàÊú¨DockerËΩØ‰ª∂sudo yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-selinux \ docker-engine-selinux \ docker-engine \ container*# ÂÆö‰πâÂÆâË£ÖÁâàÊú¨export docker_version=17.03.2# step 1: ÂÆâË£ÖÂøÖË¶ÅÁöÑ‰∏Ä‰∫õÁ≥ªÁªüÂ∑•ÂÖ∑sudo yum update -ysudo yum install -y yum-utils device-mapper-persistent-data lvm2 bash-completion# Step 2: Ê∑ªÂä†ËΩØ‰ª∂Ê∫ê‰ø°ÊÅØsudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo# Step 3: Êõ¥Êñ∞Âπ∂ÂÆâË£Ö Docker-CEsudo yum makecache allversion=$(yum list docker-ce.x86_64 --showduplicates | sort -r|grep $&#123;docker_version&#125;|awk '&#123;print $2&#125;')sudo yum -y install --setopt=obsoletes=0 docker-ce-$&#123;version&#125; docker-ce-selinux-$&#123;version&#125;# Â¶ÇÊûúÂ∑≤ÁªèÂÆâË£ÖÈ´òÁâàÊú¨Docker,ÂèØËøõË°åÈôçÁ∫ßÂÆâË£Ö(ÂèØÈÄâ)yum downgrade --setopt=obsoletes=0 -y docker-ce-$&#123;version&#125; docker-ce-selinux-$&#123;version&#125;# ÊääÂΩìÂâçÁî®Êà∑Âä†ÂÖ•dockerÁªÑsudo usermod -aG docker `&lt;new_user&gt;`# ËÆæÁΩÆÂºÄÊú∫ÂêØÂä®sudo systemctl enable docker Ubuntu‰∏ãÂç∏ËΩΩÊóßÁâàÊú¨(Â¶ÇÊûúÊúâÁöÑËØù)1$ apt-get remove docker docker-engine docker.io Êõ¥Êñ∞apt-getÊ∫ê1$ add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" ‰øÆÊîπÁ≥ªÁªüÊ∫ê 1234567891011121314151617sudo cp /etc/apt/sources.list /etc/apt/sources.list.bakcat &gt; /etc/apt/sources.list &lt;&lt; EOFdeb http://mirrors.aliyun.com/ubuntu/ xenial maindeb-src http://mirrors.aliyun.com/ubuntu/ xenial maindeb http://mirrors.aliyun.com/ubuntu/ xenial-updates maindeb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates maindeb http://mirrors.aliyun.com/ubuntu/ xenial universedeb-src http://mirrors.aliyun.com/ubuntu/ xenial universedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates universedeb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates universedeb http://mirrors.aliyun.com/ubuntu/ xenial-security maindeb-src http://mirrors.aliyun.com/ubuntu/ xenial-security maindeb http://mirrors.aliyun.com/ubuntu/ xenial-security universedeb-src http://mirrors.aliyun.com/ubuntu/ xenial-security universeEOF 1$ apt-get update ÂÆâË£ÖaptÁöÑhttpsÊîØÊåÅÂåÖÂπ∂Ê∑ªÂä†gpgÁßòÈí•123456$ apt-get install \ apt-transport-https \ ca-certificates \ curl \ software-properties-common$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - ÂÆâË£Ödocker-ce ÂÆâË£ÖÊúÄÊñ∞ÁöÑÁ®≥ÂÆöÁâà 1$ apt-get install -y docker-ce ÂÆâË£ÖÊåáÂÆöÁâàÊú¨ 12345#Ëé∑ÂèñÁâàÊú¨ÂàóË°®$ apt-cache madison docker-ce #ÊåáÂÆöÁâàÊú¨ÂÆâË£Ö(ÊØîÂ¶ÇÁâàÊú¨ÊòØ17.09.1~ce-0~ubuntu)$ apt-get install -y docker-ce=17.09.1~ce-0~ubuntu Êé•ÂèóÊâÄÊúâipÁöÑÊï∞ÊçÆÂåÖËΩ¨Âèë 1234$ vi /lib/systemd/system/docker.service #ÊâæÂà∞ExecStart=xxxÔºåÂú®ËøôË°å‰∏äÈù¢Âä†ÂÖ•‰∏ÄË°åÔºåÂÜÖÂÆπÂ¶Ç‰∏ãÔºö(k8sÁöÑÁΩëÁªúÈúÄË¶Å)ExecStartPost=/sbin/iptables -I FORWARD -s 0.0.0.0/0 -j ACCEPT ÂêØÂä®ÊúçÂä° 12$ systemctl daemon-reload$ service docker start ÈÅáÂà∞ÈóÆÈ¢òÂèØ‰ª•ÂèÇËÄÉÔºö[ÂÆòÊñπÊïôÁ®ã][1] ÈÉ®ÁΩ≤k8sÂâçÁ≥ªÁªüÁöÑËÆæÁΩÆÂÖ≥Èó≠„ÄÅÁ¶ÅÁî®Èò≤ÁÅ´Â¢ô(ËÆ©ÊâÄÊúâÊú∫Âô®‰πãÈó¥ÈÉΩÂèØ‰ª•ÈÄöËøá‰ªªÊÑèÁ´ØÂè£Âª∫Á´ãËøûÊé•)123$ ufw disable#Êü•ÁúãÁä∂ÊÄÅ$ ufw status ËÆæÁΩÆÁ≥ªÁªüÂèÇÊï∞ - ÂÖÅËÆ∏Ë∑ØÁî±ËΩ¨ÂèëÔºå‰∏çÂØπbridgeÁöÑÊï∞ÊçÆËøõË°åÂ§ÑÁêÜ123456789#ÂÜôÂÖ•ÈÖçÁΩÆÊñá‰ª∂$ cat &lt;&lt;EOF &gt; /etc/sysctl.d/k8s.confnet.ipv4.ip_forward = 1net.bridge.bridge-nf-call-ip6tables = 1net.bridge.bridge-nf-call-iptables = 1EOF #ÁîüÊïàÈÖçÁΩÆÊñá‰ª∂$ sysctl -p /etc/sysctl.d/k8s.conf ÈÖçÁΩÆhostÊñá‰ª∂1234567#ÈÖçÁΩÆhostÔºå‰ΩøÊØè‰∏™NodeÈÉΩÂèØ‰ª•ÈÄöËøáÂêçÂ≠óËß£ÊûêÂà∞ipÂú∞ÂùÄ$ vim /etc/hosts#Âä†ÂÖ•Â¶Ç‰∏ãÁâáÊÆµ(ipÂú∞ÂùÄÂíåservernameÊõøÊç¢ÊàêËá™Â∑±ÁöÑ)192.168.190.137 ubuntu01192.168.190.136 ubuntu03192.168.190.132 centos7192.168.190.135 ubuntu02 Ë∞É‰ºòÂØπ‰∫éÈÄöËøásystemdÊù•ÁÆ°ÁêÜÊúçÂä°ÁöÑÁ≥ªÁªü(ÊØîÂ¶ÇCentOS7.X„ÄÅUbuntu16.X), DockerÊúâ‰∏§Â§ÑÂèØ‰ª•ÈÖçÁΩÆÂèÇÊï∞: ‰∏Ä‰∏™ÊòØdocker.serviceÊúçÂä°ÈÖçÁΩÆÊñá‰ª∂,‰∏Ä‰∏™ÊòØDocker daemonÈÖçÁΩÆÊñá‰ª∂daemon.json„ÄÇ docker.service ÂØπ‰∫éCentOSÁ≥ªÁªüÔºådocker.serviceÈªòËÆ§‰Ωç‰∫é/usr/lib/systemd/system/docker.serviceÔºõÂØπ‰∫éUbuntuÁ≥ªÁªüÔºådocker.serviceÈªòËÆ§‰Ωç‰∫é/lib/systemd/system/docker.service daemon.json daemon.jsonÈªòËÆ§‰Ωç‰∫é/etc/docker/daemon.jsonÔºåÂ¶ÇÊûúÊ≤°ÊúâÂèØÊâãÂä®ÂàõÂª∫ÔºåÂü∫‰∫ésystemdÁÆ°ÁêÜÁöÑÁ≥ªÁªüÈÉΩÊòØÁõ∏ÂêåÁöÑË∑ØÂæÑ„ÄÇÈÄöËøá‰øÆÊîπdaemon.jsonÊù•ÊîπËøáDockerÈÖçÁΩÆÔºå‰πüÊòØDockerÂÆòÊñπÊé®ËçêÁöÑÊñπÊ≥ï„ÄÇ ‰ª•‰∏ãËØ¥ÊòéÂùáÂü∫‰∫ésystemd,Âπ∂ÈÄöËøá/etc/docker/daemon.jsonÊù•‰øÆÊîπÈÖçÁΩÆ„ÄÇ Ë∞É‰ºò‰∏éÈÖçÁΩÆÈÖçÁΩÆÈïúÂÉè‰∏ãËΩΩÂíå‰∏ä‰º†Âπ∂ÂèëÊï∞‰ªéDocker1.12ÂºÄÂßãÔºåÊîØÊåÅËá™ÂÆö‰πâ‰∏ãËΩΩÂíå‰∏ä‰º†ÈïúÂÉèÁöÑÂπ∂ÂèëÊï∞ÔºåÈªòËÆ§ÂÄº‰∏ä‰º†‰∏∫3‰∏™Âπ∂ÂèëÔºå‰∏ãËΩΩ‰∏∫5‰∏™Âπ∂Âèë„ÄÇÈÄöËøáÊ∑ªÂä†‚Äùmax-concurrent-downloads‚ÄùÂíå‚Äùmax-concurrent-uploads‚ÄùÂèÇÊï∞ÂØπÂÖ∂‰øÆÊîπ: 12"max-concurrent-downloads": 3,"max-concurrent-uploads": 5 ÈÖçÁΩÆÈïúÂÉèÂä†ÈÄüÂú∞ÂùÄRancher‰ªév1.6.15ÂºÄÂßãÂà∞v2.x.x,RancherÁ≥ªÁªüÁõ∏ÂÖ≥ÁöÑÊâÄÊúâÈïúÂÉè(ÂåÖÊã¨1.6.x‰∏äÁöÑK8SÈïúÂÉè)ÈÉΩÊâòÁÆ°Âú®Dockerhub‰ªìÂ∫ì„ÄÇDockerhubËäÇÁÇπÂú®ÂõΩÂ§ñÔºåÂõΩÂÜÖÁõ¥Êé•ÊãâÂèñÈïúÂÉè‰ºöÊúâ‰∫õÁºìÊÖ¢„ÄÇ‰∏∫‰∫ÜÂä†ÈÄüÈïúÂÉèÁöÑ‰∏ãËΩΩÔºåÂèØ‰ª•ÁªôDockerÈÖçÁΩÆÂõΩÂÜÖÁöÑÈïúÂÉèÂú∞ÂùÄ„ÄÇ ÁºñËæë/etc/docker/daemon.jsonÂä†ÂÖ•‰ª•‰∏ãÂÜÖÂÆπ 123&#123;"registry-mirrors": ["https://7bezldxe.mirror.aliyuncs.com/","https://IP:PORT/"]&#125; ÂèØ‰ª•ËÆæÁΩÆÂ§ö‰∏™registry-mirrorsÂú∞ÂùÄÔºå‰ª•Êï∞ÁªÑÂΩ¢Âºè‰π¶ÂÜôÔºåÂú∞ÂùÄÈúÄË¶ÅÊ∑ªÂä†ÂçèËÆÆÂ§¥(httpsÊàñËÄÖhttp)„ÄÇ ÈÖçÁΩÆinsecure-registriesÁßÅÊúâ‰ªìÂ∫ìDockerÈªòËÆ§Âè™‰ø°‰ªªTLSÂä†ÂØÜÁöÑ‰ªìÂ∫ìÂú∞ÂùÄ(https)ÔºåÊâÄÊúâÈùûhttps‰ªìÂ∫ìÈªòËÆ§Êó†Ê≥ïÁôªÈôÜ‰πüÊó†Ê≥ïÊãâÂèñÈïúÂÉè„ÄÇinsecure-registriesÂ≠óÈù¢ÊÑèÊÄù‰∏∫‰∏çÂÆâÂÖ®ÁöÑ‰ªìÂ∫ìÔºåÈÄöËøáÊ∑ªÂä†Ëøô‰∏™ÂèÇÊï∞ÂØπÈùûhttps‰ªìÂ∫ìËøõË°åÊéà‰ø°„ÄÇÂèØ‰ª•ËÆæÁΩÆÂ§ö‰∏™insecure-registriesÂú∞ÂùÄÔºå‰ª•Êï∞ÁªÑÂΩ¢Âºè‰π¶ÂÜôÔºåÂú∞ÂùÄ‰∏çËÉΩÊ∑ªÂä†ÂçèËÆÆÂ§¥(http)„ÄÇ ÁºñËæë/etc/docker/daemon.jsonÂä†ÂÖ•‰ª•‰∏ãÂÜÖÂÆπ: 123&#123;"insecure-registries": ["192.168.1.100","IP:PORT"]&#125; ÈÖçÁΩÆDockerÂ≠òÂÇ®È©±Âä®OverlayFSÊòØ‰∏Ä‰∏™Êñ∞‰∏Ä‰ª£ÁöÑËÅîÂêàÊñá‰ª∂Á≥ªÁªüÔºåÁ±ª‰ºº‰∫éAUFSÔºå‰ΩÜÈÄüÂ∫¶Êõ¥Âø´ÔºåÂÆûÁé∞Êõ¥ÁÆÄÂçï„ÄÇDocker‰∏∫OverlayFSÊèê‰æõ‰∫Ü‰∏§‰∏™Â≠òÂÇ®È©±Âä®Á®ãÂ∫è:ÊóßÁâàÁöÑoverlayÔºåÊñ∞ÁâàÁöÑoverlay2(Êõ¥Á®≥ÂÆö)„ÄÇ ÂÖàÂÜ≥Êù°‰ª∂: overlay2: LinuxÂÜÖÊ†∏ÁâàÊú¨4.0ÊàñÊõ¥È´òÁâàÊú¨ÔºåÊàñ‰ΩøÁî®ÂÜÖÊ†∏ÁâàÊú¨3.10.0-514+ÁöÑRHELÊàñCentOS„ÄÇ overlay: ‰∏ªÊú∫LinuxÂÜÖÊ†∏ÁâàÊú¨3.18+ ÊîØÊåÅÁöÑÁ£ÅÁõòÊñá‰ª∂Á≥ªÁªü ext4(‰ªÖÈôêRHEL 7.1) xfs(RHEL7.2ÂèäÊõ¥È´òÁâàÊú¨)ÔºåÈúÄË¶ÅÂêØÁî®d_type=true„ÄÇ &gt;ÂÖ∑‰ΩìËØ¶ÊÉÖÂèÇËÄÉ Docker Use the OverlayFS storage driver ÁºñËæë/etc/docker/daemon.jsonÂä†ÂÖ•‰ª•‰∏ãÂÜÖÂÆπ 1234&#123;"storage-driver": "overlay2","storage-opts": ["overlay2.override_kernel_check=true"]&#125; ÈÖçÁΩÆÊó•ÂøóÈ©±Âä®ÂÆπÂô®Âú®ËøêË°åÊó∂‰ºö‰∫ßÁîüÂ§ßÈáèÊó•ÂøóÊñá‰ª∂ÔºåÂæàÂÆπÊòìÂç†Êª°Á£ÅÁõòÁ©∫Èó¥„ÄÇÈÄöËøáÈÖçÁΩÆÊó•ÂøóÈ©±Âä®Êù•ÈôêÂà∂Êñá‰ª∂Â§ßÂ∞è‰∏éÊñá‰ª∂ÁöÑÊï∞Èáè„ÄÇ &gt;ÈôêÂà∂Âçï‰∏™Êó•ÂøóÊñá‰ª∂‰∏∫100M,ÊúÄÂ§ö‰∫ßÁîü3‰∏™Êó•ÂøóÊñá‰ª∂ 1234567&#123;"log-driver": "json-file","log-opts": &#123; "max-size": "100m", "max-file": "3" &#125;&#125; Â∏∏ËßÅÈóÆÈ¢òUbuntu\DebianÁ≥ªÁªü Ôºådocker infoÊèêÁ§∫WARNING: No swap limit supportUbuntu\DebianÁ≥ªÁªü‰∏ãÔºåÈªòËÆ§cgroupsÊú™ÂºÄÂêØswap accountÂäüËÉΩÔºåËøôÊ†∑‰ºöÂØºËá¥ËÆæÁΩÆÂÆπÂô®ÂÜÖÂ≠òÊàñËÄÖswapËµÑÊ∫êÈôêÂà∂‰∏çÁîüÊïà„ÄÇÂèØ‰ª•ÈÄöËøá‰ª•‰∏ãÂëΩ‰ª§Ëß£ÂÜ≥: 12sudo sed -i 's/GRUB_CMDLINE_LINUX="/GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1 /g' /etc/default/grubsudo update-grub Ê≥®ÊÑèÈÄöËøá‰ª•‰∏äÂëΩ‰ª§ÂèØËá™Âä®ÈÖçÁΩÆÂèÇÊï∞ÔºåÂ¶ÇÊûú/etc/default/grubÈùûÈªòËÆ§ÈÖçÁΩÆÔºåÈúÄÊ†πÊçÆÂÆûÈôÖÂèÇÊï∞ÂÅöË∞ÉÊï¥„ÄÇÊèêÁ§∫‰ª•‰∏äÈÖçÁΩÆÂÆåÊàêÂêéÔºåÂª∫ËÆÆÈáçÂêØ‰∏ÄÊ¨°‰∏ªÊú∫„ÄÇ Ë∞É‰ºòÈÖçÁΩÆÊÄªÁªì1„ÄÅDockerÈïúÂÉè‰∏ãËΩΩÊúÄÂ§ßÂπ∂ÂèëÊï∞ ÈÄöËøáÈÖçÁΩÆÈïúÂÉè‰∏ä‰º†\‰∏ãËΩΩÂπ∂ÂèëÊï∞max-concurrent-downloads,max-concurrent-uploads,Áº©Áü≠ÈïúÂÉè‰∏ä‰º†\‰∏ãËΩΩÁöÑÊó∂Èó¥„ÄÇ 2„ÄÅÈÖçÁΩÆÈïúÂÉèÂä†ÈÄüÂú∞ÂùÄ ÈÄöËøáÈÖçÁΩÆÈïúÂÉèÂä†ÈÄüÂú∞ÂùÄregistry-mirrors,ÂèØ‰ª•ÂæàÂ§ßÁ®ãÂ∫¶ÊèêÈ´òÈïúÂÉè‰∏ãËΩΩÈÄüÂ∫¶„ÄÇ 3„ÄÅÈÖçÁΩÆDockerÂ≠òÂÇ®È©±Âä® OverlayFSÊòØ‰∏Ä‰∏™Êñ∞‰∏Ä‰ª£ÁöÑËÅîÂêàÊñá‰ª∂Á≥ªÁªüÔºåÁ±ª‰ºº‰∫éAUFSÔºå‰ΩÜÈÄüÂ∫¶Êõ¥Âø´ÔºåÂÆûÁé∞Êõ¥ÁÆÄÂçï„ÄÇDocker‰∏∫OverlayFSÊèê‰æõ‰∫Ü‰∏§‰∏™Â≠òÂÇ®È©±Âä®Á®ãÂ∫è:ÊóßÁâàÁöÑoverlayÔºåÊñ∞ÁâàÁöÑoverlay2(Êõ¥Á®≥ÂÆö)„ÄÇ 4„ÄÅÈÖçÁΩÆÊó•ÂøóÊñá‰ª∂Â§ßÂ∞è ÂÆπÂô®‰∏≠‰ºö‰∫ßÁîüÂ§ßÈáèÊó•ÂøóÊñá‰ª∂ÔºåÂæàÂÆπÂô®Âç†Êª°Á£ÅÁõòÁ©∫Èó¥„ÄÇÈÄöËøáËÆæÁΩÆÊó•ÂøóÊñá‰ª∂Â§ßÂ∞èÔºåÂèØ‰ª•ÊúâÊïàÊéßÂà∂Êó•ÂøóÊñá‰ª∂ÂØπÁ£ÅÁõòÁöÑÂç†Áî®Èáè„ÄÇ‰æãÂ¶ÇÔºö 5„ÄÅÂºÄÂêØWARNING: No swap limit supportÔºåWARNING: No memory limit supportÊîØÊåÅ ÂØπ‰∫éUbuntu\DebianÁ≥ªÁªüÔºåÊâßË°ådocker infoÂëΩ‰ª§Êó∂ËÉΩÁúãÂà∞Ë≠¶ÂëäWARNING: No swap limit supportÊàñËÄÖWARNING: No memory limit support„ÄÇÂõ†‰∏∫Ubuntu\DebianÁ≥ªÁªüÈªòËÆ§ÂÖ≥Èó≠‰∫Üswap accountÊàñËÄÖÂäüËÉΩÔºåËøôÊ†∑‰ºöÂØºËá¥ËÆæÁΩÆÂÆπÂô®ÂÜÖÂ≠òÊàñËÄÖswapËµÑÊ∫êÈôêÂà∂‰∏çÁîüÊïàÔºåËß£ÂÜ≥ÊñπÊ≥ï„ÄÇ ÊúÄÁªàÂëΩ‰ª§ËæìÂÖ•Â¶Ç‰∏ãÔºö 123456789101112131415161718touch /etc/docker/daemon.jsoncat &gt; /etc/docker/daemon.json &lt;&lt;EOF&#123; "log-driver": "json-file", "log-opts": &#123; "max-size": "100m", "max-file": "3" &#125;, "max-concurrent-downloads": 10, "max-concurrent-uploads": 10, "registry-mirrors": ["https://7bezldxe.mirror.aliyuncs.com"], "storage-driver": "overlay2", "storage-opts": [ "overlay2.override_kernel_check=true" ]&#125;EOFsystemctl daemon-reload &amp;&amp; systemctl restart docker ÂÆåÂèÇËÄÉËµÑÊñôhttp://www.docker.org.cn/ https://www.cnrancher.com/docs/rancher/v2.x/cn/overview/quick-start-guide/ ÁªìÊùüÂÖ®ÁâáÁªìÊùüÔºåËßâÂæóÊàëÂÜôÁöÑ‰∏çÈîôÔºüÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËµ∂Âø´ÊâìÂºÄÊàëÁöÑüëâ‰∏™‰∫∫ÂçöÂÆ¢ üëàÂêßÔºÅ Ë∞¢Ë∞¢‰Ω†ÈÇ£‰πàÂèØÁà±ÔºåËøò‰∏ÄÁõ¥ÂÖ≥Ê≥®ÁùÄÊàë~‚ù§üòù]]></content>
      <tags>
        <tag>Êìç‰ΩúÁ≥ªÁªü</tag>
        <tag>k8s</tag>
        <tag>ËΩØ‰ª∂ÊïôÂ≠¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ∞ÂΩï‰∏ÄÊ¨°UbuntuÁöÑËøûÊé•]]></title>
    <url>%2F2019%2F01%2F18%2F%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1Ubuntu%E7%9A%84%E8%BF%9E%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[ÊúÄËøëÂÖ¨Âè∏ÁöÑspring cloud ‰∫ëÂπ≥Âè∞Âç≥Â∞ÜÊûÑÈÄ†ÂÆåÊàêÔºåËΩ¨ËÄåË¶ÅËøõÂÖ•ÈÉ®ÁΩ≤‰∏éÂª∫ËÆæÂπ≥Âè∞ÁöÑËøáÁ®ã„ÄÇÊïÖÂáÜÂ§áÁ†îÁ©∂‰∏Ä‰∏ãkubernetesÔºåÂèØÊòØÊúÄËøëÊâãÂ§¥ÁâπÂà´Á¥ßÔºåÊàëÈÉ®Èó®ÂèàÊ≤°ÊúâÁã¨Á´ãÁöÑ‰∫ëÊúçÂä°Âô®ÔºåËÄå‰∏îÁΩëÈÄüÂæàÊÖ¢Ê≤°Ê≥ï‰∏ãËΩΩcentosÈïúÂÉèÔºåÊïÖÂáÜÂ§áÂÆâË£ÖËôöÊãüÊú∫Ôºå‰ΩøÁî®Êàë‰ªéÊú™Áî®ËøáÁöÑUbuntuÊù•Ëß£ÂÜ≥ÈóÆÈ¢ò„ÄÇËøôÂ∞±Êúâ‰∫ÜËøôÊ¨°ÊñáÁ´†ÁöÑ‰∏ªÈ¢ò„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢https://blog.tengshe789.tech/Ôºàüòò UbuntuÂºÄÊú∫Á¨¨‰∏ÄÊ¨°ËÆæÁΩÆÊàëÊòØÁî®ÁöÑÊòØUbuntu desktop x64ÁâàÔºå‰∏çÊòØÊúçÂä°Âô®ÁâàÔºåÂ∏¶ÊúâÂõæÂΩ¢ÂåñÁïåÈù¢„ÄÇË£ÖÁ≥ªÁªüÔºåÂºÄÊú∫ÔºåÁÇπÂáªÂ∑¶‰∏äËßíËÆæÁΩÆ,‰ΩøÁî®crtl+fÂø´Êç∑ÈîÆÁªÑÂêàÔºåÂàÜÂà´ÊêúÁ¥¢lock,power save,Â∞ÜÈîÅÂ±èÂíåÁúÅÁîµÂÖ®ÈÉ®ÂÖ≥Èó≠„ÄÇÁªìÊùü„ÄÇ SSHËøûÊé•ÈªòËÆ§UbuntuÊòØ‰∏çËÉΩ‰ΩøÁî®sshËøûÊé•ÁöÑÔºåÈúÄË¶ÅÂú®Á≥ªÁªüÂÜÖÂÆâË£ÖÂíåÈÖçÁΩÆssh„ÄÇ ÂáÜÂ§áÂ∑•‰ΩúÊâìÂºÄÁªàÁ´ØÔºåËæìÂÖ•sudo apt-get updateÊù•Êõ¥Êñ∞Ê∫êÂàóË°®„ÄÇ ÊàêÂäüÂêéÔºåËæìÂÖ•sudo apt-get install openssh-serverÊ†πÊçÆÊèêÁ§∫Êù•ÂÆâË£ÖsshÊúçÂä°„ÄÇ Êé•‰∏ãÊù•ÔºåËæìÂÖ•sudo apt install net-toolsÊ†πÊçÆÊèêÁ§∫Êù•ÂÆâË£ÖÁΩëÁªúÂ∑•ÂÖ∑„ÄÇ ÊúÄÂêéÔºåËæìÂÖ•sudo apt-get install vim-gtkÊù•ÂÆâË£ÖvimÂ∑•ÂÖ∑ÔºàvimÂ§ßÊ≥ïÂ•ΩÔºÅÔºâ ÁªìÊùü„ÄÇ ËÆæÁΩÆsshÊü•ÁúãsshÊúçÂä°ÊòØÂê¶ÂêØÂä®ËæìÂÖ•sudo ps -e |grep sshÔºåÁªìÊûúÂ¶Ç‰∏ã Â¶ÇÊûúÊúâsshdËøõÁ®ãÔºåÂàôËØ¥ÊòésshÊúçÂä°Â∑≤ÁªèÂêØÂä®ÔºåÂ¶ÇÊûúÊ≤°ÊúâÂêØÂä®ÔºåËæìÂÖ•sudo service ssh startÔºåsshÊúçÂä°Â∞±‰ºöÂêØÂä®„ÄÇ ‰ΩøÁî®gedit‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ËæìÂÖ•sudo gedit /etc/ssh/sshd_configÔºåÊääÈÖçÁΩÆÊñá‰ª∂‰∏≠ÁöÑ‚ÄùPermitRootLogin without-password‚ÄùÂä†‰∏Ä‰∏™‚Äù#‚ÄùÂè∑,ÊääÂÆÉÊ≥®ÈáäÊéâÔºåÂÜçÂ¢ûÂä†‰∏ÄÂè•‚ÄùPermitRootLogin yes‚ÄùÔºå‰øÆÊîπÊàêÂäü„ÄÇ Êü•ÊâæIPÂú∞ÂùÄËæìÂÖ•ifconfigÔºåÊ†πÊçÆipÈÖçÁΩÆÂà∞sshËøûÊé•Â∑•ÂÖ∑Â∞±Â•Ω„ÄÇ ÂÆåÊàêÔºÅÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ „ÄÇ]]></content>
      <tags>
        <tag>Êìç‰ΩúÁ≥ªÁªü</tag>
        <tag>ËΩØ‰ª∂ÊïôÂ≠¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â∞ÜÊàëÁöÑjavaÁ®ãÂ∫èÁªÑ‰ª∂ÈÉ®ÁΩ≤Âà∞maven‰∏≠Â§Æ‰ªìÂ∫ì]]></title>
    <url>%2F2019%2F01%2F17%2F%E5%B0%86%E6%88%91%E7%9A%84%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6%E6%B3%A8%E5%86%8C%E5%88%B0maven%2F</url>
    <content type="text"><![CDATA[Ââç‰∏ÄÈòµÂ≠êÂ∑•‰ΩúÊúâÁÇπÂøôÔºå‰πüÊØîËæÉÁÑ¶Ëôë„ÄÇÊ≤°ÊúâÊó∂Èó¥ÂÜô‰∏Ä‰∫õÂçöÂÆ¢ÊñáÁ´†Ôºå‰ªäÂ§©Êù•Ë°•ÂÖÖ‰∏Ä‰∏ã„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢„ÄÇüòè ÂÅöÁÇπ‰ªÄ‰πàÔºüÈù¢‰∏¥ÊØï‰∏öÔºå‰∏çÊÉ≥‰∏ÄÁõ¥Âí∏È±ºÔºåÂèØÊòØÂèà‰ªÄ‰πàÈÉΩ‰∏ç‰ºöÔºåÂÅöÁÇπ‰ªÄ‰πàÁöÑÔºüÊÄùÊù•ÊÉ≥ÂéªÔºå‰πüÊòØ‰∏∫‰∫ÜÁªôËá™Â∑±Â∞ë‰∏ÄÁÇπÈ∫ªÁÉ¶ÔºåÂ∞±ÂÜ≥ÂÆöÊääËá™Â∑±ÂçäÂπ¥ÂâçÈÇ£‰∏™ÁßíÊùÄÂïÜÂüéÈ°πÁõÆÈáçÊûÑ‰∏Ä‰∏ãÔºåÊîæÂà∞‰∫ëÂπ≥Âè∞‰∏ä„ÄÇ‰∏çËøáÊó¢ÁÑ∂ÈÉΩÊòØ‰∫ëÂπ≥Âè∞‰∫ÜÔºåËÇØÂÆö‰ºöÊúâÂêÑÁßçÊîØÊíëÊúçÂä°ÔºåÂ∞±Ë≠¨Â¶ÇËØ¥ÁºìÂ≠ò‰∏≠ÂøÉÔºåÊó•Âøó‰∏≠ÂøÉÔºåÁõëÊéß‰∏≠ÂøÉÔºåÊùÉÈôêÁÆ°ÁêÜ‰∏≠ÂøÉÁ≠âÁ≠âÔºå‰ΩÜÊòØËøô‰∫õÂäüËÉΩÔºåÂú®Âà´ÁöÑÈ°πÁõÆ‰∏≠‰πüÂèØ‰ª•Áî®Âà∞ÔºåËøôÂ∞±Â∏¶Êù•‰∏Ä‰∫õ‰∏çÂøÖË¶ÅÁöÑÈ∫ªÁÉ¶„ÄÇ ËøôÊó∂ÂÄôÔºåÂ∞±Êé®Ëçê‰ΩøÁî®mavenÊù•Áªü‰∏ÄÁÆ°ÁêÜ‰∫Ü„ÄÇ Ââç‰∫õÊó•Â≠êÔºåË∂ÅÁùÄÊØï‰∏öÁîüÂàõ‰∏öÊåáÂØºÂºÄËØæÁöÑÊó∂ÂÄôÔºåÊàëÊääÁºìÂ≠ò‰∏≠ÂøÉÊï≤ÂÆå‰∫Ü„ÄÇÁÑ∂ÂêéÂ∞Ü‰ªñÈÉ®ÁΩ≤Âà∞maven‰∏≠Â§Æ‰ªìÂ∫ì„ÄÇ‰∏ãÈù¢ÊàëÂ∞±Êù•ÂàÜ‰∫´‰∏Ä‰∏ãÈÉ®ÁΩ≤Âà∞‰∏≠Â§Æ‰ªìÂ∫ìÁöÑÈÇ£‰∫õÂùëüï≥„ÄÇ ÈÉ®ÁΩ≤Âà∞‰∏≠Â§Æ‰ªìÂ∫ìÂáÜÂ§áÂ∑•‰Ωú ÊâìÂºÄÊµèËßàÂô®Ôºå sonatype ÂÆòÁΩëÔºåËøô‰∏™Âú∞ÂùÄÔºåÊ≥®ÂÜå‰∏Ä‰∏™Ë¥¶Âè∑ÔºåÂπ∂‰∏îËÆ∞‰ΩèÁî®Êà∑ÂêçÂØÜÁ†Å ‰∏ãËΩΩÂ•ΩgitÂÆ¢Êà∑Á´Ø Êèê‰∫§issueÂú® https://issues.sonatype.org/secure/CreateIssue.jspa?issuetype=21&amp;pid=10134 ‰∏≠Êñ∞Âª∫‰∏Ä‰∏™‚ÄúProject ticket‚Äù„ÄÇ ‰∏ãÈù¢Âºï‰ª•‰∏ãSpiderman.LÂ§ß‰Ω¨ÂçöÂÆ¢‰∏äÁöÑÂõæÁâáÔºàÂ§™Êáí‰∫Ü‰∏çÊÉ≥ÈáçÊñ∞Â°´‰∏ÄÈÅçÔºâÔºåÁÖßÁùÄËøô‰∏™Ê≠•È™§Êù•„ÄÇ ÁÇπÂáªCreate‰πãÂêéÔºå‰Ω†Â∞±‰ºöËøõÂÖ•‰∏Ä‰∏™ jira È°µÈù¢(sonatype ‰ΩøÁî®jira Êù•ËøΩË∏™ÊØè‰∏Ä‰∏™È°πÁõÆËøõÂ∫¶)Ôºå‰∏éÊ≠§ÂêåÊó∂‰Ω†Ê≥®ÂÜåÊó∂‰ΩøÁî®ÁöÑÈÇÆÁÆ±‰∏≠‰πü‰ºöÊî∂Âà∞‰∏ÄÂ∞ÅÈÇÆ‰ª∂ÊèêÁ§∫‰Ω†Ôºå‰ªªÂä°ÂàõÂª∫ÊàêÂäü,Ê≠£Âú®Á≠âÂæÖÂ§ÑÁêÜ„ÄÇ Á≠âÂæÖÊó∂Èó¥ÂàõÂª∫ÂÆåÊØïÂêéÂ∞±Á≠âÂæÖ‰∏ÄÊÆµÊó∂Èó¥ÔºåÂà∑Êñ∞È°µÈù¢„ÄÇÂΩìÁä∂ÊÄÅÂèò‰∏∫‚Äúresolved‚ÄùÔºåÁÑ∂Âêé‰Ω†Â∞±ÂèØ‰ª•‰ΩøÁî®maven‰∏ä‰º†È°πÁõÆ‰∫Ü„ÄÇÊàñËÄÖÂ∞±Á≠âÁùÄÊé•Êî∂ sonatypeÁöÑÂèçÈ¶àÈÇÆ‰ª∂ÔºåÁ°ÆËÆ§Â∑≤Áªè‰∏∫‰Ω†ÂàõÂª∫Â•Ω‰∫ÜÊñ∞È°πÁõÆ ÂõûÂ§çcommitÂèëÂ∏ÉÂÆåÂêéÔºåÂèØËÉΩÂá†ÂàÜÈíüÔºå‰πüÂèØËÉΩÂá†Â∞èÊó∂Ôºå‰ºöÊúâÂ∑•‰Ωú‰∫∫ÂëòÈóÆ‰Ω†ÊòØÂê¶ÊúâGroup IdÂØπÂ∫îÁöÑÈÇ£‰∏™ÂüüÂêçÁöÑÊâÄÊúâÊùÉÔºåÂ¶ÇÊûúÊúâÁöÑËØùÂ∞±ÂõûÂ§çÊúâÔºåÂπ∂‰∏îÊåâÁÖß‰ªñËØ¥ÁöÑ‰∏â‰∏™ÊñπÊ≥ïÊù•Ôºà‰∏ãÂõæ‰∏∫ÂèÇËÄÉËØ≠Âè•ÔºâÔºåÁÑ∂ÂêéÂ∞±‰ºöÂæóÂà∞Configuration has been preparedÁöÑÂõûÂ§çÔºåËøô‰∏™Êó∂ÂÄôÂ∞±ÂèØ‰ª•ÂáÜÂ§áÂèëÂ∏É‰∫Ü„ÄÇ ÊàëÁî®ÁöÑÊòØÁ¨¨‰∏Ä‰∏™ÊñπÊ≥ïÔºåÂõ†‰∏∫ÊàëÁöÑÂüüÂêçÊòØ‰ªéÈòøÈáå‰∫ë‰∏ä‰π∞ÁöÑÔºåÊàëÂú®ÈòøÈáå‰∫ëÂπ≥Âè∞ÁöÑÂüüÂêçÁÆ°ÁêÜ‰∏≠ÂøÉÂ§ÑÔºåÊ∑ªÂä†‰∫Ü‰∏Ä‰∏™TXTËÆ∞ÂΩïÂà∞Ëøô‰∏™ticket‰∏äÔºåËøôÊ†∑‰ªñ‰ºöËá™Â∑±Ê£ÄÊµã„ÄÇ ÂΩìÁÑ∂‰∫ÜÔºåÂ¶ÇÊûúËá™Â∑±Ê≤°ÊúâÂüüÂêçÁöÑËØùÂèØ‰ª•ÊåÇÂú®ÂºÄÊ∫êÁöÑÂüüÂêç‰∏ãÈù¢Ôºå‰æãÂ¶Çcom.github.tengshe789ÔºåËøôÊ†∑‰∏ÄÊ†∑ÂèØ‰ª•ÂèëÂ∏É„ÄÇ ÊúÄÂ∑ÆÁöÑÊñπÊ≥ïÔºåÂ∞±ÊòØÁî®‰∏™‰∫∫ÂüüÂêçÈÇÆÁÆ±ÂèëÈÄÅÁªô‰ªñÈÇÆ‰ª∂„ÄÇ Ëé∑ÂæóÈÉ®ÁΩ≤ÊùÉÈôêÂÅöÂÆå‰∏ä‰∏ÄÊ≠•Ôºå‰ªñ‰ºöÂú®ÁæéÂõΩÂ∑•‰ΩúÊó•Êó∂Èó¥ÈáåÂõûÂ§çÈÉ®ÁΩ≤ÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØÔºåÂ¶ÇÂõæÔºö ÂΩìÊàë‰ª¨ÁöÑticketÊúÄÁªàÁä∂ÊÄÅÂèò‰∏∫ResolvedÁöÑÊó∂ÂÄôÔºåË°®Á§∫Êàë‰ª¨ÊúâÊùÉÈôêÂèØ‰ª•‰∏ä‰º†‰∏úË•ø‰∫Ü„ÄÇ mavenÊú¨Âú∞ËÆæÁΩÆÊâæÂà∞‰Ω†ÂÆâË£ÖmavenÁöÑÁõÆÂΩï‰∏ãÈù¢ÔºåÊâìÂºÄmavenÁõÆÂΩï\conf\settings.xmlÊñá‰ª∂„ÄÇÂú®serversÊ†áÁ≠æ‰∏≠Â°´ÂÜôÂ¶Ç‰∏ã‰ø°ÊÅØ 123456789101112&lt;servers&gt; &lt;server&gt; &lt;id&gt;sonatype-nexus-snapshots&lt;/id&gt; &lt;username&gt;tengshe789ÔºàÊàëÁöÑÁî®Êà∑ÂêçÔºâ&lt;/username&gt; &lt;password&gt;ÔºàÊàëÁöÑsonatypeÂØÜÁ†ÅÔºâ&lt;/password&gt; &lt;/server&gt; &lt;server&gt; &lt;id&gt;sonatype-nexus-staging&lt;/id&gt; &lt;username&gt;tengshe789ÔºàÊàëÁöÑÁî®Êà∑ÂêçÔºâ&lt;/username&gt; &lt;password&gt;ÔºàÊàëÁöÑsonatypeÂØÜÁ†ÅÔºâ&lt;/password&gt; &lt;/server&gt;&lt;/servers&gt; javaÁ®ãÂ∫èpom.XMLËÆæÁΩÆÊåâÁÖß‰∏ãÈù¢‰ª£Á†ÅÊ∑ªÂä†„ÄÇ 12345&lt;scm&gt; &lt;connection&gt;scm:git:https://github.com/tengshe789/miaocache.git&lt;/connection&gt; &lt;developerConnection&gt;scm:git:https://github.com/tengshe789/miaocache.git&lt;/developerConnection&gt; &lt;url&gt;https://github.com/tengshe789/miaocache&lt;/url&gt; &lt;tag&gt;0.0.1&lt;/tag&gt; &lt;/scm&gt; Ëøô‰∫õÂú∞ÂùÄÂ°´ÁöÑÊòØ‰Ω†github‰∏äÁöÑÂú∞ÂùÄ„ÄÇ 12345678910111213141516&lt;distributionManagement&gt; &lt;snapshotRepository&gt; &lt;!-- Ëøô‰∏™id‰∏éÊàë‰∏ä‰∏ÄÊ≠•Âú®setting.xml‰∏≠ËÆæÁΩÆÁöÑid‰∏ÄËá¥ÁöÑ --&gt; &lt;id&gt;sonatype-nexus-snapshots&lt;/id&gt; &lt;name&gt;OSS Snapshots Repository&lt;/name&gt; &lt;!-- ËøôÈáåÁöÑurlÂ∞±ÊòØIssue‰∏≠ÂõûÂ§çÁöÑsnapshots ÁöÑrepoÂú∞ÂùÄ--&gt; &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/url&gt; &lt;/snapshotRepository&gt; &lt;repository&gt; &lt;!-- Ëøô‰∏™id‰∏éÊàë‰∏ä‰∏ÄÊ≠•Âú®setting.xml‰∏≠ËÆæÁΩÆÁöÑid‰∏ÄËá¥ÁöÑ --&gt; &lt;id&gt;sonatype-nexus-staging&lt;/id&gt; &lt;name&gt;OSS Staging Repository&lt;/name&gt; &lt;!-- ËøôÈáåÁöÑurlÂ∞±ÊòØIssue‰∏≠ÂõûÂ§çÁöÑstaging ÁöÑrepoÂú∞ÂùÄ--&gt; &lt;url&gt;https://oss.sonatype.org/service/local/staging/deploy/maven2&lt;/url&gt; &lt;/repository&gt;&lt;/distributionManagement&gt; Ëøô‰∫õÂú∞ÂùÄÁõ¥Êé•Â§çÂà∂‰∏äÂ∞±Ë°å„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130 &lt;build&gt; &lt;finalName&gt;$&#123;project.name&#125;&lt;/finalName&gt; &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;src/main/resources&lt;/directory&gt; &lt;filtering&gt;true&lt;/filtering&gt; &lt;/resource&gt; &lt;/resources&gt; &lt;pluginManagement&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;version&gt;$&#123;spring-boot.version&#125;&lt;/version&gt; &lt;configuration&gt; &lt;finalName&gt;$&#123;project.build.finalName&#125;&lt;/finalName&gt; &lt;/configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;goals&gt; &lt;goal&gt;repackage&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/pluginManagement&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;3.8.0&lt;/version&gt; &lt;configuration&gt; &lt;target&gt;$&#123;maven.compiler.target&#125;&lt;/target&gt; &lt;source&gt;$&#123;maven.compiler.source&#125;&lt;/source&gt; &lt;encoding&gt;UTF-8&lt;/encoding&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; &lt;repositories&gt; &lt;!--ÈòøÈáå‰∫ë‰∏ª‰ªìÂ∫ìÔºå‰ª£ÁêÜ‰∫Ümaven centralÂíåjcenter‰ªìÂ∫ì--&gt; &lt;repository&gt; &lt;id&gt;aliyun&lt;/id&gt; &lt;name&gt;aliyun&lt;/name&gt; &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;false&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/repository&gt; &lt;!--ÈòøÈáå‰∫ë‰ª£ÁêÜSpring ÂÆòÊñπ‰ªìÂ∫ì--&gt; &lt;repository&gt; &lt;id&gt;spring-milestones&lt;/id&gt; &lt;name&gt;Spring Milestones&lt;/name&gt; &lt;url&gt;https://maven.aliyun.com/repository/spring&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;false&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;pluginRepositories&gt; &lt;!--ÈòøÈáå‰∫ë‰ª£ÁêÜSpring Êèí‰ª∂‰ªìÂ∫ì--&gt; &lt;pluginRepository&gt; &lt;id&gt;spring-plugin&lt;/id&gt; &lt;name&gt;spring-plugin&lt;/name&gt; &lt;url&gt;https://maven.aliyun.com/repository/spring-plugin&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;false&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/pluginRepository&gt; &lt;/pluginRepositories&gt; &lt;profiles&gt; &lt;profile&gt; &lt;id&gt;release&lt;/id&gt; &lt;build&gt; &lt;plugins&gt; &lt;!-- Source --&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-source-plugin&lt;/artifactId&gt; &lt;version&gt;2.2.1&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;phase&gt;package&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;jar-no-fork&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;!-- Javadoc --&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-javadoc-plugin&lt;/artifactId&gt; &lt;version&gt;2.9.1&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;phase&gt;package&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;jar&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; &lt;distributionManagement&gt; &lt;snapshotRepository&gt; &lt;id&gt;sonatype-nexus-snapshots&lt;/id&gt; &lt;name&gt;OSS Snapshots Repository&lt;/name&gt; &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/url&gt; &lt;/snapshotRepository&gt; &lt;repository&gt; &lt;id&gt;sonatype-nexus-staging&lt;/id&gt; &lt;name&gt;OSS Staging Repository&lt;/name&gt; &lt;!-- ËøôÈáåÁöÑurlÂ∞±ÊòØIssue‰∏≠ÂõûÂ§çÁöÑstaging ÁöÑrepoÂú∞ÂùÄ--&gt; &lt;url&gt;https://oss.sonatype.org/service/local/staging/deploy/maven2&lt;/url&gt; &lt;/repository&gt; &lt;/distributionManagement&gt; &lt;/profile&gt; &lt;/profiles&gt;&lt;/project&gt; ‰∏ãÈù¢Âú∞ÂùÄÊòØÈÄöÁî®ÁöÑÊèí‰ª∂ÂíåprofilesÈÖçÁΩÆÔºå‰∏çËÉΩÂ∞ëÔºåÊåâÁÖßÈúÄÊ±ÇÊù•ËÆæÁΩÆ„ÄÇÊúâËÉΩÂäõÁöÑÂêåÂ≠¶Ëá™Â∑±Á†îÁ©∂‰∏Ä‰∏ã„ÄÇ ‰ΩøÁî®gpgÁîüÊàêÂØÜÈí•ÊâìÂºÄgitÁ™óÂè£ÔºåËæìÂÖ•gpg --gen-key„ÄÇËøôÊó∂ÂÄô‰ºöÂá∫Áé∞‰∏ÄÂ§ßÁâáËã±ÊñáÔºåÁúã‰∏çÊáÇÁöÑÂêåÂ≠¶‰∏çË¶ÅÁ¥ßÔºåË∑üÁùÄÊàëÂÅöÂ∞±Ë°å„ÄÇ 1gpg --list-keys Ëøô‰∏™ÂëΩ‰ª§ÊòØÊü•ÁúãËá™Â∑±keyÁöÑÁºñÂè∑„ÄÇÊâæÂà∞ pubÂØπÂ∫îÁöÑÈÇ£‰∏™ÁºñÂè∑Ôºå‰æãÂ¶Çpub 2048R/8C473F5C‰∏ä‰º†Âà∞keyÈ™åËØÅÂ∫ìÔºö 1gpg --keyserver hkp://keyserver.ubuntu.com:11371 --send-keys 8C473F5C mavenÂëΩ‰ª§ÊâìÂºÄideaÔºåÊâæÂà∞‰∏ãÈù¢ÁöÑÁªàÁ´ØÔºåËæìÂÖ•mavenÂëΩ‰ª§„ÄÇ 1mvn clean deploy -P sonatype-oss-release -Darguments="gpg.passphrase=ËÆæÁΩÆgpgËÆæÁΩÆÂØÜÈí•Êó∂ÂÄôËæìÂÖ•ÁöÑPassphrase" ÂèÇËÄÉËµÑÊñôhttps://www.cnblogs.com/aimqqroad-13/p/9645776.html https://blog.csdn.net/sun5769675/article/details/78519948 https://www.jianshu.com/p/bb930e9ad5f4 ÁªìÊùü„ÄêÁâàÊùÉÁî≥Êòé„ÄëÊ≠§Áâá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºå‰ΩøÁî® CC BY-NC-SA 3.0ÊéàÊùÉÊù°Ê¨æÔºåËØ∑ÈÅµÂÆàÂØπÂ∫îÁöÑ‰πâÂä°ÔºåÂç≥Ë¢´ÊéàÊùÉ‰∫∫Êúâ‰πâÂä°Âú®ÊâÄÊúâÂâØÊú¨‰∏≠ÈÉΩÂøÖÈ°ªÂåÖÂê´ÁâàÊùÉÂ£∞Êòé„ÄÇË∞¢Ë∞¢Âêà‰Ωú~ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢https://blog.tengshe789.tech/Ôºàüòò]]></content>
      <tags>
        <tag>ÂàÜ‰∫´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êñ∞Âπ¥Âø´‰πê]]></title>
    <url>%2F2019%2F01%2F01%2F%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90%2F</url>
    <content type="text"><![CDATA[ÊúÄÊòØ‰∏ÄÂπ¥Êò•Â•ΩÂ§Ñ,ÁªùËÉúÁÉüÊü≥Êª°ÁöáÈÉΩ„ÄÇ ËΩ¨ÁúºÈó¥ÂÖÉÊó¶Âà∞‰∫ÜÔºåÈ¶ñÂÖàÂë¢ÔºåÁ•ùÁ¶èÊâÄÊúâÁúãÂà∞ËøôÁØáÊñáÁ´†ÁöÑ‰Ω†ÔºåÂÖÉÊó¶Âø´‰πêÔºåÁîüÊ¥ªÁæéÊª°ÔºåÂøÉÊÉ≥‰∫ãÊàê„ÄÇ Êò®Â§úÂàöÂàö‰ªéÈùíÂ≤õÂõûÂà∞ÊµéÂçóÁöÑÂ≠¶Ê†°ÂÆøËàçÔºåÂú®Â≠¶Ê†°ÂêÉ‰∫Ü‰∏ÄÈ°øÈ£üÂ†ÇÔºåË∫∫Âú®ÂÆøËàçÈáåÁúãÂπ≥ÊàêÊúÄÂêéÁöÑÁ∫¢ÁôΩÊ≠å‰ºö„ÄÇÊÑèÂ§ñÁöÑÂèëÁé∞‰∏Ä‰∏™Ë∂ÖÊºÇ‰∫ÆÂæàÊúâ‰ªôÊ∞îÁöÑÂ∞èÂßêÂßêÔºåË•øÈáé‰∏ÉÊøë ! ÊàëËßâÂæóÊàëÁöÑÂøÉÁû¨Èó¥Â∞±Ë¢´Â•ΩÂá†Âõ¢Â§ßÂ§ßÁöÑÊ£âËä±Â°´ÂÖÖ‰∫ÜÔºåÂÜ¨Â§©ÂáõÂÜΩÁöÑÂØíÈ£é‰πü‰∏ùÊØ´Â∏¶‰∏çË∂≥ÊàëÂøÉÁöÑ‰∏Ä‰∏ùÁÉ≠ÈáèÔºå Â¶ÇÂõæ ÊúâÊ≤°ÊúâÔºüÊòØ‰∏çÊòØ‰ªôÊ∞îÂçÅË∂≥„ÄÇ ÂèØÊÉú‰∏ÉÊøëÈÖ±Â∑≤ÁªèÂÆ£Â∏ÉÈÄÄÂΩπ‰∫ÜÔºåËøôÊòØÊúÄÂêé‰∏ÄÂú∫Âú®‰πÉÊú®ÂùÇ46ÁöÑË°®Êºî„ÄÇÁü•ÈÅìËøô‰∏™Ê∂àÊÅØÁöÑÊàë‰πüÊòØÊØîËæÉÊÉãÊÉúÔºåÂú®Êé®ÁâπÂíåins‰∏äÁî®Êó•ÊñáÈºìÂä±‰∫ÜÂ∞èÂßêÂßê‰ª•ÂêéÔºåÂÆâÁÑ∂ÂÖ•Áù°~ ‰∏ÄËßâÈÜíÊù•ÔºåÊó©‰∏ä9ÁÇπ„ÄÇËø∑Á≥ä‰∏≠ÊãøËµ∑ÊâãÊú∫ÔºåÊä¢‰∫ÜÂá†‰∏™ÂáåÊô®Áæ§ÂèãÂèëÁöÑÁ∫¢ÂåÖÔºåÊäñÊìûÊäñÊìûÁ≤æÁ•û„ÄÇÊé•‰∏ãÊù•ÁöÑ‰ªªÂä°ÊúâÂæàÂ§öÔºåÊàë‰∏Ä‰∏ÄÂàó‰∫Ü‰∏™Ê∏ÖÂçïÔºö ÊäΩÁ©∫ÁúãÁéâÊ¥Å ÂÖÉÊó¶ÊúüÈó¥Â∞±Ë¶Å‰∏ä‰∫§ÊØï‰∏öËÆ∫ÊñáÁöÑÂºÄÈ¢òÊä•ÂëäÔºåÂèØÊàëÂõ†‰∏∫Áé©ÂΩ©ËôπÂÖ≠Âè∑Âà∞Áé∞Âú®ËøòÊ≤°ÊÄùËÄÉÂÜô‰ªÄ‰πà„ÄÇ„ÄÇËÄÅÂ∏àËØ¥Èöè‰æøÂÅöÂ∞±Ë°åÔºåÈÇ£ÊàëÂèàÁ∫†ÁªìËµ∑Êù•‰∫Ü„ÄÇÁî®javaÁöÑÂæÆÊúçÂä°ÁßíÊùÄÂïÜÂüéÔºüËøòÊòØÁî®pythonÂÅöÊàøÂú∞‰∫ß‰ª∑Ê†ºËµ∞ÂäøÁà¨Ëô´‰∏≠ÂøÉÔºüÁ¨¨‰∏ÄÁßçËä±Êó∂Èó¥Â§ö‰ΩÜËøòÁÆóÁÜüÁªÉÔºåÁ¨¨‰∫åÂº†Êó∂Èó¥ÊàêÊú¨Â§ö‰∏Ä‰∫õ„ÄÇ ÊòéÂ§©Ë¶ÅÂéªÂåó‰∫¨Âá∫Â∑Æ ËøáÂπ¥ÂõûÂÆ∂‰π∞ÁÅ´ËΩ¶Á•®„ÄÇ Âõ†‰∏∫Ê≤°ÊúâÈù†Ë∞±ÁöÑÂ∑•‰ΩúÊâÄÊúâËøòÂú®ÂáÜÂ§áÂ∑•‰ΩúÈù¢ËØï„ÄÇÈòøÈáåÂ∑¥Â∑¥ÁöÑÂÜÖÊé®Âà∞Áé∞Âú®ËøòÊ≤°ÁªôÊàëÂèëÈù¢ËØïÁªìÊûúÔºåüò´ÁªßÁª≠ÂáÜÂ§á Â∞±ËøôÊ†∑Êää~ÊúùÁùÄËá™Â∑±ÂøÉ‰∏≠‰∏çÊñ≠Âä™ÂäõÔºÅÊñ∞ÁöÑ‰∏ÄÂπ¥Ë¶ÅÂä†Ê≤πÔºÅ‚Äì9012]]></content>
      <tags>
        <tag>Âàù</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Áî®Âçï‰æãÊ®°ÂºèÊù•ËØ¥Á∫øÁ®ãÂÆâÂÖ®]]></title>
    <url>%2F2018%2F12%2F13%2F%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E4%B8%8E%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%2F</url>
    <content type="text"><![CDATA[‰∏ä‰∏ÄÁØáÂçöÊñáËÆ≤‰∫ÜÊúâÂÖ≥javaÂíåÂÜÖÂ≠òÈÇ£‰∫õ‰∫ãÊÉÖÔºå‰ªäÂ§©Êù•Âª∂Áî≥‰∏Ä‰∏ã,ÁªìÂêàËÆæËÆ°Ê®°ÂºèÁöÑÂçï‰æãÊ®°ÂºèÔºåÊù•ËØ¥ËØ¥Á∫øÁ®ãÂÆâÂÖ®ÈÇ£‰∫õ‰∫ãÊÉÖ„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆhttps://blog.tengshe789.tech/ Âçï‰æãÊ®°ÂºèÂçï‰æãÊ®°ÂºèÂ§ßÂÆ∂Â∫îËØ•ÈÉΩ‰∏çÈôåÁîüÔºå‰∏∫‰∫Ü‰øùËØÅÁ≥ªÁªü‰∏≠ÔºåÂ∫îÁî®ÁöÑÁ±ª‰∏Ä‰∏™Á±ªÂè™Êúâ‰∏Ä‰∏™ÂÆû‰æã„ÄÇ‰º†ÁªüËØæÊú¨‰∏äÂçï‰æãÊ®°ÂºèÂàÜ‰∏§ÁßçÔºå‰∏ÄÁßçÈ•øÊ±âÂºèÔºå‰∏ÄÁßçÊáíÊ±âÂºè„ÄÇÂØπÂ∫îÁöÑ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö ÊáíÊ±âÂºè12345678910111213141516171819202122/** * ÊáíÊ±âÊ®°Âºè * Âçï‰æãÂÆû‰æãÂú®Á¨¨‰∏ÄÊ¨°‰ΩøÁî®Êó∂ËøõË°åÂàõÂª∫ */public class SingletonExample1 &#123; // ÁßÅÊúâÊûÑÈÄ†ÂáΩÊï∞ private SingletonExample1() &#123; &#125; // Âçï‰æãÂØπË±° private static SingletonExample1 instance = null; // ÈùôÊÄÅÁöÑÂ∑•ÂéÇÊñπÊ≥ï public static SingletonExample1 getInstance() &#123; if (instance == null) &#123; instance = new SingletonExample1(); &#125; return instance; &#125;&#125; ÊáíÊ±âÂºèÁöÑÂÆû‰æãÊòØÂú®Á¨¨‰∏ÄÊ¨°‰ΩøÁî®Êó∂ÂàõÂª∫ÁöÑÔºåÁõ∏Â∫îÁöÑÈùôÊÄÅÂ∑•ÂéÇÂäûÊ≥ï‰ºöÂÖàÂà§Êñ≠ÊúâÊ≤°ÊúâÂÆû‰æãÔºåÊ≤°ÊúâÂÆû‰æãÂú®ËøõË°åÂàõÂª∫„ÄÇ ÁÑ∂ËÄåËøôÁßçÂàõÂª∫ÊñπÊ≥ïÊó∂Á∫øÁ®ã‰∏çÂÆâÂÖ®ÁöÑÔºåÂ¶ÇÊûúÊúâ‰∏§‰∏™Á∫øÁ®ãÔºåÂêå‰∏ÄÊó∂ÂàªÊãøÂà∞Âçï‰æãÂØπË±°ÔºåË¶ÅÂéªÈùôÊÄÅÂ∑•ÂéÇÂäûÊ≥ïËÆøÈóÆÔºåÁî±‰∫éÂ∑•ÂéÇÂäûÊ≥ïÊ≤°ÊúâÈîÅÔºåÈÇ£‰πàÂæàÊúâÂèØËÉΩËøô‰∏§‰∏™Á∫øÁ®ãÊúÄÁªà‰ºöÊãøÂà∞‰∏§‰∏™ÂÆû‰æã„ÄÇ È•øÊ±âÂºè12345678910111213141516171819/** * È•øÊ±âÊ®°Âºè * Âçï‰æãÂÆû‰æãÂú®Á±ªË£ÖËΩΩÊó∂ËøõË°åÂàõÂª∫ */public class SingletonExample2 &#123; // ÁßÅÊúâÊûÑÈÄ†ÂáΩÊï∞ private SingletonExample2() &#123; &#125; // Âçï‰æãÂØπË±° private static SingletonExample2 instance = new SingletonExample2(); // ÈùôÊÄÅÁöÑÂ∑•ÂéÇÊñπÊ≥ï public static SingletonExample2 getInstance() &#123; return instance; &#125;&#125; Áõ∏ÂØπ‰∫é‰∏äÈù¢ÈÇ£ÁßçÊáíÊ±âÂºèÔºåÈ•øÊ±âÂºèÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇÁõ¥Êé•Â∞ÜÂçï‰æãÂØπË±°Áî®static‰øÆÈ•∞ÔºåÊääÂÆû‰æãÂØπË±°ÊîæÂà∞Â†ÜÂÜÖÂ≠ò‰∏≠Ôºå‰øùËØÅ‰∫ÜÂ§ö‰∏™Á∫øÁ®ãÂú®ËÆøÈóÆÊó∂ÁöÑÂèØËßÅÊÄß„ÄÇ‰ΩÜÊòØÁº∫ÁÇπ‰πüÊòØÂæàÂ§ßÁöÑÔºåÊ≠£ÊòØÁî±‰∫éÊääÂÆû‰æãÂØπË±°ÊîæÂà∞Â†ÜÂÜÖÂ≠ò‰∏≠ÔºåËøôÊ†∑Â∫îÁî®‰∏ÄÂä†ËΩΩÂ∞±‰ºöÁúãÂà∞ÂØπÂ∫îÂÆû‰æãÔºåÊûÅÂ§ßÊµ™Ë¥πÂÜÖÂ≠ò„ÄÇ Â∞ùËØïÁî®synchronizedÊîπÈÄ†ÊáíÊ±âÂºèÊèí‰∏ÄÂè•Âò¥ÔºåsynchronizedÂ∫ïÂ±ÇÂéüÁêÜÔºå‰∏ªË¶ÅÊòØ‰∏§‰∏™Êåá‰ª§ÂÆûÁé∞ÁöÑÔºåÂàÜÂà´ÊòØmonitorenterÂíåmonitorexitÊåá‰ª§Ôºå‰∏ãÈù¢ÊòØÊàë‰ªéÁΩëÁªú‰∏äÊâæÂà∞ÁöÑÂØπÂ∫îÊåá‰ª§ÁöÑËß£ÈáäÔºö monitorenterÔºö ÊØè‰∏™ÂØπË±°Êúâ‰∏Ä‰∏™ÁõëËßÜÂô®ÈîÅÔºàmonitorÔºâ„ÄÇÂΩìmonitorË¢´Âç†Áî®Êó∂Â∞±‰ºöÂ§Ñ‰∫éÈîÅÂÆöÁä∂ÊÄÅÔºåÁ∫øÁ®ãÊâßË°åmonitorenterÊåá‰ª§Êó∂Â∞ùËØïËé∑ÂèñmonitorÁöÑÊâÄÊúâÊùÉÔºåËøáÁ®ãÂ¶Ç‰∏ãÔºö 1„ÄÅÂ¶ÇÊûúmonitorÁöÑËøõÂÖ•Êï∞‰∏∫0ÔºåÂàôËØ•Á∫øÁ®ãËøõÂÖ•monitorÔºåÁÑ∂ÂêéÂ∞ÜËøõÂÖ•Êï∞ËÆæÁΩÆ‰∏∫1ÔºåËØ•Á∫øÁ®ãÂç≥‰∏∫monitorÁöÑÊâÄÊúâËÄÖ„ÄÇ 2„ÄÅÂ¶ÇÊûúÁ∫øÁ®ãÂ∑≤ÁªèÂç†ÊúâËØ•monitorÔºåÂè™ÊòØÈáçÊñ∞ËøõÂÖ•ÔºåÂàôËøõÂÖ•monitorÁöÑËøõÂÖ•Êï∞Âä†1. 3.Â¶ÇÊûúÂÖ∂‰ªñÁ∫øÁ®ãÂ∑≤ÁªèÂç†Áî®‰∫ÜmonitorÔºåÂàôËØ•Á∫øÁ®ãËøõÂÖ•ÈòªÂ°ûÁä∂ÊÄÅÔºåÁõ¥Âà∞monitorÁöÑËøõÂÖ•Êï∞‰∏∫0ÔºåÂÜçÈáçÊñ∞Â∞ùËØïËé∑ÂèñmonitorÁöÑÊâÄÊúâÊùÉ„ÄÇ monitorexitÔºö ÊâßË°åmonitorexitÁöÑÁ∫øÁ®ãÂøÖÈ°ªÊòØobjectrefÊâÄÂØπÂ∫îÁöÑmonitorÁöÑÊâÄÊúâËÄÖ„ÄÇ Êåá‰ª§ÊâßË°åÊó∂ÔºåmonitorÁöÑËøõÂÖ•Êï∞Âáè1ÔºåÂ¶ÇÊûúÂáè1ÂêéËøõÂÖ•Êï∞‰∏∫0ÔºåÈÇ£Á∫øÁ®ãÈÄÄÂá∫monitorÔºå‰∏çÂÜçÊòØËøô‰∏™monitorÁöÑÊâÄÊúâËÄÖ„ÄÇÂÖ∂‰ªñË¢´Ëøô‰∏™monitorÈòªÂ°ûÁöÑÁ∫øÁ®ãÂèØ‰ª•Â∞ùËØïÂéªËé∑ÂèñËøô‰∏™ monitor ÁöÑÊâÄÊúâÊùÉ„ÄÇ ÈÄöËøáËøô‰∏§ÊÆµÊèèËø∞ÔºåÊàë‰ª¨Â∫îËØ•ËÉΩÂæàÊ∏ÖÊ•öÁöÑÁúãÂá∫SynchronizedÁöÑÂÆûÁé∞ÂéüÁêÜÔºåSynchronizedÁöÑËØ≠‰πâÂ∫ïÂ±ÇÊòØÈÄöËøá‰∏Ä‰∏™monitorÁöÑÂØπË±°Êù•ÂÆåÊàêÔºåÂÖ∂ÂÆûwait/notifyÁ≠âÊñπÊ≥ï‰πü‰æùËµñ‰∫émonitorÂØπË±°ÔºåËøôÂ∞±ÊòØ‰∏∫‰ªÄ‰πàÂè™ÊúâÂú®ÂêåÊ≠•ÁöÑÂùóÊàñËÄÖÊñπÊ≥ï‰∏≠ÊâçËÉΩË∞ÉÁî®wait/notifyÁ≠âÊñπÊ≥ïÔºåÂê¶Âàô‰ºöÊäõÂá∫java.lang.IllegalMonitorStateExceptionÁöÑÂºÇÂ∏∏ÁöÑÂéüÂõ†„ÄÇ ÊØ´Êó†ÁñëÈóÆÔºåÊáíÊ±âÂºèÁöÑÊÄßËÉΩÊòØÂá∫Ëâ≤ÁöÑÔºåÊàë‰ª¨‰∏∫‰ªÄ‰πà‰∏çÂú®ÊáíÊ±âÂºèÁöÑÂü∫Á°Ä‰∏ä‰ΩøÁî®synchronized‰øÆÈ•∞Âë¢Ôºü ‰∏ãÈù¢ÊòØÁõ∏ÂÖ≥‰ª£Á†ÅÔºö 12345678910111213141516171819202122/** * ÊáíÊ±âÊ®°Âºè * Âçï‰æãÂÆû‰æãÂú®Á¨¨‰∏ÄÊ¨°‰ΩøÁî®Êó∂ËøõË°åÂàõÂª∫ */public class SingletonExample3 &#123; // ÁßÅÊúâÊûÑÈÄ†ÂáΩÊï∞ private SingletonExample3() &#123; &#125; // Âçï‰æãÂØπË±° private static SingletonExample3 instance = null; // ÈùôÊÄÅÁöÑÂ∑•ÂéÇÊñπÊ≥ï public static synchronized SingletonExample3 getInstance() &#123; if (instance == null) &#123; instance = new SingletonExample3(); &#125; return instance; &#125;&#125; Âä†‰∫Üsynchronized‰øÆÈ•∞ÂêéÁöÑÂ∑•ÂéÇÊñπÊ≥ïÔºåÊÑèÂë≥ÁùÄÂú®Âêå‰∏ÄÊó∂Èó¥ÂÜÖÂè™ÂÖÅËÆ∏‰∏Ä‰∏™Á∫øÁ®ãËÆøÈóÆ„ÄÇËøôÊØ´Êó†ÁñëÈóÆÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ‰ΩÜÊòØËøôÂêåÊó∂ÊòØ‰∏çË¢´Êé®ËçêÁöÑÔºå‰∏∫‰ªÄ‰πàÂë¢ÔºüÂíå‰∏äÈù¢‰ΩøÁî®static‰øÆÈ•∞ÁöÑÊáíÊ±âÊ®°Âºè‰∏çÂêåÔºåËøô‰∏™Â∑•ÂéÇÊñπÊ≥ïÔºåÂú®Âêå‰∏ÄÊó∂Èó¥ÊÆµÂÜÖÂè™ÂÖÅËÆ∏‰∏Ä‰∏™Á∫øÁ®ãËÆøÈóÆÔºåÊûÅÂ§ßÁöÑÈôêÂà∂cpuËµÑÊ∫êÔºåÊÄßËÉΩÊûÅÂÖ∂Â∑ÆÔºÅ ÂèåÈáçÂêåÊ≠•ÈîÅÂçï‰æãÊ®°ÂºèÈÇ£‰πàÊàë‰ª¨Âê∏Âèñ‰∏äÈù¢ÁöÑÊïôËÆ≠ÔºåÂèØ‰∏çÂèØ‰ª•Âú®‰ΩøÁî®synchronized‰øÆÈ•∞Âü∫Á°Ä‰∏äÂú®Âä†‰ª•ÊîπËøõÂë¢Ôºü 12345678910111213141516171819202122232425/** * ÊáíÊ±âÊ®°Âºè -„Äã ÂèåÈáçÂêåÊ≠•ÈîÅÂçï‰æãÊ®°Âºè * Âçï‰æãÂÆû‰æãÂú®Á¨¨‰∏ÄÊ¨°‰ΩøÁî®Êó∂ËøõË°åÂàõÂª∫ */public class SingletonExample4 &#123; // ÁßÅÊúâÊûÑÈÄ†ÂáΩÊï∞ private SingletonExample4() &#123; &#125; // Âçï‰æãÂØπË±° private static SingletonExample4 instance = null; // ÈùôÊÄÅÁöÑÂ∑•ÂéÇÊñπÊ≥ï public static SingletonExample4 getInstance() &#123; if (instance == null) &#123; // ÂèåÈáçÊ£ÄÊµãÊú∫Âà∂ // B synchronized (SingletonExample4.class) &#123; // ÂêåÊ≠•ÈîÅ if (instance == null) &#123; instance = new SingletonExample4(); // A - 3 &#125; &#125; &#125; return instance; &#125;&#125; ÂæàÂ§ö‰∫∫‰ºöËÆ§‰∏∫ËøôÁßçÂäûÊ≥ïÊòØÊúÄ‰Ω≥ÁöÑËß£ÂÜ≥ÂäûÊ≥ï‰∫ÜÔºåÂÖ∂ÂÆû‰∏çÊòØÔºåËøô‰πüÊòØÁ∫øÁ®ã‰∏çÂÆâÂÖ®ÁöÑ„ÄÇÊÄé‰πàËØ¥Âë¢Ôºü ÂΩìÁ∫øÁ®ãËøõÂÖ•ÂêåÊ≠•ÈîÅÔºåËµ∞Âà∞instance = new SingletonExample4();Êó∂ÔºåJVM‰ºöËøõË°åÂ¶Ç‰∏ãÊìç‰ΩúÔºö memory = allocate() ÂàÜÈÖçÂØπË±°ÁöÑÂÜÖÂ≠òÁ©∫Èó¥ ctorInstance() ÂàùÂßãÂåñÂØπË±° instance = memory ËÆæÁΩÆinstanceÊåáÂêëÂàöÂàÜÈÖçÁöÑÂÜÖÂ≠ò ÂçïÁ∫øÁ®ãÊÉÖÂÜµ‰∏ãËÇØÂÆöÊ≤°ÈóÆÈ¢òÔºå‰ΩÜÊòØÂú®Â§öÁ∫øÁ®ãÊÉÖÂÜµ‰∏ãÔºåJVMÂíåCPUÁöÑ‰ºòÂåñ‰∏≠ÂèØËÉΩ‰ºöÊâßË°åÊåá‰ª§ÈáçÊéí„ÄÇ‰∏äÈù¢ÁöÑÁ¨¨‰∫åÊ≠•ÂíåÁ¨¨‰∏âÊ≠•‰∏≠ÔºåÁî±‰∫éÊ≤°ÊúâÂâçÂêéÂøÖÁÑ∂ÂÖ≥Á≥ªÔºåcpuÂèØËÉΩÈöèÊó∂Ë∞ÉÊç¢Á¨¨‰∫åÊ≠•ÂíåÁ¨¨‰∏âÊ≠•ÁöÑÊâßË°åÈ°∫Â∫è„ÄÇ‰πüÂ∞±ÊòØ‰ºöÂèëÁîü132ËøôÁßçÈ°∫Â∫è„ÄÇ Âçï‰æãÂØπË±° volatile + ÂèåÈáçÊ£ÄÊµãÊú∫Âà∂Âê∏ÂèñÊïôËÆ≠ÁªßÁª≠ÊîπËøõÔºÅ 123456789101112131415161718192021222324252627282930/** * ÊáíÊ±âÊ®°Âºè -„Äã ÂèåÈáçÂêåÊ≠•ÈîÅÂçï‰æãÊ®°Âºè * Âçï‰æãÂÆû‰æãÂú®Á¨¨‰∏ÄÊ¨°‰ΩøÁî®Êó∂ËøõË°åÂàõÂª∫ */public class SingletonExample5 &#123; // ÁßÅÊúâÊûÑÈÄ†ÂáΩÊï∞ private SingletonExample5() &#123; &#125; // 1„ÄÅmemory = allocate() ÂàÜÈÖçÂØπË±°ÁöÑÂÜÖÂ≠òÁ©∫Èó¥ // 2„ÄÅctorInstance() ÂàùÂßãÂåñÂØπË±° // 3„ÄÅinstance = memory ËÆæÁΩÆinstanceÊåáÂêëÂàöÂàÜÈÖçÁöÑÂÜÖÂ≠ò // Âçï‰æãÂØπË±° volatile + ÂèåÈáçÊ£ÄÊµãÊú∫Âà∂ -&gt; Á¶ÅÊ≠¢Êåá‰ª§ÈáçÊéí private volatile static SingletonExample5 instance = null; // ÈùôÊÄÅÁöÑÂ∑•ÂéÇÊñπÊ≥ï public static SingletonExample5 getInstance() &#123; if (instance == null) &#123; // ÂèåÈáçÊ£ÄÊµãÊú∫Âà∂ // B synchronized (SingletonExample5.class) &#123; // ÂêåÊ≠•ÈîÅ if (instance == null) &#123; instance = new SingletonExample5(); // A - 3 &#125; &#125; &#125; return instance; &#125;&#125; volatileÁöÑÁõ∏ÂÖ≥ÂäüËÉΩËØ∑ÁúãÊàë‰πãÂâçÁöÑÂçöÂÆ¢„ÄÇÂà∞ËøôÈáåÔºåÊáíÊ±âÊ®°ÂºèÊîπËøõÂ∞±ÂÆåÊàê‰∫Ü„ÄÇ Êûö‰∏æÊ®°Âºè-„ÄãÊúÄÂÆâÂÖ®1234567891011121314151617181920212223242526272829/** * Êûö‰∏æÊ®°ÂºèÔºöÊúÄÂÆâÂÖ® */public class SingletonExample6 &#123; // ÁßÅÊúâÊûÑÈÄ†ÂáΩÊï∞ private SingletonExample6() &#123; &#125; public static SingletonExample6 getInstance() &#123; return Singleton.INSTANCE.getInstance(); &#125; private enum Singleton &#123; INSTANCE; private SingletonExample6 singleton; // JVM‰øùËØÅËøô‰∏™ÊñπÊ≥ïÁªùÂØπÂè™Ë∞ÉÁî®‰∏ÄÊ¨° Singleton() &#123; singleton = new SingletonExample6(); &#125; public SingletonExample6 getInstance() &#123; return singleton; &#125; &#125;&#125; ÊúÄÊé®ËçêÁöÑÊòØ‰ΩøÁî®Êûö‰∏æÁ±ªÂÆûÁé∞Âçï‰æãÊ®°ÂºèÔºåËøôÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇJVM‰ºö‰øùËØÅÊûö‰∏æÁ±ª‰∏≠ÁöÑÊûÑÈÄ†ÊñπÊ≥ïÂè™Ë∞ÉÁî®‰∏ÄÊ¨°ÔºåÂõ†Ê≠§‰ΩøÁî®Êûö‰∏æ‰ºö‰øùËØÅÂè™ÂÆû‰æãÂåñ‰∏ÄÊ¨°„ÄÇ ÂèÇËÄÉËµÑÊñôJavaÂπ∂ÂèëÁºñÁ®ãÔºöSynchronizedÂèäÂÖ∂ÂÆûÁé∞ÂéüÁêÜ ÂÖ®ÁâáÁªìÊùüÔºåËßâÂæóÊàëÂÜôÁöÑ‰∏çÈîôÔºüÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËµ∂Âø´ÊâìÂºÄÊàëÁöÑüëâ‰∏™‰∫∫ÂçöÂÆ¢ üëàÂêßÔºÅ Ë∞¢Ë∞¢‰Ω†ÈÇ£‰πàÂèØÁà±ÔºåËøò‰∏ÄÁõ¥ÂÖ≥Ê≥®ÁùÄÊàë~‚ù§üòù]]></content>
      <tags>
        <tag>java</tag>
        <tag>Âπ∂Âèë</tag>
        <tag>ËÆæËÆ°Ê®°Âºè</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂàÜ‰∫´‰∏Ä‰∏ãÊàëÂ∏∏Áî®ÁöÑÈ´òÂπ∂ÂèëÊµãËØïÂ∑•ÂÖ∑]]></title>
    <url>%2F2018%2F12%2F13%2F%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%8B%E6%88%91%E5%B8%B8%E7%94%A8%E7%9A%84%E9%AB%98%E5%B9%B6%E5%8F%91%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[ÊàëÂçäÂπ¥ÂâçËøô‰∏™Â≠¶‰π†È°πÁõÆüëâ https://github.com/tengshe789/-miaosha üëàÂèàÊúâ‰∫∫ÁÇπËµû‰∫Ü23333ÔºåÁúãÊù•ÊäÄÊúØËøòÊ≤°Ê≠ª„ÄÇÈÇ£‰πà‰ªäÂ§©ÂàÜ‰∫´‰∏Ä‰∏ãËøô‰∏™ÁßíÊùÄÁ≥ªÁªü‰ΩøÁî®ÁöÑÊµãËØïÂ∑•ÂÖ∑~ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ PostmanËØ∑Ê±ÇÊ®°ÊãüÂ∑•ÂÖ∑‰∏ãËΩΩÂÆâË£ÖÊó•ÂêéÊõ¥Êñ∞ UI ‰ΩøÁî®ÊµãËØïÁïåÈù¢Âè≥‰æßÊúâ‰∏™ËìùËâ≤ÁöÑÂ∑®Â§ßÁöÑbuttonÔºå‰∏äÈù¢ÂÜôÁùÄsendÔºåÊóÅËæπÊúâÂêÑÁßçÂèÇÊï∞„ÄÇÊÉ≥ÊµãËØïÁöÑËØùÔºåÈÄâÊã©ËØ∑Ê±ÇÁ±ªÂûãÔºåËØ∑Ê±ÇÊï∞ÊçÆÁ≠âÁ≠âÔºåÁÇπÂáªsendÂ∞±Â•Ω„ÄÇ ÁéØÂ¢ÉÊúÄÂè≥‰∏äËßíÈΩøËΩÆÂΩ¢Áä∂ÁöÑÂõæÊ†áÔºåÊ∑ªÂä†‰Ω†ÈúÄË¶ÅÁöÑÈîÆÂíåÂÄº„ÄÇ ËÆøÈóÆÁöÑÊó∂ÂÄôÁõ¥Êé•‰ΩøÁî®/Êé•Âè£Â∞±Ë°å ÊµãËØïËÆ∞ÂΩï‰∏ÄÊ∏Ö‰∫åÊ•ö Êñ∞Â¢ûcollectionhistoryÊóÅËæπÊúâcollectionÔºåÂèØ‰ª•‰ΩøÁî®Âπ∂ÂèëÊµãËØï„ÄÇ Êñ∞Âª∫Â¶ÇÂõæÔºö IterationsÈÄâÊã©Âπ∂ÂèëÊ¨°Êï∞ÔºådelayÈÄâÊã©Âª∂ËøüÊó∂Èó¥„ÄÇ ÁªìÊûúÊàëÂ∞±‰∏çË¥¥Âõæ‰∫ÜÔºåÂ§ß‰ºôËá™Â∑±Êé¢Á¥¢Âêß„ÄÇ apache benchApacheBench ÊòØ Apache ÊúçÂä°Âô®Ëá™Â∏¶ÁöÑ‰∏Ä‰∏™webÂéãÂäõÊµãËØïÂ∑•ÂÖ∑ÔºåÁÆÄÁß∞ab„ÄÇabÂèàÊòØ‰∏Ä‰∏™ÂëΩ‰ª§Ë°åÂ∑•ÂÖ∑ÔºåÂØπÂèëËµ∑Ë¥üËΩΩÁöÑÊú¨Êú∫Ë¶ÅÊ±ÇÂæà‰ΩéÔºåÊ†πÊçÆabÂëΩ‰ª§ÂèØ‰ª•ÂàõÂª∫ÂæàÂ§öÁöÑÂπ∂ÂèëËÆøÈóÆÁ∫øÁ®ãÔºåÊ®°ÊãüÂ§ö‰∏™ËÆøÈóÆËÄÖÂêåÊó∂ÂØπÊüê‰∏ÄURLÂú∞ÂùÄËøõË°åËÆøÈóÆÔºåÂõ†Ê≠§ÂèØ‰ª•Áî®Êù•ÊµãËØïÁõÆÊ†áÊúçÂä°Âô®ÁöÑË¥üËΩΩÂéãÂäõ„ÄÇÊÄªÁöÑÊù•ËØ¥abÂ∑•ÂÖ∑Â∞èÂ∑ßÁÆÄÂçïÔºå‰∏äÊâãÂ≠¶‰π†ËæÉÂø´ÔºåÂèØ‰ª•Êèê‰æõÈúÄË¶ÅÁöÑÂü∫Êú¨ÊÄßËÉΩÊåáÊ†áÔºå‰ΩÜÊòØÊ≤°ÊúâÂõæÂΩ¢ÂåñÁªìÊûúÔºå‰∏çËÉΩÁõëÊéß„ÄÇ ‰∏ãËΩΩÂÆâË£Öhttps://www.cnblogs.com/Ryana/p/6279232.html ‰ΩøÁî®ËØ¥ËØ¥ÂëΩ‰ª§Âê´‰πâ ÊúÄÂºÄÂ§¥ÁöÑÂëΩ‰ª§abÊòØapache benchÁöÑÁº©ÂÜôÔºå‰ΩøÁî®‰ªñÂç≥ÊÑèÂë≥ÁùÄ‰ΩøÁî®Ëøô‰∏™ËΩØ‰ª∂ -nÂ∞±ÊòØnew‰∫Ü„ÄÇ ÂèÇÊï∞1000ÊòØÊµãËØïËØ∑Ê±ÇÊ¨°Êï∞ -cÂ∞±ÊòØConcurrencyÂπ∂ÂèëÔºåÂêéÈù¢ÁöÑÂèÇÊï∞50ÔºåÊòØÂêåÊó∂ÂÖÅËÆ∏ÁöÑËØ∑Ê±ÇÊï∞ ÁªìÊûúÂ¶Ç‰∏ãÂõæüëá ÁªìÊûú‰æùÊ¨°ÁöÑÂê´‰πâ‰∏∫Ôºö Âπ∂ÂèëÈáè50 Êï¥‰∏™ÊµãËØïÊâÄÁî®Êó∂Èó¥0.466 ÂÆåÊàêËØ∑Ê±ÇÊï∞1000 Â§±Ë¥•ËØ∑Ê±ÇÊï∞ÁõÆ0 ÊâÄÊúâËØ∑Ê±ÇÂìçÂ∫îÊï∞ÊçÆÁöÑÈïøÂ∫¶ÊÄªÂíåÔºàÂåÖÊã¨ÊâÄÊúâhttpÂ§¥ÈÉ®ÂíåÊ≠£ÊñáÊï∞ÊçÆÁöÑÈïøÂ∫¶Ôºå‰∏çÂåÖÊã¨httpËØ∑Ê±ÇÊï∞ÊçÆÁöÑÈïøÂ∫¶Ôºâ136000B HTMLÊ≠£ÊñáÊï∞ÊçÆÊÄªÈïøÂ∫¶4000B ÂêûÂêêÁéá(TPS)2144.47 Áî®Êà∑Âπ≥ÂùáËØ∑Ê±ÇÁ≠âÂæÖÊó∂Èó¥23.316ms ÊúçÂä°Âô®Âπ≥ÂùáËØ∑Ê±ÇÁ≠âÂæÖÊó∂Èó¥0.466 Âçï‰ΩçÊó∂Èó¥ÂÜÖÁöÑÊï∞ÊçÆÈïøÂ∫¶284.81 Apache JMeterApache JMeterÊòØApacheÁªÑÁªáÂºÄÂèëÁöÑÂü∫‰∫éJavaÁöÑÂéãÂäõÊµãËØïÂ∑•ÂÖ∑„ÄÇÁî®‰∫éÂØπËΩØ‰ª∂ÂÅöÂéãÂäõÊµãËØïÔºåÂÆÉÊúÄÂàùË¢´ËÆæËÆ°Áî®‰∫éWebÂ∫îÁî®ÊµãËØïÔºå‰ΩÜÂêéÊù•Êâ©Â±ïÂà∞ÂÖ∂‰ªñÊµãËØïÈ¢ÜÂüü„ÄÇ ÂÆÉÂèØ‰ª•Áî®‰∫éÊµãËØïÈùôÊÄÅÂíåÂä®ÊÄÅËµÑÊ∫êÔºå‰æãÂ¶ÇÈùôÊÄÅÊñá‰ª∂„ÄÅJava Â∞èÊúçÂä°Á®ãÂ∫è„ÄÅCGI ËÑöÊú¨„ÄÅJava ÂØπË±°„ÄÅÊï∞ÊçÆÂ∫ì„ÄÅFTP ÊúçÂä°Âô®Ôºå Á≠âÁ≠â„ÄÇJMeter ÂèØ‰ª•Áî®‰∫éÂØπÊúçÂä°Âô®„ÄÅÁΩëÁªúÊàñÂØπË±°Ê®°ÊãüÂ∑®Â§ßÁöÑË¥üËΩΩÔºåÊù•Ëá™‰∏çÂêåÂéãÂäõÁ±ªÂà´‰∏ãÊµãËØïÂÆÉ‰ª¨ÁöÑÂº∫Â∫¶ÂíåÂàÜÊûêÊï¥‰ΩìÊÄßËÉΩ„ÄÇÂè¶Â§ñÔºåJMeterËÉΩÂ§üÂØπÂ∫îÁî®Á®ãÂ∫èÂÅöÂäüËÉΩ/ÂõûÂΩíÊµãËØïÔºåÈÄöËøáÂàõÂª∫Â∏¶ÊúâÊñ≠Ë®ÄÁöÑËÑöÊú¨Êù•È™åËØÅ‰Ω†ÁöÑÁ®ãÂ∫èËøîÂõû‰∫Ü‰Ω†ÊúüÊúõÁöÑÁªìÊûú„ÄÇ‰∏∫‰∫ÜÊúÄÂ§ßÈôêÂ∫¶ÁöÑÁÅµÊ¥ªÊÄßÔºåJMeterÂÖÅËÆ∏‰ΩøÁî®Ê≠£ÂàôË°®ËææÂºèÂàõÂª∫Êñ≠Ë®Ä„ÄÇÔºàÂ§çÂà∂ÁöÑÁôæÂ∫¶ÁôæÁßëÁöÑ233üôÉÔºâ ‰∏ãËΩΩÂÆâË£Öhttps://jmeter.apache.org/ UI ‰ΩøÁî®Êñ∞Âª∫ÊµãËØïÂ¶ÇÂõæÔºåÂú®Âè≥‰æßÊñ∞Âª∫Á∫øÁ®ãÁªÑÔºåËá™Â∑±Âèñ‰∏™Âêç„ÄÇÁúãÂè≥‰æß„ÄÇ Á∫øÁ®ãÂ±ûÊÄßÁöÑÁ∫øÁ®ãÊï∞ÊòØ‰ª£Ë°®Â§öÂ∞ëÁî®Êà∑ËÆøÈóÆËøô‰∏™Á≥ªÁªü„ÄÇËøôÈáåË°®Á§∫Êúâ50‰∏™Áî®Êà∑ËÆøÈóÆÁ≥ªÁªü„ÄÇ Á¨¨‰∫åË°åR-U PÔºåÊòØËôöÊãüÁî®Êà∑Â¢ûÈïøÊó∂Èïø„ÄÇ‰∏ÄËà¨ÁöÑËØùÊó∂Èó¥ËÆæÁΩÆÊàêÊúÄÂêà‰πéÂ∏∏ËßÑÁöÑÔºåÁî®Êà∑Êï∞ÈáèÂ¢ûÈïøÊúÄÂø´ÁöÑÊó∂Èó¥ÊÆµ„ÄÇ Á¨¨‰∏âË°åÔºåÈªòËÆ§‰∏∫‰∏ÄÔºåÊÑèÊÄùÊòØ‰∏Ä‰∏™ËôöÊãüÁî®Êà∑ÈªòËÆ§ËøêË°åÂÆå‰∏ÄËæπÂêéÂ∞±ÂÅúÊ≠¢‰∫Ü„ÄÇÊóÅËæπÁöÑÊ°ÜÊ°ÜÔºåÊÑèÂë≥ÁùÄÊµãËØïËøêË°åËµ∑Êù•Â∞±Ê∞∏Ëøú‰∏çÂÅú‰∫Ü Êñ∞Âª∫httpËØ∑Ê±ÇÂõûÂà∞Â∑¶Ëæπ‰æßÊ†èÔºåÂè≥ÈîÆÁ∫øÁ®ãÁªÑÔºåÊñ∞Âª∫HTTPËØ∑Ê±Ç.Â¶ÇÂõæ Êñ∞Âª∫ÁõëÂê¨ÁõëÂê¨Â∞±ÊòØ‰ª•ÂõæË°®ÂΩ¢ÂºèË°®Áé∞Âá∫Êù•ÊµãËØïÁöÑÁªìÊûú„ÄÇ ÂÆåÂÖ®ÁâáÁªìÊùüÔºåËßâÂæóÊàëÂÜôÁöÑ‰∏çÈîôÔºüÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËµ∂Âø´ÊâìÂºÄÊàëÁöÑüëâ‰∏™‰∫∫ÂçöÂÆ¢ üëàÂêßÔºÅ Ë∞¢Ë∞¢‰Ω†ÈÇ£‰πàÂèØÁà±ÔºåËøò‰∏ÄÁõ¥ÂÖ≥Ê≥®ÁùÄÊàë~‚ù§üòù]]></content>
      <tags>
        <tag>Âπ∂Âèë</tag>
        <tag>ÂàÜ‰∫´</tag>
        <tag>ËΩØ‰ª∂ÊïôÂ≠¶</tag>
        <tag>Á™çÈó®</tag>
        <tag>ÊµãËØï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁúãPigÂºÄÊ∫êÈ°πÁõÆÁöÑ‰∫ëË∏©ÂùëËÆ∞]]></title>
    <url>%2F2018%2F12%2F12%2F%E5%86%B7%E5%86%B7Pig%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[ÊúÄËøëÁúãÂà∞‰∏Ä‰∏™ÊúâË∂£ÁöÑÂºÄÊ∫êÈ°πÁõÆpigÔºå‰∏ªË¶ÅÁöÑÊäÄÊúØÁÇπÂú®ËÆ§ËØÅÊéàÊùÉ‰∏≠ÂøÉÔºåspring security oauthÔºåzuulÁΩëÂÖ≥ÂÆûÁé∞ÔºåElastic-JobÂÆöÊó∂‰ªªÂä°ÔºåË∂ÅÁùÄÂàöÂàöÂÖ•Èó®ÂæÆÊúçÂä°ÔºåËµ∂Âø´ÂÜô‰∏™ÂçöÂÆ¢ÂàÜÊûê‰∏Ä‰∏ã„ÄÇÊ≠§ÁØáÊñáÁ´†‰∏ªË¶ÅÁî®‰∫é‰∏™‰∫∫Â§áÂøò„ÄÇÂ¶ÇÊûúÊúâ‰∏çÂØπÔºåËØ∑ÊâπËØÑ„ÄÇüò≠ Áî±‰∫éÊØè‰∏™Ê®°ÂùóÁØáÂπÖËæÉÈïøÔºå‰∏îÈÉ®ÂàÜÂÜÖÂÆπÂíåÂâçÊñáÊúâÈáçÂè†ÔºåÂπ≤Ë¥ßÂíåÂõæÁâáËæÉÂ∞ëÔºåÈòÖËØªÊó∂‰ΩøÁî®ÊóÅËæπÁöÑÂØºËà™ÂäüËÉΩ‰ΩìÈ™åËæÉ‰Ω≥„ÄÇüòâ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆhttps://blog.tengshe789.tech/ ËØ¥ÊòéÊú¨ÁØáÊñáÁ´†ÊòØÂØπÂü∫‰∫éspring boot1.5ÁöÑpig 1ÁâàÊú¨ÂÅöÁöÑÂàÜÊûêÔºå‰∏çÊòØÊî∂Ë¥πÁöÑpigx 2ÁâàÊú¨„ÄÇ ÂºÄÊ∫êÈ°πÁõÆÂú∞ÂùÄhttps://gitee.com/log4j/pig ÈÖçÁΩÆ‰∏≠ÂøÉÔºöhttps://gitee.com/cqzqxq_lxh/pig-config ÂÜ∑ÂÜ∑ÂÆòÊñπÂú∞ÂùÄhttps://pig4cloud.com/zh-cn/index.html ‰ΩìÈ™åÂú∞ÂùÄhttp://pigx.pig4cloud.com/#/wel/index È°πÁõÆÂêØÂä®È°∫Â∫èËØ∑Á°Æ‰øùÂêØÂä®È°∫Â∫èÔºàË¶ÅÂÖàÂêØÂä®ËÆ§ËØÅ‰∏≠ÂøÉÔºåÂÜçÂêØÂä®ÁΩëÂÖ≥Ôºâ eureka config auth gateway upms ËÆ§ËØÅ‰∏≠ÂøÉËÄÅËßÑÁü©ÔºåËá™‰∏äÂà∞‰∏ãÁúã‰ª£Á†ÅÔºåÂÖà‰ªéÊé•Âè£Â±ÇÁúãËµ∑ ËØ∑Ê±ÇrestÊé•Âè£1234567891011121314151617181920212223242526272829303132333435363738@RestController@RequestMapping("/authentication")public class AuthenticationController &#123; @Autowired @Qualifier("consumerTokenServices") private ConsumerTokenServices consumerTokenServices; /** * ËÆ§ËØÅÈ°µÈù¢ * @return ModelAndView */ @GetMapping("/require") public ModelAndView require() &#123; return new ModelAndView("ftl/login"); &#125; /** * Áî®Êà∑‰ø°ÊÅØÊ†°È™å * @param authentication ‰ø°ÊÅØ * @return Áî®Êà∑‰ø°ÊÅØ */ @RequestMapping("/user") public Object user(Authentication authentication) &#123; return authentication.getPrincipal(); &#125; /** * Ê∏ÖÈô§Redis‰∏≠ accesstoken refreshtoken * * @param accesstoken accesstoken * @return true/false */ @PostMapping("/removeToken") @CacheEvict(value = SecurityConstants.TOKEN_USER_DETAIL, key = "#accesstoken") public R&lt;Boolean&gt; removeToken(String accesstoken) &#123; return new R&lt;&gt;( consumerTokenServices.revokeToken(accesstoken)); &#125;&#125; Êé•Âè£Â±ÇÊúâ‰∏â‰∏™Êé•Âè£Ë∑ØÂæÑÔºåÁ¨¨‰∏Ä‰∏™Â∫îËØ•Ê≤°Áî®ÔºåÂâ©‰∏ã‰∏§‰∏™ÊòØÊ†°È™åÁî®Êà∑‰ø°ÊÅØÁöÑ/userÂíåÊ∏ÖÈô§Redis‰∏≠ accesstoken ‰∏érefreshtokenÁöÑ/removeToken Ê°ÜÊû∂ÈÖçÁΩÆÊ°ÜÊû∂ÈÖçÁΩÆ‰∏ãÈù¢ËøôÊÆµ‰ª£Á†ÅÊó∂ÈÖçÁΩÆÂêÑÁßçspring securityÈÖçÁΩÆÔºåÂåÖÊã¨ÁôªÈôÜÁïåÈù¢urlÊòØ&quot;/authentication/require&quot;Âï¶„ÄÇÂ¶ÇÊûú‰∏ç‰ΩøÁî®ÈªòËÆ§ÁöÑÂºπÂá∫Ê°ÜËÄå‰ΩøÁî®Ëá™Â∑±ÁöÑÈ°µÈù¢ÔºåË°®ÂçïÁöÑactionÊòØ&quot;/authentication/form&quot;Âï¶„ÄÇ‰ΩøÁî®Ëá™Â∑±ÂÆö‰πâÁöÑËøáÊª§ËßÑÂàôÂï¶„ÄÇÁ¶ÅÁî®csrfÂï¶ÔºàËá™Ë°åÊêúÁ¥¢csrfÔºåjwtÈ™åËØÅ‰∏çÈúÄË¶ÅÈò≤Ë∑®ÂüüÔºå‰ΩÜÊòØÈúÄË¶Å‰ΩøÁî®xssËøáÊª§Ôºâ„ÄÇ‰ΩøÁî®ÊâãÊú∫ÁôªÈôÜÈÖçÁΩÆÂï¶„ÄÇ 1234567891011121314151617181920212223@Order(SecurityProperties.ACCESS_OVERRIDE_ORDER - 1)@Configuration@EnableWebSecuritypublic class PigSecurityConfigurerAdapter extends WebSecurityConfigurerAdapter &#123; @Autowired private FilterIgnorePropertiesConfig filterIgnorePropertiesConfig; @Autowired private MobileSecurityConfigurer mobileSecurityConfigurer; @Override public void configure(HttpSecurity http) throws Exception &#123; ExpressionUrlAuthorizationConfigurer&lt;HttpSecurity&gt;.ExpressionInterceptUrlRegistry registry = http.formLogin().loginPage("/authentication/require") .loginProcessingUrl("/authentication/form") .and() .authorizeRequests(); filterIgnorePropertiesConfig.getUrls().forEach(url -&gt; registry.antMatchers(url).permitAll()); registry.anyRequest().authenticated() .and() .csrf().disable(); http.apply(mobileSecurityConfigurer); &#125;&#125; Ê†°È™åÁî®Êà∑‰ø°ÊÅØËØªÈÖçÁΩÆÁ±ªÂíåÊé•Âè£Â±ÇÔºåÊàë‰ª¨Áü•ÈÅì‰∫ÜÔºåÊÄªÁöÑÈÄªËæëÂ§ßÊ¶ÇÂ∞±ÊòØÁî®Êà∑ÁôªÈôÜ‰∫Ü‰ª•ÂêéÔºå‰ΩøÁî®spring securityÊ°ÜÊû∂ÁöÑËÆ§ËØÅÊù•Ëé∑ÂèñÊùÉÈôê„ÄÇ Êàë‰ª¨‰∏ÄÊ≠•‰∏ÄÊ≠•ÁúãÔºåËæπÁåúÊÉ≥ËæπÊù•„ÄÇÊé•Âè£Â§ÑÊúâ&quot;ftl/login&quot;ÔºåËøôÂ§ßÊ¶ÇÂ∞±ÊòØ‰ΩøÁî®freemarkerÊ®°ÊùøÔºålogin‰ø°ÊÅØÊê∫Â∏¶ÁöÑtoken‰ºö‰º†Âà∞Áî®Êà∑‰ø°ÊÅØÊ†°È™åurl&quot;/user&quot;‰∏äÔºåÂèØ‰ΩúËÄÖÁõ¥Êé•‰ΩøÁî®AuthenticationËøîÂõû‰∏Ä‰∏™getPrincipal()ÔºåÂ∞±Ê≤°‰∫ÜÔºåÊ†πÊú¨Ê≤°ÁúãËßÅËá™ÂÆö‰πâÁöÑ‰ª£Á†ÅÔºåËøôÊòØÊÄé‰πàÂõû‰∫ãÂë¢Ôºü ÂéüÊù•Ôºå‰ΩúËÄÖ‰ΩøÁî®spring securityÊ°ÜÊû∂Ôºå‰ΩøÁî®Ê°ÜÊû∂Êù•ÂÆûÁé∞Ê†°È™å‰ø°ÊÅØ„ÄÇ ÊâìÂç°configÂåÖ‰∏ãÁöÑPigAuthorizationConfigÔºåÊàë‰ª¨Êù•‰∏ÄÊé¢Á©∂Á´ü„ÄÇ ‰ΩøÁî®spring security ÂÆûÁé∞ ÊéàÊùÉÊúçÂä°Âô®Ê≥®ÊòéÔºåÈòÖËØªÊ≠§Â§ÑÊ®°ÂùóÈúÄË¶ÅOAUTHÂü∫Á°ÄÔºåhttps://blog.tengshe789.tech/2018/12/02/%E6%84%9F%E6%80%A7%E8%AE%A4%E8%AF%86jwt/#more ËøôÈáåÁÆÄÂçïÊèê‰∏Ä‰∏ãÔºåspring security oauthÈáåÊúâ‰∏§‰∏™Ê¶ÇÂøµÔºåÊéàÊùÉÊúçÂä°Âô®ÂíåËµÑÊ∫êÊúçÂä°Âô®„ÄÇ ÊéàÊùÉÊúçÂä°Âô®ÊòØÊ†πÊçÆÊéàÊùÉËÆ∏ÂèØÁªôËÆøÈóÆÁöÑÂÆ¢Êà∑Á´ØÂèëÊîæaccess token‰ª§ÁâåÁöÑÔºåÊèê‰æõËÆ§ËØÅ„ÄÅÊéàÊùÉÊúçÂä°Ôºõ ËµÑÊ∫êÊúçÂä°Âô®ÈúÄË¶ÅÈ™åËØÅËøô‰∏™access token,ÂÆ¢Êà∑Á´ØÊâçËÉΩËÆøÈóÆÂØπÂ∫îÊúçÂä°„ÄÇ ÂÆ¢Êà∑ËØ¶ÁªÜ‰ø°ÊÅØÊúçÂä°ÈÖçÁΩÆClientDetailsServiceConfigurer(AuthorizationServerConfigurer ÁöÑ‰∏Ä‰∏™ÂõûË∞ÉÈÖçÁΩÆÈ°π) ËÉΩÂ§ü‰ΩøÁî®ÂÜÖÂ≠òÊàñËÄÖJDBCÊù•ÂÆûÁé∞ÂÆ¢Êà∑Á´ØËØ¶ÊÉÖÊúçÂä°ÔºàClientDetailsServiceÔºâÔºåSpring Security OAuth2ÁöÑÈÖçÁΩÆÊñπÊ≥ïÊòØÁºñÂÜô@ConfigurationÁ±ªÁªßÊâøAuthorizationServerConfigurerAdapterÔºåÁÑ∂ÂêéÈáçÂÜôvoid configure(ClientDetailsServiceConfigurer clients)ÊñπÊ≥ï ‰∏ãÈù¢‰ª£Á†Å‰∏ªË¶ÅÈÄªËæëÊòØÔºå‰ΩøÁî®spring securityÊ°ÜÊû∂Â∞ÅË£ÖÁöÑÁÆÄÂçïsqlËøûÊé•Âô®ÔºåÊü•ËØ¢ÂÆ¢Êà∑Á´ØÁöÑËØ¶ÁªÜ‰ø°ÊÅØüëá 1234567@Override public void configure(` clients) throws Exception &#123; JdbcClientDetailsService clientDetailsService = new JdbcClientDetailsService(dataSource); clientDetailsService.setSelectClientDetailsSql(SecurityConstants.DEFAULT_SELECT_STATEMENT); clientDetailsService.setFindClientDetailsSql(SecurityConstants.DEFAULT_FIND_STATEMENT); clients.withClientDetails(clientDetailsService); &#125; Áõ∏ÂÖ≥ÁöÑsqlËØ≠Âè•Â¶Ç‰∏ãÔºåÁî±‰∫éËÄ¶ÂêàÂ∫¶ËæÉÂ§ßÔºåÊàëÂ∞ÜsqlÂ£∞ÊòéËØ≠Âè•Êîπ‰∫Ü‰∏ÄÊîπÔºåÊñπÈù¢ÈòÖËØªÔºö 123456789101112131415/** * ÈªòËÆ§ÁöÑÊü•ËØ¢ËØ≠Âè• */ String DEFAULT_FIND_STATEMENT = "select " + "client_id, client_secret, resource_ids, scope, " + "authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, " + "refresh_token_validity, additional_information, autoapprove" + " from sys_oauth_client_details" + " order by client_id"; /** * ÊåâÊù°‰ª∂client_id Êü•ËØ¢ */ String DEFAULT_SELECT_STATEMENT = "select " +"client_id, client_secret, resource_ids, scope, " + "authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, " + "refresh_token_validity, additional_information, autoapprove" + " from sys_oauth_client_details" + " where client_id = ?"; Áõ∏ÂÖ≥Êï∞ÊçÆÂ∫ì‰ø°ÊÅØÂ¶Ç‰∏ãÔºö ÊéàÊùÉÊúçÂä°Âô®Á´ØÁÇπÈÖçÁΩÆÂô®endpointsÂèÇÊï∞ÊòØ‰ªÄ‰πàÔºüÊâÄÊúâËé∑Âèñ‰ª§ÁâåÁöÑËØ∑Ê±ÇÈÉΩÂ∞Ü‰ºöÂú®Spring MVC controller endpoints‰∏≠ËøõË°åÂ§ÑÁêÜ 1234567891011121314@Override public void configure(AuthorizationServerEndpointsConfigurer endpoints) &#123; //tokenÂ¢ûÂº∫ÈÖçÁΩÆ TokenEnhancerChain tokenEnhancerChain = new TokenEnhancerChain(); tokenEnhancerChain.setTokenEnhancers( Arrays.asList(tokenEnhancer(), jwtAccessTokenConverter())); endpoints .tokenStore(redisTokenStore()) .tokenEnhancer(tokenEnhancerChain) .authenticationManager(authenticationManager) .reuseRefreshTokens(false) .userDetailsService(userDetailsService); &#125; tokenÂ¢ûÂº∫Âô®ÔºàËá™ÂÆö‰πâtoken‰ø°ÊÅØ‰∏≠Êê∫Â∏¶ÁöÑ‰ø°ÊÅØÔºâÊúâÊó∂ÂÄôÈúÄË¶ÅÈ¢ùÂ§ñÁöÑ‰ø°ÊÅØÂä†Âà∞tokenËøîÂõû‰∏≠ÔºåËøôÈÉ®ÂàÜ‰πüÂèØ‰ª•Ëá™ÂÆö‰πâÔºåÊ≠§Êó∂Êàë‰ª¨ÂèØ‰ª•Ëá™ÂÆö‰πâ‰∏Ä‰∏™TokenEnhancerÔºåÊù•Ëá™ÂÆö‰πâÁîüÊàêtokenÊê∫Â∏¶ÁöÑ‰ø°ÊÅØ„ÄÇTokenEnhancerÊé•Âè£Êèê‰æõ‰∏Ä‰∏™ enhance(OAuth2AccessToken var1, OAuth2Authentication var2) ÊñπÊ≥ïÔºåÁî®‰∫éÂØπtoken‰ø°ÊÅØÁöÑÊ∑ªÂä†Ôºå‰ø°ÊÅØÊù•Ê∫ê‰∫éOAuth2Authentication„ÄÇ ‰ΩúËÄÖÂ∞ÜÁîüÊàêÁöÑaccessToken‰∏≠ÔºåÂä†‰∏ä‰∫ÜËá™Â∑±ÁöÑÂêçÂ≠óÔºåÂä†‰∏ä‰∫ÜuserId 12345678910111213@Bean public TokenEnhancer tokenEnhancer() &#123; return (accessToken, authentication) -&gt; &#123; final Map&lt;String, Object&gt; additionalInfo = new HashMap&lt;&gt;(2); additionalInfo.put("license", SecurityConstants.PIG_LICENSE); UserDetailsImpl user = (UserDetailsImpl) authentication.getUserAuthentication().getPrincipal(); if (user != null) &#123; additionalInfo.put("userId", user.getUserId()); &#125; ((DefaultOAuth2AccessToken) accessToken).setAdditionalInformation(additionalInfo); return accessToken; &#125;; &#125; JWTËΩ¨Êç¢Âô®ÔºàËá™ÂÆö‰πâtoken‰ø°ÊÅØ‰∏≠Ê∑ªÂä†ÁöÑ‰ø°ÊÅØÔºâJWT‰∏≠ÔºåÈúÄË¶ÅÂú®token‰∏≠Êê∫Â∏¶È¢ùÂ§ñÁöÑ‰ø°ÊÅØÔºåËøôÊ†∑ÂèØ‰ª•Âú®ÊúçÂä°‰πãÈó¥ÂÖ±‰∫´ÈÉ®ÂàÜÁî®Êà∑‰ø°ÊÅØÔºåspring securityÈªòËÆ§Âú®JWTÁöÑtoken‰∏≠Âä†ÂÖ•‰∫Üuser_nameÔºåÂ¶ÇÊûúÊàë‰ª¨ÈúÄË¶ÅÈ¢ùÂ§ñÁöÑ‰ø°ÊÅØÔºåÈúÄË¶ÅËá™ÂÆö‰πâËøôÈÉ®ÂàÜÂÜÖÂÆπ„ÄÇ JwtAccessTokenConverterÊòØ‰ΩøÁî®JWTÊõøÊç¢ÈªòËÆ§ÁöÑTokenÁöÑËΩ¨Êç¢Âô®ÔºåËÄåtoken‰ª§ÁâåÈªòËÆ§ÊòØÊúâÁ≠æÂêçÁöÑÔºå‰∏îËµÑÊ∫êÊúçÂä°Âô®ÈúÄË¶ÅÈ™åËØÅËøô‰∏™Á≠æÂêç„ÄÇÊ≠§Â§ÑÁöÑÂä†ÂØÜÂèäÈ™åÁ≠æÂåÖÊã¨‰∏§ÁßçÊñπÂºèÔºö ÂØπÁß∞Âä†ÂØÜ ÈùûÂØπÁß∞Âä†ÂØÜÔºàÂÖ¨Èí•ÂØÜÈí•Ôºâ ÂØπÁß∞Âä†ÂØÜÈúÄË¶ÅÊéàÊùÉÊúçÂä°Âô®ÂíåËµÑÊ∫êÊúçÂä°Âô®Â≠òÂÇ®Âêå‰∏ÄkeyÂÄºÔºåËÄåÈùûÂØπÁß∞Âä†ÂØÜÂèØ‰ΩøÁî®ÂØÜÈí•Âä†ÂØÜÔºåÊö¥Èú≤ÂÖ¨Èí•ÁªôËµÑÊ∫êÊúçÂä°Âô®È™åÁ≠æ 12345678910111213141516171819 public class PigJwtAccessTokenConverter extends JwtAccessTokenConverter &#123; @Override public Map&lt;String, ?&gt; convertAccessToken(OAuth2AccessToken token, OAuth2Authentication authentication) &#123; Map&lt;String, Object&gt; representation = (Map&lt;String, Object&gt;) super.convertAccessToken(token, authentication); representation.put("license", SecurityConstants.PIG_LICENSE); return representation; &#125; @Override public OAuth2AccessToken extractAccessToken(String value, Map&lt;String, ?&gt; map) &#123; return super.extractAccessToken(value, map); &#125; @Override public OAuth2Authentication extractAuthentication(Map&lt;String, ?&gt; map) &#123; return super.extractAuthentication(map); &#125;&#125; redis‰∏étoken‰ΩøÁî®Èâ¥ÊùÉÁöÑendpointÂ∞ÜÂä†‰∏äËá™Â∑±ÂêçÂ≠óÁöÑtokenÊîæÂÖ•redisÔºåredisËøûÊé•Âô®Áî®ÁöÑsrping data redisÊ°ÜÊû∂ 1234567891011121314/** * tokenstore ÂÆöÂà∂ÂåñÂ§ÑÁêÜ * * @return TokenStore * 1. Â¶ÇÊûú‰ΩøÁî®ÁöÑ redis-cluster Ê®°ÂºèËØ∑‰ΩøÁî® PigRedisTokenStore * PigRedisTokenStore tokenStore = new PigRedisTokenStore(); * tokenStore.setRedisTemplate(redisTemplate); */ @Bean public TokenStore redisTokenStore() &#123; RedisTokenStore tokenStore = new RedisTokenStore(redisConnectionFactory); tokenStore.setPrefix(SecurityConstants.PIG_PREFIX); return tokenStore; &#125; ÊéàÊùÉÊúçÂä°Âô®ÂÆâÂÖ®ÈÖçÁΩÆÂô®1234567@Override public void configure(AuthorizationServerSecurityConfigurer security) throws Exception &#123; security .allowFormAuthenticationForClients() .tokenKeyAccess("isAuthenticated()") .checkTokenAccess("permitAll()"); &#125; Ëá™ÂÆö‰πâÂÆûÁé∞ÁöÑÊâãÊú∫Âè∑ ËÆ§ËØÅÊúçÂä°Êé•Âè£Â±ÇÂÖàÁúãÊé•Âè£Â±ÇÔºåËøôÈáåÂíåpig-upms-serviceËÅîÂä®ÔºåÁªô‰∫Ü‰∏â‰∏™Ë∑ØÂæÑÔºåÁî®Êà∑‰ΩøÁî®ÊâãÊú∫Âè∑Á†ÅÁôªÈôÜÂèØÈÄöËøá‰∏â‰∏™Ë∑ØÂæÑÂèëÈÄÅËØ∑Ê±Ç 12345678910111213141516171819202122232425262728@FeignClient(name = "pig-upms-service", fallback = UserServiceFallbackImpl.class)public interface UserService &#123; /** * ÈÄöËøáÁî®Êà∑ÂêçÊü•ËØ¢Áî®Êà∑„ÄÅËßíËâ≤‰ø°ÊÅØ * * @param username Áî®Êà∑Âêç * @return UserVo */ @GetMapping("/user/findUserByUsername/&#123;username&#125;") UserVO findUserByUsername(@PathVariable("username") String username); /** * ÈÄöËøáÊâãÊú∫Âè∑Êü•ËØ¢Áî®Êà∑„ÄÅËßíËâ≤‰ø°ÊÅØ * * @param mobile ÊâãÊú∫Âè∑ * @return UserVo */ @GetMapping("/user/findUserByMobile/&#123;mobile&#125;") UserVO findUserByMobile(@PathVariable("mobile") String mobile); /** * Ê†πÊçÆOpenIdÊü•ËØ¢Áî®Êà∑‰ø°ÊÅØ * @param openId openId * @return UserVo */ @GetMapping("/user/findUserByOpenId/&#123;openId&#125;") UserVO findUserByOpenId(@PathVariable("openId") String openId);&#125; ÈÖçÁΩÆÁ±ªÈáçÂÜôSecurityConfigurerAdapterÁöÑÊñπÊ≥ïÔºåÈÄöËøáhttpËØ∑Ê±ÇÔºåÊâæÂá∫ÊúâÂÖ≥ÊâãÊú∫Âè∑ÁöÑtokenÔºåÁî®tokenÊâæÂá∫Áõ∏ÂÖ≥Áî®Êà∑ÁöÑ‰ø°ÊÅØÔºåÂ∑≤AuthenticationÊñπÂºè‰øùÂ≠ò„ÄÇÊãøÂà∞‰ø°ÊÅØÂêéÔºå‰ΩøÁî®ËøáÊª§Âô®È™åËØÅ 12345678910111213141516171819@Componentpublic class MobileSecurityConfigurer extends SecurityConfigurerAdapter&lt;DefaultSecurityFilterChain, HttpSecurity&gt; &#123; @Autowired private AuthenticationSuccessHandler mobileLoginSuccessHandler; @Autowired private UserService userService; @Override public void configure(HttpSecurity http) throws Exception &#123; MobileAuthenticationFilter mobileAuthenticationFilter = new MobileAuthenticationFilter(); mobileAuthenticationFilter.setAuthenticationManager(http.getSharedObject(AuthenticationManager.class)); mobileAuthenticationFilter.setAuthenticationSuccessHandler(mobileLoginSuccessHandler); MobileAuthenticationProvider mobileAuthenticationProvider = new MobileAuthenticationProvider(); mobileAuthenticationProvider.setUserService(userService); http.authenticationProvider(mobileAuthenticationProvider) .addFilterAfter(mobileAuthenticationFilter, UsernamePasswordAuthenticationFilter.class); &#125;&#125; ÊâãÊú∫Âè∑ÁôªÂΩïÊ†°È™åÈÄªËæëMobileAuthenticationProviderÂú®spring security ‰∏≠ÔºåAuthenticationManageÁÆ°ÁêÜ‰∏ÄÁ≥ªÂàóÁöÑAuthenticationProviderÔºåËÄåÊØè‰∏Ä‰∏™ProviderÈÉΩ‰ºöÈÄöUserDetailsServiceÂíåUserDetailÊù•ËøîÂõû‰∏Ä‰∏™‰ª•MobileAuthenticationTokenÂÆûÁé∞ÁöÑÂ∏¶Áî®Êà∑‰ª•ÂèäÊùÉÈôêÁöÑAuthentication Ê≠§Â§ÑÈÄªËæëÊòØÔºåÈÄöËøáUserServiceÊü•ÊâæÂ∑≤ÊúâÁî®Êà∑ÁöÑÊâãÊú∫Âè∑Á†ÅÔºåÁîüÊàêÂØπÂ∫îÁöÑUserDetails,‰ΩøÁî®UserDetailsÁîüÊàêÊâãÊú∫È™åËØÅAuthentication 123456789101112131415161718192021222324@Override public Authentication authenticate(Authentication authentication) throws AuthenticationException &#123; MobileAuthenticationToken mobileAuthenticationToken = (MobileAuthenticationToken) authentication; UserVO userVo = userService.findUserByMobile((String) mobileAuthenticationToken.getPrincipal()); if (userVo == null) &#123; throw new UsernameNotFoundException("ÊâãÊú∫Âè∑‰∏çÂ≠òÂú®:" + mobileAuthenticationToken.getPrincipal()); &#125; UserDetailsImpl userDetails = buildUserDeatils(userVo); MobileAuthenticationToken authenticationToken = new MobileAuthenticationToken(userDetails, userDetails.getAuthorities()); authenticationToken.setDetails(mobileAuthenticationToken.getDetails()); return authenticationToken; &#125; private UserDetailsImpl buildUserDeatils(UserVO userVo) &#123; return new UserDetailsImpl(userVo); &#125; @Override public boolean supports(Class&lt;?&gt; authentication) &#123; return MobileAuthenticationToken.class.isAssignableFrom(authentication); &#125; ÊâãÊú∫Âè∑ÁôªÂΩï‰ª§ÁâåÁ±ªMobileAuthenticationTokenMobileAuthenticationTokenÁªßÊâøAbstractAuthenticationTokenÂÆûÁé∞AuthenticationÊâÄ‰ª•ÂΩìÂú®È°µÈù¢‰∏≠ËæìÂÖ•ÊâãÊú∫‰πãÂêéÈ¶ñÂÖà‰ºöËøõÂÖ•Âà∞MobileAuthenticationTokenÈ™åËØÅ(Authentication)ÔºåÁÑ∂ÂêéÁîüÊàêÁöÑAuthentication‰ºöË¢´‰∫§Áî±Êàë‰∏äÈù¢ËØ¥ÁöÑAuthenticationManagerÊù•ËøõË°åÁÆ°ÁêÜ 1234567891011121314151617181920212223242526272829303132333435363738394041424344public class MobileAuthenticationToken extends AbstractAuthenticationToken &#123; private static final long serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID; private final Object principal; public MobileAuthenticationToken(String mobile) &#123; super(null); this.principal = mobile; setAuthenticated(false); &#125; public MobileAuthenticationToken(Object principal, Collection&lt;? extends GrantedAuthority&gt; authorities) &#123; super(authorities); this.principal = principal; super.setAuthenticated(true); &#125; @Override public Object getPrincipal() &#123; return this.principal; &#125; @Override public Object getCredentials() &#123; return null; &#125; @Override public void setAuthenticated(boolean isAuthenticated) throws IllegalArgumentException &#123; if (isAuthenticated) &#123; throw new IllegalArgumentException( "Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead"); &#125; super.setAuthenticated(false); &#125; @Override public void eraseCredentials() &#123; super.eraseCredentials(); &#125;&#125; ÊâãÊú∫Âè∑ÁôªÂΩïÈ™åËØÅfilterÂà§Êñ≠httpËØ∑Ê±ÇÊòØÂê¶ÊòØpostÔºå‰∏çÊòØÂàôËøîÂõûÈîôËØØ„ÄÇ Ê†πÊçÆrequestËØ∑Ê±ÇÊãøÂà∞moblie‰ø°ÊÅØÔºå‰ΩøÁî®moblie‰ø°ÊÅØËøîÂõûÊâãÊú∫Âè∑Á†ÅÁôªÈôÜÊàêÂäüÁöÑoauth token„ÄÇ 12345678910111213141516171819202122@Override public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response) throws AuthenticationException &#123; if (postOnly &amp;&amp; !request.getMethod().equals(HttpMethod.POST.name())) &#123; throw new AuthenticationServiceException( "Authentication method not supported: " + request.getMethod()); &#125; String mobile = obtainMobile(request); if (mobile == null) &#123; mobile = ""; &#125; mobile = mobile.trim(); MobileAuthenticationToken mobileAuthenticationToken = new MobileAuthenticationToken(mobile); setDetails(request, mobileAuthenticationToken); return this.getAuthenticationManager().authenticate(mobileAuthenticationToken); &#125; ÊâãÊú∫ÁôªÈôÜÊàêÂäüÁöÑÂ§ÑÁêÜÂô®MobileLoginSuccessHandlerËøô‰∏™Â§ÑÁêÜÂô®ÂèØ‰ª•ËøîÂõûÊâãÊú∫Âè∑ÁôªÂΩïÊàêÂäüÁöÑoauth tokenÔºå‰ΩÜÊòØË¶ÅÂ∞Üoauth token‰º†ËæìÂá∫ÂéªÂøÖÈ°ªÈÖçÂêà‰∏äÈù¢ÁöÑÊâãÊú∫Âè∑ÁôªÂΩïÈ™åËØÅfilter ÈÄªËæëÈÉΩÂú®Ê≥®Èáä‰∏≠ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667@Override public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) &#123; String header = request.getHeader("Authorization"); if (header == null || !header.startsWith(BASIC_)) &#123; throw new UnapprovedClientAuthenticationException("ËØ∑Ê±ÇÂ§¥‰∏≠client‰ø°ÊÅØ‰∏∫Á©∫"); &#125; try &#123; String[] tokens = AuthUtils.extractAndDecodeHeader(header); assert tokens.length == 2; String clientId = tokens[0]; ClientDetails clientDetails = clientDetailsService.loadClientByClientId(clientId); //Ê†°È™åsecret if (!clientDetails.getClientSecret().equals(tokens[1])) &#123; throw new InvalidClientException("Given client ID does not match authenticated client"); &#125; TokenRequest tokenRequest = new TokenRequest(MapUtil.newHashMap(), clientId, clientDetails.getScope(), "mobile"); //Ê†°È™åscope new DefaultOAuth2RequestValidator().validateScope(tokenRequest, clientDetails); OAuth2Request oAuth2Request = tokenRequest.createOAuth2Request(clientDetails); OAuth2Authentication oAuth2Authentication = new OAuth2Authentication(oAuth2Request, authentication); OAuth2AccessToken oAuth2AccessToken = authorizationServerTokenServices.createAccessToken(oAuth2Authentication); log.info("Ëé∑Âèñtoken ÊàêÂäüÔºö&#123;&#125;", oAuth2AccessToken.getValue()); response.setCharacterEncoding(CommonConstant.UTF8); response.setContentType(CommonConstant.CONTENT_TYPE); PrintWriter printWriter = response.getWriter(); printWriter.append(objectMapper.writeValueAsString(oAuth2AccessToken)); &#125; catch (IOException e) &#123; throw new BadCredentialsException( "Failed to decode basic authentication token"); &#125; &#125;/** * ‰ªéheader ËØ∑Ê±Ç‰∏≠ÁöÑclientId/clientsecect * * @param header header‰∏≠ÁöÑÂèÇÊï∞ * @throws CheckedException if the Basic header is not present or is not valid * Base64 */ public static String[] extractAndDecodeHeader(String header) throws IOException &#123; byte[] base64Token = header.substring(6).getBytes("UTF-8"); byte[] decoded; try &#123; decoded = Base64.decode(base64Token); &#125; catch (IllegalArgumentException e) &#123; throw new CheckedException( "Failed to decode basic authentication token"); &#125; String token = new String(decoded, CommonConstant.UTF8); int delim = token.indexOf(":"); if (delim == -1) &#123; throw new CheckedException("Invalid basic authentication token"); &#125; return new String[]&#123;token.substring(0, delim), token.substring(delim + 1)&#125;; &#125; ÂÖ∂‰ªñÈÖçÁΩÆredisÈõÜÁæ§Êå∫Â•ΩÁöÑÊ®°ÊùøÔºåÊî∂Ëóè‰∏Ä‰∏ã 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196public class PigRedisTokenStore implements TokenStore &#123; private static final String ACCESS = "access:"; private static final String AUTH_TO_ACCESS = "auth_to_access:"; private static final String AUTH = "auth:"; private static final String REFRESH_AUTH = "refresh_auth:"; private static final String ACCESS_TO_REFRESH = "access_to_refresh:"; private static final String REFRESH = "refresh:"; private static final String REFRESH_TO_ACCESS = "refresh_to_access:"; private static final String CLIENT_ID_TO_ACCESS = "client_id_to_access:"; private static final String UNAME_TO_ACCESS = "uname_to_access:"; private RedisTemplate&lt;String, Object&gt; redisTemplate; public RedisTemplate&lt;String, Object&gt; getRedisTemplate() &#123; return redisTemplate; &#125; public void setRedisTemplate(RedisTemplate&lt;String, Object&gt; redisTemplate) &#123; this.redisTemplate = redisTemplate; &#125; private AuthenticationKeyGenerator authenticationKeyGenerator = new DefaultAuthenticationKeyGenerator(); public void setAuthenticationKeyGenerator(AuthenticationKeyGenerator authenticationKeyGenerator) &#123; this.authenticationKeyGenerator = authenticationKeyGenerator; &#125; @Override public OAuth2AccessToken getAccessToken(OAuth2Authentication authentication) &#123; String key = authenticationKeyGenerator.extractKey(authentication); OAuth2AccessToken accessToken = (OAuth2AccessToken) redisTemplate.opsForValue().get(AUTH_TO_ACCESS + key); if (accessToken != null &amp;&amp; !key.equals(authenticationKeyGenerator.extractKey(readAuthentication(accessToken.getValue())))) &#123; storeAccessToken(accessToken, authentication); &#125; return accessToken; &#125; @Override public OAuth2Authentication readAuthentication(OAuth2AccessToken token) &#123; return readAuthentication(token.getValue()); &#125; @Override public OAuth2Authentication readAuthentication(String token) &#123; return (OAuth2Authentication) this.redisTemplate.opsForValue().get(AUTH + token); &#125; @Override public OAuth2Authentication readAuthenticationForRefreshToken(OAuth2RefreshToken token) &#123; return readAuthenticationForRefreshToken(token.getValue()); &#125; public OAuth2Authentication readAuthenticationForRefreshToken(String token) &#123; return (OAuth2Authentication) this.redisTemplate.opsForValue().get(REFRESH_AUTH + token); &#125; @Override public void storeAccessToken(OAuth2AccessToken token, OAuth2Authentication authentication) &#123; this.redisTemplate.opsForValue().set(ACCESS + token.getValue(), token); this.redisTemplate.opsForValue().set(AUTH + token.getValue(), authentication); this.redisTemplate.opsForValue().set(AUTH_TO_ACCESS + authenticationKeyGenerator.extractKey(authentication), token); if (!authentication.isClientOnly()) &#123; redisTemplate.opsForList().rightPush(UNAME_TO_ACCESS + getApprovalKey(authentication), token); &#125; redisTemplate.opsForList().rightPush(CLIENT_ID_TO_ACCESS + authentication.getOAuth2Request().getClientId(), token); if (token.getExpiration() != null) &#123; int seconds = token.getExpiresIn(); redisTemplate.expire(ACCESS + token.getValue(), seconds, TimeUnit.SECONDS); redisTemplate.expire(AUTH + token.getValue(), seconds, TimeUnit.SECONDS); redisTemplate.expire(AUTH_TO_ACCESS + authenticationKeyGenerator.extractKey(authentication), seconds, TimeUnit.SECONDS); redisTemplate.expire(CLIENT_ID_TO_ACCESS + authentication.getOAuth2Request().getClientId(), seconds, TimeUnit.SECONDS); redisTemplate.expire(UNAME_TO_ACCESS + getApprovalKey(authentication), seconds, TimeUnit.SECONDS); &#125; if (token.getRefreshToken() != null &amp;&amp; token.getRefreshToken().getValue() != null) &#123; this.redisTemplate.opsForValue().set(REFRESH_TO_ACCESS + token.getRefreshToken().getValue(), token.getValue()); this.redisTemplate.opsForValue().set(ACCESS_TO_REFRESH + token.getValue(), token.getRefreshToken().getValue()); &#125; &#125; private String getApprovalKey(OAuth2Authentication authentication) &#123; String userName = authentication.getUserAuthentication() == null ? "" : authentication.getUserAuthentication() .getName(); return getApprovalKey(authentication.getOAuth2Request().getClientId(), userName); &#125; private String getApprovalKey(String clientId, String userName) &#123; return clientId + (userName == null ? "" : ":" + userName); &#125; @Override public void removeAccessToken(OAuth2AccessToken accessToken) &#123; removeAccessToken(accessToken.getValue()); &#125; @Override public OAuth2AccessToken readAccessToken(String tokenValue) &#123; return (OAuth2AccessToken) this.redisTemplate.opsForValue().get(ACCESS + tokenValue); &#125; public void removeAccessToken(String tokenValue) &#123; OAuth2AccessToken removed = (OAuth2AccessToken) redisTemplate.opsForValue().get(ACCESS + tokenValue); // caller to do that OAuth2Authentication authentication = (OAuth2Authentication) this.redisTemplate.opsForValue().get(AUTH + tokenValue); this.redisTemplate.delete(AUTH + tokenValue); redisTemplate.delete(ACCESS + tokenValue); this.redisTemplate.delete(ACCESS_TO_REFRESH + tokenValue); if (authentication != null) &#123; this.redisTemplate.delete(AUTH_TO_ACCESS + authenticationKeyGenerator.extractKey(authentication)); String clientId = authentication.getOAuth2Request().getClientId(); redisTemplate.opsForList().leftPop(UNAME_TO_ACCESS + getApprovalKey(clientId, authentication.getName())); redisTemplate.opsForList().leftPop(CLIENT_ID_TO_ACCESS + clientId); this.redisTemplate.delete(AUTH_TO_ACCESS + authenticationKeyGenerator.extractKey(authentication)); &#125; &#125; @Override public void storeRefreshToken(OAuth2RefreshToken refreshToken, OAuth2Authentication authentication) &#123; this.redisTemplate.opsForValue().set(REFRESH + refreshToken.getValue(), refreshToken); this.redisTemplate.opsForValue().set(REFRESH_AUTH + refreshToken.getValue(), authentication); &#125; @Override public OAuth2RefreshToken readRefreshToken(String tokenValue) &#123; return (OAuth2RefreshToken) this.redisTemplate.opsForValue().get(REFRESH + tokenValue); &#125; @Override public void removeRefreshToken(OAuth2RefreshToken refreshToken) &#123; removeRefreshToken(refreshToken.getValue()); &#125; public void removeRefreshToken(String tokenValue) &#123; this.redisTemplate.delete(REFRESH + tokenValue); this.redisTemplate.delete(REFRESH_AUTH + tokenValue); this.redisTemplate.delete(REFRESH_TO_ACCESS + tokenValue); &#125; @Override public void removeAccessTokenUsingRefreshToken(OAuth2RefreshToken refreshToken) &#123; removeAccessTokenUsingRefreshToken(refreshToken.getValue()); &#125; private void removeAccessTokenUsingRefreshToken(String refreshToken) &#123; String token = (String) this.redisTemplate.opsForValue().get(REFRESH_TO_ACCESS + refreshToken); if (token != null) &#123; redisTemplate.delete(ACCESS + token); &#125; &#125; @Override public Collection&lt;OAuth2AccessToken&gt; findTokensByClientIdAndUserName(String clientId, String userName) &#123; List&lt;Object&gt; result = redisTemplate.opsForList().range(UNAME_TO_ACCESS + getApprovalKey(clientId, userName), 0, -1); if (result == null || result.size() == 0) &#123; return Collections.emptySet(); &#125; List&lt;OAuth2AccessToken&gt; accessTokens = new ArrayList&lt;&gt;(result.size()); for (Iterator&lt;Object&gt; it = result.iterator(); it.hasNext(); ) &#123; OAuth2AccessToken accessToken = (OAuth2AccessToken) it.next(); accessTokens.add(accessToken); &#125; return Collections.unmodifiableCollection(accessTokens); &#125; @Override public Collection&lt;OAuth2AccessToken&gt; findTokensByClientId(String clientId) &#123; List&lt;Object&gt; result = redisTemplate.opsForList().range((CLIENT_ID_TO_ACCESS + clientId), 0, -1); if (result == null || result.size() == 0) &#123; return Collections.emptySet(); &#125; List&lt;OAuth2AccessToken&gt; accessTokens = new ArrayList&lt;&gt;(result.size()); for (Iterator&lt;Object&gt; it = result.iterator(); it.hasNext(); ) &#123; OAuth2AccessToken accessToken = (OAuth2AccessToken) it.next(); accessTokens.add(accessToken); &#125; return Collections.unmodifiableCollection(accessTokens); &#125;&#125; ÊúçÂä°ÁΩëÂÖ≥Ê®°ÂùóÁΩëÂÖ≥‰∏ª‰ΩìÂú®ÂåÖpig\pig-gateway\src\main\java\com\github\pig\gateway‰∏ã ‰ΩúËÄÖ‰ΩøÁî®‰∫ÜZuulÂÅö‰∏∫ÁΩëÂÖ≥ÔºåÂÆÉNetflixÂºÄÊ∫êÁöÑÂæÆÊúçÂä°ÁΩëÂÖ≥ÔºåÂèØ‰ª•ÂíåEureka,Ribbon,HystrixÁ≠âÁªÑ‰ª∂ÈÖçÂêà‰ΩøÁî®„ÄÇ ZuulÁªÑ‰ª∂ÁöÑÊ†∏ÂøÉÊòØ‰∏ÄÁ≥ªÂàóÁöÑËøáÊª§Âô®ÔºåËøô‰∫õËøáÊª§Âô®ÂèØ‰ª•ÂÆåÊàê‰ª•‰∏ãÂäüËÉΩÔºö Ë∫´‰ªΩËÆ§ËØÅÂíåÂÆâÂÖ®: ËØÜÂà´ÊØè‰∏Ä‰∏™ËµÑÊ∫êÁöÑÈ™åËØÅË¶ÅÊ±ÇÔºåÂπ∂ÊãíÁªùÈÇ£‰∫õ‰∏çÁ¨¶ÁöÑËØ∑Ê±Ç ÂÆ°Êü•‰∏éÁõëÊéßÔºö Âä®ÊÄÅË∑ØÁî±ÔºöÂä®ÊÄÅÂ∞ÜËØ∑Ê±ÇË∑ØÁî±Âà∞‰∏çÂêåÂêéÁ´ØÈõÜÁæ§ ÂéãÂäõÊµãËØïÔºöÈÄêÊ∏êÂ¢ûÂä†ÊåáÂêëÈõÜÁæ§ÁöÑÊµÅÈáèÔºå‰ª•‰∫ÜËß£ÊÄßËÉΩ Ë¥üËΩΩÂàÜÈÖçÔºö‰∏∫ÊØè‰∏ÄÁßçË¥üËΩΩÁ±ªÂûãÂàÜÈÖçÂØπÂ∫îÂÆπÈáèÔºåÂπ∂ÂºÉÁî®Ë∂ÖÂá∫ÈôêÂÆöÂÄºÁöÑËØ∑Ê±Ç ÈùôÊÄÅÂìçÂ∫îÂ§ÑÁêÜÔºöËæπÁºò‰ΩçÁΩÆËøõË°åÂìçÂ∫îÔºåÈÅøÂÖçËΩ¨ÂèëÂà∞ÂÜÖÈÉ®ÈõÜÁæ§ Â§öÂå∫ÂüüÂºπÊÄßÔºöË∑®ÂüüAWS RegionËøõË°åËØ∑Ê±ÇË∑ØÁî±ÔºåÊó®Âú®ÂÆûÁé∞ELB(ElasticLoad Balancing)‰ΩøÁî®Â§öÊ†∑Âåñ Â§öÁßçÂäüËÉΩÁöÑËøáÊª§Âô®ËøáÊª§Âô®ZuulÁªÑ‰ª∂ÁöÑÊ†∏ÂøÉÊòØ‰∏ÄÁ≥ªÂàóÁöÑËøáÊª§Âô®ÔºåÊàë‰ª¨ÂÖà‰ªéËøáÊª§Âô®‰∏ãÊâã„ÄÇ ÁΩëÂÖ≥Áªü‰∏ÄÂºÇÂ∏∏ËøáÊª§Âô®123456789101112131415161718192021222324@Componentpublic class ErrorHandlerFilter extends ZuulFilter &#123; @Autowired private LogSendService logSendService; @Override public String filterType() &#123; return ERROR_TYPE; &#125; @Override public int filterOrder() &#123; return SEND_RESPONSE_FILTER_ORDER + 1; &#125; @Override public boolean shouldFilter() &#123; RequestContext requestContext = RequestContext.getCurrentContext(); return requestContext.getThrowable() != null; &#125; @Override public Object run() &#123; RequestContext requestContext = RequestContext.getCurrentContext(); logSendService.send(requestContext); return null; &#125;&#125; ‰ΩúËÄÖ‰ª•ÂéüÁîüzuulËøáÊª§Âô®‰∏∫Âü∫Á°ÄÂä†‰∫ÜÊó•ÂøóÈÖçÁΩÆ,‰ºòÂÖàÁ∫ß‰∏∫+1ÔºåÊï∞Â≠óË∂äÂ§ß‰ºòÂÖàÁ∫ßË∂ä‰Ωé„ÄÇ XSSËøáÊª§Âô®123456public class XssSecurityFilter extends OncePerRequestFilter &#123; @Override protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException &#123; XssHttpServletRequestWrapper xssRequest = new XssHttpServletRequestWrapper(request); filterChain.doFilter(xssRequest, response); &#125; ÈáçÂÜôspringMVCÈáåÈù¢ÁöÑÁöÑÁ°Æ‰øùÂú®‰∏ÄÊ¨°ËØ∑Ê±ÇÂè™ÈÄöËøá‰∏ÄÊ¨°filterÁöÑÁ±ªOncePerRequestFilterÔºåÊ∑ªÂä†‰∏ÄÊù°https://gitee.com/renrenio/renren-fastÁöÑÂ∑•ÂÖ∑Á±ª`XssHttpServletRequestWrapper`‰∏∫ËøáÊª§ÈìæÊù°„ÄÇ 1234567891011@Override public ServletInputStream getInputStream() throws IOException &#123;¬∑¬∑¬∑¬∑Áï• //xssËøáÊª§ json = xssEncode(json); final ByteArrayInputStream bis = new ByteArrayInputStream(json.getBytes("utf-8")); return new ServletInputStream() &#123;¬∑¬∑¬∑Áï• &#125; &#125;; &#125; ÂØÜÁ†ÅËøáÊª§Âô®DecodePasswordFilterÊ≠§ËøáÊª§Âô®‰ºòÂÖàÁ∫ß‰∏∫+2.ÊØèÂΩì‰∏Ä‰∏™ËØ∑Ê±Ç‰∏çÊòØËØ∑Ê±Ç/oauth/tokenÊàñËÄÖ/mobile/tokenËøô‰∏™Âú∞ÂùÄÊó∂ÔºåÈÉΩ‰ºöËß£Êûê‰ΩøÁî®aesËß£Á†ÅÂô®password„ÄÇ 12345678910111213141516171819202122232425@Override public Object run() &#123; RequestContext ctx = RequestContext.getCurrentContext(); Map&lt;String, List&lt;String&gt;&gt; params = ctx.getRequestQueryParams(); if (params == null) &#123; return null; &#125; List&lt;String&gt; passList = params.get(PASSWORD); if (CollUtil.isEmpty(passList)) &#123; return null; &#125; String password = passList.get(0); if (StrUtil.isNotBlank(password)) &#123; try &#123; password = decryptAES(password, key); &#125; catch (Exception e) &#123; log.error("ÂØÜÁ†ÅËß£ÂØÜÂ§±Ë¥•:&#123;&#125;", password); &#125; params.put(PASSWORD, CollUtil.newArrayList(password.trim())); &#125; ctx.setRequestQueryParams(params); return null; &#125; Ê†°È™åÁ†ÅËøáÊª§Âô®ValidateCodeFilterÈÄªËæë‰ΩúËÄÖÈÉΩÂÜôÂú®Ê≥®Èáä‰∏≠‰∫ÜÔºåÊ≠§Â§Ñ‰ΩøÁî®‰∫ÜredisÂÅö‰∏∫ÊúçÂä°Á´ØÈ™åËØÅÁ†ÅÁöÑÁºìÂ≠ò 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192** * ÊòØÂê¶Ê†°È™åÈ™åËØÅÁ†Å * 1. Âà§Êñ≠È™åËØÅÁ†ÅÂºÄÂÖ≥ÊòØÂê¶ÂºÄÂêØ * 2. Âà§Êñ≠ËØ∑Ê±ÇÊòØÂê¶ÁôªÂΩïËØ∑Ê±Ç * 2.1 Âà§Êñ≠ÊòØ‰∏çÊòØÂà∑Êñ∞ËØ∑Ê±Ç(‰∏çÁî®ÂçïÁã¨Âú®Âª∫Á´ãÂà∑Êñ∞ÂÆ¢Êà∑Á´Ø) * 3. Âà§Êñ≠ÁªàÁ´ØÊòØÂê¶ÊîØÊåÅ * * @return true/false */ @Override public boolean shouldFilter() &#123; HttpServletRequest request = RequestContext.getCurrentContext().getRequest(); if (!StrUtil.containsAnyIgnoreCase(request.getRequestURI(), SecurityConstants.OAUTH_TOKEN_URL, SecurityConstants.MOBILE_TOKEN_URL)) &#123; return false; &#125; if (SecurityConstants.REFRESH_TOKEN.equals(request.getParameter(GRANT_TYPE))) &#123; return false; &#125; try &#123; String[] clientInfos = AuthUtils.extractAndDecodeHeader(request); if (CollUtil.containsAny(filterIgnorePropertiesConfig.getClients(), Arrays.asList(clientInfos))) &#123; return false; &#125; &#125; catch (IOException e) &#123; log.error("Ëß£ÊûêÁªàÁ´Ø‰ø°ÊÅØÂ§±Ë¥•", e); &#125; return true; &#125; @Override public Object run() &#123; try &#123; checkCode(RequestContext.getCurrentContext().getRequest()); &#125; catch (ValidateCodeException e) &#123; RequestContext ctx = RequestContext.getCurrentContext(); R&lt;String&gt; result = new R&lt;&gt;(e); result.setCode(478); ctx.setResponseStatusCode(478); ctx.setSendZuulResponse(false); ctx.getResponse().setContentType("application/json;charset=UTF-8"); ctx.setResponseBody(JSONObject.toJSONString(result)); &#125; return null; &#125; /** * Ê£ÄÊü•code * * @param httpServletRequest request * @throws ValidateCodeException È™åËØÅÁ†ÅÊ†°È™åÂºÇÂ∏∏ */ private void checkCode(HttpServletRequest httpServletRequest) throws ValidateCodeException &#123; String code = httpServletRequest.getParameter("code"); if (StrUtil.isBlank(code)) &#123; throw new ValidateCodeException("ËØ∑ËæìÂÖ•È™åËØÅÁ†Å"); &#125; String randomStr = httpServletRequest.getParameter("randomStr"); if (StrUtil.isBlank(randomStr)) &#123; randomStr = httpServletRequest.getParameter("mobile"); &#125; String key = SecurityConstants.DEFAULT_CODE_KEY + randomStr; if (!redisTemplate.hasKey(key)) &#123; throw new ValidateCodeException(EXPIRED_CAPTCHA_ERROR); &#125; Object codeObj = redisTemplate.opsForValue().get(key); if (codeObj == null) &#123; throw new ValidateCodeException(EXPIRED_CAPTCHA_ERROR); &#125; String saveCode = codeObj.toString(); if (StrUtil.isBlank(saveCode)) &#123; redisTemplate.delete(key); throw new ValidateCodeException(EXPIRED_CAPTCHA_ERROR); &#125; if (!StrUtil.equals(saveCode, code)) &#123; redisTemplate.delete(key); throw new ValidateCodeException("È™åËØÅÁ†ÅÈîôËØØÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•"); &#125; redisTemplate.delete(key); &#125; ÁÅ∞Â∫¶ÂèëÂ∏ÉÁÅ∞Â∫¶ÂèëÂ∏ÉÔºåÂ∑≤Áªè‰∏çÊòØ‰∏Ä‰∏™ÂæàÊñ∞ÁöÑÊ¶ÇÂøµ‰∫ÜÔºé‰∏Ä‰∏™‰∫ßÂìÅÔºåÂ¶ÇÊûúÈúÄË¶ÅÂø´ÈÄüËø≠‰ª£ÂºÄÂèë‰∏äÁ∫øÔºåÂèàË¶Å‰øùËØÅË¥®ÈáèÔºå‰øùËØÅÂàö‰∏äÁ∫øÁöÑÁ≥ªÁªüÔºå‰∏ÄÊó¶Âá∫Áé∞ÈóÆÈ¢òÈÇ£‰πàÂèØ‰ª•ÂæàÂø´ÁöÑÊéßÂà∂ÂΩ±ÂìçÈù¢ÔºåÂ∞±ÈúÄË¶ÅËÆæËÆ°‰∏ÄÂ•óÁÅ∞Â∫¶ÂèëÂ∏ÉÁ≥ªÁªüÔºé ÁÅ∞Â∫¶ÂèëÂ∏ÉÁ≥ªÁªüÁöÑ‰ΩúÁî®Âú®‰∫éÔºåÂèØ‰ª•Ê†πÊçÆËá™Â∑±ÁöÑÈÖçÁΩÆÔºåÊù•Â∞ÜÁî®Êà∑ÁöÑÊµÅÈáèÂØºÂà∞Êñ∞‰∏äÁ∫øÁöÑÁ≥ªÁªü‰∏äÔºåÊù•Âø´ÈÄüÈ™åËØÅÊñ∞ÁöÑÂäüËÉΩ‰øÆÊîπÔºåËÄå‰∏ÄÊó¶Âá∫ÈóÆÈ¢òÔºå‰πüÂèØ‰ª•È©¨‰∏äÁöÑÊÅ¢Â§çÔºåÁÆÄÂçïÁöÑËØ¥ÔºåÂ∞±ÊòØ‰∏ÄÂ•óA/BTestÁ≥ªÁªüÔºé ÂàùÂßãÂåñ‰∏ãÈù¢ÊòØÁÅ∞Â∫¶Ë∑ØÁî±ÂàùÂßãÂåñÁ±ªÔºö 12345678910111213@Configuration@ConditionalOnClass(DiscoveryEnabledNIWSServerList.class)@AutoConfigureBefore(RibbonClientConfiguration.class)@ConditionalOnProperty(value = "zuul.ribbon.metadata.enabled")public class RibbonMetaFilterAutoConfiguration &#123; @Bean @ConditionalOnMissingBean @Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE) public ZoneAvoidanceRule metadataAwareRule() &#123; return new MetadataCanaryRuleHandler(); &#125;&#125; ÁÅ∞Â∫¶ÂèëÂ∏ÉÊúâÂÖ≥ËøáÊª§Âô®AccessFilterÈ¶ñÂÖàÈáçÂÜôfilterOrder()ÊñπÊ≥ïÔºå‰ΩøËøô‰∏™ËøáÊª§Âô®Âú®Âú®RateLimitPreFilter‰πãÂâçËøêË°åÔºå‰∏ç‰ºöÂá∫Áé∞Á©∫ÊåáÈíàÈóÆÈ¢ò„ÄÇÊ≠§Â§Ñ‰ºòÂÖàÁ∫ßFORM_BODY_WRAPPER_FILTER_ORDER-1. 12345678910111213141516171819202122232425262728293031323334353637@Componentpublic class AccessFilter extends ZuulFilter &#123; @Value("$&#123;zuul.ribbon.metadata.enabled:false&#125;") private boolean canary; @Override public String filterType() &#123; return FilterConstants.PRE_TYPE; &#125; @Override public int filterOrder() &#123; return FORM_BODY_WRAPPER_FILTER_ORDER - 1; &#125; @Override public boolean shouldFilter() &#123; return true; &#125; @Override public Object run() &#123; RequestContext requestContext = RequestContext.getCurrentContext(); String version = requestContext.getRequest().getHeader(SecurityConstants.VERSION); if (canary &amp;&amp; StrUtil.isNotBlank(version)) &#123; RibbonVersionHolder.setContext(version); &#125; requestContext.set("startTime", System.currentTimeMillis()); Authentication authentication = SecurityContextHolder.getContext().getAuthentication(); if (authentication != null) &#123; requestContext.addZuulRequestHeader(SecurityConstants.USER_HEADER, authentication.getName()); requestContext.addZuulRequestHeader(SecurityConstants.ROLE_HEADER, CollectionUtil.join(authentication.getAuthorities(), ",")); &#125; return null; &#125;&#125; Ê†∏ÂøÉÊñπÊ≥ïÂú®run()‰∏äÔºåÈ¶ñÂÖàÂèóÂà∞requestËØ∑Ê±ÇÔºåÊãøÂà∞‰ªñÁöÑÁâàÊú¨Á∫¶Êùü‰ø°ÊÅØÔºåÁÑ∂ÂêéÊ†πÊçÆÈÄâÊã©Ê∑ªÂä†token Ë∑ØÁî±ÂæÆÊúçÂä°Êñ≠Ë®ÄÂ§ÑÁêÜÂô®MetadataCanaryRuleHandlerËá™ÂÆö‰πâribbonË∑ØÁî±ËßÑÂàôÂåπÈÖçÂ§öÁâàÊú¨ËØ∑Ê±ÇÔºåÂÆûÁé∞ÁÅ∞Â∫¶ÂèëÂ∏É„ÄÇÂ§çÂêàÂà§Êñ≠serverÊâÄÂú®Âå∫ÂüüÁöÑÊÄßËÉΩÂíåserverÁöÑÂèØÁî®ÊÄßÈÄâÊã©serverÔºåÂç≥Ôºå‰ΩøÁî®ZoneAvoidancePredicateÂíåAvailabilityPredicateÊù•Âà§Êñ≠ÊòØÂê¶ÈÄâÊã©Êüê‰∏™serverÔºåÂâç‰∏Ä‰∏™Âà§Êñ≠Âà§ÂÆö‰∏Ä‰∏™zoneÁöÑËøêË°åÊÄßËÉΩÊòØÂê¶ÂèØÁî®ÔºåÂâîÈô§‰∏çÂèØÁî®ÁöÑzoneÔºàÁöÑÊâÄÊúâserverÔºâÔºåAvailabilityPredicateÁî®‰∫éËøáÊª§ÊéâËøûÊé•Êï∞ËøáÂ§öÁöÑServer„ÄÇ Ê≠§Â§ÑÈÄªËæëÊòØ eureka metadata Ôºà‰∏ªÊú∫ÂêçÔºåIPÂú∞ÂùÄÔºåÁ´ØÂè£Âè∑ÔºåÁä∂ÊÄÅÈ°µÂÅ•Â∫∑Ê£ÄÊü•Á≠â‰ø°ÊÅØÔºåÊàñËÄÖÈÄöËøáÈÖçÁΩÆÊñá‰ª∂Ëá™ÂÆö‰πâÂÖÉÊï∞ÊçÆÔºâÂ≠òÂú®ÁâàÊú¨ÂÆö‰πâÊó∂ÂÄôËøõË°åÂà§Êñ≠ ‰∏çÂ≠òÂú® metadata Áõ¥Êé•ËøîÂõûtrue 1234567891011121314151617181920212223242526272829@Override public AbstractServerPredicate getPredicate() &#123; return new AbstractServerPredicate() &#123; @Override public boolean apply(PredicateKey predicateKey) &#123; String targetVersion = RibbonVersionHolder.getContext(); RibbonVersionHolder.clearContext(); if (StrUtil.isBlank(targetVersion)) &#123; log.debug("ÂÆ¢Êà∑Á´ØÊú™ÈÖçÁΩÆÁõÆÊ†áÁâàÊú¨Áõ¥Êé•Ë∑ØÁî±"); return true; &#125; DiscoveryEnabledServer server = (DiscoveryEnabledServer) predicateKey.getServer(); final Map&lt;String, String&gt; metadata = server.getInstanceInfo().getMetadata(); if (StrUtil.isBlank(metadata.get(SecurityConstants.VERSION))) &#123; log.debug("ÂΩìÂâçÂæÆÊúçÂä°&#123;&#125; Êú™ÈÖçÁΩÆÁâàÊú¨Áõ¥Êé•Ë∑ØÁî±"); return true; &#125; if (metadata.get(SecurityConstants.VERSION).equals(targetVersion)) &#123; return true; &#125; else &#123; log.debug("ÂΩìÂâçÂæÆÊúçÂä°&#123;&#125; ÁâàÊú¨‰∏∫&#123;&#125;ÔºåÁõÆÊ†áÁâàÊú¨&#123;&#125; ÂåπÈÖçÂ§±Ë¥•", server.getInstanceInfo().getAppName() , metadata.get(SecurityConstants.VERSION), targetVersion); return false; &#125; &#125; &#125;; &#125; Âä®ÊÄÅË∑ØÁî±ÈÖçÁΩÆ123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687public class DynamicRouteLocator extends DiscoveryClientRouteLocator &#123; private ZuulProperties properties; private RedisTemplate redisTemplate; public DynamicRouteLocator(String servletPath, DiscoveryClient discovery, ZuulProperties properties, ServiceInstance localServiceInstance, RedisTemplate redisTemplate) &#123; super(servletPath, discovery, properties, localServiceInstance); this.properties = properties; this.redisTemplate = redisTemplate; &#125; /** * ÈáçÂÜôË∑ØÁî±ÈÖçÁΩÆ * &lt;p&gt; * 1. properties ÈÖçÁΩÆ„ÄÇ * 2. eureka ÈªòËÆ§ÈÖçÁΩÆ„ÄÇ * 3. DBÊï∞ÊçÆÂ∫ìÈÖçÁΩÆ„ÄÇ * * @return Ë∑ØÁî±Ë°® */ @Override protected LinkedHashMap&lt;String, ZuulProperties.ZuulRoute&gt; locateRoutes() &#123; LinkedHashMap&lt;String, ZuulProperties.ZuulRoute&gt; routesMap = new LinkedHashMap&lt;&gt;(); //ËØªÂèñpropertiesÈÖçÁΩÆ„ÄÅeurekaÈªòËÆ§ÈÖçÁΩÆ routesMap.putAll(super.locateRoutes()); log.debug("ÂàùÂßãÈªòËÆ§ÁöÑË∑ØÁî±ÈÖçÁΩÆÂÆåÊàê"); routesMap.putAll(locateRoutesFromDb()); LinkedHashMap&lt;String, ZuulProperties.ZuulRoute&gt; values = new LinkedHashMap&lt;&gt;(); for (Map.Entry&lt;String, ZuulProperties.ZuulRoute&gt; entry : routesMap.entrySet()) &#123; String path = entry.getKey(); if (!path.startsWith("/")) &#123; path = "/" + path; &#125; if (StrUtil.isNotBlank(this.properties.getPrefix())) &#123; path = this.properties.getPrefix() + path; if (!path.startsWith("/")) &#123; path = "/" + path; &#125; &#125; values.put(path, entry.getValue()); &#125; return values; &#125; /** * Redis‰∏≠‰øùÂ≠òÁöÑÔºåÊ≤°Êúâ‰ªéupmsÊãâÂéªÔºåÈÅøÂÖçÂêØÂä®ÈìæË∑Ø‰æùËµñÈóÆÈ¢òÔºàÂèñËàçÔºâÔºåÁΩëÂÖ≥‰æùËµñ‰∏öÂä°Ê®°ÂùóÁöÑÈóÆÈ¢ò * * @return */ private Map&lt;String, ZuulProperties.ZuulRoute&gt; locateRoutesFromDb() &#123; Map&lt;String, ZuulProperties.ZuulRoute&gt; routes = new LinkedHashMap&lt;&gt;(); Object obj = redisTemplate.opsForValue().get(CommonConstant.ROUTE_KEY); if (obj == null) &#123; return routes; &#125; List&lt;SysZuulRoute&gt; results = (List&lt;SysZuulRoute&gt;) obj; for (SysZuulRoute result : results) &#123; if (StrUtil.isBlank(result.getPath()) &amp;&amp; StrUtil.isBlank(result.getUrl())) &#123; continue; &#125; ZuulProperties.ZuulRoute zuulRoute = new ZuulProperties.ZuulRoute(); try &#123; zuulRoute.setId(result.getServiceId()); zuulRoute.setPath(result.getPath()); zuulRoute.setServiceId(result.getServiceId()); zuulRoute.setRetryable(StrUtil.equals(result.getRetryable(), "0") ? Boolean.FALSE : Boolean.TRUE); zuulRoute.setStripPrefix(StrUtil.equals(result.getStripPrefix(), "0") ? Boolean.FALSE : Boolean.TRUE); zuulRoute.setUrl(result.getUrl()); List&lt;String&gt; sensitiveHeadersList = StrUtil.splitTrim(result.getSensitiveheadersList(), ","); if (sensitiveHeadersList != null) &#123; Set&lt;String&gt; sensitiveHeaderSet = CollUtil.newHashSet(); sensitiveHeadersList.forEach(sensitiveHeader -&gt; sensitiveHeaderSet.add(sensitiveHeader)); zuulRoute.setSensitiveHeaders(sensitiveHeaderSet); zuulRoute.setCustomSensitiveHeaders(true); &#125; &#125; catch (Exception e) &#123; log.error("‰ªéÊï∞ÊçÆÂ∫ìÂä†ËΩΩË∑ØÁî±ÈÖçÁΩÆÂºÇÂ∏∏", e); &#125; log.debug("Ê∑ªÂä†Êï∞ÊçÆÂ∫ìËá™ÂÆö‰πâÁöÑË∑ØÁî±ÈÖçÁΩÆ,pathÔºö&#123;&#125;ÔºåserviceId:&#123;&#125;", zuulRoute.getPath(), zuulRoute.getServiceId()); routes.put(zuulRoute.getPath(), zuulRoute); &#125; return routes; &#125;&#125; ÁΩëÂÖ≥Êó•ÂøóÂ§ÑÁêÜ‰ª£Á†ÅÊ≥®ÈáäÂ∑≤ÁªèÂ∞ÜÈÄªËæëÂÜôÁöÑÂæàÊ∏ÖÊ•ö‰∫Ü 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576@Slf4j@Componentpublic class LogSendServiceImpl implements LogSendService &#123; private static final String SERVICE_ID = "serviceId"; @Autowired private AmqpTemplate rabbitTemplate; /** * 1. Ëé∑Âèñ requestContext ‰∏≠ÁöÑËØ∑Ê±Ç‰ø°ÊÅØ * 2. Â¶ÇÊûúËøîÂõûÁä∂ÊÄÅ‰∏çÊòØOKÔºåÂàôËé∑ÂèñËøîÂõû‰ø°ÊÅØ‰∏≠ÁöÑÈîôËØØ‰ø°ÊÅØ * 3. ÂèëÈÄÅÂà∞MQ * * @param requestContext ‰∏ä‰∏ãÊñáÂØπË±° */ @Override public void send(RequestContext requestContext) &#123; HttpServletRequest request = requestContext.getRequest(); String requestUri = request.getRequestURI(); String method = request.getMethod(); SysLog sysLog = new SysLog(); sysLog.setType(CommonConstant.STATUS_NORMAL); sysLog.setRemoteAddr(HttpUtil.getClientIP(request)); sysLog.setRequestUri(URLUtil.getPath(requestUri)); sysLog.setMethod(method); sysLog.setUserAgent(request.getHeader("user-agent")); sysLog.setParams(HttpUtil.toParams(request.getParameterMap())); Long startTime = (Long) requestContext.get("startTime"); sysLog.setTime(System.currentTimeMillis() - startTime); if (requestContext.get(SERVICE_ID) != null) &#123; sysLog.setServiceId(requestContext.get(SERVICE_ID).toString()); &#125; //Ê≠£Â∏∏ÂèëÈÄÅÊúçÂä°ÂºÇÂ∏∏Ëß£Êûê if (requestContext.getResponseStatusCode() == HttpStatus.SC_INTERNAL_SERVER_ERROR &amp;&amp; requestContext.getResponseDataStream() != null) &#123; InputStream inputStream = requestContext.getResponseDataStream(); ByteArrayOutputStream baos = new ByteArrayOutputStream(); InputStream stream1 = null; InputStream stream2; byte[] buffer = IoUtil.readBytes(inputStream); try &#123; baos.write(buffer); baos.flush(); stream1 = new ByteArrayInputStream(baos.toByteArray()); stream2 = new ByteArrayInputStream(baos.toByteArray()); String resp = IoUtil.read(stream1, CommonConstant.UTF8); sysLog.setType(CommonConstant.STATUS_LOCK); sysLog.setException(resp); requestContext.setResponseDataStream(stream2); &#125; catch (IOException e) &#123; log.error("ÂìçÂ∫îÊµÅËß£ÊûêÂºÇÂ∏∏Ôºö", e); throw new RuntimeException(e); &#125; finally &#123; IoUtil.close(stream1); IoUtil.close(baos); IoUtil.close(inputStream); &#125; &#125; //ÁΩëÂÖ≥ÂÜÖÈÉ®ÂºÇÂ∏∏ Throwable throwable = requestContext.getThrowable(); if (throwable != null) &#123; log.error("ÁΩëÂÖ≥ÂºÇÂ∏∏", throwable); sysLog.setException(throwable.getMessage()); &#125; //‰øùÂ≠òÂèëÂæÄMQÔºàÂè™‰øùÂ≠òÊéàÊùÉÔºâ Authentication authentication = SecurityContextHolder.getContext().getAuthentication(); if (authentication != null &amp;&amp; StrUtil.isNotBlank(authentication.getName())) &#123; LogVO logVo = new LogVO(); sysLog.setCreateBy(authentication.getName()); logVo.setSysLog(sysLog); logVo.setUsername(authentication.getName()); rabbitTemplate.convertAndSend(MqQueueConstant.LOG_QUEUE, logVo); &#125; &#125;&#125; Â§öÁª¥Â∫¶ÈôêÊµÅÈôêÊµÅÈôçÁ∫ßÂ§ÑÁêÜÂô®ZuulRateLimiterErrorHandlerÈáçÂÜôzuul‰∏≠ÈªòËÆ§ÁöÑÈôêÊµÅÂ§ÑÁêÜÂô®DefaultRateLimiterErrorHandlerÔºå‰Ωø‰πãËÆ∞ÂΩïÊó•ÂøóÂÜÖÂÆπ 12345678910111213141516171819@Bean public RateLimiterErrorHandler rateLimitErrorHandler() &#123; return new DefaultRateLimiterErrorHandler() &#123; @Override public void handleSaveError(String key, Exception e) &#123; log.error("‰øùÂ≠òkey:[&#123;&#125;]ÂºÇÂ∏∏", key, e); &#125; @Override public void handleFetchError(String key, Exception e) &#123; log.error("Ë∑ØÁî±Â§±Ë¥•:[&#123;&#125;]ÂºÇÂ∏∏", key); &#125; @Override public void handleError(String msg, Exception e) &#123; log.error("ÈôêÊµÅÂºÇÂ∏∏:[&#123;&#125;]", msg, e); &#125; &#125;; &#125; ‰∏éspring security oAuthÊñπÊ≥ïÊï¥ÂêàÂçïÁÇπÁôªÈôÜÊéàÊùÉÊãíÁªùÂ§ÑÁêÜÂô® PigAccessDeniedHandlerÈáçÂÜôSrping security oAuth Êèê‰æõÂçïÁÇπÁôªÂΩïÈ™åËØÅÊãíÁªùOAuth2AccessDeniedHandlerÊé•Âè£Ôºå‰ΩøÁî®RÂåÖË£ÖÂ§±Ë¥•‰ø°ÊÅØÂà∞PigDeniedException 12345678910@Override public void handle(HttpServletRequest request, HttpServletResponse response, AccessDeniedException authException) throws IOException, ServletException &#123; log.info("ÊéàÊùÉÂ§±Ë¥•ÔºåÁ¶ÅÊ≠¢ËÆøÈóÆ &#123;&#125;", request.getRequestURI()); response.setCharacterEncoding(CommonConstant.UTF8); response.setContentType(CommonConstant.CONTENT_TYPE); R&lt;String&gt; result = new R&lt;&gt;(new PigDeniedException("ÊéàÊùÉÂ§±Ë¥•ÔºåÁ¶ÅÊ≠¢ËÆøÈóÆ")); response.setStatus(HttpStatus.SC_FORBIDDEN); PrintWriter printWriter = response.getWriter(); printWriter.append(objectMapper.writeValueAsString(result)); &#125; ËèúÂçïÁÆ°ÁêÜMenuService1234567891011@FeignClient(name = "pig-upms-service", fallback = MenuServiceFallbackImpl.class)public interface MenuService &#123; /** * ÈÄöËøáËßíËâ≤ÂêçÊü•ËØ¢ËèúÂçï * * @param role ËßíËâ≤ÂêçÁß∞ * @return ËèúÂçïÂàóË°® */ @GetMapping(value = "/menu/findMenuByRole/&#123;role&#125;") Set&lt;MenuVO&gt; findMenuByRole(@PathVariable("role") String role);&#125; ‰ΩøÁî®feignËøûÊé•pigÁ≥ªÁªüÁöÑËèúÂçïÂæÆÊúçÂä° ËèúÂçïÊùÉÈôê123456789101112131415161718192021222324252627282930313233343536373839@Service("permissionService")public class PermissionServiceImpl implements PermissionService &#123; @Autowired private MenuService menuService; private AntPathMatcher antPathMatcher = new AntPathMatcher(); @Override public boolean hasPermission(HttpServletRequest request, Authentication authentication) &#123; //ele-admin options Ë∑®ÂüüÈÖçÁΩÆÔºåÁé∞Âú®Â§ÑÁêÜÊòØÈÄöËøáÂâçÁ´ØÈÖçÁΩÆ‰ª£ÁêÜÔºå‰∏ç‰ΩøÁî®ËøôÁßçÊñπÂºèÔºåÂ≠òÂú®È£éÈô©// if (HttpMethod.OPTIONS.name().equalsIgnoreCase(request.getMethod())) &#123;// return true;// &#125; Object principal = authentication.getPrincipal(); List&lt;SimpleGrantedAuthority&gt; authorityList = (List&lt;SimpleGrantedAuthority&gt;) authentication.getAuthorities(); AtomicBoolean hasPermission = new AtomicBoolean(false); if (principal != null) &#123; if (CollUtil.isEmpty(authorityList)) &#123; log.warn("ËßíËâ≤ÂàóË°®‰∏∫Á©∫Ôºö&#123;&#125;", authentication.getPrincipal()); return false; &#125; Set&lt;MenuVO&gt; urls = new HashSet&lt;&gt;(); authorityList.stream().filter(authority -&gt; !StrUtil.equals(authority.getAuthority(), "ROLE_USER")) .forEach(authority -&gt; &#123; Set&lt;MenuVO&gt; menuVOSet = menuService.findMenuByRole(authority.getAuthority()); CollUtil.addAll(urls, menuVOSet); &#125;); urls.stream().filter(menu -&gt; StrUtil.isNotEmpty(menu.getUrl()) &amp;&amp; antPathMatcher.match(menu.getUrl(), request.getRequestURI()) &amp;&amp; request.getMethod().equalsIgnoreCase(menu.getMethod())) .findFirst().ifPresent(menuVO -&gt; hasPermission.set(true)); &#125; return hasPermission.get(); &#125;&#125; ÁΩëÂÖ≥ÊÄªÁªìpigËøô‰∏™Á≥ªÁªüÊòØ‰∏™ÂæàÂ•ΩÁöÑÊ°ÜÊû∂ÔºåÊú¨Ê¨°‰ΩìÈ™åÁöÑÊòØpigÁöÑzuulÁΩëÂÖ≥Ê®°ÂùóÔºåÊ≠§Ê®°Âùó‰∏éfeignÔºåribbonÔºåspring securityÔºåEurasiaËøõË°åÊï¥ÂêàÔºåÂÆåÊàêÊàñÈÉ®ÂàÜÂÆåÊàê‰∫ÜÂä®ÊÄÅË∑ØÁî±ÔºåÁÅ∞Â∫¶ÂèëÂ∏É,ËèúÂçïÊùÉÈôêÁÆ°ÁêÜÔºåÊúçÂä°ÈôêÊµÅÔºåÁΩëÂÖ≥Êó•ÂøóÂ§ÑÁêÜÔºåÈùûÂ∏∏ÂÄºÂæóÂ≠¶‰π†ÔºÅ UPMsÊùÉÈôêÁÆ°ÁêÜÁ≥ªÁªüÊ®°ÂùóÁôæÂ∫¶‰∫Ü‰∏Ä‰∏ãÔºåUPMSÊòØUser Permissions Management SystemÔºåÈÄöÁî®Áî®Êà∑ÊùÉÈôêÁÆ°ÁêÜÁ≥ªÁªü Êï∞ÊçÆÂ∫ìËÆæËÆ°ÈÉ®Èó®Ë°® ÈÉ®Èó®ÂÖ≥Á≥ªË°® Â≠óÂÖ∏Ë°®1234567891011121314151617181920212223242526272829303132333435363738394041424344/** * ÁºñÂè∑ */ @TableId(value="id", type= IdType.AUTO) private Integer id; /** * Êï∞ÊçÆÂÄº */ private String value; /** * Ê†áÁ≠æÂêç */ private String label; /** * Á±ªÂûã */ private String type; /** * ÊèèËø∞ */ private String description; /** * ÊéíÂ∫èÔºàÂçáÂ∫èÔºâ */ private BigDecimal sort; /** * ÂàõÂª∫Êó∂Èó¥ */ @TableField("create_time") private Date createTime; /** * Êõ¥Êñ∞Êó∂Èó¥ */ @TableField("update_time") private Date updateTime; /** * Â§áÊ≥®‰ø°ÊÅØ */ private String remarks; /** * Âà†Èô§Ê†áËÆ∞ */ @TableField("del_flag") private String delFlag; Êó•ÂøóË°®1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465@Datapublic class SysLog implements Serializable &#123; private static final long serialVersionUID = 1L; /** * ÁºñÂè∑ */ @TableId(type = IdType.ID_WORKER) @JsonSerialize(using = ToStringSerializer.class) private Long id; /** * Êó•ÂøóÁ±ªÂûã */ private String type; /** * Êó•ÂøóÊ†áÈ¢ò */ private String title; /** * ÂàõÂª∫ËÄÖ */ private String createBy; /** * ÂàõÂª∫Êó∂Èó¥ */ private Date createTime; /** * Êõ¥Êñ∞Êó∂Èó¥ */ private Date updateTime; /** * Êìç‰ΩúIPÂú∞ÂùÄ */ private String remoteAddr; /** * Áî®Êà∑‰ª£ÁêÜ */ private String userAgent; /** * ËØ∑Ê±ÇURI */ private String requestUri; /** * Êìç‰ΩúÊñπÂºè */ private String method; /** * Êìç‰ΩúÊèê‰∫§ÁöÑÊï∞ÊçÆ */ private String params; /** * ÊâßË°åÊó∂Èó¥ */ private Long time; /** * Âà†Èô§Ê†áËÆ∞ */ private String delFlag; /** * ÂºÇÂ∏∏‰ø°ÊÅØ */ private String exception; /** * ÊúçÂä°ID */ private String serviceId; &#125;&#125; ËèúÂçïÊùÉÈôêË°® ËßíËâ≤Ë°® ËßíËâ≤‰∏éÈÉ®Èó®ÂØπÂ∫îÂÖ≥Á≥ªÁï• ËßíËâ≤‰∏éËèúÂçïÊùÉÈôêÂØπÂ∫îÂÖ≥Á≥ªÁï• Áî®Êà∑Ë°®12345678910111213141516171819202122232425262728293031323334353637383940414243444546/** * ‰∏ªÈîÆID */@TableId(value = "user_id", type = IdType.AUTO)private Integer userId;/** * Áî®Êà∑Âêç */private String username;private String password;/** * ÈöèÊú∫Áõê */@JsonIgnoreprivate String salt;/** * ÂàõÂª∫Êó∂Èó¥ */@TableField("create_time")private Date createTime;/** * ‰øÆÊîπÊó∂Èó¥ */@TableField("update_time")private Date updateTime;/** * 0-Ê≠£Â∏∏Ôºå1-Âà†Èô§ */@TableField("del_flag")private String delFlag;/** * ÁÆÄ‰ªã */private String phone;/** * Â§¥ÂÉè */private String avatar;/** * ÈÉ®Èó®ID */@TableField("dept_id")private Integer deptId; Âä®ÊÄÅË∑ØÁî±ÈÖçÁΩÆË°® ‰∏öÂä°ÈÄªËæë ÂÖ®ÊòØÂü∫‰∫émybatis plusÁöÑCRUDÔºåÊúâÁÇπÂ§ö„ÄÇÂ§ßÈÉ®ÂàÜÂπ≤ËøôË°åÁöÑÈÉΩÊáÇÔºåÊàëÂ∞±‰∏çËØ¶ÁªÜÂ±ïÂºÄ‰∫Ü„ÄÇ È™åËØÅÁ†ÅÂàõÂª∫ValidateCodeControllerÂèØ‰ª•ÊâæÂà∞ÂàõÂª∫È™åËØÅÁ†ÅÁõ∏ÂÖ≥‰ª£Á†Å123456789101112131415161718192021/** * ÂàõÂª∫È™åËØÅÁ†Å * * @param request request * @throws Exception */ @GetMapping(SecurityConstants.DEFAULT_VALIDATE_CODE_URL_PREFIX + "/&#123;randomStr&#125;") public void createCode(@PathVariable String randomStr, HttpServletRequest request, HttpServletResponse response) throws Exception &#123; Assert.isBlank(randomStr, "Êú∫Âô®Á†Å‰∏çËÉΩ‰∏∫Á©∫"); response.setHeader("Cache-Control", "no-store, no-cache"); response.setContentType("image/jpeg"); //ÁîüÊàêÊñáÂ≠óÈ™åËØÅÁ†Å String text = producer.createText(); //ÁîüÊàêÂõæÁâáÈ™åËØÅÁ†Å BufferedImage image = producer.createImage(text); userService.saveImageCode(randomStr, text); ServletOutputStream out = response.getOutputStream(); ImageIO.write(image, "JPEG", out); IOUtils.closeQuietly(out); &#125; ÂÖ∂‰∏≠ÁöÑ producerÊòØ‰ΩøÁî®KaptchaÔºå‰∏ãÈù¢ÊòØÈÖçÁΩÆÁ±ª 123456789101112131415161718192021222324252627@Configurationpublic class KaptchaConfig &#123; private static final String KAPTCHA_BORDER = "kaptcha.border"; private static final String KAPTCHA_TEXTPRODUCER_FONT_COLOR = "kaptcha.textproducer.font.color"; private static final String KAPTCHA_TEXTPRODUCER_CHAR_SPACE = "kaptcha.textproducer.char.space"; private static final String KAPTCHA_IMAGE_WIDTH = "kaptcha.image.width"; private static final String KAPTCHA_IMAGE_HEIGHT = "kaptcha.image.height"; private static final String KAPTCHA_TEXTPRODUCER_CHAR_LENGTH = "kaptcha.textproducer.char.length"; private static final Object KAPTCHA_IMAGE_FONT_SIZE = "kaptcha.textproducer.font.size"; @Bean public DefaultKaptcha producer() &#123; Properties properties = new Properties(); properties.put(KAPTCHA_BORDER, SecurityConstants.DEFAULT_IMAGE_BORDER); properties.put(KAPTCHA_TEXTPRODUCER_FONT_COLOR, SecurityConstants.DEFAULT_COLOR_FONT); properties.put(KAPTCHA_TEXTPRODUCER_CHAR_SPACE, SecurityConstants.DEFAULT_CHAR_SPACE); properties.put(KAPTCHA_IMAGE_WIDTH, SecurityConstants.DEFAULT_IMAGE_WIDTH); properties.put(KAPTCHA_IMAGE_HEIGHT, SecurityConstants.DEFAULT_IMAGE_HEIGHT); properties.put(KAPTCHA_IMAGE_FONT_SIZE, SecurityConstants.DEFAULT_IMAGE_FONT_SIZE); properties.put(KAPTCHA_TEXTPRODUCER_CHAR_LENGTH, SecurityConstants.DEFAULT_IMAGE_LENGTH); Config config = new Config(properties); DefaultKaptcha defaultKaptcha = new DefaultKaptcha(); defaultKaptcha.setConfig(config); return defaultKaptcha; &#125;&#125; ÂèëÈÄÅÊâãÊú∫È™åËØÅÁ†ÅÂ§ß‰ΩìÈÄªËæë‰∏∫ÔºåÂÖàÊü•ËØ¢È™åËØÅÁ†ÅredisÁºìÂ≠òÔºåÊ≤°ÊúâÁºìÂ≠òÂàôËØ¥ÊòéÈ™åËØÅÁ†ÅÁºìÂ≠òÊ≤°ÊúâÂ§±ÊïàÔºåËøîÂõûÈîôËØØ„ÄÇ Êü•Âà∞Ê≤°ÊúâÈ™åËØÅÁ†ÅÔºåÂàôÊ†πÊçÆÊâãÊú∫Âè∑Á†Å‰ªéÊï∞ÊçÆÂ∫ìËé∑ÂæóÁî®Êà∑‰ø°ÊÅØÔºåÁîüÊàê‰∏Ä‰∏™4‰ΩçÁöÑÈ™åËØÅÁ†ÅÔºå‰ΩøÁî®rabbbitmqÈòüÂàóÊääÁü≠‰ø°È™åËØÅÁ†Å‰øùÂ≠òÂà∞ÈòüÂàóÔºåÂêåÊó∂Âä†‰∏äÊâãÊú∫È™åËØÅÁ†ÅÁöÑredisÁºìÂ≠ò 1234567891011121314151617181920212223242526272829303132333435363738394041424344/** * ÂèëÈÄÅÈ™åËØÅÁ†Å * &lt;p&gt; * 1. ÂÖàÂéªredis Êü•ËØ¢ÊòØÂê¶ 60SÂÜÖÂ∑≤ÁªèÂèëÈÄÅ * 2. Êú™ÂèëÈÄÅÔºö Âà§Êñ≠ÊâãÊú∫Âè∑ÊòØÂê¶Â≠ò ? false :‰∫ßÁîü4‰ΩçÊï∞Â≠ó ÊâãÊú∫Âè∑-È™åËØÅÁ†Å * 3. ÂèëÂæÄÊ∂àÊÅØ‰∏≠ÂøÉ-„ÄãÂèëÈÄÅ‰ø°ÊÅØ * 4. ‰øùÂ≠òredis * * @param mobile ÊâãÊú∫Âè∑ * @return true„ÄÅfalse */ @Override public R&lt;Boolean&gt; sendSmsCode(String mobile) &#123; Object tempCode = redisTemplate.opsForValue().get(SecurityConstants.DEFAULT_CODE_KEY + mobile); if (tempCode != null) &#123; log.error("Áî®Êà∑:&#123;&#125;È™åËØÅÁ†ÅÊú™Â§±Êïà&#123;&#125;", mobile, tempCode); return new R&lt;&gt;(false, "È™åËØÅÁ†ÅÊú™Â§±ÊïàÔºåËØ∑Â§±ÊïàÂêéÂÜçÊ¨°Áî≥ËØ∑"); &#125; SysUser params = new SysUser(); params.setPhone(mobile); List&lt;SysUser&gt; userList = this.selectList(new EntityWrapper&lt;&gt;(params)); if (CollectionUtil.isEmpty(userList)) &#123; log.error("Ê†πÊçÆÁî®Êà∑ÊâãÊú∫Âè∑&#123;&#125;Êü•ËØ¢Áî®Êà∑‰∏∫Á©∫", mobile); return new R&lt;&gt;(false, "ÊâãÊú∫Âè∑‰∏çÂ≠òÂú®"); &#125; String code = RandomUtil.randomNumbers(4); JSONObject contextJson = new JSONObject(); contextJson.put("code", code); contextJson.put("product", "Pig4Cloud"); log.info("Áü≠‰ø°ÂèëÈÄÅËØ∑Ê±ÇÊ∂àÊÅØ‰∏≠ÂøÉ -&gt; ÊâãÊú∫Âè∑:&#123;&#125; -&gt; È™åËØÅÁ†ÅÔºö&#123;&#125;", mobile, code); rabbitTemplate.convertAndSend(MqQueueConstant.MOBILE_CODE_QUEUE, new MobileMsgTemplate( mobile, contextJson.toJSONString(), CommonConstant.ALIYUN_SMS, EnumSmsChannelTemplate.LOGIN_NAME_LOGIN.getSignName(), EnumSmsChannelTemplate.LOGIN_NAME_LOGIN.getTemplate() )); redisTemplate.opsForValue().set(SecurityConstants.DEFAULT_CODE_KEY + mobile, code, SecurityConstants.DEFAULT_IMAGE_EXPIRE, TimeUnit.SECONDS); return new R&lt;&gt;(true); &#125; Ê†ëÂΩ¢ËäÇÁÇπÂ∑•ÂÖ∑Ê†è1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889public class TreeUtil &#123; /** * ‰∏§Â±ÇÂæ™ÁéØÂÆûÁé∞Âª∫Ê†ë * * @param treeNodes ‰º†ÂÖ•ÁöÑÊ†ëËäÇÁÇπÂàóË°® * @return */ public static &lt;T extends TreeNode&gt; List&lt;T&gt; bulid(List&lt;T&gt; treeNodes, Object root) &#123; List&lt;T&gt; trees = new ArrayList&lt;T&gt;(); for (T treeNode : treeNodes) &#123; if (root.equals(treeNode.getParentId())) &#123; trees.add(treeNode); &#125; for (T it : treeNodes) &#123; if (it.getParentId() == treeNode.getId()) &#123; if (treeNode.getChildren() == null) &#123; treeNode.setChildren(new ArrayList&lt;TreeNode&gt;()); &#125; treeNode.add(it); &#125; &#125; &#125; return trees; &#125; /** * ‰ΩøÁî®ÈÄíÂΩíÊñπÊ≥ïÂª∫Ê†ë * * @param treeNodes * @return */ public static &lt;T extends TreeNode&gt; List&lt;T&gt; buildByRecursive(List&lt;T&gt; treeNodes, Object root) &#123; List&lt;T&gt; trees = new ArrayList&lt;T&gt;(); for (T treeNode : treeNodes) &#123; if (root.equals(treeNode.getParentId())) &#123; trees.add(findChildren(treeNode, treeNodes)); &#125; &#125; return trees; &#125; /** * ÈÄíÂΩíÊü•ÊâæÂ≠êËäÇÁÇπ * * @param treeNodes * @return */ public static &lt;T extends TreeNode&gt; T findChildren(T treeNode, List&lt;T&gt; treeNodes) &#123; for (T it : treeNodes) &#123; if (treeNode.getId() == it.getParentId()) &#123; if (treeNode.getChildren() == null) &#123; treeNode.setChildren(new ArrayList&lt;TreeNode&gt;()); &#125; treeNode.add(findChildren(it, treeNodes)); &#125; &#125; return treeNode; &#125; /** * ÈÄöËøásysMenuÂàõÂª∫Ê†ëÂΩ¢ËäÇÁÇπ * * @param menus * @param root * @return */ public static List&lt;MenuTree&gt; bulidTree(List&lt;SysMenu&gt; menus, int root) &#123; List&lt;MenuTree&gt; trees = new ArrayList&lt;MenuTree&gt;(); MenuTree node; for (SysMenu menu : menus) &#123; node = new MenuTree(); node.setId(menu.getMenuId()); node.setParentId(menu.getParentId()); node.setName(menu.getName()); node.setUrl(menu.getUrl()); node.setPath(menu.getPath()); node.setCode(menu.getPermission()); node.setLabel(menu.getName()); node.setComponent(menu.getComponent()); node.setIcon(menu.getIcon()); trees.add(node); &#125; return TreeUtil.bulid(trees, root); &#125;&#125; ÁîüÊàêavueÊ®°ÊùøÁ±ª123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100public class PigResourcesGenerator &#123; public static void main(String[] args) &#123; String outputDir = "/Users/lengleng/work/temp"; final String viewOutputDir = outputDir + "/view/"; AutoGenerator mpg = new AutoGenerator(); // ÂÖ®Â±ÄÈÖçÁΩÆ GlobalConfig gc = new GlobalConfig(); gc.setOutputDir(outputDir); gc.setFileOverride(true); gc.setActiveRecord(true); // XML ‰∫åÁ∫ßÁºìÂ≠ò gc.setEnableCache(false); // XML ResultMap gc.setBaseResultMap(true); // XML columList gc.setBaseColumnList(true); gc.setAuthor("lengleng"); mpg.setGlobalConfig(gc); // Êï∞ÊçÆÊ∫êÈÖçÁΩÆ DataSourceConfig dsc = new DataSourceConfig(); dsc.setDbType(DbType.MYSQL); dsc.setDriverName("com.mysql.jdbc.Driver"); dsc.setUsername("root"); dsc.setPassword("lengleng"); dsc.setUrl("jdbc:mysql://139.224.200.249:3309/pig?characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false"); mpg.setDataSource(dsc); // Á≠ñÁï•ÈÖçÁΩÆ StrategyConfig strategy = new StrategyConfig(); // strategy.setCapitalMode(true);// ÂÖ®Â±ÄÂ§ßÂÜôÂëΩÂêç ORACLE Ê≥®ÊÑè strategy.setSuperControllerClass("com.github.pig.common.web.BaseController"); // Ë°®ÂêçÁîüÊàêÁ≠ñÁï• strategy.setNaming(NamingStrategy.underline_to_camel); mpg.setStrategy(strategy); // ÂåÖÈÖçÁΩÆ PackageConfig pc = new PackageConfig(); pc.setParent("com.github.pig.admin"); pc.setController("controller"); mpg.setPackageInfo(pc); // Ê≥®ÂÖ•Ëá™ÂÆö‰πâÈÖçÁΩÆÔºåÂèØ‰ª•Âú® VM ‰∏≠‰ΩøÁî® cfg.abc ËÆæÁΩÆÁöÑÂÄº InjectionConfig cfg = new InjectionConfig() &#123; @Override public void initMap() &#123; &#125; &#125;; // ÁîüÊàêÁöÑÊ®°ÁâàË∑ØÂæÑÔºå‰∏çÂ≠òÂú®Êó∂ÈúÄË¶ÅÂÖàÊñ∞Âª∫ File viewDir = new File(viewOutputDir); if (!viewDir.exists()) &#123; viewDir.mkdirs(); &#125; List&lt;FileOutConfig&gt; focList = new ArrayList&lt;FileOutConfig&gt;(); focList.add(new FileOutConfig("/templates/listvue.vue.vm") &#123; @Override public String outputFile(TableInfo tableInfo) &#123; return getGeneratorViewPath(viewOutputDir, tableInfo, ".vue"); &#125; &#125;); cfg.setFileOutConfigList(focList); mpg.setCfg(cfg); //ÁîüÊàêcontrollerÁõ∏ÂÖ≥ mpg.execute(); &#125; /** * Ëé∑ÂèñÈÖçÁΩÆÊñá‰ª∂ * * @return ÈÖçÁΩÆProps */ private static Properties getProperties() &#123; // ËØªÂèñÈÖçÁΩÆÊñá‰ª∂ Resource resource = new ClassPathResource("/config/application.properties"); Properties props = new Properties(); try &#123; props = PropertiesLoaderUtils.loadProperties(resource); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; return props; &#125; /** * È°µÈù¢ÁîüÊàêÁöÑÊñá‰ª∂Âêç */ private static String getGeneratorViewPath(String viewOutputDir, TableInfo tableInfo, String suffixPath) &#123; String name = StringUtils.firstToLowerCase(tableInfo.getEntityName()); String path = viewOutputDir + "/" + name + "/index" + suffixPath; File viewDir = new File(path).getParentFile(); if (!viewDir.exists()) &#123; viewDir.mkdirs(); &#125; return path; &#125;&#125; velocityÊ®°Êùø 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788package $!&#123;package.Controller&#125;;import java.util.Map;import java.util.Date;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;import com.github.pig.common.constant.CommonConstant;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.baomidou.mybatisplus.plugins.Page;import com.github.pig.common.util.Query;import com.github.pig.common.util.R;import $!&#123;package.Entity&#125;.$!&#123;entity&#125;;import $!&#123;package.Service&#125;.$!&#123;entity&#125;Service;#if($!&#123;superControllerClassPackage&#125;)import $!&#123;superControllerClassPackage&#125;;#end/** * &lt;p&gt; * $!&#123;table.comment&#125; ÂâçÁ´ØÊéßÂà∂Âô® * &lt;/p&gt; * * @author $!&#123;author&#125; * @since $!&#123;date&#125; */@RestController@RequestMapping("/$!&#123;table.entityPath&#125;")public class $!&#123;table.controllerName&#125; extends $!&#123;superControllerClass&#125; &#123; @Autowired private $!&#123;entity&#125;Service $!&#123;table.entityPath&#125;Service; /** * ÈÄöËøáIDÊü•ËØ¢ * * @param id ID * @return $!&#123;entity&#125; */ @GetMapping("/&#123;id&#125;") public R&lt;$!&#123;entity&#125;&gt; get(@PathVariable Integer id) &#123; return new R&lt;&gt;($!&#123;table.entityPath&#125;Service.selectById(id)); &#125; /** * ÂàÜÈ°µÊü•ËØ¢‰ø°ÊÅØ * * @param params ÂàÜÈ°µÂØπË±° * @return ÂàÜÈ°µÂØπË±° */ @RequestMapping("/page") public Page page(@RequestParam Map&lt;String, Object&gt; params) &#123; params.put(CommonConstant.DEL_FLAG, CommonConstant.STATUS_NORMAL); return $!&#123;table.entityPath&#125;Service.selectPage(new Query&lt;&gt;(params), new EntityWrapper&lt;&gt;()); &#125; /** * Ê∑ªÂä† * @param $!&#123;table.entityPath&#125; ÂÆû‰Ωì * @return success/false */ @PostMapping public R&lt;Boolean&gt; add(@RequestBody $!&#123;entity&#125; $!&#123;table.entityPath&#125;) &#123; return new R&lt;&gt;($!&#123;table.entityPath&#125;Service.insert($!&#123;table.entityPath&#125;)); &#125; /** * Âà†Èô§ * @param id ID * @return success/false */ @DeleteMapping("/&#123;id&#125;") public R&lt;Boolean&gt; delete(@PathVariable Integer id) &#123; $!&#123;entity&#125; $!&#123;table.entityPath&#125; = new $!&#123;entity&#125;(); $!&#123;table.entityPath&#125;.setId(id); $!&#123;table.entityPath&#125;.setUpdateTime(new Date()); $!&#123;table.entityPath&#125;.setDelFlag(CommonConstant.STATUS_DEL); return new R&lt;&gt;($!&#123;table.entityPath&#125;Service.updateById($!&#123;table.entityPath&#125;)); &#125; /** * ÁºñËæë * @param $!&#123;table.entityPath&#125; ÂÆû‰Ωì * @return success/false */ @PutMapping public R&lt;Boolean&gt; edit(@RequestBody $!&#123;entity&#125; $!&#123;table.entityPath&#125;) &#123; $!&#123;table.entityPath&#125;.setUpdateTime(new Date()); return new R&lt;&gt;($!&#123;table.entityPath&#125;Service.updateById($!&#123;table.entityPath&#125;)); &#125;&#125; ÁºìÂ≠òÂú®ÈÉ®ÂàÜÂÆûÁé∞Á±ª‰∏≠ÔºåÊàë‰ª¨ÁúãÂà∞‰∫Ü‰ΩúËÄÖ‰ΩøÁî®‰∫Üspring cacheÁõ∏ÂÖ≥ÁöÑÊ≥®Ëß£„ÄÇÁé∞Âú®Êàë‰ª¨ÂõûÂøÜ‰∏Ä‰∏ãÁõ∏ÂÖ≥ÁºìÂ≠òÊ≥®Ëß£ÁöÑÂê´‰πâÔºö @Cacheable:Áî®Êù•ÂÆö‰πâÁºìÂ≠òÁöÑ„ÄÇÂ∏∏Áî®Âà∞ÊòØvalue,key;ÂàÜÂà´Áî®Êù•ÊåáÊòéÁºìÂ≠òÁöÑÂêçÁß∞ÂíåÊñπÊ≥ï‰∏≠ÂèÇÊï∞ÔºåÂØπ‰∫évalue‰Ω†‰πüÂèØ‰ª•‰ΩøÁî®cacheNameÔºåÂú®Êü•ÁúãÊ∫ê‰ª£Á†ÅÊòØÊàë‰ª¨ÂèØ‰ª•ÁúãÂà∞Ôºö‰∏§ËÄÖÊòØÊåáÁöÑÂêå‰∏Ä‰∏™‰∏úË•ø„ÄÇ @CacheEvict:Áî®Êù•Ê∏ÖÁêÜÁºìÂ≠ò„ÄÇÂ∏∏Áî®ÊúâcacheNamesÔºåallEntriesÔºàÈªòËÆ§ÂÄºfalseÔºâÔºõÂàÜÂà´‰ª£Ë°®‰∫ÜË¶ÅÊ∏ÖÈô§ÁöÑÁºìÂ≠òÂêçÁß∞ÂíåÊòØÂê¶ÂÖ®ÈÉ®Ê∏ÖÈô§(true‰ª£Ë°®ÂÖ®ÈÉ®Ê∏ÖÈô§)„ÄÇ @CachePut:Áî®Êù•Êõ¥Êñ∞ÁºìÂ≠òÔºåÁî®ÂÆÉÊù•Ê≥®Ëß£ÁöÑÊñπÊ≥ïÈÉΩ‰ºöË¢´ÊâßË°åÔºåÊâßË°åÂÆåÂêéÁªìÊûúË¢´Ê∑ªÂä†Âà∞ÁºìÂ≠ò‰∏≠„ÄÇËØ•ÊñπÊ≥ï‰∏çËÉΩÂíå@CacheableÂêåÊó∂Âú®Âêå‰∏Ä‰∏™ÊñπÊ≥ï‰∏ä‰ΩøÁî®„ÄÇ ÂêéÂè∞Ë∑ëÊâπÂÆöÊó∂‰ªªÂä°Ê®°ÂùóElastic-JobÊòØddframe‰∏≠dd-jobÁöÑ‰Ωú‰∏öÊ®°Âùó‰∏≠ÂàÜÁ¶ªÂá∫Êù•ÁöÑÂàÜÂ∏ÉÂºèÂºπÊÄß‰Ωú‰∏öÊ°ÜÊû∂„ÄÇÂéªÊéâ‰∫ÜÂíådd-job‰∏≠ÁöÑÁõëÊéßÂíåddframeÊé•ÂÖ•ËßÑËåÉÈÉ®ÂàÜ„ÄÇËØ•È°πÁõÆÂü∫‰∫éÊàêÁÜüÁöÑÂºÄÊ∫ê‰∫ßÂìÅQuartzÂíåZookeeperÂèäÂÖ∂ÂÆ¢Êà∑Á´ØCuratorËøõË°å‰∫åÊ¨°ÂºÄÂèë„ÄÇ‰∏ªË¶ÅÂäüËÉΩÂ¶Ç‰∏ãÔºö ÂÆöÊó∂‰ªªÂä°Ôºö Âü∫‰∫éÊàêÁÜüÁöÑÂÆöÊó∂‰ªªÂä°‰Ωú‰∏öÊ°ÜÊû∂Quartz cronË°®ËææÂºèÊâßË°åÂÆöÊó∂‰ªªÂä°„ÄÇ ‰Ωú‰∏öÊ≥®ÂÜå‰∏≠ÂøÉÔºö Âü∫‰∫éZookeeperÂíåÂÖ∂ÂÆ¢Êà∑Á´ØCuratorÂÆûÁé∞ÁöÑÂÖ®Â±Ä‰Ωú‰∏öÊ≥®ÂÜåÊéßÂà∂‰∏≠ÂøÉ„ÄÇÁî®‰∫éÊ≥®ÂÜåÔºåÊéßÂà∂ÂíåÂçèË∞ÉÂàÜÂ∏ÉÂºè‰Ωú‰∏öÊâßË°å„ÄÇ ‰Ωú‰∏öÂàÜÁâáÔºö Â∞Ü‰∏Ä‰∏™‰ªªÂä°ÂàÜÁâáÊàê‰∏∫Â§ö‰∏™Â∞è‰ªªÂä°È°πÂú®Â§öÊúçÂä°Âô®‰∏äÂêåÊó∂ÊâßË°å„ÄÇ ÂºπÊÄßÊâ©ÂÆπÁº©ÂÆπÔºö ËøêË°å‰∏≠ÁöÑ‰Ωú‰∏öÊúçÂä°Âô®Â¥©Ê∫ÉÔºåÊàñÊñ∞Â¢ûÂä†nÂè∞‰Ωú‰∏öÊúçÂä°Âô®Ôºå‰Ωú‰∏öÊ°ÜÊû∂Â∞ÜÂú®‰∏ãÊ¨°‰Ωú‰∏öÊâßË°åÂâçÈáçÊñ∞ÂàÜÁâáÔºå‰∏çÂΩ±ÂìçÂΩìÂâç‰Ωú‰∏öÊâßË°å„ÄÇ ÊîØÊåÅÂ§öÁßç‰Ωú‰∏öÊâßË°åÊ®°ÂºèÔºö ÊîØÊåÅOneOffÔºåPerpetualÂíåSequencePerpetual‰∏âÁßç‰Ωú‰∏öÊ®°Âºè„ÄÇ Â§±ÊïàËΩ¨ÁßªÔºö ËøêË°å‰∏≠ÁöÑ‰Ωú‰∏öÊúçÂä°Âô®Â¥©Ê∫É‰∏ç‰ºöÂØºËá¥ÈáçÊñ∞ÂàÜÁâáÔºåÂè™‰ºöÂú®‰∏ãÊ¨°‰Ωú‰∏öÂêØÂä®Êó∂ÂàÜÁâá„ÄÇÂêØÁî®Â§±ÊïàËΩ¨ÁßªÂäüËÉΩÂèØ‰ª•Âú®Êú¨Ê¨°‰Ωú‰∏öÊâßË°åËøáÁ®ã‰∏≠ÔºåÁõëÊµãÂÖ∂‰ªñ‰Ωú‰∏öÊúçÂä°Âô®Á©∫Èó≤ÔºåÊäìÂèñÊú™ÂÆåÊàêÁöÑÂ≠§ÂÑøÂàÜÁâáÈ°πÊâßË°å„ÄÇ ËøêË°åÊó∂Áä∂ÊÄÅÊî∂ÈõÜÔºö ÁõëÊéß‰Ωú‰∏öËøêË°åÊó∂Áä∂ÊÄÅÔºåÁªüËÆ°ÊúÄËøë‰∏ÄÊÆµÊó∂Èó¥Â§ÑÁêÜÁöÑÊï∞ÊçÆÊàêÂäüÂíåÂ§±Ë¥•Êï∞ÈáèÔºåËÆ∞ÂΩï‰Ωú‰∏ö‰∏äÊ¨°ËøêË°åÂºÄÂßãÊó∂Èó¥ÔºåÁªìÊùüÊó∂Èó¥Âíå‰∏ãÊ¨°ËøêË°åÊó∂Èó¥„ÄÇ ‰Ωú‰∏öÂÅúÊ≠¢ÔºåÊÅ¢Â§çÂíåÁ¶ÅÁî®ÔºöÁî®‰∫éÊìç‰Ωú‰Ωú‰∏öÂêØÂÅúÔºåÂπ∂ÂèØ‰ª•Á¶ÅÊ≠¢Êüê‰Ωú‰∏öËøêË°åÔºà‰∏äÁ∫øÊó∂Â∏∏Áî®Ôºâ„ÄÇ Ë¢´ÈîôËøáÊâßË°åÁöÑ‰Ωú‰∏öÈáçËß¶ÂèëÔºöËá™Âä®ËÆ∞ÂΩïÈîôËøáÊâßË°åÁöÑ‰Ωú‰∏öÔºåÂπ∂Âú®‰∏äÊ¨°‰Ωú‰∏öÂÆåÊàêÂêéËá™Âä®Ëß¶Âèë„ÄÇÂèØÂèÇËÄÉQuartzÁöÑmisfire„ÄÇ Â§öÁ∫øÁ®ãÂø´ÈÄüÂ§ÑÁêÜÊï∞ÊçÆÔºö‰ΩøÁî®Â§öÁ∫øÁ®ãÂ§ÑÁêÜÊäìÂèñÂà∞ÁöÑÊï∞ÊçÆÔºåÊèêÂçáÂêûÂêêÈáè„ÄÇ ÂπÇÁ≠âÊÄßÔºöÈáçÂ§ç‰Ωú‰∏ö‰ªªÂä°È°πÂà§ÂÆöÔºå‰∏çÈáçÂ§çÊâßË°åÂ∑≤ËøêË°åÁöÑ‰Ωú‰∏ö‰ªªÂä°È°π„ÄÇÁî±‰∫éÂºÄÂêØÂπÇÁ≠âÊÄßÈúÄË¶ÅÁõëÂê¨‰Ωú‰∏öËøêË°åÁä∂ÊÄÅÔºåÂØπÁû¨Êó∂ÂèçÂ§çËøêË°åÁöÑ‰Ωú‰∏öÂØπÊÄßËÉΩÊúâËæÉÂ§ßÂΩ±Âìç„ÄÇ ÂÆπÈîôÂ§ÑÁêÜÔºö‰Ωú‰∏öÊúçÂä°Âô®‰∏éZookeeperÊúçÂä°Âô®ÈÄö‰ø°Â§±Ë¥•ÂàôÁ´ãÂç≥ÂÅúÊ≠¢‰Ωú‰∏öËøêË°åÔºåÈò≤Ê≠¢‰Ωú‰∏öÊ≥®ÂÜå‰∏≠ÂøÉÂ∞ÜÂ§±ÊïàÁöÑÂàÜÁâáÂàÜÈ°πÈÖçÁªôÂÖ∂‰ªñ‰Ωú‰∏öÊúçÂä°Âô®ÔºåËÄåÂΩìÂâç‰Ωú‰∏öÊúçÂä°Âô®‰ªçÂú®ÊâßË°å‰ªªÂä°ÔºåÂØºËá¥ÈáçÂ§çÊâßË°å„ÄÇ SpringÊîØÊåÅÔºöÊîØÊåÅspringÂÆπÂô®ÔºåËá™ÂÆö‰πâÂëΩÂêçÁ©∫Èó¥ÔºåÊîØÊåÅÂç†‰ΩçÁ¨¶„ÄÇ ËøêÁª¥Âπ≥Âè∞ÔºöÊèê‰æõËøêÁª¥ÁïåÈù¢ÔºåÂèØ‰ª•ÁÆ°ÁêÜ‰Ωú‰∏öÂíåÊ≥®ÂÜå‰∏≠ÂøÉ„ÄÇ ÈÖçÁΩÆ‰ΩúËÄÖÁõ¥Êé•‰ΩøÁî®‰∫ÜÂºÄÊ∫êÈ°πÁõÆÁöÑÈÖçÁΩÆÔºåÊàëÈ°∫ÁùÄ‰ªñÁöÑpomÊñá‰ª∂ÊâæÂà∞‰∫ÜËøôÂÆ∂ÁöÑgithubÔºåÂú∞ÂùÄÂ¶Ç‰∏ã https://github.com/xjzrc/elastic-job-lite-spring-boot-starter Â∑•‰ΩúÊµÅ‰Ωú‰∏öÈÖçÁΩÆ1234567891011121314@ElasticJobConfig(cron = "0 0 0/1 * * ? ", shardingTotalCount = 3, shardingItemParameters = "0=Beijing,1=Shanghai,2=Guangzhou")public class PigDataflowJob implements DataflowJob&lt;Integer&gt; &#123; @Override public List&lt;Integer&gt; fetchData(ShardingContext shardingContext) &#123; return null; &#125; @Override public void processData(ShardingContext shardingContext, List&lt;Integer&gt; list) &#123; &#125;&#125; ÊµãËØï‰ª£Á†Å1234567891011121314151617@Slf4j@ElasticJobConfig(cron = "0 0 0/1 * * ?", shardingTotalCount = 3, shardingItemParameters = "0=pig1,1=pig2,2=pig3", startedTimeoutMilliseconds = 5000L, completedTimeoutMilliseconds = 10000L, eventTraceRdbDataSource = "dataSource")public class PigSimpleJob implements SimpleJob &#123; /** * ‰∏öÂä°ÊâßË°åÈÄªËæë * * @param shardingContext ÂàÜÁâá‰ø°ÊÅØ */ @Override public void execute(ShardingContext shardingContext) &#123; log.info("shardingContext:&#123;&#125;", shardingContext); &#125;&#125; ÂºÄÊ∫êÁâàÂØπËøô‰∏™ÊîØÊåÅÊúâÈôêÔºåÁ≠âÂà∞ÊãøÂà∞Êî∂Ë¥πÁâàÊàëÂú®ÂÅöÂàÜÊûê„ÄÇ Ê∂àÊÅØ‰∏≠ÂøÉËøôÈáåÁöÑÊ∂àÊÅØ‰∏≠ÂøÉ‰∏ªË¶ÅÊòØÈõÜÊàê‰∫ÜÈíâÈíâÊúçÂä°ÂíåÈòøÈáåÂ§ßÈ±ºÁü≠ÊÅØÊúçÂä° ÈíâÈíâÈÖçÁΩÆÈíâÈíâÊòØÁõ∏ÂΩìÁÆÄÂçï‰∫ÜÔºåÂè™ÈúÄË¶Å‰∏Ä‰∏™webhook‰ø°ÊÅØÂ∞±Â§ü‰∫Ü„ÄÇ webhookÊòØ‰∏ÄÁßçwebÂõûË∞ÉÊàñËÄÖhttpÁöÑpush APIÔºåÊòØÂêëAPPÊàñËÄÖÂÖ∂‰ªñÂ∫îÁî®Êèê‰æõÂÆûÊó∂‰ø°ÊÅØÁöÑ‰∏ÄÁßçÊñπÂºè„ÄÇWebhookÂú®Êï∞ÊçÆ‰∫ßÁîüÊó∂Á´ãÂç≥ÂèëÈÄÅÊï∞ÊçÆÔºå‰πüÂ∞±ÊòØ‰Ω†ËÉΩÂÆûÊó∂Êî∂Âà∞Êï∞ÊçÆ„ÄÇËøô‰∏ÄÁßç‰∏çÂêå‰∫éÂÖ∏ÂûãÁöÑAPIÔºåÈúÄË¶ÅÁî®‰∫ÜÂÆûÊó∂ÊÄßÈúÄË¶ÅË∂≥Â§üÂø´ÁöÑËΩÆËØ¢„ÄÇËøôÊó†ËÆ∫ÊòØÂØπÁîü‰∫ßËøòÊòØÂØπÊ∂àË¥πËÄÖÈÉΩÊòØÈ´òÊïàÁöÑÔºåÂîØ‰∏ÄÁöÑÁº∫ÁÇπÊòØÂàùÂßãÂª∫Á´ãÂõ∞Èöæ„ÄÇWebhookÊúâÊó∂‰πüË¢´Áß∞‰∏∫ÂèçÂêëAPIÔºåÂõ†‰∏∫‰ªñÊèê‰æõ‰∫ÜAPIËßÑÂàôÔºå‰Ω†ÈúÄË¶ÅËÆæËÆ°Ë¶Å‰ΩøÁî®ÁöÑAPI„ÄÇWebhookÂ∞ÜÂêë‰Ω†ÁöÑÂ∫îÁî®ÂèëËµ∑httpËØ∑Ê±ÇÔºåÂÖ∏ÂûãÁöÑÊòØpostËØ∑Ê±ÇÔºåÂ∫îÁî®Á®ãÂ∫èÁî±ËØ∑Ê±ÇÈ©±Âä®„ÄÇ 123456789@Data@Configuration@ConfigurationProperties(prefix = "sms.dingtalk")public class DingTalkPropertiesConfig &#123; /** * webhook */ private String webhook;&#125; Ê∂àÊÅØÊ®°Êùø123456789101112131415161718192021222324252627282930313233343536373839404142434445/** * @author lengleng * @date 2018/1/15 * ÈíâÈíâÊ∂àÊÅØÊ®°Êùø * msgtype : text * text : &#123;"content":"ÊúçÂä°: pig-upms-service Áä∂ÊÄÅÔºöUP"&#125; */@Data@ToStringpublic class DingTalkMsgTemplate implements Serializable &#123; private String msgtype; private TextBean text; public String getMsgtype() &#123; return msgtype; &#125; public void setMsgtype(String msgtype) &#123; this.msgtype = msgtype; &#125; public TextBean getText() &#123; return text; &#125; public void setText(TextBean text) &#123; this.text = text; &#125; public static class TextBean &#123; /** * content : ÊúçÂä°: pig-upms-service Áä∂ÊÄÅÔºöUP */ private String content; public String getContent() &#123; return content; &#125; public void setContent(String content) &#123; this.content = content; &#125; &#125;&#125; ÁõëÂê¨‰ΩøÁî®ÈòüÂàóÊó∂Êó∂ÁõëÂê¨ 12345678910111213141516@Slf4j@Component@RabbitListener(queues = MqQueueConstant.DINGTALK_SERVICE_STATUS_CHANGE)public class DingTalkServiceChangeReceiveListener &#123; @Autowired private DingTalkMessageHandler dingTalkMessageHandler; @RabbitHandler public void receive(String text) &#123; long startTime = System.currentTimeMillis(); log.info("Ê∂àÊÅØ‰∏≠ÂøÉÊé•Êî∂Âà∞ÈíâÈíâÂèëÈÄÅËØ∑Ê±Ç-&gt; ÂÜÖÂÆπÔºö&#123;&#125; ", text); dingTalkMessageHandler.process(text); long useTime = System.currentTimeMillis() - startTime; log.info("Ë∞ÉÁî® ÈíâÈíâÁΩëÂÖ≥Â§ÑÁêÜÂÆåÊØïÔºåËÄóÊó∂ &#123;&#125;ÊØ´Áßí", useTime); &#125;&#125; ÂèëÈÄÅ‰ΩøÁî®ÈòüÂàóÂèëÈÄÅ 12345678910111213141516171819202122232425262728@Slf4j@Componentpublic class DingTalkMessageHandler &#123; @Autowired private DingTalkPropertiesConfig dingTalkPropertiesConfig; /** * ‰∏öÂä°Â§ÑÁêÜ * * @param text Ê∂àÊÅØ */ public boolean process(String text) &#123; String webhook = dingTalkPropertiesConfig.getWebhook(); if (StrUtil.isBlank(webhook)) &#123; log.error("ÈíâÈíâÈÖçÁΩÆÈîôËØØÔºåwebhook‰∏∫Á©∫"); return false; &#125; DingTalkMsgTemplate dingTalkMsgTemplate = new DingTalkMsgTemplate(); dingTalkMsgTemplate.setMsgtype("text"); DingTalkMsgTemplate.TextBean textBean = new DingTalkMsgTemplate.TextBean(); textBean.setContent(text); dingTalkMsgTemplate.setText(textBean); String result = HttpUtil.post(webhook, JSONObject.toJSONString(dingTalkMsgTemplate)); log.info("ÈíâÈíâÊèêÈÜíÊàêÂäü,Êä•ÊñáÂìçÂ∫î:&#123;&#125;", result); return true; &#125;&#125; ÈòøÈáåÂ§ßÈ±ºÁü≠ÊÅØÊúçÂä°ÈÖçÁΩÆ1234567891011121314151617181920@Data@Configuration@ConditionalOnExpression("!'$&#123;sms.aliyun&#125;'.isEmpty()")@ConfigurationProperties(prefix = "sms.aliyun")public class SmsAliyunPropertiesConfig &#123; /** * Â∫îÁî®ID */ private String accessKey; /** * Â∫îÁî®ÁßòÈí• */ private String secretKey; /** * Áü≠‰ø°Ê®°ÊùøÈÖçÁΩÆ */ private Map&lt;String, String&gt; channels;&#125; ÁõëÂê¨123456789101112131415161718192021222324@Slf4j@Component@RabbitListener(queues = MqQueueConstant.MOBILE_SERVICE_STATUS_CHANGE)public class MobileServiceChangeReceiveListener &#123; @Autowired private Map&lt;String, SmsMessageHandler&gt; messageHandlerMap; @RabbitHandler public void receive(MobileMsgTemplate mobileMsgTemplate) &#123; long startTime = System.currentTimeMillis(); log.info("Ê∂àÊÅØ‰∏≠ÂøÉÊé•Êî∂Âà∞Áü≠‰ø°ÂèëÈÄÅËØ∑Ê±Ç-&gt; ÊâãÊú∫Âè∑Ôºö&#123;&#125; -&gt; ‰ø°ÊÅØ‰ΩìÔºö&#123;&#125; ", mobileMsgTemplate.getMobile(), mobileMsgTemplate.getContext()); String channel = mobileMsgTemplate.getChannel(); SmsMessageHandler messageHandler = messageHandlerMap.get(channel); if (messageHandler == null) &#123; log.error("Ê≤°ÊúâÊâæÂà∞ÊåáÂÆöÁöÑË∑ØÁî±ÈÄöÈÅìÔºå‰∏çËøõË°åÂèëÈÄÅÂ§ÑÁêÜÂÆåÊØïÔºÅ"); return; &#125; messageHandler.execute(mobileMsgTemplate); long useTime = System.currentTimeMillis() - startTime; log.info("Ë∞ÉÁî® &#123;&#125; Áü≠‰ø°ÁΩëÂÖ≥Â§ÑÁêÜÂÆåÊØïÔºåËÄóÊó∂ &#123;&#125;ÊØ´Áßí", mobileMsgTemplate.getType(), useTime); &#125;&#125; ÂèëÈÄÅ‰∏çÈîôÁöÑÊ®°Êùø 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576@Slf4j@Component(CommonConstant.ALIYUN_SMS)public class SmsAliyunMessageHandler extends AbstractMessageHandler &#123; @Autowired private SmsAliyunPropertiesConfig smsAliyunPropertiesConfig; private static final String PRODUCT = "Dysmsapi"; private static final String DOMAIN = "dysmsapi.aliyuncs.com"; /** * Êï∞ÊçÆÊ†°È™å * * @param mobileMsgTemplate Ê∂àÊÅØ */ @Override public void check(MobileMsgTemplate mobileMsgTemplate) &#123; Assert.isBlank(mobileMsgTemplate.getMobile(), "ÊâãÊú∫Âè∑‰∏çËÉΩ‰∏∫Á©∫"); Assert.isBlank(mobileMsgTemplate.getContext(), "Áü≠‰ø°ÂÜÖÂÆπ‰∏çËÉΩ‰∏∫Á©∫"); &#125; /** * ‰∏öÂä°Â§ÑÁêÜ * * @param mobileMsgTemplate Ê∂àÊÅØ */ @Override public boolean process(MobileMsgTemplate mobileMsgTemplate) &#123; //ÂèØËá™Âä©Ë∞ÉÊï¥Ë∂ÖÊó∂Êó∂Èó¥ System.setProperty("sun.net.client.defaultConnectTimeout", "10000"); System.setProperty("sun.net.client.defaultReadTimeout", "10000"); //ÂàùÂßãÂåñacsClient,ÊöÇ‰∏çÊîØÊåÅregionÂåñ IClientProfile profile = DefaultProfile.getProfile("cn-hangzhou", smsAliyunPropertiesConfig.getAccessKey(), smsAliyunPropertiesConfig.getSecretKey()); try &#123; DefaultProfile.addEndpoint("cn-hou", "cn-hangzhou", PRODUCT, DOMAIN); &#125; catch (ClientException e) &#123; log.error("ÂàùÂßãÂåñSDK ÂºÇÂ∏∏", e); e.printStackTrace(); &#125; IAcsClient acsClient = new DefaultAcsClient(profile); //ÁªÑË£ÖËØ∑Ê±ÇÂØπË±°-ÂÖ∑‰ΩìÊèèËø∞ËßÅÊéßÂà∂Âè∞-ÊñáÊ°£ÈÉ®ÂàÜÂÜÖÂÆπ SendSmsRequest request = new SendSmsRequest(); //ÂøÖÂ°´:ÂæÖÂèëÈÄÅÊâãÊú∫Âè∑ request.setPhoneNumbers(mobileMsgTemplate.getMobile()); //ÂøÖÂ°´:Áü≠‰ø°Á≠æÂêç-ÂèØÂú®Áü≠‰ø°ÊéßÂà∂Âè∞‰∏≠ÊâæÂà∞ request.setSignName(mobileMsgTemplate.getSignName()); //ÂøÖÂ°´:Áü≠‰ø°Ê®°Êùø-ÂèØÂú®Áü≠‰ø°ÊéßÂà∂Âè∞‰∏≠ÊâæÂà∞ request.setTemplateCode(smsAliyunPropertiesConfig.getChannels().get(mobileMsgTemplate.getTemplate())); //ÂèØÈÄâ:Ê®°Êùø‰∏≠ÁöÑÂèòÈáèÊõøÊç¢JSON‰∏≤,Â¶ÇÊ®°ÊùøÂÜÖÂÆπ‰∏∫"‰∫≤Áà±ÁöÑ$&#123;name&#125;,ÊÇ®ÁöÑÈ™åËØÅÁ†Å‰∏∫$&#123;code&#125;" request.setTemplateParam(mobileMsgTemplate.getContext()); request.setOutId(mobileMsgTemplate.getMobile()); //hint Ê≠§Â§ÑÂèØËÉΩ‰ºöÊäõÂá∫ÂºÇÂ∏∏ÔºåÊ≥®ÊÑècatch try &#123; SendSmsResponse sendSmsResponse = acsClient.getAcsResponse(request); log.info("Áü≠‰ø°ÂèëÈÄÅÂÆåÊØïÔºåÊâãÊú∫Âè∑Ôºö&#123;&#125;ÔºåËøîÂõûÁä∂ÊÄÅÔºö&#123;&#125;", mobileMsgTemplate.getMobile(), sendSmsResponse.getCode()); &#125; catch (ClientException e) &#123; log.error("ÂèëÈÄÅÂºÇÂ∏∏"); e.printStackTrace(); &#125; return true; &#125; /** * Â§±Ë¥•Â§ÑÁêÜ * * @param mobileMsgTemplate Ê∂àÊÅØ */ @Override public void fail(MobileMsgTemplate mobileMsgTemplate) &#123; log.error("Áü≠‰ø°ÂèëÈÄÅÂ§±Ë¥• -&gt; ÁΩëÂÖ≥Ôºö&#123;&#125; -&gt; ÊâãÊú∫Âè∑Ôºö&#123;&#125;", mobileMsgTemplate.getType(), mobileMsgTemplate.getMobile()); &#125;&#125; ËµÑÊ∫êËÆ§ËØÅÊúçÂä°Âô® ÔºàÂçïÁÇπÁôªÈôÜÂäüËÉΩÔºâÁî±‰∫é‰ΩúËÄÖÂú®ËÆ§ËØÅ‰∏≠ÂøÉ‰ΩøÁî®‰∫Üspring security oauthÊ°ÜÊû∂ÔºåÊâÄ‰ª•ÈúÄË¶ÅÂú®ÂæÆÊúçÂä°ÁöÑÂÆ¢Êà∑Á´ØÂÆûÁé∞‰∏Ä‰∏™ËµÑÊ∫êËÆ§ËØÅÊúçÂä°Âô®ÔºåÊù•ÂÆåÊàêSSOÈúÄÊ±Ç„ÄÇ ÈÖçÁΩÆÊö¥Èú≤ÁõëÊéß‰ø°ÊÅØ 1234567891011121314@Configuration@EnableResourceServerpublic class ResourceServerConfiguration extends ResourceServerConfigurerAdapter &#123; @Override public void configure(HttpSecurity http) throws Exception &#123; http .authorizeRequests() .anyRequest().authenticated() .and() .csrf().disable(); &#125;&#125; Êé•Âè£123456789@EnableOAuth2Sso@SpringBootApplicationpublic class PigSsoClientDemoApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(PigSsoClientDemoApplication.class, args); &#125;&#125; ÁõëÊéßÊ®°Âùóspringboot adminÈÖçÁΩÆRemindingNotifier‰ºöÂú®Â∫îÁî®‰∏äÁ∫øÊàñÂÆïÊéâÁöÑÊó∂ÂÄôÂèëÈÄÅÊèêÈÜíÔºå‰πüÂ∞±ÊòØÊäänotificationsÂèëÈÄÅÁªôÂÖ∂‰ªñÁöÑnotifierÔºånotifierÁöÑÂÆûÁé∞ÂæàÊúâÊÑèÊÄùÔºå‰∏çÊ∑±Á©∂‰∫ÜÔºå‰ªéÁ±ªÂÖ≥Á≥ªÂèØ‰ª•Áü•ÈÅìÔºåÊàë‰ª¨ÂèØ‰ª•‰ª•Ëøô‰πàÂá†ÁßçÊñπÂºèÂèëÈÄÅnotificationsÔºöPagerduty„ÄÅHipchat „ÄÅSlack „ÄÅMail„ÄÅ Reminder 12345678910111213141516171819202122232425@Configuration public static class NotifierConfig &#123; @Bean @Primary public RemindingNotifier remindingNotifier() &#123; RemindingNotifier notifier = new RemindingNotifier(filteringNotifier(loggerNotifier())); notifier.setReminderPeriod(TimeUnit.SECONDS.toMillis(10)); return notifier; &#125; @Scheduled(fixedRate = 1_000L) public void remind() &#123; remindingNotifier().sendReminders(); &#125; @Bean public FilteringNotifier filteringNotifier(Notifier delegate) &#123; return new FilteringNotifier(delegate); &#125; @Bean public LoggingNotifier loggerNotifier() &#123; return new LoggingNotifier(); &#125; &#125; Áü≠‰ø°ÊúçÂä°‰∏ãÁ∫øÈÄöÁü•ÁªßÊâøAbstractStatusChangeNotifierÔºåÂ∞ÜÁü≠‰ø°ÊúçÂä°Ê≥®ÂÜåÂà∞spring boot admin‰∏≠„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758@Slf4jpublic class StatusChangeNotifier extends AbstractStatusChangeNotifier &#123; private RabbitTemplate rabbitTemplate; private MonitorPropertiesConfig monitorMobilePropertiesConfig; public StatusChangeNotifier(MonitorPropertiesConfig monitorMobilePropertiesConfig, RabbitTemplate rabbitTemplate) &#123; this.rabbitTemplate = rabbitTemplate; this.monitorMobilePropertiesConfig = monitorMobilePropertiesConfig; &#125; /** * ÈÄöÁü•ÈÄªËæë * * @param event ‰∫ã‰ª∂ * @throws Exception ÂºÇÂ∏∏ */ @Override protected void doNotify(ClientApplicationEvent event) &#123; if (event instanceof ClientApplicationStatusChangedEvent) &#123; log.info("Application &#123;&#125; (&#123;&#125;) is &#123;&#125;", event.getApplication().getName(), event.getApplication().getId(), ((ClientApplicationStatusChangedEvent) event).getTo().getStatus()); String text = String.format("Â∫îÁî®:%s ÊúçÂä°ID:%s Áä∂ÊÄÅÊîπÂèò‰∏∫Ôºö%sÔºåÊó∂Èó¥Ôºö%s" , event.getApplication().getName() , event.getApplication().getId() , ((ClientApplicationStatusChangedEvent) event).getTo().getStatus() , DateUtil.date(event.getTimestamp()).toString()); JSONObject contextJson = new JSONObject(); contextJson.put("name", event.getApplication().getName()); contextJson.put("seid", event.getApplication().getId()); contextJson.put("time", DateUtil.date(event.getTimestamp()).toString()); //ÂºÄÂêØÁü≠‰ø°ÈÄöÁü• if (monitorMobilePropertiesConfig.getMobile().getEnabled()) &#123; log.info("ÂºÄÂßãÁü≠‰ø°ÈÄöÁü•ÔºåÂÜÖÂÆπÔºö&#123;&#125;", text); rabbitTemplate.convertAndSend(MqQueueConstant.MOBILE_SERVICE_STATUS_CHANGE, new MobileMsgTemplate( CollUtil.join(monitorMobilePropertiesConfig.getMobile().getMobiles(), ","), contextJson.toJSONString(), CommonConstant.ALIYUN_SMS, EnumSmsChannelTemplate.SERVICE_STATUS_CHANGE.getSignName(), EnumSmsChannelTemplate.SERVICE_STATUS_CHANGE.getTemplate() )); &#125; if (monitorMobilePropertiesConfig.getDingTalk().getEnabled()) &#123; log.info("ÂºÄÂßãÈíâÈíâÈÄöÁü•ÔºåÂÜÖÂÆπÔºö&#123;&#125;", text); rabbitTemplate.convertAndSend(MqQueueConstant.DINGTALK_SERVICE_STATUS_CHANGE, text); &#125; &#125; else &#123; log.info("Application &#123;&#125; (&#123;&#125;) &#123;&#125;", event.getApplication().getName(), event.getApplication().getId(), event.getType()); &#125; &#125;&#125; zipkin ÈìæË∑ØËøΩË∏™Áî±‰∫ézipkinÊòØ‰æµÂÖ•ÂºèÔºåÂõ†Ê≠§ËøôÈÉ®ÂàÜÁªÑ‰ª∂Ê≤°Êúâ‰ª£Á†ÅÔºåÂè™ÊúâÁõ∏ÂÖ≥‰æùËµñ„ÄÇ‰∏ãÈù¢ÂàÜ‰∫´‰∏Ä‰∏ã‰ΩúËÄÖÁöÑyaml DB1234567891011121314151617181920server: port: 5003# datasoureÈªòËÆ§‰ΩøÁî®JDBCspring: datasource: driver-class-name: com.mysql.jdbc.Driver username: root password: ENC(gc16brBHPNq27HsjaULgKGq00Rz6ZUji) url: jdbc:mysql://127.0.0.1:3309/pig?characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=falsezipkin: collector: rabbitmq: addresses: 127.0.0.1:5682 password: lengleng username: pig queue: zipkin storage: type: mysql ELK12345678910111213141516171819202122232425262728293031323334353637server: port: 5002zipkin: collector: rabbitmq: addresses: 127.0.0.1:5682 password: lengleng username: pig queue: zipkin storage: type: elasticsearch elasticsearch: hosts: 127.0.0.1:9200 cluster: elasticsearch index: zipkin max-requests: 64 index-shards: 5 index-replicas: 1 Áª≠1sÊó∂Èó¥ÂÖ®ÁâáÁªìÊùüÔºåËßâÂæóÊàëÂÜôÁöÑ‰∏çÈîôÔºüÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËµ∂Âø´ÊâìÂºÄÊàëÁöÑüëâ‰∏™‰∫∫ÂçöÂÆ¢ üëàÂêßÔºÅ Ë∞¢Ë∞¢‰Ω†ÈÇ£‰πàÂèØÁà±ÔºåËøò‰∏ÄÁõ¥ÂÖ≥Ê≥®ÁùÄÊàë~‚ù§üòù]]></content>
      <tags>
        <tag>Ê∫êÁ†Å</tag>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂºÄÊ∫êÈ°πÁõÆCloud-AdminÂàÜÊûê‰∏éÂ≠¶‰π†]]></title>
    <url>%2F2018%2F12%2F10%2F%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AECloud-Admin%E5%88%86%E6%9E%90%E4%B8%8E%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[Ââç‰∏ÄÊÆµÊó∂Èó¥Âú®‚ÄúÊÑüÊÄßËÆ§ËØÜJWT‚Äù‰∏ÄÂçöÊñá‰∏≠ÂàÜ‰∫´‰∫ÜÔºåÂæàÁÅ´ÁöÑÂºÄÊ∫êÈ°πÁõÆCloud-Admin‰∏≠Èâ¥ÊùÉ‰∏≠ÂøÉÂíåÁΩëÂÖ≥ÁöÑÂÆûÁé∞„ÄÇ‰ªäÂ§©ÂÜçÊù•ÁúãÁúãÂÖ∂‰ªñÂêÑ‰∏™ÈÉ®ÂàÜÊ∫êÁ†Å ÊèêÁ§∫ËÄÅËßÑÁü©ÔºåÊîæÂºÄÊ∫êÈ°πÁõÆÂú∞ÂùÄÔºöhttps://gitee.com/minull/ace-security ÁõÆÂΩïÁªìÊûÑ Êû∂ÊûÑ‰∏ãÈù¢ÊòØÂÆòÊñπÊèê‰æõÁöÑÊû∂ÊûÑÊ®°Âûã„ÄÇ È°πÁõÆÁöÑËøêË°åÊ≠•È™§ ÂÖàÂêØÂä®rabbitmq„ÄÅredis„ÄÅmysql‰ª•ÂèäconsulÊ≥®ÂÜå‰∏≠ÂøÉ ËøêË°åÊï∞ÊçÆÂ∫ìËÑöÊú¨Ôºö‰æùÊ¨°ËøêË°åÊï∞ÊçÆÂ∫ìÔºöace-admin/db/init.sql„ÄÅace-auth-server/db/init.sql„ÄÅace-trace ‰øÆÊîπÈÖçÁΩÆÊï∞ÊçÆÂ∫ìÈÖçÁΩÆÔºöace-admin/src/main/resources/application.yml„ÄÅace-gate/src/main/resources/application.yml ÊåâÈ°∫Â∫èËøêË°åmainÁ±ªÔºöCenterBootstrapÔºàace-centerÔºâ„ÄÅAuthBootstrapÔºàace-auth-serverÔºâ„ÄÅAdminBootstrapÔºàace-adminÔºâ„ÄÅGatewayServerBootstrapÔºàace-gateway-v2Ôºâ AdminÊ®°ÂùóÊï∞ÊçÆÂ∫ìËÆæËÆ°ÂÖàÁúãÁúãÊï∞ÊçÆÂ∫ìËÆæËÆ°ÔºåadminÊ®°ÂùóË¥üË¥£ÊâÄÊúâÊùÉÈôêÁöÑÁÆ°ÁêÜ„ÄÇÁ¨¨‰∏ÄÂº†Ë°®base_elementÔºåÂÆö‰πâ‰∫ÜÂêÑ‰∏™ËµÑÊ∫êÁöÑcodeÔºåÁ±ªÂûãÔºåuriÔºåÊØè‰∏Ä‰∏™ÁâπÂÆöËµÑÊ∫êÂØπÂ∫î‰∏ÄÁßçËØ∑Ê±ÇË∑ØÂæÑÔºåÂ¶ÇÂõæüëá Á¨¨‰∫åÂº†Ôºåbase_groupÂÆö‰πâ‰∫ÜËßíËâ≤ÂíåËØ∑Ê±ÇË∑ØÂæÑÁöÑÂÖ≥Á≥ª„ÄÇüëá Á¨¨‰∏âÂº†Ôºåbase_group_typeÂÆö‰πâ‰∫ÜÁ±ªÂûãüëá Á¨¨ÂõõÂº†Ôºåbase_menuÂÆö‰πâ‰∫ÜËèúÂçïüëá Á¨¨‰∫îÂº†ÔºåËÆ∞ÂΩï‰∫ÜÁΩëÂÖ≥Êó•ÂøóÁõ∏ÂÖ≥‰ø°ÊÅØ Á¨¨ÂÖ≠Âº†ÔºåÁî®Êà∑Ë°® ‰∏öÂä°ÈÄªËæëÊé•Âè£ËøôÈÉ®ÂàÜ‰ΩúËÄÖÂÜôÁöÑÊúâ‰∫õ‰π±ÔºåÂ∞ÜÂæàÂ§ö‰∏öÂä°ÈÄªËæëÁöÑÊúâÂÖ≥‰ª£Á†ÅÊîæÂà∞Êé•Âè£Â±Ç‰∫ÜÔºàÂêêÊßΩÔºâ„ÄÇËøôÈÉ®ÂàÜ‰ª£Á†ÅÊ≤°‰ªÄ‰πàÂ•ΩËØ¥ÁöÑÔºåÂ∞±ÊòØÊ†πÊçÆ‰∏äÈù¢ÁöÑÊï∞ÊçÆÂ∫ìCRUD„ÄÇÊé•Âè£ÁöÑË∑ØÂæÑÂàÜ‰∏∫ 123456789/api/user/validate/element/**"/gateLog/**"/group/**"/groupType/**"/menu/**"/user/**"/api/permissions"/api/user/un/**" ËøôÂá†Á±ªÔºåÂπ∂‰∏îËµ∞ÊØè‰∏ÄÂ±ÇÈÉΩ‰ºöËµ∞Èâ¥ÊùÉ‰∏≠ÂøÉÊù•Èâ¥Âà´ÔºåÂÖ∑‰ΩìÈÄªËæëÊòØ‰ΩøÁî®springbootÁöÑaddInterceptors()ÊñπÊ≥ïÊ∑ªÂä†‰∏§Â±ÇÊã¶Êà™Âô®ÁªÑÊàê‰∏Ä‰∏™Êã¶Êà™Âô®ÈìæÔºåÂ¶Ç‰∏ãüëá 1234567@Override public void addInterceptors(InterceptorRegistry registry) &#123; registry.addInterceptor(getServiceAuthRestInterceptor()). addPathPatterns(getIncludePathPatterns()).addPathPatterns("/api/user/validate"); registry.addInterceptor(getUserAuthRestInterceptor()). addPathPatterns(getIncludePathPatterns()); &#125; Á¨¨‰∏ÄÂ±ÇÊã¶Êà™Âô®ÊòØÈâ¥ÊùÉ‰∏≠ÂøÉÁöÑServiceAuthRestInterceptorÊã¶Êà™Âô®ÔºåÂà§Êñ≠ËÆøÈóÆÁöÑÂÆ¢Êà∑Á´ØÊòØÂê¶ÊúâÊùÉÈôêËÆøÈóÆÔºõ 1234567891011121314151617181920212223//Á¨¨‰∏ÄÂ±ÇÊã¶Êà™Âô® @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception &#123; HandlerMethod handlerMethod = (HandlerMethod) handler; // ÈÖçÁΩÆËØ•Ê≥®Ëß£ÔºåËØ¥Êòé‰∏çËøõË°åÊúçÂä°Êã¶Êà™ IgnoreClientToken annotation = handlerMethod.getBeanType().getAnnotation(IgnoreClientToken.class); if (annotation == null) &#123; annotation = handlerMethod.getMethodAnnotation(IgnoreClientToken.class); &#125; if(annotation!=null) &#123; return super.preHandle(request, response, handler); &#125; String token = request.getHeader(serviceAuthConfig.getTokenHeader()); IJWTInfo infoFromToken = serviceAuthUtil.getInfoFromToken(token); String uniqueName = infoFromToken.getUniqueName(); for(String client:serviceAuthUtil.getAllowedClient())&#123; if(client.equals(uniqueName))&#123; return super.preHandle(request, response, handler); &#125; &#125; throw new ClientForbiddenException("Client is Forbidden!"); &#125; Á¨¨‰∫åÂ±ÇÊã¶Êà™Âô®ÊòØÈâ¥ÊùÉ‰∏≠ÂøÉÁöÑUserAuthRestInterceptorÊã¶Êà™Âô®ÔºåÊã¶Êà™ÈùûÊ≥ïÁî®Êà∑„ÄÇ 123456789101112131415161718192021222324252627@Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception &#123; HandlerMethod handlerMethod = (HandlerMethod) handler; // ÈÖçÁΩÆËØ•Ê≥®Ëß£ÔºåËØ¥Êòé‰∏çËøõË°åÁî®Êà∑Êã¶Êà™ IgnoreUserToken annotation = handlerMethod.getBeanType().getAnnotation(IgnoreUserToken.class); if (annotation == null) &#123; annotation = handlerMethod.getMethodAnnotation(IgnoreUserToken.class); &#125; if (annotation != null) &#123; return super.preHandle(request, response, handler); &#125; String token = request.getHeader(userAuthConfig.getTokenHeader()); if (StringUtils.isEmpty(token)) &#123; if (request.getCookies() != null) &#123; for (Cookie cookie : request.getCookies()) &#123; if (cookie.getName().equals(userAuthConfig.getTokenHeader())) &#123; token = cookie.getValue(); &#125; &#125; &#125; &#125; IJWTInfo infoFromToken = userAuthUtil.getInfoFromToken(token); BaseContextHandler.setUsername(infoFromToken.getUniqueName()); BaseContextHandler.setName(infoFromToken.getName()); BaseContextHandler.setUserID(infoFromToken.getId()); return super.preHandle(request, response, handler); &#125; ÁºìÂ≠ò‰∏≠ÂøÉÂú®‰∏äÈù¢ÁöÑadminÊ®°Âùó‰∏≠Ôºå‰ΩúËÄÖÂú®userÊé•Âè£‰∏äÔºå‰ΩøÁî®‰∫ÜËá™ÂÆö‰πâÁöÑÁºìÂ≠òÊ≥®Ëß£@CacheÔºåÁî®Êù•‰øùÂ≠òÁî®Êà∑ÁöÑÊùÉÈôê‰ø°ÊÅØÔºåÂáèÂ∞èÊï∞ÊçÆÂ∫ìÁöÑËÆøÈóÆÂéãÂäõüëá 123456789101112131415161718192021222324@RestController@RequestMapping("api")public class UserRest &#123; @Autowired private PermissionService permissionService; @Cache(key="permission") @RequestMapping(value = "/permissions", method = RequestMethod.GET) public @ResponseBody List&lt;PermissionInfo&gt; getAllPermission()&#123; return permissionService.getAllPermission(); &#125; @Cache(key="permission:u&#123;1&#125;") @RequestMapping(value = "/user/un/&#123;username&#125;/permissions", method = RequestMethod.GET) public @ResponseBody List&lt;PermissionInfo&gt; getPermissionByUsername(@PathVariable("username") String username)&#123; return permissionService.getPermissionByUsername(username); &#125; @RequestMapping(value = "/user/validate", method = RequestMethod.POST) public @ResponseBody UserInfo validate(@RequestBody Map&lt;String,String&gt; body)&#123; return permissionService.validate(body.get("username"),body.get("password")); &#125;&#125; ‰∏ãÈù¢Êàë‰ª¨Â∞±ÂàÜÊûê‰∏Ä‰∏ãÁºìÂ≠ò‰∏≠ÂøÉÁöÑËÆæËÆ°„ÄÇ ÁõÆÂΩïÁªìÊûÑ ÁºìÂ≠ò‰∏≠ÂøÉÊòØ‰ΩúËÄÖÈÄöËøámavenÊñπÂºèÊ∑ªÂä†ÁöÑÔºåÂπ∂Ê≤°ÊúâÈÄöËøáÁõ¥Êé•È°πÁõÆ‰ª£Á†ÅÂ±ïÁé∞„ÄÇÂõ†Ê≠§Êàë‰ΩøÁî®ideaÁöÑÂèçÁºñÁ†ÅÂ∑•ÂÖ∑ËøõË°åÂàÜÊûê ÂÖ•Âè£ÂÖ•Âè£‰∏∫EnableAceCacheÔºåÂºÄÂêØËøô‰∏™Â∞±ÂèØ‰ª•Ëá™Âä®ÈÖçÁΩÆÁºìÂ≠òÁõ∏ÂÖ≥‰∫ãÈ°π ÁºìÂ≠òÂÆû‰ΩìÂÖàÁúãÁºìÂ≠òÂÆû‰ΩìÔºå‰ΩúËÄÖÂÆö‰πâ‰∫ÜkeyÔºåÊèèËø∞‰ø°ÊÅØdescÔºå‰ª•ÂèäËøáÊúüÊó∂Èó¥ 123456789public class CacheBean &#123; private String key = ""; private String desc = ""; @JsonFormat( timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss" ) private Date expireTime; ..................&#125; ÈÖçÁΩÆÁ±ª‰∏ÄÂÖ±Êúâ‰∏§‰∏™ÈÖçÁΩÆ RedisConfigÂÖàÁúãRedisConfigÔºå‰ΩøÁî®@PostConstructÊ≥®Ëß£ÔºåÊÑèÊÄùÊòØ‰ºöÂú®ÊúçÂä°Âô®Âä†ËΩΩServletÁöÑÊó∂ÂÄôÔºåÂ∞ÜÊúçÂä°Á´Øyml‰∏≠ÊúâÂÖ≥redisÁöÑÈÖçÁΩÆÂä†ËΩΩÂà∞JedisPool‰∏≠ÔºåËøô‰∏™ÊñπÊ≥ïÂè™‰ºöË¢´ÊúçÂä°Âô®Ë∞ÉÁî®‰∏ÄÊ¨°„ÄÇ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677@Configurationpublic class RedisConfig &#123; @Autowired private Environment env; private JedisPool pool; private String maxActive; private String maxIdle; private String maxWait; private String host; private String password; private String timeout; private String database; private String port; private String enable; private String sysName; public RedisConfig() &#123; &#125; @PostConstruct public void init() &#123; PropertiesLoaderUtils prop = new PropertiesLoaderUtils(new String[]&#123;"application.properties"&#125;); this.host = prop.getProperty("redis.host"); if (StringUtils.isBlank(this.host)) &#123; this.host = this.env.getProperty("redis.host"); this.maxActive = this.env.getProperty("redis.pool.maxActive"); this.maxIdle = this.env.getProperty("redis.pool.maxIdle"); this.maxWait = this.env.getProperty("redis.pool.maxWait"); this.password = this.env.getProperty("redis.password"); this.timeout = this.env.getProperty("redis.timeout"); this.database = this.env.getProperty("redis.database"); this.port = this.env.getProperty("redis.port"); this.sysName = this.env.getProperty("redis.sysName"); this.enable = this.env.getProperty("redis.enable"); &#125; else &#123; this.maxActive = prop.getProperty("redis.pool.maxActive"); this.maxIdle = prop.getProperty("redis.pool.maxIdle"); this.maxWait = prop.getProperty("redis.pool.maxWait"); this.password = prop.getProperty("redis.password"); this.timeout = prop.getProperty("redis.timeout"); this.database = prop.getProperty("redis.database"); this.port = prop.getProperty("redis.port"); this.sysName = prop.getProperty("redis.sysName"); this.enable = prop.getProperty("redis.enable"); &#125; &#125; @Bean public JedisPoolConfig constructJedisPoolConfig() &#123; JedisPoolConfig config = new JedisPoolConfig(); config.setMaxTotal(Integer.parseInt(this.maxActive)); config.setMaxIdle(Integer.parseInt(this.maxIdle)); config.setMaxWaitMillis((long)Integer.parseInt(this.maxWait)); config.setTestOnBorrow(true); return config; &#125; @Bean( name = &#123;"pool"&#125; ) public JedisPool constructJedisPool() &#123; String ip = this.host; int port = Integer.parseInt(this.port); String password = this.password; int timeout = Integer.parseInt(this.timeout); int database = Integer.parseInt(this.database); if (null == this.pool) &#123; if (StringUtils.isBlank(password)) &#123; this.pool = new JedisPool(this.constructJedisPoolConfig(), ip, port, timeout); &#125; else &#123; this.pool = new JedisPool(this.constructJedisPoolConfig(), ip, port, timeout, password, database); &#125; &#125; return this.pool; &#125; CacheWebConfigÁ¨¨‰∫å‰∏™ÈÖçÁΩÆÔºåÂ∞±ÊòØ‰ΩøÁî®springbootÊã¶Êà™Âô®ÔºåÂ∞Ü‰ΩúËÄÖËá™Â∑±ÂÜôÁöÑÁºìÂ≠òÁÆ°ÁêÜ‰∏≠ÂøÉËßÜÂõæÁïåÈù¢Â±ïÁ§∫Âá∫Êù•ÔºàËøô‰∏™Êìç‰ΩúÂ§™Á•ûÂ•á‰∫ÜÔºåÁ¨¨‰∏ÄÊ¨°ÁúãÂà∞Ôºâüëá 1234public void addResourceHandlers(ResourceHandlerRegistry registry) &#123; registry.addResourceHandler(new String[]&#123;"/static/cache/**"&#125;).addResourceLocations(new String[]&#123;"classpath:/META-INF/static/"&#125;); super.addResourceHandlers(registry); &#125; ‰ΩøÁî®ÁºìÂ≠òRedisServiceImplÂíåCacheRedisRedisServiceImpl‰ΩøÁî®‰∫ÜJedisPoolÈÇ£Âá†‰∏™ÊñπÊ≥ïÂÆûÁé∞‰∫ÜÂ¢ûÂà†ÊîπÊü•Êìç‰ΩúÔºå‰ª£Á†ÅÁúÅÁï•„ÄÇ CacheRedisÂàôRedisServiceImplÊòØÂä†ÂÖ•‰∏Ä‰∫õÂ¢ûÂà†ÊîπÊü•ÈÄªËæëÔºåË≠¨Â¶Ç‰ªÄ‰πàÊòØ‰ªÄ‰πàËÆæÁΩÆÁºìÂ≠ò„ÄÇ ÂàáÈù¢Âä†ÂÖ•ÁºìÂ≠òÊ†∏ÂøÉÊñπÊ≥ïÊ†∏ÂøÉÊñπÊ≥ïinterceptorÂ¶Ç‰∏ãÔºå‰ΩøÁî®ProceedingJoinPointÊãøÂà∞Ë¢´@CacheÊ†áËÆ∞ÁöÑÁöÑÊñπÊ≥ï‰∏≠ÁöÑÂèÇÊï∞ÔºåÁî®getKeyÔºàÔºâÊñπÊ≥ïÊãøÂà∞ÂÖ∑‰ΩìÁºìÂ≠òÁöÑkeyÔºå‰ΩøÁî®CacheRedisÁöÑget()ÊñπÊ≥ïÊü•ÊâæÂØπÂ∫îÁöÑkeyÔºåÂ¶ÇÊûúkeyÊâæ‰∏çÂà∞ÂàôÁî®CacheRedisÁöÑset()ÊñπÊ≥ïÊ∑ªÂä†Êñ∞ÁöÑÁºìÂ≠ò„ÄÇ 123456789101112131415161718192021222324252627@Around("aspect()&amp;&amp;@annotation(anno)") public Object interceptor(ProceedingJoinPoint invocation, Cache anno) throws Throwable &#123; MethodSignature signature = (MethodSignature)invocation.getSignature(); Method method = signature.getMethod(); Object result = null; Class&lt;?&gt;[] parameterTypes = method.getParameterTypes(); Object[] arguments = invocation.getArgs(); String key = ""; String value = ""; try &#123; key = this.getKey(anno, parameterTypes, arguments); value = this.cacheAPI.get(key); Type returnType = method.getGenericReturnType(); result = this.getResult(anno, result, value, returnType); &#125; catch (Exception var14) &#123; this.log.error("Ëé∑ÂèñÁºìÂ≠òÂ§±Ë¥•Ôºö" + key, var14); &#125; finally &#123; if (result == null) &#123; result = invocation.proceed(); if (StringUtils.isNotBlank(key)) &#123; this.cacheAPI.set(key, result, anno.expire()); &#125; &#125; &#125; return result; &#125; ÂèñÂæókeygetKeyÔºàÔºâÊñπÊ≥ïÁöÑÈÄªËæë‰∏∫ÔºåÂà§Êñ≠keyÁîüÊàêÂô®ÊòØÂê¶ÊòØÈªòËÆ§ÁîüÊàêÂô®ÔºàÂèØ‰ª•‰ΩøÁî®Â§öÁßçÁîüÊàêÂô®ÔºâÔºåÁÑ∂ÂêéÊ†πÊçÆÈªòËÆ§ÁîüÊàêÂô®ÁöÑËßÑÂàôÁîüÊàê‰∏Ä‰∏™key„ÄÇ 123456789101112131415private String getKey(Cache anno, Class&lt;?&gt;[] parameterTypes, Object[] arguments) throws InstantiationException, IllegalAccessException &#123; String generatorClsName = anno.generator().getName(); IKeyGenerator keyGenerator = null; if (anno.generator().equals(DefaultKeyGenerator.class)) &#123; keyGenerator = this.keyParser; &#125; else if (this.generatorMap.contains(generatorClsName)) &#123; keyGenerator = (IKeyGenerator)this.generatorMap.get(generatorClsName); &#125; else &#123; keyGenerator = (IKeyGenerator)anno.generator().newInstance(); this.generatorMap.put(generatorClsName, keyGenerator); &#125; String key = keyGenerator.getKey(anno.key(), anno.scope(), parameterTypes, arguments); return key; &#125; keyÁîüÊàêÂô®ÈªòËÆ§keyÁîüÊàêÂô®ÁöÑ‰ª£Á†ÅÂ¶Ç‰∏ãÔºàÁîüÊàêËßÑÂàôÊàëÁúã‰∏çÊáÇüò≠ÔºâÔºå 12345678910111213141516171819202122232425262728293031323334353637public String buildKey(String key, CacheScope scope, Class&lt;?&gt;[] parameterTypes, Object[] arguments) &#123; boolean isFirst = true; if (key.indexOf("&#123;") &gt; 0) &#123; key = key.replace("&#123;", ":&#123;"); Pattern pattern = Pattern.compile("\\d+\\.?[\\w]*"); Matcher matcher = pattern.matcher(key); while(matcher.find()) &#123; String tmp = matcher.group(); String[] express = matcher.group().split("\\."); String i = express[0]; int index = Integer.parseInt(i) - 1; Object value = arguments[index]; if (parameterTypes[index].isAssignableFrom(List.class)) &#123; List result = (List)arguments[index]; value = result.get(0); &#125; if (value == null || value.equals("null")) &#123; value = ""; &#125; if (express.length &gt; 1) &#123; String field = express[1]; value = ReflectionUtils.getFieldValue(value, field); &#125; if (isFirst) &#123; key = key.replace("&#123;" + tmp + "&#125;", value.toString()); &#125; else &#123; key = key.replace("&#123;" + tmp + "&#125;", "_" + value.toString()); &#125; &#125; &#125; return key; &#125; keyËß£ÊûêÂõ†‰∏∫‰ΩúËÄÖÁöÑkeyÁîüÊàêÂô®Êäñ‰∫ÜÂæàÂ§öÊú∫ÁÅµÔºåÂõ†Ê≠§ÔºåÊãøÂà∞key‰ª•ÂêéÔºåË¶ÅÂ∞ÜÁîüÊàêkeyÂíåvalue‰πãÂâçÁöÑÊï∞ÂÄºÊâæÂà∞ÊâçËÉΩËøõË°åÊØîÂØπÔºå‰∏ãÈù¢Êó∂Ëß£ÊûêkeyÁöÑ‰ª£Á†ÅüëáÂ§ßÊ¶ÇÈÄªËæëÊòØÊ†πÊçÆ‰∏çÂêåÁöÑvalueÁ±ªÂûãËøîÂõûjson 12345678910111213141516public Object parse(String value, Type type, Class... origins) &#123; Object result = null; if (type instanceof ParameterizedType) &#123; ParameterizedType parameterizedType = (ParameterizedType)type; Type rawType = parameterizedType.getRawType(); if (((Class)rawType).isAssignableFrom(List.class)) &#123; result = JSON.parseArray(value, (Class)parameterizedType.getActualTypeArguments()[0]); &#125; &#125; else if (origins == null) &#123; result = JSON.parseObject(value, (Class)type); &#125; else &#123; result = JSON.parseObject(value, origins[0]); &#125; return result; &#125; ÂàáÈù¢Ê∏ÖÈô§ÁºìÂ≠òÂ§ßÊ¶ÇÊÑèÊÄùÂíå‰∏äÈù¢Â∑Æ‰∏çÂ§öÔºåÂè™Ë¶ÅÊúçÂä°Á´Ø‰∏äÂä†ÂÖ•@CacheClearÊ≥®Ëß£Â∞±ÂèØ‰ª•Ê∏ÖÈô§ÂØπÂ∫îÁºìÂ≠ò„ÄÇ 1234567891011121314151617181920212223242526@Around("aspect()&amp;&amp;@annotation(anno)") public Object interceptor(ProceedingJoinPoint invocation, CacheClear anno) throws Throwable &#123; MethodSignature signature = (MethodSignature)invocation.getSignature(); Method method = signature.getMethod(); Class&lt;?&gt;[] parameterTypes = method.getParameterTypes(); Object[] arguments = invocation.getArgs(); String key = ""; if (StringUtils.isNotBlank(anno.key())) &#123; key = this.getKey(anno, anno.key(), CacheScope.application, parameterTypes, arguments); this.cacheAPI.remove(key); &#125; else if (StringUtils.isNotBlank(anno.pre())) &#123; key = this.getKey(anno, anno.pre(), CacheScope.application, parameterTypes, arguments); this.cacheAPI.removeByPre(key); &#125; else if (anno.keys().length &gt; 1) &#123; String[] arr$ = anno.keys(); int len$ = arr$.length; for(int i$ = 0; i$ &lt; len$; ++i$) &#123; String tmp = arr$[i$]; tmp = this.getKey(anno, tmp, CacheScope.application, parameterTypes, arguments); this.cacheAPI.removeByPre(tmp); &#125; &#125; return invocation.proceed(); &#125;]]></content>
      <tags>
        <tag>Ê∫êÁ†Å</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂæÆÊúçÂä°Ê†∏ÂøÉÊû∂ÊûÑÊ¢≥ÁêÜ]]></title>
    <url>%2F2018%2F12%2F08%2F%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A0%B8%E5%BF%83%E6%9E%B6%E6%9E%84%E6%A2%B3%E7%90%86%2F</url>
    <content type="text"><![CDATA[Âú®ÂÖ¨Âè∏Â≠¶‰π†‰∫ÜÊé•Ëøë‰∏Ä‰∏™Êúà„ÄÇ ‰∏Ä‰∏™ÊúàÂÜÖÔºå‰ªé0ÂºÄÂßãÂºÄÂßãÊé•Ëß¶ÂàÜÂ∏ÉÂºèÂæÆÊúçÂä°Êû∂ÊûÑÔºåÁªô‰∫ÜÊàë‰∏çÂ∞èÁöÑÊî∂Ëé∑„ÄÇ‰ªäÂ§©ÔºåÊàëÊù•‰ªéÂ§¥Âà∞Â∞æÊ¢≥ÁêÜ‰∏Ä‰∏ãÔºåÊúâÂÖ≥ÂæÆÊúçÂä°Êû∂ÊûÑÁöÑÊ†∏ÂøÉÂÜÖÂÆπÔºàÂÖ®ÊòØÂπ≤Ë¥ßÔºâ„ÄÇ ‰∏ãÊñáÔºå‰Ω†Â∞ÜÁúãÂà∞‰∏öÁïå‰∏ªÊµÅÂæÆÊúçÂä°Ê°ÜÊû∂ÁöÑÊ†∏ÂøÉÂéüÁêÜÔºåÂåÖÊã¨ÊúçÂä°ÂèëÁé∞ÔºåÁΩëÂÖ≥ÔºåÈÖçÁΩÆ‰∏≠ÂøÉÔºåÁõëÊéßÁ≠âÁªÑ‰ª∂ÔºåÂäüËÉΩÂíåÊû∂ÊûÑÂéüÁêÜÁöÑÁÆÄÂçï‰ªãÁªç„ÄÇÊÑüË∞¢ÈòÖËØªÔºÅüòã ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢„ÄÇüòè HelloÔºåMicroservices‰ªÄ‰πàÊòØÂæÆÊúçÂä°ÂæÆÊúçÂä°Microservices‰πãÁà∂ÔºåÈ©¨‰∏Å.Á¶èÂãíÔºåÂØπÂæÆÊúçÂä°Â§ßÊ¶ÇÁöÑÊ¶ÇËø∞Â¶Ç‰∏ãÔºö Â∞±ÁõÆÂâçËÄåË®ÄÔºåÂØπ‰∫éÂæÆÊúçÂä°‰∏öÁïåÂπ∂Ê≤°Êúâ‰∏Ä‰∏™Áªü‰∏ÄÁöÑ„ÄÅÊ†áÂáÜÁöÑÂÆö‰πâÔºàWhile there is no precise definition of this architectural style ) „ÄÇ‰ΩÜÈÄöÂú®ÂÖ∂Â∏∏ËÄåË®ÄÔºåÂæÆÊúçÂä°Êû∂ÊûÑÊòØ‰∏ÄÁßçÊû∂ÊûÑÊ®°ÂºèÊàñËÄÖËØ¥ÊòØ‰∏ÄÁßçÊû∂ÊûÑÈ£éÊ†ºÔºåÂÆÉÊèêÂÄ°Â∞ÜÂçï‰∏ÄÂ∫îÁî®Á®ãÂ∫èÂàíÂàÜÊàê‰∏ÄÁªÑÂ∞èÁöÑÊúçÂä°ÔºåÊØè‰∏™ÊúçÂä°ËøêË°åÁã¨Á´ãÁöÑËá™Â∑±ÁöÑËøõÁ®ã‰∏≠ÔºåÊúçÂä°‰πãÈó¥‰∫íÁõ∏ÂçèË∞É„ÄÅ‰∫íÁõ∏ÈÖçÂêàÔºå‰∏∫Áî®Êà∑Êèê‰æõÊúÄÁªà‰ª∑ÂÄº„ÄÇÊúçÂä°‰πãÈó¥ÈááÁî®ËΩªÈáèÁ∫ßÁöÑÈÄö‰ø°Êú∫Âà∂‰∫íÁõ∏Ê≤üÈÄöÔºàÈÄöÂ∏∏ÊòØÂü∫‰∫é HTTP ÁöÑ RESTful API ) „ÄÇÊØè‰∏™ÊúçÂä°ÈÉΩÂõ¥ÁªïÁùÄÂÖ∑‰Ωì‰∏öÂä°ËøõË°åÊûÑÂª∫ÔºåÂπ∂‰∏îËÉΩÂ§üË¢´Áã¨Á´ãÂú∞ÈÉ®ÁΩ≤Âà∞Áîü‰∫ßÁéØÂ¢É„ÄÅÁ±ªÁîü‰∫ßÁéØÂ¢ÉÁ≠â„ÄÇÂè¶Â§ñÔºåÂ∫îÂ∞ΩÈáèÈÅøÂÖçÁªü‰∏ÄÁöÑ„ÄÅÈõÜ‰∏≠ÂºèÁöÑÊúçÂä°ÁÆ°ÁêÜÊú∫Âà∂ÔºåÂØπÂÖ∑‰ΩìÁöÑ‰∏Ä‰∏™ÊúçÂä°ËÄåË®ÄÔºåÂ∫îÊ†πÊçÆ‰∏öÂä°‰∏ä‰∏ãÊñáÔºåÈÄâÊã©ÂêàÈÄÇÁöÑËØ≠Ë®Ä„ÄÅÂ∑•ÂÖ∑ÂØπÂÖ∂ËøõË°åÊûÑÂª∫ÔºåÂèØ‰ª•Êúâ‰∏Ä‰∏™ÈùûÂ∏∏ËΩªÈáèÁ∫ßÁöÑÈõÜ‰∏≠ÂºèÁÆ°ÁêÜÊù•ÂçèË∞ÉËøô‰∫õÊúçÂä°„ÄÇÂèØ‰ª•‰ΩøÁî®‰∏çÂêåÁöÑËØ≠Ë®ÄÊù•ÁºñÂÜôÊúçÂä°Ôºå‰πüÂèØ‰ª•‰ΩøÁî®‰∏çÂêåÁöÑÊï∞ÊçÆÂ≠òÂÇ®„ÄÇ Ê†πÊçÆÈ©¨‰∏Å.Á¶èÂãíÁöÑÊèèËø∞ÔºåÊàëÊÄªÁªì‰∫Ü‰∏Ä‰∏ãÂá†ÁÇπÔºö ÔºàÂ≠óÂ∑ÆÔºåÂãøÂ´åÔºâ Â∞èÊúçÂä°Â∞èÊúçÂä°ÔºåÊ≤°ÊúâÁâπÂÆöÁöÑÊ†áÂáÜÊàñËÄÖËßÑËåÉÔºå‰ΩÜ‰ªñÂú®ÊÄª‰ΩìËßÑËåÉ‰∏ä‰∏ÄÂÆöÊòØÂ∞èÁöÑ„ÄÇ ËøõÁ®ãÁã¨Á´ãÊØè‰∏ÄÁªÑÊúçÂä°ÈÉΩÊòØÁã¨Á´ãËøêË°åÁöÑÔºåÂèØËÉΩÊàëËøô‰∏™ÊúçÂä°ËøêË°åÂú®tomcatÂÆπÂô®ÔºåËÄåÂè¶‰∏Ä‰∏™ÊúçÂä°ËøêË°åÂú®jetty‰∏ä„ÄÇÂèØ‰ª•ÈÄöËøáËøõÁ®ãÊñπÂºèÔºå‰∏çÊñ≠ÁöÑÊ®™ÂêëÊâ©Â±ïÊï¥‰∏™ÊúçÂä°„ÄÇ ÈÄö‰ø°ËøáÂéªÁöÑÂçèËÆÆÈÉΩÊòØÂæàÈáçÁöÑÔºåÂ∞±ÂÉèESBÔºåÂ∞±ÂÉèSOAPÔºåËΩªÈÄö‰ø°ÔºåÁùÄÊÑèÂë≥ÁùÄÁõ∏ÊØîËøáÂéªÊõ¥Êô∫ËÉΩÊõ¥ËΩªÈáèÁöÑÊúçÂä°Áõ∏‰∫íË∞ÉÁî®ÔºåÂ∞±ÊâÄË∞ìsmart endpoints and dumb pipesÔºåËøô‰∫õendpointÈÉΩÊòØËß£ËÄ¶ÁöÑÔºåÂÆåÊàê‰∏Ä‰∏™‰∏öÂä°ÈÄö‰ø°Ë∞ÉÁî®‰∏≤Ëµ∑Ëøô‰∫õmicro serviceÂ∞±ÂÉèÊòØlinuxÁ≥ªÁªü‰∏≠ÈÄöËøáÁÆ°ÈÅì‰∏≤Ëµ∑‰∏ÄÁ≥ªÂàóÂëΩ‰ª§‰∏öÂä°„ÄÇ ËøáÂéªÁöÑ‰∏öÂä°ÔºåÊàë‰ª¨ÈÄöÂ∏∏‰ºöËÄÉËôëÂêÑÁßçÂêÑÊ†∑ÁöÑ‰æùËµñÂÖ≥Á≥ªÔºåËÄÉËôëÁ≥ªÁªüËÄ¶ÂêàÂ∏¶Êù•ÁöÑÈóÆÈ¢ò„ÄÇÂæÆÊúçÂä°ÔºåÂèØ‰ª•ËÆ©ÂºÄÂèëËÄÖÊõ¥‰∏ìÊ≥®‰∫é‰∏öÂä°ÁöÑÈÄªËæëÂºÄÂèë„ÄÇ ÈÉ®ÁΩ≤‰∏çÊ≠¢‰∏öÂä°Ë¶ÅÁã¨Á´ãÔºåÈÉ®ÁΩ≤‰πüË¶ÅÁã¨Á´ã„ÄÇ‰∏çËøáËøô‰πüÊÑèÂë≥ÁùÄÔºå‰º†ÁªüÁöÑÂºÄÂèëÊµÅÁ®ã‰ºöÂá∫Áé∞‰∏ÄÂÆöÁ®ãÂ∫¶ÁöÑÊîπÂèòÔºåÂºÄÂèëÁöÑÈÄÇÂêà‰πüË¶ÅÊúâ‰∏ÄÂÆöÁöÑËøêÁª¥ÊåáË¥£ ÁÆ°ÁêÜ‰º†ÁªüÁöÑ‰ºÅ‰∏öÁ∫ßSOAÊúçÂä°ÂæÄÂæÄÂæàÂ§ßÔºå‰∏çÊòì‰∫éÁÆ°ÁêÜÔºåËÄ¶ÂêàÊÄßÈ´òÔºåÂõ¢ÈòüÂºÄÂèëÊàêÊú¨ÊØîËæÉÂ§ß„ÄÇÂæÆÊúçÂä°ÔºåÂèØ‰ª•ËÆ©Âõ¢ÈòüÂêÑÊÄùÂÖ∂ÊîøÁöÑÈÄâÊã©ÊäÄÊúØÂÆûÁé∞Ôºå‰∏çÂêåÁöÑserviceÂèØ‰ª•Ê†πÊçÆÂêÑËá™ÁöÑÈúÄË¶ÅÈÄâÊã©‰∏çÂêåÁöÑÊäÄÊúØÊ†àÊù•ÂÆûÁé∞ÂÖ∂‰∏öÂä°ÈÄªËæë„ÄÇ ÂæÆÊúçÂä°ÁöÑÂà©‰∏éÂºä‰∏∫‰ªÄ‰πàÁî®ÂæÆÊúçÂä°Âë¢ÔºüÂõ†‰∏∫Â•ΩÁé©Ôºü ‰∏çÊòØÁöÑ„ÄÇ‰∏ãÈù¢ÊòØÊàë‰ªéÁΩëÁªú‰∏äÊâæÂà∞ËØ¥ÁöÑÊØîËæÉÂÖ®ÁöÑ‰ºòÁÇπÔºö ‰ºòÁÇπÊØè‰∏™ÊúçÂä°Ë∂≥Â§üÂÜÖËÅöÔºåË∂≥Â§üÂ∞èÔºå‰ª£Á†ÅÂÆπÊòìÁêÜËß£ËøôÊ†∑ËÉΩËÅöÁÑ¶‰∏Ä‰∏™ÊåáÂÆöÁöÑ‰∏öÂä°ÂäüËÉΩÊàñ‰∏öÂä°ÈúÄÊ±Ç ÂºÄÂèëÁÆÄÂçï„ÄÅÂºÄÂèëÊïàÁéáÊèêÈ´òÔºå‰∏Ä‰∏™ÊúçÂä°ÂèØËÉΩÂ∞±ÊòØ‰∏ì‰∏ÄÁöÑÂè™Âπ≤‰∏Ä‰ª∂‰∫ã„ÄÇ ÂæÆÊúçÂä°ËÉΩÂ§üË¢´Â∞èÂõ¢ÈòüÂçïÁã¨ÂºÄÂèëÔºåËøô‰∏™Â∞èÂõ¢ÈòüÊòØ 2 Âà∞ 5 ‰∫∫ÁöÑÂºÄÂèë‰∫∫ÂëòÁªÑÊàê„ÄÇ ÂæÆÊúçÂä°ÊòØÊùæËóïÂêàÁöÑÔºåÊòØÊúâÂäüËÉΩÊÑè‰πâÁöÑÊúçÂä°ÔºåÊó†ËÆ∫ÊòØÂú®ÂºÄÂèëÈò∂ÊÆµÊàñÈÉ®ÁΩ≤Èò∂ÊÆµÈÉΩÊòØÁã¨Á´ãÁöÑ„ÄÇ ÂæÆÊúçÂä°ËÉΩ‰ΩøÁî®‰∏çÂêåÁöÑËØ≠Ë®ÄÂºÄÂèë„ÄÇ Êòì‰∫éÂíåÁ¨¨‰∏âÊñπÈõÜÊàêÔºåÂæÆÊúçÂä°ÂÖÅËÆ∏ÂÆπÊòì‰∏îÁÅµÊ¥ªÁöÑÊñπÂºèÈõÜÊàêËá™Âä®ÈÉ®ÁΩ≤ÔºåÈÄöËøáÊåÅÁª≠ÈõÜÊàêÂ∑•ÂÖ∑ÔºåÂ¶ÇJenkins,Hudson,bamboo„ÄÇ ÂæÆÊúçÂä°Êòì‰∫éË¢´‰∏Ä‰∏™ÂºÄÂèë‰∫∫ÂëòÁêÜËß£Ôºå‰øÆÊîπÂíåÁª¥Êä§ÔºåËøôÊ†∑Â∞èÂõ¢ÈòüËÉΩÂ§üÊõ¥ÂÖ≥Ê≥®Ëá™Â∑±ÁöÑÂ∑•‰ΩúÊàêÊûú„ÄÇÊó†ÈúÄ- - ÈÄöËøáÂêà‰ΩúÊâçËÉΩ‰ΩìÁé∞‰ª∑ÂÄº„ÄÇÂæÆÊúçÂä°ÂÖÅËÆ∏‰Ω†Âà©Áî®ËûçÂêàÊúÄÊñ∞ÊäÄÊúØ„ÄÇ ÂæÆÊúçÂä°Âè™ÊòØ‰∏öÂä°ÈÄªËæëÁöÑ‰ª£Á†ÅÔºå‰∏ç‰ºöÂíå HTML,CSSÊàñÂÖ∂‰ªñÁïåÈù¢ÁªÑ‰ª∂Ê∑∑Âêà„ÄÇ ÊØè‰∏™ÂæÆÊúçÂä°ÈÉΩÊúâËá™Â∑±ÁöÑÂ≠òÂÇ®ËÉΩÂäõÔºåÂèØ‰ª•ÊúâËá™Â∑±ÁöÑÊï∞ÊçÆÂ∫ì„ÄÇ‰πüÂèØ‰ª•ÊúâÁªü‰∏ÄÊï∞ÊçÆÂ∫ì„ÄÇ ÊÄªÁöÑÊù•ËØ¥ÔºåÂæÆÊúçÂä°ÁöÑ‰ºòÂäøÔºåÂ∞±ÊòØÂú®‰∫éÔºåÈù¢ÂØπÂ§ßÁöÑÁ≥ªÁªüÔºåÂèØ‰ª•ÊúâÊïàÁöÑÂáèÂ∞ëÂ§çÊùÇÁ®ãÂ∫¶Ôºå‰ΩøÊúçÂä°Êû∂ÊûÑÁöÑÈÄªËæëÊõ¥Ê∏ÖÊô∞Êòé‰∫Ü„ÄÇ ‰ΩÜÊòØËøôÊ†∑‰πü‰ºöÂ∏¶Êù•ÂæàÂ§öÈóÆÈ¢òÔºåÂ∞±Ë≠¨Â¶ÇÂàÜÂ∏ÉÂºèÁéØÂ¢É‰∏ãÁöÑÊï∞ÊçÆ‰∏ÄËá¥ÊÄßÔºåÊµãËØïÁöÑÂ§çÊùÇÊÄßÔºåËøêÁª¥ÁöÑÂ§çÊùÇÊÄß„ÄÇ ‰ªÄ‰πàÁªÑÁªáÈÄÇÂêà‰ΩøÁî®ÂæÆÊúçÂä°ÔºüÂæÆÊúçÂä°Â∏¶‰∫ÜÁßçÁßç‰ºòÁÇπÔºåÁßçÁßçÂºäÁ´ØÔºåÈÇ£‰πà‰ªÄ‰πàÁªÑÁªáÈÄÇÂêà‰ΩøÁî®ÂæÆÊúçÂä°Ôºü Â¢®Ëè≤ÂÆöÂæãÔºàËÆæËÆ°Á≥ªÁªüÔºâÂíåÂ∫∑Â®ÅÂÆöÂæãÔºàÁ≥ªÁªüÂàíÂàÜÔºâÂ∫∑Â®ÅÂÆöÂæãÔºåÊòØ‰∏Ä‰∏™‰∫îÂçÅÂ§öÂπ¥ÂâçÂ∞±Ë¢´ÊèêÂá∫Êù•ÁöÑÂæÆÊúçÂä°Ê¶ÇÂøµ„ÄÇÂú®Â∫∑Â®ÅÁöÑËøôÁØáÊñáÁ´†‰∏≠ÔºåÊúÄÊúâÂêçÁöÑ‰∏ÄÂè•ËØùÂ∞±ÊòØÔºö Organizations which design systems are constrained to produce designs which are copies of the communication structures of these organizations. - Melvin Conway(1967) ‰∏≠ÊñáÁõ¥ËØëÂ§ßÊ¶ÇÁöÑÊÑèÊÄùÂ∞±ÊòØÔºöËÆæËÆ°Á≥ªÁªüÁöÑÁªÑÁªáÔºåÂÖ∂‰∫ßÁîüÁöÑËÆæËÆ°Á≠âÂêå‰∫éÁªÑÁªá‰πãÂÜÖ„ÄÅÁªÑÁªá‰πãÈó¥ÁöÑÊ≤üÈÄöÁªìÊûÑ„ÄÇÁúãÁúã‰∏ãÈù¢ÁöÑÂõæÁâáÔºàÊù•Ê∫ê‰∫é‰∫íËÅîÁΩëÔºå‰æµÂà†ÔºâÔºåÂÜçÊÉ≥ÊÉ≥AppleÁöÑ‰∫ßÂìÅ„ÄÅÂæÆËΩØÁöÑ‰∫ßÂìÅËÆæËÆ°ÔºåÂ∞±ËÉΩÂΩ¢Ë±°ÁîüÂä®ÁöÑÁêÜËß£ËøôÂè•ËØù„ÄÇ ÊÑüÂÖ¥Ë∂£ÁöÑÂêÑ‰ΩçÂèØ‰ª•Á†îÁ©∂‰∏Ä‰∏ã Êû∂ÊûÑÊºîÂåñÊû∂ÊûÑÊòØ‰∏çÊñ≠ÊºîÂåñÂá∫Êù•ÁöÑÔºåÂæÆÊúçÂä°‰πüÊòØËøôÊ†∑ÔºåÂΩì‰ªéÂêÑÂ§ßÁßëÊäÄÂÖ¨Âè∏ÔºåËßÑÊ®°Â§ßÂà∞‰∏ÄÂÆöÁ®ãÂ∫¶ÔºåÂÆåÂÖ®ÈúÄË¶ÅÊºîÂåñÊàêÊõ¥Ëøõ‰∏ÄÊ≠•ÁÆ°ÁêÜÁöÑÊäÄÊúØÊû∂ÊûÑ‰ΩìÁ≥ª„ÄÇ ÔºàÂ≠óÂ∑ÆÔºåÂãøÂ´åÔºâ ‰º†ÁªüÁöÑÂõ¢ÈòüÔºåÈÉΩÊòØÈù¢ÂêëËøáÁ®ãÂåñÁöÑÔºå‰∫ßÂìÅÊÉ≥ÂÆå‰∫ÜÂéªÊâæÁ≠ñÂàíÔºåÁ≠ñÂàíÂÆå‰∫ÜÊâæÂºÄÂèëÔºåÊé•ÁùÄÈ°∫ÁùÄ‰∏ÄÊ≠•‰∏ÄÊ≠•Êâæ„ÄÇÊàë‰ª¨ÂÅöÊäÄÊúØÈÉΩÊòØ‰∏∫‰∫Ü‰∫ßÂìÅÁöÑÔºå‰∏ÄÊó¶ËøáÁ®ãÂá∫Êù•‰∫Ü‰ªÄ‰πàÈóÆÈ¢òÔºåÂõûÊ∫ØÂØªÊâæÈóÆÈ¢ò‰ºöÈùûÂ∏∏ËÄóÊó∂„ÄÇ ÔºàÂ≠óÂ∑ÆÔºåÂãøÂ´åÔºâ ‰ΩøÁî®‰∫ÜÂæÆÊúçÂä°Êû∂ÊûÑ‰ΩìÁ≥ªÔºåÂõ¢ÈòüÁªÑÁªáÊñπÂºèÈúÄË¶ÅËΩ¨ÂèòÊàêË∑®ËÅåËÉΩÂõ¢ÈòüÔºåÂç≥ÊØè‰∏™Âõ¢ÈòüÈÉΩÊúâ‰∫ßÂìÅ‰∏ìÂÆ∂ÔºåÁ≠ñÂàí‰∏ìÂÆ∂ÔºåÂºÄÂèë‰∏ìÂÆ∂ÔºåËøêÁª¥‰∏ìÂÆ∂Ôºå‰ªñ‰ª¨‰ΩøÁî®APIÊñπÂºèÂèëÂ∏É‰ªñ‰ª¨ÁöÑÂäüËÉΩÔºåËÄåÂπ≥Âè∞‰ΩøÁî®‰ªñ‰ª¨ÁöÑÂäüËÉΩÂèëÂ∏É‰∫ßÂìÅ ÂæÆÊúçÂä°ÊäÄÊúØÊû∂ÊûÑ‰ΩìÁ≥ª‰∏ãÈù¢ÊàëÂàÜ‰∫´‰∏Ä‰∏ãÂ§ßÈÉ®ÂàÜÂÖ¨Âè∏ÈÉΩ‰ΩøÁî®ÁöÑÂæÆÊúçÂä°ÊäÄÊúØÊû∂ÊûÑ‰ΩìÁ≥ª„ÄÇ ÔºàÂõæÂ∑ÆÔºåÂãøÂ´åÔºâ ÊúçÂä°ÂèëÁé∞‰∏ªÊµÅÁöÑÊúçÂä°ÂèëÁé∞ÔºåÂàÜ‰∏∫‰∏âÁßç Á¨¨‰∏ÄÁßçÔºåÂºÄÂèë‰∫∫ÂëòÂºÄÂèë‰∫ÜÁ®ãÂ∫è‰ª•ÂêéÔºå‰ºöÊâæËøêÁª¥ÈÖç‰∏Ä‰∏™ÂüüÂêçÔºåÊúçÂä°ÁöÑËØùÈÄöËøádnsÂ∞±ËÉΩÊâæÂà∞Êàë‰ª¨ÂØπÂ∫îÁöÑÊúçÂä° Áº∫ÁÇπÊòØÔºåÁî±‰∫éÊúçÂä°Ê≤°ÊúâË¥üËΩΩÂùáË°°ÂäüËÉΩÔºåÂØπË¥üËΩΩÂùáË°°ÊúçÂä°ÔºåÂèØËÉΩ‰ºöÊúâÁõ∏ÂΩìÂ§ßÁöÑÊÄßËÉΩÈóÆÈ¢ò„ÄÇ Á¨¨‰∫åÁßçÔºåÊòØÁõÆÂâçÊôÆÈÅçÁöÑÂÅöÊ≥ï„ÄÇÂèØ‰ª•ÂèÇËÄÉÊàë‰∏äÁØáÂçöÂÆ¢ÂàÜÊûêÁöÑzuulÁΩëÂÖ≥ÔºåÊØè‰∏Ä‰∏™ÊúçÂä°ÈÉΩÈÄöËøáÊúçÂä°Á´ØÂÜÖÁΩÆÁöÑÂäüËÉΩÊ≥®ÂÜåÂà∞Ê≥®ÂÜå‰∏≠ÂøÉÔºåÊúçÂä°Ê∂àË¥πËÄÖ‰∏çÊñ≠ËΩÆËØ¢Ê≥®ÂÜå‰∏≠ÂøÉÂèëÁé∞ÂØπÂ∫îÁöÑÊúçÂä°Ôºå‰ΩøÁî®ÂÜÖÁΩÆË¥üËΩΩÂùáË°°Ë∞ÉÁî®ÊúçÂä°„ÄÇ Áº∫ÁÇπÊòØÔºåÂØπÂ§öËØ≠Ë®ÄÁéØÂ¢É‰∏çÊòØÂæàÂ•ΩÔºå‰Ω†ÈúÄË¶ÅÂçïÁã¨ÁªôÊ∂àË¥πËÄÖÁöÑÂÆ¢Êà∑Á´ØÂºÄÂèëÊúçÂä°ÂèëÁé∞ÂíåË¥üËΩΩÂùáË°°ÂäüËÉΩ„ÄÇÂΩìÁÑ∂‰∫ÜÔºåËøô‰∏™ÊñπÊ≥ïÈÄöÂ∏∏ÈÉΩÊòØÁî®Âú®spring cloud‰∏äÁöÑ„ÄÇ Á¨¨‰∏âÁßçÔºåÊòØÂ∞ÜÂÆ¢Êà∑Á´ØÂíåË¥üËΩΩÂùáË°°ÊîæÂú®Âêå‰∏Ä‰∏™‰∏ªÊú∫ÔºåËÄå‰∏çÊòØÂêå‰∏Ä‰∏™ËøõÁ®ãÂÜÖ„ÄÇ ËøôÁßçÊñπÊ≥ïÁõ∏ÂØπÁ¨¨‰∏ÄÁßçÁ¨¨‰∫åÁßçÊñπÊ≥ïÊù•ËØ¥ÔºåÊîπÂñÑ‰∫Ü‰ªñ‰ª¨ÁöÑÁº∫ÁÇπÔºå‰ΩÜÊòØ‰ºöÊûÅÂ§ßÂ¢ûÂä†ËøêÁª¥ÊàêÊú¨„ÄÇ ÁΩëÂÖ≥ÂæÆÊúçÂä°ÁöÑÁΩëÂÖ≥ÊòØ‰ªÄ‰πàÔºüÊàë‰ª¨ÂèØ‰ª•ËÅîÁ≥ªÁîüÊ¥ªÂÆûÈôÖÊÉ≥‰∏Ä‰∏ã„ÄÇÊØè‰∏Ä‰∏™Â§ßÁöÑÂÖ¨Âè∏ÔºåÈÉΩ‰ºöÊúâ‰∏ÄÂÅèÂ±û‰∫éËá™Â∑±ÁöÑÂª∫Á≠ëÂå∫ÔºåËÄåËøôÂª∫Á≠ëÂå∫ÂÜÖÔºåÈÉΩÊúâ‰∏çÂ∞ëÁöÑÈó®Âç´„ÄÇÂ¶ÇÊûúÊúâÂ§ñÊù•‰∫∫ÂëòËøõÂÖ•ÂÖ¨Âè∏Ôºå‰ºöÂÖàÂíåÈó®Âç´ÊâìÂ•ΩÊãõÂëºÔºåÊâçËÉΩËøõÂéª„ÄÇ Â∞ÜÁîüÊ¥ªÂÆûÈôÖËÅîÁ≥ªÂà∞ÂæÆÊúçÂä°‰∏äÔºåÂ∞±‰∏çÈöæÁêÜËß£ÁΩëÂÖ≥ÁöÑÊÑèÊÄù‰∫Ü„ÄÇ ÁΩëÂÖ≥Êúâ‰ªÄ‰πàÁî® ÂèçÂêëË∑ØÁî±ÔºöÂæàÂ§öÊó∂ÂÄôÔºåÂÖ¨Âè∏‰∏çÊÉ≥ËÆ©Â§ñÈÉ®‰∫∫ÂëòÁúãÂà∞Êàë‰ª¨ÂÖ¨Âè∏ÁöÑÂÜÖÈÉ®ÔºåÂ∞±ÈúÄË¶ÅÁΩëÂÖ≥Êù•ËøõË°åÂèçÂêëË∑ØÁî±„ÄÇÂç≥Â∞ÜÂ§ñÈÉ®ËØ∑Ê±ÇËΩ¨Êç¢ÊàêÂÜÖÈÉ®ÂÖ∑‰ΩìÊúçÂä°Êù°Áî® ÂÆâÂÖ®ËÆ§ËØÅÔºöÁΩëÁªú‰∏≠‰ºöÊúâÂæàÂ§öÊÅ∂ÊÑèËÆøÈóÆÔºåË≠¨Â¶ÇÁà¨Ëô´ÔºåË≠¨Â¶ÇÈªëÂÆ¢ÊîªÂáªÔºåÁΩëÂÖ≥Áª¥Êä§ÂÆâÂÖ®ÂäüËÉΩ„ÄÇ ÈôêÊµÅÁÜîÊñ≠ÔºöÂèÇËÄÉÊàëÂ≠¶Â•ΩÂàÜÂ∏ÉÂºèzookepperÁöÑÂçöÂÆ¢ÔºåÂΩìËØ∑Ê±ÇÂæàÂ§öÊúçÂä°‰∏çÂ†™ÈáçË¥üÔºå‰ºöËÆ©Êàë‰ª¨ÁöÑÊúçÂä°Ëá™Âä®ÂÖ≥Èó≠ÔºåÂØºËá¥‰∏çËÉΩÁî®ÊúçÂä°„ÄÇÈôêÊµÅÁÜîÊñ≠ÂèØ‰ª•ÊúâÊïàÁöÑÈÅøÂÖçËøôÁ±ªÈóÆÈ¢ò Êó•ÂøóÁõëÊéßÔºöÊâÄÊúâÁöÑÂ§ñÈù¢ÁöÑËØ∑Ê±ÇÈÉΩ‰ºöÁªèËøáÁΩëÂÖ≥ÔºåËøôÊ†∑Êàë‰ª¨Â∞±ÂèØ‰ª•‰ΩøÁî®ÁΩëÂÖ≥Êù•ËÆ∞ÂΩïÊó•Âøó‰ø°ÊÅØ ÁÅ∞Â∫¶ÂèëÂ∏ÉÔºåËìùÁªøÈÉ®ÁΩ≤„ÄÇÊòØÊåáËÉΩÂ§üÂπ≥ÊªëËøáÊ∏°ÁöÑ‰∏ÄÁßçÂèëÂ∏ÉÊñπÂºè„ÄÇÂú®ÂÖ∂‰∏äÂèØ‰ª•ËøõË°åA/B testingÔºåÂç≥ËÆ©‰∏ÄÈÉ®ÂàÜÁî®Êà∑ÁªßÁª≠Áî®‰∫ßÂìÅÁâπÊÄßAÔºå‰∏ÄÈÉ®ÂàÜÁî®Êà∑ÂºÄÂßãÁî®‰∫ßÂìÅÁâπÊÄßBÔºåÂ¶ÇÊûúÁî®Êà∑ÂØπBÊ≤°Êúâ‰ªÄ‰πàÂèçÂØπÊÑèËßÅÔºåÈÇ£‰πàÈÄêÊ≠•Êâ©Â§ßËåÉÂõ¥ÔºåÊääÊâÄÊúâÁî®Êà∑ÈÉΩËøÅÁßªÂà∞B‰∏äÈù¢Êù•„ÄÇ ÂºÄÊ∫êÁΩëÂÖ≥ZuulÊû∂ÊûÑ zuulÁΩëÂÖ≥Ê†∏ÂøÉÂÖ∂ÂÆûÊòØ‰∏Ä‰∏™servletÔºåÊâÄÊúâËØ∑Ê±ÇÈÉΩ‰ºöÁªèËøázuul servlet‰º†Âà∞zuulFilter RunnerÔºåÁÑ∂ÂêéÂàÜÂèëÂà∞‰∏âÁßçËøáÊª§Âô®„ÄÇ ÂÖàËØ¥ËØ¥Êû∂ÊûÑÂõæÂ∑¶ÂçäÈÉ®ÂàÜÔºåÂàÜÂà´ÊòØ‰ΩøÁî®GroovyÂÆûÁé∞ÁöÑÂâçÁΩÆË∑ØÁî±ËøáÊª§Âô®ÔºåË∑ØÁî±ËøáÊª§Âô®ÔºåÂêéÁΩÆË∑ØÁî±ËøáÊª§Âô®„ÄÇ ‰∏ÄËà¨ËØ∑Ê±ÇÈÉΩ‰ºöÂÖàÁªèËøáÂâçÁΩÆË∑ØÁî±ËøáÊª§Âô®Â§ÑÁêÜÔºå‰∏ÄËà¨ÁöÑËá™ÂÆö‰πâjavaÂ∞ÅË£ÖÈÄªËæë‰πü‰ºöÂú®ËøôÈáåÂÆûÁé∞„ÄÇ Ë∑ØÁî±ËøáÊª§Âô®ÔºåÂÆûÁé∞ÁöÑÊòØÊâæÂà∞ÂØπÂ∫îÁöÑÂæÆÊúçÂä°ËøõË°åË∞ÉÁî®„ÄÇ Ë∞ÉÁî®ÂÆå‰∫ÜÔºåÂìçÂ∫îÂõûÊù•Ôºå‰ºöÁªèËøáÂêéÁΩÆË∑ØÁî±ËøáÊª§Âô®ÔºåÈÄöËøáÂêéÁΩÆË∑ØÁî±ËøáÊª§Âô®Êàë‰ª¨ÂèØ‰ª•Â∞ÅË£ÖÊó•ÂøóÂÆ°ËÆ°ÁöÑÂ§ÑÁêÜ„ÄÇ ÂèØ‰ª•ËØ¥zuulÁΩëÂÖ≥ÊúÄÂ§ßÁöÑÁâπËâ≤Â∞±ÊòØÂÆÉ‰∏âÂ±ÇËøáÊª§Âô®„ÄÇ Êû∂ÊûÑÂõæÂè≥ÂçäÈÉ®ÂàÜÔºåÊòØzuulÁΩëÂÖ≥ËÆæËÆ°ÁöÑËá™ÂÆö‰πâËøáÊª§Âô®Âä†ËΩΩÊú∫Âà∂„ÄÇÁΩëÂÖ≥ÂÜÖÈÉ®‰ºöÊúâÁîü‰∫ßËÄÖÊ∂àË¥πËÄÖÊ®°ÂûãÔºåËá™Âä®ÁöÑÂ∞ÜËøáÊª§Âô®ËÑöÊú¨ÂèëÂ∏ÉÂà∞zuulÁΩëÂÖ≥ËØªÂèñÂä†ËΩΩËøêË°å„ÄÇ ÈÖçÁΩÆ‰∏≠ÂøÉ‰ª•ÂâçÔºåÂºÄÂèë‰∫∫ÂëòÊääÈÖçÁΩÆÊñá‰ª∂ÊîæÂú®ÂºÄÂèëÊñá‰ª∂ÈáåÈù¢ÔºåËøôÊ†∑‰ºöÊúâÂæàÂ§öÈöêÊÇ£„ÄÇË≠¨Â¶ÇÔºåÈÖçÁΩÆËßÑËåÉ‰∏çÂêåÔºåÊó†Ê≥ïËøΩÊ∫ØÈÖçÁΩÆ‰∫∫Âëò„ÄÇ‰∏ÄÊó¶ÈúÄË¶ÅÂ§ßËßÑÊ®°ÊîπÂä®ÈÖçÁΩÆÔºåÊîπÂä®Êó∂Èó¥‰ºöÂæàÈïøÔºåÊó†Ê≥ïËøΩÊ∫ØÈÖçÁΩÆ‰∫∫ÂëòÔºå‰ªéËÄåÂΩ±ÂìçÊï¥‰∏™‰∫ßÂìÅÔºåÂêéÊûúÊòØÊàë‰ª¨ÊâøÊãÖ‰∏çËµ∑ÁöÑ„ÄÇ Âõ†Ê≠§Â∞±ÊúâÈÖçÁΩÆ‰∏≠ÂøÉËøô‰∏™ÂñΩ~ Áé∞Âú®ÁöÑÂºÄÊ∫ê‰∏≠ÂøÉÊúâÁôæÂ∫¶ÈÖçÁΩÆ‰∏≠ÂøÉ DisconfÔºåspring cloud configÔºåApolloÔºå‰ªäÂ§©ÈáçÁÇπËØ¥ËØ¥Áé∞Âú®Â∫îÁî®Ë¥®Èáè‰∏çÈîôÁöÑÈÖçÁΩÆ‰∏≠ÂøÉÈòøÊ≥¢ÁΩó„ÄÇ Êê∫Á®ãÂºÄÊ∫êÁöÑApolloÂºÄÊ∫êÂú∞ÂùÄüëâÔºöhttps://github.com/ctripcorp/apollo apolloÁöÑÈÖçÁΩÆ‰∏≠ÂøÉËßÑÊ®°ÊØîËæÉÂ§ßÔºåÊú¨Âú∞Â∫îÁî®‰ºöÊúâÂìçÂ∫îÁöÑÈÖçÁΩÆ‰∏≠ÂøÉÂÆ¢Êà∑Á´ØÔºåÂèØ‰ª•ÂÆöÊó∂ÂêåÊ≠•ÈÖçÁΩÆ‰∏≠ÂøÉÈáåÁöÑÈÖçÁΩÆ„ÄÇÂ¶ÇÊûúÈÖçÁΩÆ‰∏≠ÂøÉÊÄ†Êú∫Ôºå‰ºö‰ΩøÁî®ÁºìÂ≠òÊù•ËøõË°åÈÖçÁΩÆ„ÄÇ ÈÄöËÆØÊñπÂºèÂÖ≥‰∫éÈÄöËÆØÊñπÂºèÔºå‰∏ÄËà¨Â∏ÇÈù¢‰πüÂ∞±ÊòØ‰∏§ÁßçËøúÁ®ãË∞ÉÁî®ÊñπÂºèÔºåÊàëÊï¥ÁêÜ‰∫Ü‰∏Ä‰∏™Ë°®Ê†ºÔºö RPC REST ËÄ¶ÂêàÊÄß Âº∫ËÄ¶Âêà ÊùæÊï£ËÄ¶Âêà Ê∂àÊÅØÂçèËÆÆ TCP HTTP ÈÄöËÆØÂçèËÆÆ ‰∫åËøõÂà∂ ÊñáÊú¨XMLÔºåJson ÊÄßËÉΩ È´ò ‰Ωé‰∫éRPC Êé•Âè£Â•ëÁ∫¶IDL thrift,protobuf,IdL Swagger ÂÆ¢Êà∑Á´Ø Âº∫Á±ªÂûãÂÆ¢Êà∑Á´ØÔºå‰∏ÄËà¨Ëá™Âä®ÁîüÊàê ‰∏ÄËà¨HTTPÂèØËÆøÈóÆÔºåÁîüÊàêÂº∫Á±ªÂûãÂÆ¢Êà∑Á´ØÔºåÂ§öËØ≠Ë®ÄÊîØÊåÅÂ•Ω Ê°à‰æã DubboÔºåDubbox,motan,tars,grpc,thrift spring boot,tax-rs,dropwizard ÂºÄÂèëËÄÖÂèãÂ•Ω ÂÆ¢Êà∑Á´ØÊØîËæÉÊñπÈù¢Ôºå‰∫åËøõÂà∂Ê∂àÊÅØ‰∏çËÉΩËØª ÂèØËØªÊ∂àÊÅØ ÂØπÂ§ñÂºÄÊîæ ‰∏ÄËà¨ÈúÄË¶ÅËΩ¨ÊàêREST/ÊñáÊú¨ÂçèËÆÆ ÂèØÁõ¥Êé•ÂØπÂ§ñÂºÄÂèë ÁõëÊéßÈ¢ÑË≠¶ÁõëÊéßÈ¢ÑË≠¶ÂØπ‰∫éÂæÆÊúçÂä°ÂæàÈáçË¶ÅÔºå‰∏Ä‰∏™ÂèØÈù†ÁöÑÁõëÊéßÈ¢ÑË≠¶‰ΩìÁ≥ªÂØπÂæÆÊúçÂä°ËøêË°åËá≥ÂÖ≥ÈáçË¶Å„ÄÇ‰∏ÄËà¨ÁõëÊéßÂàÜ‰∏∫Â¶Ç‰∏ãÂ±ÇÊ¨°Ôºö ‰ªéÂü∫Á°ÄËÆæÊñΩÂà∞Áî®Êà∑Á´ØÔºåÂ±ÇÂ±ÇÊúâÁõëÊéßÔºåÂÖ®Êñπ‰ΩçÔºåÂ§öËßíÂ∫¶ÔºåÊØè‰∏Ä‰∏™Â±ÇÈù¢ÈÉΩÂæàÈáçË¶Å„ÄÇÊÄª‰ΩìÊù•ËØ¥ÔºåÂæÆÊúçÂä°ÂèØÂàÜ5‰∏™ÁõëÊéßÁÇπÔºöÊó•ÂøóÁõëÊéßÔºåMetricsÁõëÊéßÔºåÂÅ•Â∫∑Ê£ÄÊü•ÔºåË∞ÉÁî®ÈìæÊ£ÄÊü•ÔºåÂëäË≠¶Á≥ªÁªü ÁõëÊéßÊû∂ÊûÑ‰∏ãÈù¢ÁöÑÂõæÊòØÂ§ßÈÉ®ÂàÜÂÖ¨Âè∏ÁöÑ‰∏ÄÁßçÁõëÊéßÊû∂ÊûÑÂõæ„ÄÇÊØè‰∏Ä‰∏™ÊúçÂä°ÈÉΩÊúâ‰∏Ä‰∏™agentÔºåagentÊî∂ÈõÜÂà∞ÂÖ≥ÈîÆ‰ø°ÊÅØÔºå‰ºö‰º†Âà∞‰∏Ä‰∫õMQ‰∏≠Ôºå‰∏∫‰∫ÜËß£ËÄ¶„ÄÇÂêåÊó∂Â∞ÜÊó•Âøó‰º†ÂÖ•ELKÔºåÂ∞ÜMetrics‰º†ÂÖ•InfluxDBÊó∂Èó¥Â∫èÂàóÂ∫ì„ÄÇËÄåÂÉènagiosÔºåÂèØ‰ª•ÂÆöÊúüÂêëagentÂèëËµ∑‰ø°ÊÅØÊ£ÄÊü•ÂæÆÊúçÂä°„ÄÇ Ë∞ÉÁî®ÈìæÁõëÊéßAPMÂæàÂ§öÂÖ¨Âè∏ÈÉΩÊúâË∞ÉÁî®ÈìæÁõëÊéßÔºåÂ∞±Ë≠¨Â¶ÇÈòøÈáåÊúâÈπ∞ÁúºÁõëÊéßÔºåÁÇπËØÑÁöÑCatÔºåÂ§ßÈÉ®ÂàÜË∞ÉÁî®ÈìæÁõëÊéßÔºàÊ≤°ÈîôÔºåÊàëÊåáÁöÑZipkinÔºâÊû∂ÊûÑÊòØËøôÊ†∑ÁöÑüëá ÂΩìËØ∑Ê±ÇËøõÂÖ•WebÂÆπÂô®ÁöÑÊó∂ÂÄôÔºå‰ºöÁªèËøáÂàõÂª∫TracerÔºåËøûÊé•spansÔºàÊ®°ÊãüÊΩúÂú®ÁöÑÂàÜÂ∏ÉÂºèÂ∑•‰ΩúÁöÑÂª∂ËøüÔºåËØ•Ê®°ÂùóËøòÂåÖÂê´Âú®Á≥ªÁªüÁΩëÁªúÈó¥‰º†ÈÄíË∑üË∏™‰∏ä‰∏ãÊñá‰ø°ÊÅØÁöÑÂ∑•ÂÖ∑ÂåÖÔºåÂ¶ÇÈÄöËøáhttp headersÔºâ„ÄÇSpansÊúâ‰∏Ä‰∏™‰∏ä‰∏ãÊñáÔºåÂÖ∂‰∏≠ÂåÖÂê´tracerÊ†áËØÜÁ¨¶ÔºåÂ∞ÜÂÖ∂ÊîæÂú®Ë°®Á§∫ÂàÜÂ∏ÉÂºèÊìç‰ΩúÁöÑÊ†ëÁöÑÊ≠£Á°Æ‰ΩçÁΩÆ„ÄÇÂΩìÊàë‰ª¨ÊääÂõæ‰∏≠ÁöÑÂêÑÁßçspanÊîæÂà∞ÂêéÁ´ØÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨ÁöÑÊúçÂä°Ë∞ÉÁî®Èìæ‰ºöÂä®ÊÄÅÁöÑÁîüÊàêË∞ÉÁî®Èìæ„ÄÇ ‰∏ãÈù¢ÊòØ‰∏Ä‰∫õÂ∏ÇÂú∫‰∏äÁî®ÁöÑÊØîËæÉÂ§öÁöÑË∞ÉÁî®ÈìæÁõëÊéßÔºö 1„ÄÅPinpointgithubÂú∞ÂùÄÔºöGitHub - naver/pinpoint: Pinpoint is an open source APM (Application Performance Management) tool for large-scale distributed systems written in Java.ÂØπjavaÈ¢ÜÂüüÁöÑÊÄßËÉΩÂàÜÊûêÊúâÂÖ¥Ë∂£ÁöÑÊúãÂèãÈÉΩÂ∫îËØ•ÁúãÁúãËøô‰∏™ÂºÄÊ∫êÈ°πÁõÆÔºåËøô‰∏™ÊòØ‰∏Ä‰∏™Èü©ÂõΩÂõ¢ÈòüÂºÄÊ∫êÂá∫Êù•ÁöÑÔºåÈÄöËøáJavaAgentÁöÑÊú∫Âà∂Êù•ÂÅöÂ≠óËäÇÁ†Å‰ª£Á†ÅÊ§çÂÖ•ÔºåÂÆûÁé∞Âä†ÂÖ•traceidÂíåÊäìÂèñÊÄßËÉΩÊï∞ÊçÆÁöÑÁõÆÁöÑ„ÄÇNewRelic„ÄÅOneapm‰πãÁ±ªÁöÑÂ∑•ÂÖ∑Âú®javaÂπ≥Âè∞‰∏äÁöÑÊÄßËÉΩÂàÜÊûê‰πüÊòØÁ±ª‰ººÁöÑÊú∫Âà∂„ÄÇ 2„ÄÅSkyWalkinggithubÂú∞ÂùÄÔºöwu-sheng/sky-walkingËøôÊòØÂõΩÂÜÖ‰∏Ä‰ΩçÂè´Âê¥ÊôüÁöÑÂÖÑÂºüÂºÄÊ∫êÁöÑÔºå‰πüÊòØ‰∏Ä‰∏™ÂØπJAVAÂàÜÂ∏ÉÂºèÂ∫îÁî®Á®ãÂ∫èÈõÜÁæ§ÁöÑ‰∏öÂä°ËøêË°åÊÉÖÂÜµËøõË°åËøΩË∏™„ÄÅÂëäË≠¶ÂíåÂàÜÊûêÁöÑÁ≥ªÁªüÔºåÂú®github‰∏ä‰πüÊúâ400Â§öÈ¢óÊòü‰∫Ü„ÄÇÂäüËÉΩÁõ∏ÂØπpinpointËøòÊòØÁ®çÂº±‰∏Ä‰∫õÔºåÊèí‰ª∂ËøòÊ≤°ÈÇ£‰πà‰∏∞ÂØåÔºå‰∏çËøá‰πüÂæàÈöæÂæó‰∫Ü„ÄÇ 3„ÄÅZipkinÂÆòÁΩëÔºöOpenZipkin ¬∑ A distributed tracing systemgithubÂú∞ÂùÄÔºöGitHub - openzipkin/zipkin: Zipkin is a distributed tracing systemËøô‰∏™ÊòØtwitterÂºÄÊ∫êÂá∫Êù•ÁöÑÔºå‰πüÊòØÂèÇËÄÉDapperÁöÑ‰ΩìÁ≥ªÊù•ÂÅöÁöÑ„ÄÇ ZipkinÁöÑjavaÂ∫îÁî®Á´ØÊòØÈÄöËøá‰∏Ä‰∏™Âè´BraveÁöÑÁªÑ‰ª∂Êù•ÂÆûÁé∞ÂØπÂ∫îÁî®ÂÜÖÈÉ®ÁöÑÊÄßËÉΩÂàÜÊûêÊï∞ÊçÆÈááÈõÜ„ÄÇBraveÁöÑgithubÂú∞ÂùÄÔºöhttps://github.com/openzipkin/braveËøô‰∏™ÁªÑ‰ª∂ÈÄöËøáÂÆûÁé∞‰∏ÄÁ≥ªÂàóÁöÑjavaÊã¶Êà™Âô®ÔºåÊù•ÂÅöÂà∞ÂØπhttp/servletËØ∑Ê±Ç„ÄÅÊï∞ÊçÆÂ∫ìËÆøÈóÆÁöÑË∞ÉÁî®ËøáÁ®ãË∑üË∏™„ÄÇÁÑ∂ÂêéÈÄöËøáÂú®spring‰πãÁ±ªÁöÑÈÖçÁΩÆÊñá‰ª∂ÈáåÂä†ÂÖ•Ëøô‰∫õÊã¶Êà™Âô®ÔºåÂÆåÊàêÂØπjavaÂ∫îÁî®ÁöÑÊÄßËÉΩÊï∞ÊçÆÈááÈõÜ„ÄÇ 4„ÄÅCATgithubÂú∞ÂùÄÔºöGitHub - dianping/cat: Central Application TrackingËøô‰∏™ÊòØÂ§ß‰ºóÁÇπËØÑÂºÄÊ∫êÂá∫Êù•ÁöÑÔºåÂÆûÁé∞ÁöÑÂäüËÉΩ‰πüËøòÊòØËõÆ‰∏∞ÂØåÁöÑÔºåÂõΩÂÜÖ‰πüÊúâ‰∏Ä‰∫õÂÖ¨Âè∏Âú®Áî®‰∫Ü„ÄÇ‰∏çËøá‰ªñÂÆûÁé∞Ë∑üË∏™ÁöÑÊâãÊÆµÔºåÊòØË¶ÅÂú®‰ª£Á†ÅÈáåÁ°¨ÁºñÁ†ÅÂÜô‰∏Ä‰∫õ‚ÄúÂüãÁÇπ‚ÄùÔºå‰πüÂ∞±ÊòØ‰æµÂÖ•ÂºèÁöÑ„ÄÇËøôÊ†∑ÂÅöÊúâÂà©ÊúâÂºäÔºåÂ•ΩÂ§ÑÊòØÂèØ‰ª•Âú®Ëá™Â∑±ÈúÄË¶ÅÁöÑÂú∞ÊñπÂä†ÂüãÁÇπÔºåÊØîËæÉÊúâÈíàÂØπÊÄßÔºõÂùèÂ§ÑÊòØÂøÖÈ°ªÊîπÂä®Áé∞ÊúâÁ≥ªÁªüÔºåÂæàÂ§öÂºÄÂèëÂõ¢Èòü‰∏çÊÑøÊÑè„ÄÇ 5„ÄÅXhprof/XhguiËøô‰∏§‰∏™Â∑•ÂÖ∑ÁöÑÁªÑÂêàÔºåÊòØÈíàÂØπPHPÂ∫îÁî®Êèê‰æõAPMËÉΩÂäõÁöÑÂ∑•ÂÖ∑Ôºå‰πüÊòØÈùû‰æµÂÖ•ÂºèÁöÑ„ÄÇXhprof githubÂú∞ÂùÄÔºöGitHub - preinheimer/xhprof: XHGUI is a GUI for the XHProf PHP extension, using a database backend, and pretty graphs to make it easy to use and interpret.Xhgui githubÂú∞ÂùÄÔºöGitHub - perftools/xhgui: A graphical interface for XHProf data built on MongoDBÊàëÂØπPHP‰∏çÁÜüÔºå‰∏çËøáÁΩë‰∏ä‰ªãÁªçËøô‰∏§‰∏™Â∑•ÂÖ∑ÁöÑËµÑÊñôËøòÊòØËõÆÂ§öÁöÑ„ÄÇ ÁÜîÊñ≠„ÄÅÈöîÁ¶ª„ÄÅÈôêÊµÅ„ÄÅÈôçÁ∫ßÈù¢ÂØπÂ∑®Â§ßÁöÑÁ™ÅÂèëÊµÅÈáè‰∏ãÔºåÂ§ßÂûãÂÖ¨Âè∏‰∏ÄËà¨‰ºöÈááÁî®‰∏ÄÁ≥ªÂàóÁöÑÁÜîÊñ≠ÔºàÁ≥ªÁªüËá™Âä®Â∞ÜÊúçÂä°ÂÖ≥Èó≠Èò≤Ê≠¢ËÆ©Âá∫Áé∞ÁöÑÈóÆÈ¢òÊúÄÂ§ßÂåñÔºâ„ÄÅÈöîÁ¶ªÔºàÂ∞ÜÊúçÂä°ÂíåÊúçÂä°ÈöîÁ¶ªÔºåÈò≤Ê≠¢‰∏Ä‰∏™ÊúçÂä°ÊåÇ‰∫ÜÂÖ∂‰ªñÊúçÂä°‰∏çËÉΩËÆøÈóÆÔºâ„ÄÅÈôêÊµÅÔºàÂçï‰ΩçÊó∂Èó¥ÂÜÖ‰πãÂÖÅËÆ∏‰∏ÄÂÆöÊï∞ÈáèÁî®Êà∑ËÆøÈóÆÔºâ„ÄÅÈôçÁ∫ßÔºàÂΩìÊï¥‰∏™ÂæÆÊúçÂä°Êû∂ÊûÑÊï¥‰ΩìÁöÑË¥üËΩΩË∂ÖÂá∫‰∫ÜÈ¢ÑËÆæÁöÑ‰∏äÈôêÈòàÂÄºÊàñÂç≥Â∞ÜÂà∞Êù•ÁöÑÊµÅÈáèÈ¢ÑËÆ°Â∞Ü‰ºöË∂ÖËøáÈ¢ÑËÆæÁöÑÈòàÂÄºÊó∂Ôºå‰∏∫‰∫Ü‰øùËØÅÈáçË¶ÅÊàñÂü∫Êú¨ÁöÑÊúçÂä°ËÉΩÊ≠£Â∏∏ËøêË°åÔºåÊàë‰ª¨ÂèØ‰ª•Â∞Ü‰∏Ä‰∫õ ‰∏çÈáçË¶ÅÊàñ ‰∏çÁ¥ßÊÄ• ÁöÑÊúçÂä°Êàñ‰ªªÂä°ËøõË°åÊúçÂä°ÁöÑ Âª∂Ëøü‰ΩøÁî® Êàñ ÊöÇÂÅú‰ΩøÁî®ÔºâÊé™ÊñΩ„ÄÇ ‰∏ãÈù¢‰ªãÁªç‰∏Ä‰∏ãhystrixÁöÑËøêË°åÊµÅÁ®ãÔºàÊ≤°ÊâæÂà∞Êû∂ÊûÑÂõæ‰∏çÂ•ΩÊÑèÊÄùÔºâÔºö ÊØè‰∏Ä‰∏™ÂæÆÊúçÂä°Ë∞ÉÁî®Êó∂ÔºåÈÉΩ‰ºö‰ΩøÁî®hystrixÁöÑcommandÊñπÂºèÔºà‰∏äÂõæÁöÑÂ∑¶‰∏äËßíÈÇ£‰∏™ÔºâÔºåÁÑ∂Âêé‰ΩøÁî®commandÂêåÊ≠•ÁöÑÔºåÊàñËÄÖÊòØÂìçÂ∫îÂºèÁöÑÔºåÊàñËÄÖÊòØÂºÇÊ≠•ÁöÑÔºåÂà§Êñ≠ÁîµË∑ØÊòØÂê¶ÁÜîÊñ≠ÔºàÈ°∫ÁùÄÂõæ‰ªéÂ∑¶ÂæÄÂè≥ÁúãÔºâÔºå Â¶ÇÊûúÊñ≠Ë∑ØÂàôËµ∞ÈôçÁ∫ßfallbackÔºõ Â¶ÇÊûúËøô‰∏™Á∫øÈó≠ÂêàÁùÄÔºå‰ΩÜÊòØÁ∫øÁ®ãËµÑÊ∫êÊ≤°‰∫ÜÔºåÈòüÂàóÊª°‰∫ÜÔºåÂàôËµ∞ÈôêÊµÅÊé™ÊñΩÔºàÁúãÂõæÁöÑÁ¨¨5Ê≠•ÔºâÔºõ Â¶ÇÊûúËµ∞ÂÆå‰∫ÜÔºåÊâßË°åÊàêÂäü‰∫ÜÔºåÂàôËµ∞run()ÊñπÊ≥ïÔºåËé∑ÂèñresponseÔºå‰ΩÜÊòØËøô‰∏™ËøáÁ®ãÂ¶ÇÊûúÂá∫Èîô‰∫ÜÔºåÂàôÁªßÁª≠Ëµ∞ÈôçÁ∫ßfallback. ÂêåÊó∂ÔºåÁúãÂõæÊúÄ‰∏äÈù¢Êúâ‰∏Ä‰∏™ÂêéÁºÄÊòØhealthÁöÑÔºåËøôÊòØ‰∏Ä‰∏™ËÆ°ÁÆóÊï¥‰∏™ÈìæË∑ØÊòØÂê¶ÂÅ•Â∫∑ÁöÑÁªÑ‰ª∂ÔºåÊØè‰∏ÄÊ≠•Êìç‰ΩúÈÉΩË¢´ÂÆÉËÆ∞ÂΩïÁùÄ„ÄÇ ÂÆπÂô®‰∏éÊúçÂä°ÁºñÊéíÂºïÊìé‰ªéÁâ©ÁêÜÊú∫Âà∞ËôöÊãüÊú∫Ôºå‰ªéËôöÊãüÊú∫Âà∞ÂÆπÂô®Ôºõ‰ªéÁâ©ÁêÜÈõÜÁæ§Âà∞open stackÔºåopen stackÂà∞kubernetesÔºõÁßëÊäÄ‰∏çÊñ≠ÁöÑÂèòÂåñÔºåÊàë‰ª¨ÁöÑËÆ§Áü•‰πüÊ≤°Âà∑Êñ∞„ÄÇ Êàë‰ª¨‰ªéÂÆπÂô®ÂºÄÂßãËØ¥Ëµ∑ÔºåÂÆÉÈ¶ñÂÖàÊòØ‰∏Ä‰∏™Áõ∏ÂØπÁã¨Á´ãÁöÑËøêË°åÁéØÂ¢ÉÔºåÂú®Ëøô‰∏ÄÁÇπÊúâÁÇπÁ±ª‰ºº‰∫éËôöÊãüÊú∫Ôºå‰ΩÜÊòØ‰∏çÂÉèËôöÊãüÊú∫ÈÇ£Ê†∑ÂΩªÂ∫ï„ÄÇ ËôöÊãüÊú∫‰ºöÂ∞ÜËôöÊãüÁ°¨‰ª∂„ÄÅÂÜÖÊ†∏ÔºàÂç≥Êìç‰ΩúÁ≥ªÁªüÔºâ‰ª•ÂèäÁî®Êà∑Á©∫Èó¥ÊâìÂåÖÂú®Êñ∞ËôöÊãüÊú∫ÂΩì‰∏≠ÔºåËôöÊãüÊú∫ËÉΩÂ§üÂà©Áî®‚ÄúËôöÊãüÊú∫ÁÆ°ÁêÜÁ®ãÂ∫è‚ÄùËøêË°åÂú®Áâ©ÁêÜËÆæÂ§á‰πã‰∏ä„ÄÇËôöÊãüÊú∫‰æùËµñ‰∫éhypervisorÔºåÂÖ∂ÈÄöÂ∏∏Ë¢´ÂÆâË£ÖÂú®‚ÄúË£∏ÈáëÂ±û‚ÄùÁ≥ªÁªüÁ°¨‰ª∂‰πã‰∏äÔºåËøôÂØºËá¥hypervisorÂú®Êüê‰∫õÊñπÈù¢Ë¢´ËÆ§‰∏∫ÊòØ‰∏ÄÁßçÊìç‰ΩúÁ≥ªÁªü„ÄÇ‰∏ÄÊó¶ hypervisorÂÆâË£ÖÂÆåÊàêÔºå Â∞±ÂèØ‰ª•‰ªéÁ≥ªÁªüÂèØÁî®ËÆ°ÁÆóËµÑÊ∫êÂΩì‰∏≠ÂàÜÈÖçËôöÊãüÊú∫ÂÆû‰æã‰∫ÜÔºåÊØèÂè∞ËôöÊãüÊú∫ÈÉΩËÉΩÂ§üËé∑ÂæóÂîØ‰∏ÄÁöÑÊìç‰ΩúÁ≥ªÁªüÂíåË¥üËΩΩ(Â∫îÁî®Á®ãÂ∫è)„ÄÇÁÆÄË®Ä‰πãÔºåËôöÊãüÊú∫ÂÖàÈúÄË¶ÅËôöÊãü‰∏Ä‰∏™Áâ©ÁêÜÁéØÂ¢ÉÔºåÁÑ∂ÂêéÊûÑÂª∫‰∏Ä‰∏™ÂÆåÊï¥ÁöÑÊìç‰ΩúÁ≥ªÁªüÔºåÂÜçÊê≠Âª∫‰∏ÄÂ±ÇRuntimeÔºåÁÑ∂Âêé‰æõÂ∫îÁî®Á®ãÂ∫èËøêË°å„ÄÇ ÂØπ‰∫éÂÆπÂô®ÁéØÂ¢ÉÊù•ËØ¥Ôºå‰∏çÈúÄË¶ÅÂÆâË£Ö‰∏ªÊú∫Êìç‰ΩúÁ≥ªÁªüÔºåÁõ¥Êé•Â∞ÜÂÆπÂô®Â±Ç(ÊØîÂ¶ÇLXCÊàñlibcontainer)ÂÆâË£ÖÂú®‰∏ªÊú∫Êìç‰ΩúÁ≥ªÁªü(ÈÄöÂ∏∏ÊòØLinuxÂèòÁßç)‰πã‰∏ä„ÄÇÂú®ÂÆâË£ÖÂÆåÂÆπÂô®Â±Ç‰πãÂêéÔºåÂ∞±ÂèØ‰ª•‰ªéÁ≥ªÁªüÂèØÁî®ËÆ°ÁÆóËµÑÊ∫êÂΩì‰∏≠ÂàÜÈÖçÂÆπÂô®ÂÆû‰æã‰∫ÜÔºåÂπ∂‰∏î‰ºÅ‰∏öÂ∫îÁî®ÂèØ‰ª•Ë¢´ÈÉ®ÁΩ≤Âú®ÂÆπÂô®ÂΩì‰∏≠„ÄÇ‰ΩÜÊòØÔºåÊØè‰∏™ÂÆπÂô®ÂåñÂ∫îÁî®ÈÉΩ‰ºöÂÖ±‰∫´Áõ∏ÂêåÁöÑÊìç‰ΩúÁ≥ªÁªü(Âçï‰∏™‰∏ªÊú∫Êìç‰ΩúÁ≥ªÁªü)„ÄÇÂÆπÂô®ÂèØ‰ª•ÁúãÊàê‰∏Ä‰∏™Ë£ÖÂ•Ω‰∫Ü‰∏ÄÁªÑÁâπÂÆöÂ∫îÁî®ÁöÑËôöÊãüÊú∫ÔºåÂÆÉÁõ¥Êé•Âà©Áî®‰∫ÜÂÆø‰∏ªÊú∫ÁöÑÂÜÖÊ†∏ÔºåÊäΩË±°Â±ÇÊØîËôöÊãüÊú∫Êõ¥Â∞ëÔºåÊõ¥Âä†ËΩªÈáèÂåñÔºåÂêØÂä®ÈÄüÂ∫¶ÊûÅÂø´„ÄÇ Áõ∏ÊØî‰∫éËôöÊãüÊú∫ÔºåÂÆπÂô®Êã•ÊúâÊõ¥È´òÁöÑËµÑÊ∫ê‰ΩøÁî®ÊïàÁéáÔºåÂõ†‰∏∫ÂÆÉÂπ∂‰∏çÈúÄË¶Å‰∏∫ÊØè‰∏™Â∫îÁî®ÂàÜÈÖçÂçïÁã¨ÁöÑÊìç‰ΩúÁ≥ªÁªü‚Äî‚ÄîÂÆû‰æãËßÑÊ®°Êõ¥Â∞è„ÄÅÂàõÂª∫ÂíåËøÅÁßªÈÄüÂ∫¶‰πüÊõ¥Âø´„ÄÇËøôÊÑèÂë≥Áõ∏ÊØî‰∫éËôöÊãüÊú∫ÔºåÂçï‰∏™Êìç‰ΩúÁ≥ªÁªüËÉΩÂ§üÊâøËΩΩÊõ¥Â§öÁöÑÂÆπÂô®„ÄÇ‰∫ëÊèê‰æõÂïÜÂçÅÂàÜÁÉ≠Ë°∑‰∫éÂÆπÂô®ÊäÄÊúØÔºåÂõ†‰∏∫Âú®Áõ∏ÂêåÁöÑÁ°¨‰ª∂ËÆæÂ§áÂΩì‰∏≠ÔºåÂèØ‰ª•ÈÉ®ÁΩ≤Êï∞ÈáèÊõ¥Â§öÁöÑÂÆπÂô®ÂÆû‰æã„ÄÇÊ≠§Â§ñÔºåÂÆπÂô®Êòì‰∫éËøÅÁßªÔºå‰ΩÜÊòØÂè™ËÉΩË¢´ËøÅÁßªÂà∞ÂÖ∑ÊúâÂÖºÂÆπÊìç‰ΩúÁ≥ªÁªüÂÜÖÊ†∏ÁöÑÂÖ∂‰ªñÊúçÂä°Âô®ÂΩì‰∏≠ÔºåËøôÊ†∑Â∞±‰ºöÁªôËøÅÁßªÈÄâÊã©Â∏¶Êù•ÈôêÂà∂„ÄÇÂõ†‰∏∫ÂÆπÂô®‰∏çÂÉèËôöÊãüÊú∫ÈÇ£Ê†∑ÂêåÊ†∑ÂØπÂÜÖÊ†∏ÊàñËÄÖËôöÊãüÁ°¨‰ª∂ËøõË°åÊâìÂåÖÔºåÊâÄ‰ª•ÊØèÂ•óÂÆπÂô®ÈÉΩÊã•ÊúâËá™Â∑±ÁöÑÈöîÁ¶ªÂåñÁî®Êà∑Á©∫Èó¥Ôºå‰ªéËÄå‰ΩøÂæóÂ§öÂ•óÂÆπÂô®ËÉΩÂ§üËøêË°åÂú®Âêå‰∏Ä‰∏ªÊú∫Á≥ªÁªü‰πã‰∏ä„ÄÇÊàë‰ª¨ÂèØ‰ª•ÁúãÂà∞ÂÖ®ÈÉ®Êìç‰ΩúÁ≥ªÁªüÂ±ÇÁ∫ßÁöÑÊû∂ÊûÑÈÉΩÂèØÂÆûÁé∞Ë∑®ÂÆπÂô®ÂÖ±‰∫´ÔºåÊÉü‰∏ÄÈúÄË¶ÅÁã¨Á´ãÊûÑÂª∫ÁöÑÂ∞±ÊòØ‰∫åËøõÂà∂Êñá‰ª∂‰∏éÂ∫ì„ÄÇÊ≠£Âõ†‰∏∫Â¶ÇÊ≠§ÔºåÂÆπÂô®ÊâçÊã•ÊúâÊûÅ‰∏∫Âá∫Ëâ≤ÁöÑËΩªÈáèÂåñÁâπÊÄß„ÄÇ Êàë‰ª¨ÊúÄÂ∏∏Áî®ÁöÑÂÆπÂô®ÊòØdaockerÔºåÁΩëÂùÄÂ¶Ç‰∏ãüëâhttps://www.docker.com/ ÂÆπÂô®ÁºñÊéíËøáÂéªËôöÊãüÊú∫ÂèØ‰ª•ÈÄöËøá‰∫ëÂπ≥Âè∞open stackÁÆ°ÁêÜËôöÊãüÂåñÔºåÂÆπÂô®Êó∂‰ª£Â¶Ç‰ΩïÁÆ°ÁêÜÂÆπÂô®Âë¢ÔºüËøôÂ∞±Ë¶ÅÁúãÁúãÂÆπÂô®ÁºñÊéíÂºïÊìé‰∫Ü„ÄÇ Apache mesosmesosÊòØÂü∫‰∫émasterÔºåslaveÊû∂ÊûÑÔºåÊ°ÜÊû∂ÂÜ≥ÂÆöÂ¶Ç‰ΩïÂà©Áî®ËµÑÊ∫êÔºåmasterË¥üË¥£ÁÆ°ÁêÜÊú∫Âô®Ôºåslave‰ºöÂÆöÊúüÁöÑÂ∞ÜÊú∫Âô®ÊÉÖÂÜµÊä•ÂëäÁªômasterÔºåmasterÂÜçÂ∞Ü‰ø°ÊÅØÁªôÊ°ÜÊû∂„ÄÇmasterÊòØÈ´òÂèØÁî®ÁöÑÔºåÂõ†‰∏∫zkÔºå‰πüÊúâleaderÁöÑÂ≠òÂú®„ÄÇ‰∏ãÈù¢ÊòØÊû∂ÊûÑÂõæüëá kuberneteskubernetesÊòØÊúÄËøëÂçÅÂàÜÁÅ´ÁÉ≠ÁöÑÂºÄÊ∫êÂÆπÂô®ÁºñÊéíÂºïÊìéÔºåÂÖ∑‰ΩìÂèØ‰ª•ÂèÇËÄÉkubernetes‰∏≠ÊñáÊñáÊ°£ KubernetesËÆæËÆ°ÁêÜÂøµÂíåÂäüËÉΩÂÖ∂ÂÆûÂ∞±ÊòØ‰∏Ä‰∏™Á±ª‰ººLinuxÁöÑÂàÜÂ±ÇÊû∂ÊûÑÔºåÂÖàËØ¥ËØ¥ÊØè‰∏Ä‰∏™KubernetesËäÇÁÇπÂÜÖÈÉ®ÔºåkubeletÁÆ°ÁêÜÂÖ®Â±ÄÂÖ®Â±ÄpodÔºåËÄåÊØè‰∏Ä‰∏™podÊâøËΩΩÁùÄ‰∏Ä‰∏™ÊàñÂ§ö‰∏™ÂÆπÂô®Ôºåkube-proxyË¥üË¥£ÁΩëÁªú‰ª£ÁêÜÂíåË¥üËΩΩÂùáË°° „ÄÇ KubernetesËäÇÁÇπÂ§ñÈÉ®ÔºåÂàôÊòØÂØπÂ∫îÁöÑÊéßÂà∂ÁÆ°ÁêÜÊúçÂä°Âô®ÔºåË¥üË¥£Áªü‰∏ÄÁÆ°ÁêÜÂêÑ‰∏™ËäÇÁÇπË∞ÉÂ∫¶ÂàÜÈÖç‰∏éËøêË°å„ÄÇ ÊúçÂä°ÁΩëÊ†ºÂåñ„ÄÇ„ÄÇ„ÄÇÂæÖÊõ¥Êñ∞ ËµÑÊñô‰∏éÊñáÁåÆÈ©¨‰∏Å.Á¶èÂãíÂØπÂæÆÊúçÂä°ÁöÑÊèèËø∞ ÂæÆÊúçÂä°Êû∂ÊûÑÁöÑÁêÜËÆ∫Âü∫Á°Ä - Â∫∑Â®ÅÂÆöÂæã Ë∞ÉÁî®ÈìæÈÄâÂûã‰πãZipkinÔºåPinpointÔºåSkyWalkingÔºåCAT ÁªìÊùüÊ≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºü ËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéÁúãÂøÉÊÉÖÂèØËÉΩ‰ºöÂú®CSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèãÔºåÂí±‰ª¨‰∏§‰∏™ÊÉ≥‰∏™Âè∑Á†ÅÔºå ‰π∞‰∏™ÂΩ©Á•®ÔºåÂÖàÊå£‰ªñ‰∏™Âá†Áôæ‰∏áüòù]]></content>
      <tags>
        <tag>ÊäÄÊúØ</tag>
        <tag>Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ</tag>
        <tag>Êû∂ÊûÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÈòøÈáåÂ∑¥Â∑¥JavaÂºÄÂèëÊâãÂÜå]]></title>
    <url>%2F2018%2F12%2F07%2F%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%2F</url>
    <content type="text"><![CDATA[ÂàÜÊûê‰∏Ä‰∏ãÂπøÊ≥õÊµÅ‰º†ÁöÑÈòøÈáåÂ∑¥Â∑¥JavaÂºÄÂèëÊâãÂÜåÔºåÂΩì‰ΩúÂú®Á∫øÊñáÊ°£ÔºåËΩ¨‰æµÂà†„ÄÇ„ÄÇ]]></content>
      <tags>
        <tag>java</tag>
        <tag>ÂàÜ‰∫´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÈòÖËØªÈòøÈáåÂºÄÂèëÊâãÂÜåÂèëÁé∞ÁöÑConcurrentModificationExceptionÂºÇÂ∏∏]]></title>
    <url>%2F2018%2F12%2F06%2FConcurrentModificationException%E5%BC%82%E5%B8%B8%2F</url>
    <content type="text"><![CDATA[‰ªäÂ§©ÈòÖËØªÈòøÈáåÂ∑¥Â∑¥JavaÂºÄÂèëÊâãÂÜå(ÁªàÊûÅÁâà).pdfÔºåÂÅ∂ÁÑ∂ÂèëÁé∞‰∏ÄÊù°Âº∫Âà∂ËßÑËåÉÔºö „ÄêÂº∫Âà∂„Äë‰∏çË¶ÅÂú® foreach Âæ™ÁéØÈáåËøõË°åÂÖÉÁ¥†ÁöÑ remove/add Êìç‰Ωú„ÄÇremove ÂÖÉÁ¥†ËØ∑‰ΩøÁî® IteratorÊñπÂºèÔºåÂ¶ÇÊûúÂπ∂ÂèëÊìç‰ΩúÔºåÈúÄË¶ÅÂØπ Iterator ÂØπË±°Âä†ÈîÅ„ÄÇ ËøôÂºïÂèë‰∫ÜÊàëÁöÑÊ≥®ÊÑèÂäõ„ÄÇ ÊåâÁÖß‰ªñËØ¥ÁöÑÂÅö‰∫Ü‰∏ÄÈÅçÔºåÊûúÁÑ∂ÊúâËøô‰∏™ÈóÆÈ¢ò„ÄÇ‰∏ãÈù¢Êàë‰ª¨Â∞±Êé¢Á¥¢‰∏Ä‰∏ãÔºåÂà∞Â∫ï‰∏∫‰ªÄ‰πà‰ºöÂá∫Ëøô‰∏™ÈóÆÈ¢òÂêßÔºÅ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆhttps://blog.tengshe789.tech/ ÂÆûÈ™å‰ª£Á†Å‰∏ãÈù¢ÊòØÊé®Ëçê‰ΩøÁî®ÁöÑIteratorÊñπÂºèÊù•remove/addÊìç‰Ωú 12345678910public static List&lt;String&gt; test1(List&lt;String&gt; list)&#123; Iterator&lt;String&gt; iterator = list.iterator(); while (iterator.hasNext()) &#123; String item = iterator.next(); if (item.equals(NUM2)) &#123; iterator.remove(); &#125; &#125; return list; &#125; ‰∏çÊé®Ëçê‰ΩøÁî®ÁöÑÊñπÊ≥ïÔºö 12345678public static List&lt;String&gt; test2(List&lt;String&gt; list)&#123; for (String item : list) &#123; if (NUM2.equals(item)) &#123; list.remove(item); &#125; &#125; return list; &#125; ÊàëÁöÑmainÊñπÊ≥ïÔºö 1234567891011121314public static final String NUM1 = "1"; public static final String NUM2 = "2"; public static void main(String[] args) &#123; List&lt;String&gt; list = new ArrayList&lt;String&gt;(); list.add("1"); list.add("2"); test2(list); list.forEach(item -&gt; &#123; System.out.println("ÁªìÊûúÊòØ " + item); &#125;); &#125; ÂÆûÈ™åÁªìÊûúÊûúÁÑ∂ÔºåÂ∞ÜÂà§Êñ≠Êù°‰ª∂ËÆæÁΩÆÊàêNUM2Êó∂ÔºåÂ∞±Âá∫ÂºÇÂ∏∏‰∫ÜÔºåÂèØÊòØËøôÊòØ‰∏∫‰ªÄ‰πàÂë¢Ôºü ‰∏ÄÊé¢Á©∂Á´üÊàë‰ª¨‰ªéÂá∫ÈîôÊó•Âøó‰∏≠Êü•ÊâæÁ≠îÊ°à„ÄÇ 123456789101112@SuppressWarnings("unchecked") public E next() &#123; checkForComodification(); int i = cursor; if (i &gt;= size) throw new NoSuchElementException(); Object[] elementData = ArrayList.this.elementData; if (i &gt;= elementData.length) throw new ConcurrentModificationException(); cursor = i + 1; return (E) elementData[lastRet = i]; &#125; Êù•Âà∞foreach‰∏≠Ëµ∞ÁöÑnext()ÔºåÁ¨¨‰∏ÄÊ≠•ÈúÄË¶ÅËµ∞checkForComodification() 1234final void checkForComodification() &#123; if (modCount != expectedModCount) throw new ConcurrentModificationException(); &#125; ËøôËæπÂèàÂá∫Áé∞‰∏Ä‰∏™ÊàêÂëòÂèòÈáèmodCountÔºåÊàë‰ª¨È°∫ÁùÄÊù•ÊâæÊâæÁúã„ÄÇ 123456789101112131415161718192021222324252627/** * The number of times this list has been &lt;i&gt;structurally modified&lt;/i&gt;. * Structural modifications are those that change the size of the * list, or otherwise perturb it in such a fashion that iterations in * progress may yield incorrect results. * * &lt;p&gt;This field is used by the iterator and list iterator implementation * returned by the &#123;@code iterator&#125; and &#123;@code listIterator&#125; methods. * If the value of this field changes unexpectedly, the iterator (or list * iterator) will throw a &#123;@code ConcurrentModificationException&#125; in * response to the &#123;@code next&#125;, &#123;@code remove&#125;, &#123;@code previous&#125;, * &#123;@code set&#125; or &#123;@code add&#125; operations. This provides * &lt;i&gt;fail-fast&lt;/i&gt; behavior, rather than non-deterministic behavior in * the face of concurrent modification during iteration. * * &lt;p&gt;&lt;b&gt;Use of this field by subclasses is optional.&lt;/b&gt; If a subclass * wishes to provide fail-fast iterators (and list iterators), then it * merely has to increment this field in its &#123;@code add(int, E)&#125; and * &#123;@code remove(int)&#125; methods (and any other methods that it overrides * that result in structural modifications to the list). A single call to * &#123;@code add(int, E)&#125; or &#123;@code remove(int)&#125; must add no more than * one to this field, or the iterators (and list iterators) will throw * bogus &#123;@code ConcurrentModificationExceptions&#125;. If an implementation * does not wish to provide fail-fast iterators, this field may be * ignored. */ protected transient int transient = 0; Âì¶ÔºåÁºòÊù•‰π≥Ê≠§ÔºålistÊòØÁ∫øÁ®ã‰∏çÂÆâÂÖ®ÁöÑÔºåÂõ†Ê≠§Â¶ÇÊûúÂú®‰ΩøÁî®Ëø≠‰ª£Âô®ÁöÑËøáÁ®ã‰∏≠ÊúâÂÖ∂‰ªñÁ∫øÁ®ã‰øÆÊîπ‰∫ÜlistÔºåÈÇ£‰πàÂ∞ÜÊäõÂá∫ConcurrentModificationExceptionÔºåËøôÂ∞±ÊòØÊâÄË∞ìfail-fastÁ≠ñÁï•(ËßÅjdkÊ≥®Èáä)„ÄÇ modCountÂÆÉ‰ª£Ë°®ËØ•ListÂØπË±°Ë¢´‰øÆÊîπÁöÑÊ¨°Êï∞ÔºåÊØèÂØπListÂØπË±°‰øÆÊîπ‰∏ÄÊ¨°ÔºåmodCountÈÉΩ‰ºöÂä†IteratorÁ±ªÈáåÊúâ‰∏Ä‰∏™ÊàêÂëòÂèòÈáèexpectedModCountÔºåÂÆÉÁöÑÂÄº‰∏∫ÂàõÂª∫IteratorÂØπË±°ÁöÑÊó∂ÂÄôListÁöÑmodCountÂÄº„ÄÇÁî®Ê≠§ÂèòÈáèÊù•Ê£ÄÈ™åÂú®Ëø≠‰ª£ËøáÁ®ã‰∏≠ListÂØπË±°ÊòØÂê¶Ë¢´‰øÆÊîπ‰∫ÜÔºåÂ¶ÇÊûúË¢´‰øÆÊîπ‰∫ÜÂàôÊäõÂá∫java.util.ConcurrentModificationExceptionÂºÇÂ∏∏„ÄÇÂú®ÊØèÊ¨°Ë∞ÉÁî®IteratorÂØπË±°ÁöÑnext()ÊñπÊ≥ïÁöÑÊó∂ÂÄôÈÉΩ‰ºöË∞ÉÁî®checkForComodification()ÊñπÊ≥ïËøõË°å‰∏ÄÊ¨°Ê£ÄÈ™åÔºåcheckForComodification()ÊñπÊ≥ï‰∏≠ÂÅöÁöÑÂ∑•‰ΩúÂ∞±ÊòØÊØîËæÉexpectedModCountÂíåmodCountÁöÑÂÄºÊòØÂê¶Áõ∏Á≠âÔºåÂ¶ÇÊûú‰∏çÁõ∏Á≠âÔºåÂ∞±ËÆ§‰∏∫ËøòÊúâÂÖ∂‰ªñÂØπË±°Ê≠£Âú®ÂØπÂΩìÂâçÁöÑListËøõË°åÊìç‰ΩúÔºåÈÇ£‰∏™Â∞±‰ºöÊäõÂá∫ConcurrentModificationExceptionÂºÇÂ∏∏„ÄÇ ÁΩë‰∏äÊü•ÊâæÁöÑÂÖ≥‰∫éIteratorÁöÑÂ∑•‰ΩúÊú∫Âà∂„ÄÇIteratorÊòØÂ∑•‰ΩúÂú®‰∏Ä‰∏™Áã¨Á´ãÁöÑÁ∫øÁ®ã‰∏≠ÔºåÂπ∂‰∏îÊã•Êúâ‰∏Ä‰∏™ mutexÈîÅÔºåÂ∞±ÊòØËØ¥IteratorÂú®Â∑•‰ΩúÁöÑÊó∂ÂÄôÔºåÊòØ‰∏çÂÖÅËÆ∏Ë¢´Ëø≠‰ª£ÁöÑÂØπË±°Ë¢´ÊîπÂèòÁöÑ„ÄÇËÄåListÁ≠âÊòØÂä®ÊÄÅÁöÑÔºåÂèØÂèòÂØπË±°Êï∞ÈáèÁöÑÊï∞ÊçÆÁªìÊûÑÔºå‰ΩÜÊòØIteratorÂàôÊòØÂçïÂêë‰∏çÂèØÂèòÔºåÂè™ËÉΩÈ°∫Â∫èËØªÂèñÔºå‰∏çËÉΩÈÄÜÂ∫èÊìç‰ΩúÁöÑÊï∞ÊçÆÁªìÊûÑÔºåÂΩì IteratorÊåáÂêëÁöÑÂéüÂßãÊï∞ÊçÆÂèëÁîüÂèòÂåñÊó∂ÔºåIteratorËá™Â∑±Â∞±Ëø∑Â§±‰∫ÜÊñπÂêë„ÄÇ Áª≠1sÊó∂Èó¥ÂÖ®ÁâáÁªìÊùüÔºåËßâÂæóÊàëÂÜôÁöÑ‰∏çÈîôÔºüÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËµ∂Âø´ÊâìÂºÄÊàëÁöÑüëâ‰∏™‰∫∫ÂçöÂÆ¢ üëàÂêßÔºÅ Ë∞¢Ë∞¢‰Ω†ÈÇ£‰πàÂèØÁà±ÔºåËøò‰∏ÄÁõ¥ÂÖ≥Ê≥®ÁùÄÊàë~‚ù§üòù]]></content>
      <tags>
        <tag>ÊäÄÊúØ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂàÜÂ∏ÉÂºèÁ≥ªÁªü--ÊÑüÊÄßËÆ§ËØÜJWT]]></title>
    <url>%2F2018%2F12%2F02%2F%E6%84%9F%E6%80%A7%E8%AE%A4%E8%AF%86JWT%2F</url>
    <content type="text"><![CDATA[Â•Ω‰πÖÊ≤°ÂÜôÂçöÂÆ¢‰∫ÜÔºåÂõ†‰∏∫ÊúÄËøëÂÖ¨Âè∏Ë¶ÅÊ±ÇÊàëÂ≠¶spring cloudÔºåÊó©ÁÇπÂ∞Ü‰ª•ÂâçËΩØ‰ª∂ËøÅÁßªÂà∞Êñ∞ÁöÑÊû∂ÊûÑ‰∏ä„ÄÇÊâÄ‰ª•ÊàëÈÇ£‰∏™ÊãºÂëΩÁöÑÂ≠¶ÂëêÔºåÊÄªÊòØÂõæÂø´ÔºåÂæàÂ§öÂÖ≥ÈîÆÁöÑÁ¨îËÆ∞Ê≤°ÊúâÂÅöÂ•ΩËÆ∞ÂΩïÔºåÁé∞Âú®ÂèàÈÅóÂøò‰∫ÜÂæàÂ§öÂÖ≥ÈîÆÁöÑÊäÄÊúØÁÇπÔºåÊûÅÂÖ∂ÁΩ™ÊÅ∂ÔºÅ Áé∞Âú®ÊÉ≥‰∏ÄÊÉ≥ÔºåËøòÊòØË∏èË∏èÂÆûÂÆûÁöÑËµ∞ÊØîËæÉÂ•Ω„ÄÇËøô‰∏çÔºå‰ªäÂ§©ÊàëÂÜí‰∫Ü‰∏™Ê≥°ÔºåÊù•Ë°•‰∏ÄË°•ÂâçÈù¢ÊàëÊâÄÂ≠¶ÊâÄÂøòÁöÑÁü•ËØÜÁÇπ„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢„ÄÇ Â∏∏ËßÅÁöÑËÆ§ËØÅÊú∫Âà∂‰ªäÂ§©Êàë‰πàËÅä‰∏ÄËÅäJWT„ÄÇ ÂÖ≥‰∫éJWTÔºåÁõ∏‰ø°ÂæàÂ§ö‰∫∫ÈÉΩÂ∑≤ÁªèÁúãËøáÁî®ËøáÔºå‰ªñÊòØÂü∫‰∫éjsonÊï∞ÊçÆÁªìÊûÑÁöÑËÆ§ËØÅËßÑËåÉÔºåÁÆÄÂçïÁöÑËØ¥Â∞±ÊòØÈ™åËØÅÁî®Êà∑ÁôªÊ≤°ÁôªÈôÜÁöÑÁé©ÊÑè„ÄÇËøôÊó∂ÂÄô‰Ω†ÂèØËÉΩÂõûÊÉ≥ÔºåÂìéÂìüÔºå‰∏çÊòØÂèàÈÇ£‰∏™session‰πàÔºåÂàÜÂ∏ÉÂºèÁ≥ªÁªüÁî®redisÂÅöÂàÜÂ∏ÉÂºèsessionÔºåÈÇ£Ëøô‰∏™jwtÊúâ‰ªÄ‰πàÂ•ΩÂ§ÑÂë¢Ôºü ËØ∑Âê¨ÊàëÊÖ¢ÊÖ¢ËØâËØ¥ËøôÂéÜÂè≤ÔºÅ ÊúÄÂéüÂßãÁöÑÂäûÊ≥ï‚ÄìHTTP BASIC AUTHHTTP BASIC authÔºåÂà´ÁúãÂÆÉÂêçÂ≠óÈÇ£‰πàÈïøÈÇ£‰πàÁîüÔºå‰Ω†Â∞±ËÆ§‰∏∫Ëøô‰∏™Áé©ÊÑèÂæàÈ´òÂ§ß‰∏ä„ÄÇÂÖ∂ÂÆûÂéüÁêÜÂæàÁÆÄÂçïÔºåÁÆÄÂçïÁöÑËØ¥Â∞±ÊòØÊØèÊ¨°ËØ∑Ê±ÇAPIÁöÑÊó∂ÂÄôÔºåÈÉΩ‰ºöÊääÁî®Êà∑ÂêçÂíåÂØÜÁ†ÅÈÄöËøárestful API‰º†ÁªôÊúçÂä°Á´Ø„ÄÇËøôÊ†∑Â∞±ÂèØ‰ª•ÂÆûÁé∞‰∏Ä‰∏™Êó†Áä∂ÊÄÅÊÄùÊÉ≥ÔºåÂç≥ÊØèÊ¨°HTTPËØ∑Ê±ÇÂíå‰ª•ÂâçÈÉΩÊ≤°ÊúâÂï•ÂÖ≥Á≥ªÔºåÂè™ÊòØËé∑ÂèñÁõÆÊ†áURIÔºåÂæóÂà∞ÁõÆÊ†áÂÜÖÂÆπ‰πãÂêéÔºåËøôÊ¨°ËøûÊé•Â∞±Ë¢´ÊùÄÊ≠ªÔºåÊ≤°Êúâ‰ªª‰ΩïÁóïËøπ„ÄÇ‰Ω†ÂèØÂà´‰∏ÄÂê¨Êó†Áä∂ÊÄÅÔºåÊ≠£ÊòØÁé∞Âú®ÁöÑÁÉ≠Èó®ÊÄùÊÉ≥ÔºåÂ∞±ËßâÂæóÂæàÂéâÂÆ≥„ÄÇÂÖ∂ÂÆû‰ªñÁöÑÁº∫ÁÇπËøòÊòØÂèàÁöÑÔºåÊàë‰ª¨ÈÄöËøáhttpËØ∑Ê±ÇÂèëÈÄÅÁªôÊúçÂä°Á´ØÁöÑÊó∂ÂÄôÔºåÂæàÊúâÂèØËÉΩÂ∞ÜÊàë‰ª¨ÁöÑÁî®Êà∑ÂêçÂØÜÁ†ÅÁõ¥Êé•Êö¥ÊºèÁªôÁ¨¨‰∏âÊñπÂÆ¢Êà∑Á´ØÔºåÈ£éÈô©ÁâπÂà´Â§ßÔºåÂõ†Ê≠§Áîü‰∫ßÁéØÂ¢É‰∏ãÁî®Ëøô‰∏™ÊñπÊ≥ïÂæàÂ∞ë„ÄÇ SessionÂíåcookiesessionÂíåcookieËÄÅÁîüÂ∏∏Ë∞à‰∫Ü„ÄÇÂºÄÂßãÊó∂ÔºåÈÉΩ‰ºöÂú®ÊúçÂä°Á´ØÂÖ®Â±ÄÂàõÂª∫sessionÂØπË±°ÔºåsessionÂØπË±°‰øùÂ≠òÁùÄÂêÑÁßçÂÖ≥ÈîÆ‰ø°ÊÅØÔºåÂêåÊó∂ÂêëÂÆ¢Êà∑Á´ØÂèëÈÄÅ‰∏ÄÁªÑsessionIdÔºåÊàê‰∏∫‰∏Ä‰∏™cookieÂØπË±°‰øùÂ≠òÂú®ÊµèËßàÂô®‰∏≠„ÄÇ ÂΩìËÆ§ËØÅÊó∂ÔºåcookieÁöÑÊï∞ÊçÆ‰ºö‰º†ÂÖ•ÊúçÂä°Á´Ø‰∏ésessionËøõË°åÂåπÈÖçÔºåËøõËÄåËøõË°åÊï∞ÊçÆËÆ§ËØÅ„ÄÇ Ê≠§Êó∂ÔºåÂÆûÁé∞ÁöÑÊòØ‰∏Ä‰∏™ÊúâÁä∂ÊÄÅÁöÑÊÄùÊÉ≥ÔºåÂç≥ËØ•ÊúçÂä°ÁöÑÂÆû‰æãÂèØ‰ª•Â∞Ü‰∏ÄÈÉ®ÂàÜÊï∞ÊçÆÈöèÊó∂ËøõË°åÂ§á‰ªΩÔºåÂπ∂‰∏îÂú®ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÊúâÁä∂ÊÄÅÊúçÂä°Êó∂ÔºåÂèØ‰ª•ÈÄöËøáÂ§á‰ªΩÊÅ¢Â§çËøô‰∫õÊï∞ÊçÆÔºå‰ª•ËææÂà∞Êï∞ÊçÆÊåÅ‰πÖÂåñÁöÑÁõÆÁöÑ„ÄÇ Áº∫ÁÇπËøôÁßçËÆ§ËØÅÊñπÊ≥ïÂü∫Êú¨ÊòØÁé∞Âú®ËΩØ‰ª∂ÊúÄÂ∏∏Áî®ÁöÑÊñπÊ≥ï‰∫ÜÔºåÂÆÉÊúâ‰∏Ä‰∫õËá™Â∑±ÁöÑÁº∫ÁÇπÔºö ÂÆâÂÖ®ÊÄß„ÄÇcookiesÁöÑÂÆâÂÖ®ÊÄß‰∏çÂ•ΩÔºåÊîªÂáªËÄÖÂèØ‰ª•ÈÄöËøáËé∑ÂèñÊú¨Âú∞cookiesËøõË°åÊ¨∫È™óÊàñËÄÖÂà©Áî®cookiesËøõË°åCSRFÊîªÂáª„ÄÇ Ë∑®ÂüüÈóÆÈ¢ò„ÄÇ‰ΩøÁî®cookiesÊó∂ÔºåÂú®Â§ö‰∏™ÂüüÂêç‰∏ãÔºå‰ºöÂ≠òÂú®Ë∑®ÂüüÈóÆÈ¢ò„ÄÇ ÊúâÁä∂ÊÄÅ„ÄÇsessionÂú®‰∏ÄÂÆöÁöÑÊó∂Èó¥ÈáåÔºåÈúÄË¶ÅÂ≠òÊîæÂú®ÊúçÂä°Á´ØÔºåÂõ†Ê≠§ÂΩìÊã•ÊúâÂ§ßÈáèÁî®Êà∑Êó∂Ôºå‰πü‰ºöÂ§ßÂπÖÂ∫¶Èôç‰ΩéÊúçÂä°Á´ØÁöÑÊÄßËÉΩ„ÄÇ Áä∂ÊÄÅÈóÆÈ¢ò„ÄÇÂΩìÊúâÂ§öÂè∞Êú∫Âô®Êó∂ÔºåÂ¶Ç‰ΩïÂÖ±‰∫´session‰πü‰ºöÊòØ‰∏Ä‰∏™ÈóÆÈ¢òÔºå‰πüÂ∞±ÊòØËØ¥ÔºåÁî®Êà∑Á¨¨‰∏Ä‰∏™ËÆøÈóÆÁöÑÊó∂ÂÄôÊòØÊúçÂä°Âô®AÔºåËÄåÁ¨¨‰∫å‰∏™ËØ∑Ê±ÇË¢´ËΩ¨ÂèëÁªô‰∫ÜÊúçÂä°Âô®BÔºåÈÇ£ÊúçÂä°Âô®BÂ¶Ç‰ΩïÂæóÁü•ÂÖ∂Áä∂ÊÄÅ„ÄÇ ÁßªÂä®ÊâãÊú∫ÈóÆÈ¢ò„ÄÇÁé∞Âú®ÁöÑÊô∫ËÉΩÊâãÊú∫ÔºåÂåÖÊã¨ÂÆâÂçìÔºåÂéüÁîü‰∏çÊîØÊåÅcookieÔºåË¶Å‰ΩøÁî®cookieÊå∫È∫ªÁÉ¶„ÄÇ TokenËÆ§ËØÅÔºà‰ΩøÁî®jwtËßÑËåÉÔºâtoken Âç≥‰ΩøÊòØÂú®ËÆ°ÁÆóÊú∫È¢ÜÂüü‰∏≠‰πüÊúâ‰∏çÂêåÁöÑÂÆö‰πâÔºåËøôÈáåÊàë‰ª¨ËØ¥ÁöÑtokenÔºåÊòØÊåá ËÆøÈóÆËµÑÊ∫êÁöÑÂá≠ÊçÆ „ÄÇ‰ΩøÁî®Âü∫‰∫é Token ÁöÑË∫´‰ªΩÈ™åËØÅÊñπÊ≥ïÔºåÂú®ÊúçÂä°Á´Ø‰∏çÈúÄË¶ÅÂ≠òÂÇ®Áî®Êà∑ÁöÑÁôªÂΩïËÆ∞ÂΩï„ÄÇÂ§ßÊ¶ÇÁöÑÊµÅÁ®ãÊòØ ËøôÊ†∑ÁöÑÔºö ÂÆ¢Êà∑Á´Ø‰ΩøÁî®Áî®Êà∑ÂêçË∑üÂØÜÁ†ÅËØ∑Ê±ÇÁôªÂΩï ÊúçÂä°Á´ØÊî∂Âà∞ËØ∑Ê±ÇÔºåÂéªÈ™åËØÅÁî®Êà∑Âêç‰∏éÂØÜÁ†Å È™åËØÅÊàêÂäüÂêéÔºåÊúçÂä°Á´Ø‰ºöÁ≠æÂèë‰∏Ä‰∏™ TokenÔºåÂÜçÊääËøô‰∏™ Token ÂèëÈÄÅÁªôÂÆ¢Êà∑Á´Ø ÂÆ¢Êà∑Á´ØÊî∂Âà∞ Token ‰ª•ÂêéÂèØ‰ª•ÊääÂÆÉÂ≠òÂÇ®Ëµ∑Êù•ÔºåÊØîÂ¶ÇÊîæÂú® Cookie Èáå ÂÆ¢Êà∑Á´ØÊØèÊ¨°ÂêëÊúçÂä°Á´ØËØ∑Ê±ÇËµÑÊ∫êÁöÑÊó∂ÂÄôÈúÄË¶ÅÂ∏¶ÁùÄÊúçÂä°Á´ØÁ≠æÂèëÁöÑ Token ÊúçÂä°Á´ØÊî∂Âà∞ËØ∑Ê±ÇÔºåÁÑ∂ÂêéÂéªÈ™åËØÅÂÆ¢Êà∑Á´ØËØ∑Ê±ÇÈáåÈù¢Â∏¶ÁùÄÁöÑ TokenÔºåÂ¶ÇÊûúÈ™åËØÅÊàêÂäüÔºåÂ∞±ÂêëÂÆ¢Êà∑Á´ØËøîÂõûËØ∑Ê±ÇÁöÑÊï∞ÊçÆ TokenÊú∫Âà∂ÔºåÊàëËÆ§‰∏∫ÂÖ∂Êú¨Ë¥®ÊÄùÊÉ≥Â∞±ÊòØÂ∞Üsession‰∏≠ÁöÑ‰ø°ÊÅØÁÆÄÂåñÂæàÂ§öÔºåÂΩì‰ΩúcookieÁî®Ôºå‰πüÂ∞±ÊòØÂÆ¢Êà∑Á´ØÁöÑ‚Äúsession‚Äù„ÄÇ Â•ΩÂ§ÑÈÇ£TokenÊú∫Âà∂Áõ∏ÂØπ‰∫éCookieÊú∫Âà∂ÂèàÊúâ‰ªÄ‰πàÂ•ΩÂ§ÑÂë¢Ôºü ÊîØÊåÅË∑®ÂüüËÆøÈóÆ: CookieÊòØ‰∏çÂÖÅËÆ∏ÂûÆÂüüËÆøÈóÆÁöÑÔºåËøô‰∏ÄÁÇπÂØπTokenÊú∫Âà∂ÊòØ‰∏çÂ≠òÂú®ÁöÑÔºåÂâçÊèê ÊòØ‰º†ËæìÁöÑÁî®Êà∑ËÆ§ËØÅ‰ø°ÊÅØÈÄöËøáHTTPÂ§¥‰º†Ëæì. Êó†Áä∂ÊÄÅ:TokenÊú∫Âà∂Êú¨Ë¥®ÊòØÊ†°È™å, ‰ªñÂæóÂà∞ÁöÑ‰ºöËØùÁä∂ÊÄÅÂÆåÂÖ®Êù•Ëá™‰∫éÂÆ¢Êà∑Á´Ø, TokenÊú∫Âà∂Âú®ÊúçÂä°Á´Ø‰∏çÈúÄË¶ÅÂ≠òÂÇ®session‰ø°ÊÅØÔºåÂõ†‰∏∫ Token Ëá™Ë∫´ÂåÖÂê´‰∫ÜÊâÄÊúâÁôªÂΩïÁî®Êà∑ÁöÑ‰ø°ÊÅØÔºåÂè™ÈúÄË¶ÅÂú®ÂÆ¢Êà∑Á´ØÁöÑcookieÊàñÊú¨Âú∞‰ªãË¥®Â≠òÂÇ®Áä∂ÊÄÅ‰ø°ÊÅØ. Êõ¥ÈÄÇÁî®CDN: ÂèØ‰ª•ÈÄöËøáÂÜÖÂÆπÂàÜÂèëÁΩëÁªúËØ∑Ê±Ç‰Ω†ÊúçÂä°Á´ØÁöÑÊâÄÊúâËµÑÊñôÔºàÂ¶ÇÔºöjavascriptÔºå HTML,ÂõæÁâáÁ≠âÔºâÔºåËÄå‰Ω†ÁöÑÊúçÂä°Á´ØÂè™Ë¶ÅÊèê‰æõAPIÂç≥ÂèØ. ÂéªËÄ¶: ‰∏çÈúÄË¶ÅÁªëÂÆöÂà∞‰∏Ä‰∏™ÁâπÂÆöÁöÑË∫´‰ªΩÈ™åËØÅÊñπÊ°à„ÄÇTokenÂèØ‰ª•Âú®‰ªª‰ΩïÂú∞ÊñπÁîüÊàêÔºåÂè™Ë¶ÅÂú® ‰Ω†ÁöÑAPIË¢´Ë∞ÉÁî®ÁöÑÊó∂ÂÄôÔºå‰Ω†ÂèØ‰ª•ËøõË°åTokenÁîüÊàêË∞ÉÁî®Âç≥ÂèØ. Êõ¥ÈÄÇÁî®‰∫éÁßªÂä®Â∫îÁî®: ÂΩì‰Ω†ÁöÑÂÆ¢Êà∑Á´ØÊòØ‰∏Ä‰∏™ÂéüÁîüÂπ≥Âè∞ÔºàiOS, AndroidÔºåWindows 8Á≠âÔºâ Êó∂ÔºåCookieÊòØ‰∏çË¢´ÊîØÊåÅÁöÑÔºà‰Ω†ÈúÄË¶ÅÈÄöËøáCookieÂÆπÂô®ËøõË°åÂ§ÑÁêÜÔºâÔºåËøôÊó∂ÈááÁî®TokenËÆ§ ËØÅÊú∫Âà∂Â∞±‰ºöÁÆÄÂçïÂæóÂ§ö„ÄÇ CSRF:Âõ†‰∏∫‰∏çÂÜç‰æùËµñ‰∫éCookieÔºåÊâÄ‰ª•‰Ω†Â∞±‰∏çÈúÄË¶ÅËÄÉËôëÂØπCSRFÔºàË∑®Á´ôËØ∑Ê±Ç‰º™ÈÄ†ÔºâÁöÑÈò≤ ËåÉ„ÄÇ ÊÄßËÉΩ: ‰∏ÄÊ¨°ÁΩëÁªúÂæÄËøîÊó∂Èó¥ÔºàÈÄöËøáÊï∞ÊçÆÂ∫ìÊü•ËØ¢session‰ø°ÊÅØÔºâÊÄªÊØîÂÅö‰∏ÄÊ¨°HMACSHA256 ËÆ°ÁÆó ÁöÑTokenÈ™åËØÅÂíåËß£ÊûêË¶ÅË¥πÊó∂ÂæóÂ§ö. ‰∏çÈúÄË¶Å‰∏∫ÁôªÂΩïÈ°µÈù¢ÂÅöÁâπÊÆäÂ§ÑÁêÜ: Â¶ÇÊûú‰Ω†‰ΩøÁî®Protractor ÂÅöÂäüËÉΩÊµãËØïÁöÑÊó∂ÂÄôÔºå‰∏çÂÜçÈúÄË¶Å ‰∏∫ÁôªÂΩïÈ°µÈù¢ÂÅöÁâπÊÆäÂ§ÑÁêÜ. Âü∫‰∫éÊ†áÂáÜÂåñ:‰Ω†ÁöÑAPIÂèØ‰ª•ÈááÁî®Ê†áÂáÜÂåñÁöÑ JSON Web Token (JWT). Ëøô‰∏™Ê†áÂáÜÂ∑≤ÁªèÂ≠òÂú® Â§ö‰∏™ÂêéÁ´ØÂ∫ìÔºà.NET, Ruby, Java,Python, PHPÔºâÂíåÂ§öÂÆ∂ÂÖ¨Âè∏ÁöÑÊîØÊåÅÔºàÂ¶ÇÔºö Firebase,Google, MicrosoftÔºâ Áº∫Èô∑Âú®Âì™ÔºüËØ¥‰∫ÜÈÇ£‰πàÂ§ötokenËÆ§ËØÅÁöÑÂ•ΩÂ§ÑÔºå‰ΩÜ‰ªñÂÖ∂ÂÆûÂπ∂Ê≤°ÊúâÊÉ≥Ë±°ÁöÑÈÇ£‰πàÁ•ûÔºåtoken ‰πüÂπ∂‰∏çÊòØÊ≤°ÊúâÈóÆÈ¢ò„ÄÇ Âç†Â∏¶ÂÆΩ Ê≠£Â∏∏ÊÉÖÂÜµ‰∏ãË¶ÅÊØî session_id Êõ¥Â§ßÔºåÈúÄË¶ÅÊ∂àËÄóÊõ¥Â§öÊµÅÈáèÔºåÊå§Âç†Êõ¥Â§öÂ∏¶ÂÆΩÔºåÂÅáÂ¶Ç‰Ω†ÁöÑÁΩëÁ´ôÊØèÊúàÊúâ 10 ‰∏áÊ¨°ÁöÑÊµèËßàÂô®ÔºåÂ∞±ÊÑèÂë≥ÁùÄË¶ÅÂ§öÂºÄÈîÄÂá†ÂçÅÂÖÜÁöÑÊµÅÈáè„ÄÇÂê¨Ëµ∑Êù•Âπ∂‰∏çÂ§öÔºå‰ΩÜÊó•ÁßØÊúàÁ¥Ø‰πüÊòØ‰∏çÂ∞è‰∏ÄÁ¨îÂºÄÈîÄ„ÄÇÂÆûÈôÖ‰∏äÔºåËÆ∏Â§ö‰∫∫‰ºöÂú® JWT ‰∏≠Â≠òÂÇ®ÁöÑ‰ø°ÊÅØ‰ºöÊõ¥Â§ö„ÄÇ Êó†ËÆ∫Â¶Ç‰Ωï‰Ω†ÈúÄË¶ÅÊìç‰ΩúÊï∞ÊçÆÂ∫ì Âú®ÁΩëÁ´ô‰∏ä‰ΩøÁî® JWTÔºåÂØπ‰∫éÁî®Êà∑Âä†ËΩΩÁöÑÂá†‰πéÊâÄÊúâÈ°µÈù¢ÔºåÈÉΩÈúÄË¶Å‰ªéÁºìÂ≠ò/Êï∞ÊçÆÂ∫ì‰∏≠Âä†ËΩΩÁî®Êà∑‰ø°ÊÅØÔºåÂ¶ÇÊûúÂØπ‰∫éÈ´òÊµÅÈáèÁöÑÊúçÂä°Ôºå‰Ω†Á°ÆÂÆöËøô‰∏™Êìç‰ΩúÂêàÈÄÇ‰πàÔºüÂ¶ÇÊûú‰ΩøÁî®redisËøõË°åÁºìÂ≠òÔºåÈÇ£‰πàÊïàÁéá‰∏ä‰πüÂπ∂‰∏çËÉΩÊØî session Êõ¥È´òÊïà Êó†Ê≥ïÂú®ÊúçÂä°Á´ØÊ≥®ÈîÄÔºåÈÇ£‰πà‰πÖÂæàÈöæËß£ÂÜ≥Âä´ÊåÅÈóÆÈ¢ò ÊÄßËÉΩÈóÆÈ¢ò JWT ÁöÑÂçñÁÇπ‰πã‰∏ÄÂ∞±ÊòØÂä†ÂØÜÁ≠æÂêçÔºåÁî±‰∫éËøô‰∏™ÁâπÊÄßÔºåÊé•Êî∂ÊñπÂæó‰ª•È™åËØÅ JWT ÊòØÂê¶ÊúâÊïà‰∏îË¢´‰ø°‰ªª„ÄÇ‰ΩÜÊòØÂ§ßÂ§öÊï∞ Web Ë∫´‰ªΩËÆ§ËØÅÂ∫îÁî®‰∏≠ÔºåJWT ÈÉΩ‰ºöË¢´Â≠òÂÇ®Âà∞ Cookie ‰∏≠ÔºåËøôÂ∞±ÊòØËØ¥‰Ω†Êúâ‰∫Ü‰∏§‰∏™Â±ÇÈù¢ÁöÑÁ≠æÂêç„ÄÇÂê¨ÁùÄ‰ºº‰πéÂæàÁâõÈÄºÔºå‰ΩÜÊòØÊ≤°Êúâ‰ªª‰Ωï‰ºòÂäøÔºå‰∏∫Ê≠§Ôºå‰Ω†ÈúÄË¶ÅËä±Ë¥π‰∏§ÂÄçÁöÑ CPU ÂºÄÈîÄÊù•È™åËØÅÁ≠æÂêç„ÄÇÂØπ‰∫éÊúâÁùÄ‰∏•Ê†ºÊÄßËÉΩË¶ÅÊ±ÇÁöÑ Web Â∫îÁî®ÔºåËøôÂπ∂‰∏çÁêÜÊÉ≥ÔºåÂ∞§ÂÖ∂ÂØπ‰∫éÂçïÁ∫øÁ®ãÁéØÂ¢É„ÄÇ JWTÁé∞Âú®Êàë‰ª¨Êù•ËØ¥ËØ¥‰ªäÂ§©ÁöÑ‰∏ªËßíÔºåJWT JSON Web TokenÔºàJWTÔºâÊòØ‰∏Ä‰∏™ÈùûÂ∏∏ËΩªÂ∑ßÁöÑËßÑËåÉ„ÄÇËøô‰∏™ËßÑËåÉÂÖÅËÆ∏Êàë‰ª¨‰ΩøÁî®JWTÂú®Áî® Êà∑ÂíåÊúçÂä°Âô®‰πãÈó¥‰º†ÈÄíÂÆâÂÖ®ÂèØÈù†ÁöÑ‰ø°ÊÅØ ÁªÑÊàê‰∏Ä‰∏™JWTÂÆûÈôÖ‰∏äÂ∞±ÊòØ‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºåÂÆÉÁî±‰∏âÈÉ®ÂàÜÁªÑÊàêÔºåÂ§¥ÈÉ®„ÄÅËΩΩËç∑‰∏éÁ≠æÂêç„ÄÇ Â§¥ÈÉ®(header)Â§¥ÈÉ®Áî®‰∫éÊèèËø∞ÂÖ≥‰∫éËØ•JWTÁöÑÊúÄÂü∫Êú¨ÁöÑ‰ø°ÊÅØÔºå‰æãÂ¶ÇÂÖ∂Á±ªÂûã‰ª•ÂèäÁ≠æÂêçÊâÄÁî®ÁöÑÁÆóÊ≥ïÁ≠â„ÄÇËøô‰πüÂèØ‰ª• Ë¢´Ë°®Á§∫Êàê‰∏Ä‰∏™JSONÂØπË±°„ÄÇ 1234&#123; "typ":"JWT", "alg":"HS256"&#125; ËøôÂ∞±ÊòØÂ§¥ÈÉ®ÁöÑÊòéÊñáÂÜÖÂÆπÔºåÁ¨¨‰∏ÄÈÉ®ÂàÜËØ¥Êòé‰ªñÊòØ‰∏Ä‰∏™jwtÔºåÁ¨¨‰∫åÈÉ®ÂàÜÂàôÊåáÂá∫Á≠æÂêçÁÆóÊ≥ïÁî®ÁöÑÊòØHS256ÁÆóÊ≥ï„ÄÇ ÁÑ∂ÂêéÂ∞ÜËøô‰∏™Â§¥ÈÉ®ËøõË°åBASE64ÁºñÁ†ÅÔºåÁºñÁ†ÅÂêéÂΩ¢ÊàêÂ§¥ÈÉ®Ôºö 1eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9 ËΩΩËç∑(payload)ËΩΩËç∑Â∞±ÊòØÂ≠òÊîæÊúâÊïà‰ø°ÊÅØÁöÑÂú∞Êñπ,ÊúâÊïà‰ø°ÊÅØÂåÖÂê´‰∏â‰∏™ÈÉ®ÂàÜ: Ôºà1ÔºâÊ†áÂáÜ‰∏≠Ê≥®ÂÜåÁöÑÂ£∞ÊòéÔºàÂª∫ËÆÆ‰ΩÜ‰∏çÂº∫Âà∂‰ΩøÁî®Ôºâ iss: jwtÁ≠æÂèëËÄÖ sub: jwtÊâÄÈù¢ÂêëÁöÑÁî®Êà∑ aud: Êé•Êî∂jwtÁöÑ‰∏ÄÊñπ exp: jwtÁöÑËøáÊúüÊó∂Èó¥ÔºåËøô‰∏™ËøáÊúüÊó∂Èó¥ÂøÖÈ°ªË¶ÅÂ§ß‰∫éÁ≠æÂèëÊó∂Èó¥ nbf: ÂÆö‰πâÂú®‰ªÄ‰πàÊó∂Èó¥‰πãÂâçÔºåËØ•jwtÈÉΩÊòØ‰∏çÂèØÁî®ÁöÑ. iat: jwtÁöÑÁ≠æÂèëÊó∂Èó¥ jti: jwtÁöÑÂîØ‰∏ÄË∫´‰ªΩÊ†áËØÜÔºå‰∏ªË¶ÅÁî®Êù•‰Ωú‰∏∫‰∏ÄÊ¨°ÊÄßtoken,‰ªéËÄåÂõûÈÅøÈáçÊîæÊîªÂáª„ÄÇ Ôºà2ÔºâÂÖ¨ÂÖ±ÁöÑÂ£∞ÊòéÂÖ¨ÂÖ±ÁöÑÂ£∞ÊòéÂèØ‰ª•Ê∑ªÂä†‰ªª‰ΩïÁöÑ‰ø°ÊÅØÔºå‰∏ÄËà¨Ê∑ªÂä†Áî®Êà∑ÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØÊàñÂÖ∂‰ªñ‰∏öÂä°ÈúÄË¶ÅÁöÑÂøÖË¶Å‰ø°ÊÅØ. ‰ΩÜ‰∏çÂª∫ËÆÆÊ∑ªÂä†ÊïèÊÑü‰ø°ÊÅØÔºåÂõ†‰∏∫ËØ•ÈÉ®ÂàÜÂú®ÂÆ¢Êà∑Á´ØÂèØËß£ÂØÜ. Ôºà3ÔºâÁßÅÊúâÁöÑÂ£∞Êòé ÁßÅÊúâÂ£∞ÊòéÊòØÊèê‰æõËÄÖÂíåÊ∂àË¥πËÄÖÊâÄÂÖ±ÂêåÂÆö‰πâÁöÑÂ£∞ÊòéÔºå‰∏ÄËà¨‰∏çÂª∫ËÆÆÂ≠òÊîæÊïèÊÑü‰ø°ÊÅØÔºåÂõ†‰∏∫base64 ÊòØÂØπÁß∞Ëß£ÂØÜÁöÑÔºåÊÑèÂë≥ÁùÄËØ•ÈÉ®ÂàÜ‰ø°ÊÅØÂèØ‰ª•ÂΩíÁ±ª‰∏∫ÊòéÊñá‰ø°ÊÅØ„ÄÇ 12345&#123; "sub":"1234567890", "name":"tengshe789", "admin": true&#125; ‰∏äÈù¢Â∞±ÊòØ‰∏Ä‰∏™ÁÆÄÂçïÁöÑËΩΩËç∑ÁöÑÊòéÊñáÔºåÊé•‰∏ãÊù•‰ΩøÁî®base64Âä†ÂØÜÔºö 1eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9 Á≠æËØÅÔºàsignatureÔºâjwtÁöÑÁ¨¨‰∏âÈÉ®ÂàÜÊòØ‰∏Ä‰∏™Á≠æËØÅ‰ø°ÊÅØÔºåËøô‰∏™Á≠æËØÅ‰ø°ÊÅØÁî±‰∏âÈÉ®ÂàÜÁªÑÊàêÔºö header (base64ÂêéÁöÑ) payload (base64ÂêéÁöÑ) secret Ëøô‰∏™ÈÉ®ÂàÜÈúÄË¶Åbase64Âä†ÂØÜÂêéÁöÑheaderÂíåbase64Âä†ÂØÜÂêéÁöÑpayload‰ΩøÁî®.ËøûÊé•ÁªÑÊàêÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÁÑ∂ÂêéÈÄöËøáheader‰∏≠Â£∞ÊòéÁöÑÂä†ÂØÜÊñπÂºèËøõË°åÂä†ÁõêsecretÁªÑÂêàÂä†ÂØÜÔºåÁÑ∂ÂêéÂ∞±ÊûÑÊàê‰∫ÜjwtÁöÑÁ¨¨ ‰∏âÈÉ®ÂàÜ„ÄÇ 1TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ ÂêàÊàê1eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6I kpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7Hg Q ÂÆûÁé∞JWTÁé∞Âú®‰∏ÄËà¨ÂÆûÁé∞jwtÔºåÈÉΩ‰ΩøÁî®Apache ÁöÑÂºÄÊ∫êÈ°πÁõÆJJWTÔºà‰∏Ä‰∏™Êèê‰æõÁ´ØÂà∞Á´ØÁöÑJWTÂàõÂª∫ÂíåÈ™åËØÅÁöÑJavaÂ∫ìÔºâ„ÄÇ ‰æùËµñ123456&lt;!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt --&gt;&lt;dependency&gt; &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt; &lt;artifactId&gt;jjwt&lt;/artifactId&gt; &lt;version&gt;0.7.0&lt;/version&gt;&lt;/dependency&gt; ÂàõÂª∫tokenÁöÑdemo1234567891011public class CreateJWT &#123; public static void main(String[] args) throws Exception&#123; JwtBuilder builder = Jwts.builder().setId("123") .setSubject("jwtÊâÄÈù¢ÂêëÁöÑÁî®Êà∑") .setIssuedAt(new Date()) .signWith(SignatureAlgorithm.HS256,"tengshe789"); String s = builder.compact(); System.out.println(s); //eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxMjMiLCJzdWIiOiJqd3TmiYDpnaLlkJHnmoTnlKjmiLciLCJpYXQiOjE1NDM3NTk0MjJ9.1sIlEynqqZmA4PbKI6GgiP3ljk_aiypcsUxSN6-ATIA &#125;&#125; ÁªìÊûúÂ¶ÇÂõæÔºö ÔºàÊ≥®ÊÑèÔºåjjwt‰∏çÊîØÊåÅjdk11Ôºå0.9.1‰ª•ÂêéÁöÑjjwtÂøÖÈ°ªÂÆûÁé∞signWith()ÊñπÊ≥ïÊâçËÉΩÂÆûÁé∞Ôºâ Ëß£ÊûêTokenÁöÑdemo123456789101112public class ParseJWT &#123; public static void main(String[] args) &#123; String token = "eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxMjMiLCJzdWIiOiJqd3TmiYDpnaLlkJHnmoTnlKjmiLciLCJpYXQiOjE1NDM3NTk0MjJ9.1sIlEynqqZmA4PbKI6GgiP3ljk_aiypcsUxSN6-ATIA"; Claims claims = Jwts.parser().setSigningKey("tengshe789").parseClaimsJws(token).getBody(); System.out.println("id"+claims.getId()); System.out.println("Subject"+claims.getSubject()); System.out.println("IssuedAt"+claims.getIssuedAt()); &#125;&#125; ÁªìÊûúÂ¶ÇÂõæÔºö Áîü‰∫ß‰∏≠ÁöÑJWTÂú®‰ºÅ‰∏öÁ∫ßÁ≥ªÁªü‰∏≠ÔºåÈÄöÂ∏∏ÂÜÖÈÉ®‰ºöÊúâÈùûÂ∏∏Â§öÁöÑÂ∑•ÂÖ∑Âπ≥Âè∞‰æõÂ§ßÂÆ∂‰ΩøÁî®ÔºåÊØîÂ¶Ç‰∫∫ÂäõËµÑÊ∫êÔºå‰ª£Á†ÅÁÆ°ÁêÜÔºåÊó•ÂøóÁõëÊéßÔºåÈ¢ÑÁÆóÁî≥ËØ∑Á≠âÁ≠â„ÄÇÂ¶ÇÊûúÊØè‰∏Ä‰∏™Âπ≥Âè∞ÈÉΩÂÆûÁé∞Ëá™Â∑±ÁöÑÁî®Êà∑‰ΩìÁ≥ªÁöÑËØùÊó†ÁñëÊòØÂ∑®Â§ßÁöÑÊµ™Ë¥πÔºåÊâÄ‰ª•ÂÖ¨Âè∏ÂÜÖÈÉ®‰ºöÊúâ‰∏ÄÂ•óÂÖ¨Áî®ÁöÑÁî®Êà∑‰ΩìÁ≥ªÔºåÁî®Êà∑Âè™Ë¶ÅÁôªÈôÜ‰πãÂêéÔºåÂ∞±ËÉΩÂ§üËÆøÈóÆÊâÄÊúâÁöÑÁ≥ªÁªü„ÄÇ ËøôÂ∞±ÊòØ ÂçïÁÇπÁôªÂΩïÔºàSSO: Single Sign-OnÔºâ SSO ÊòØ‰∏ÄÁ±ªËß£ÂÜ≥ÊñπÊ°àÁöÑÁªüÁß∞ÔºåËÄåÂú®ÂÖ∑‰ΩìÁöÑÂÆûÊñΩÊñπÈù¢Ôºå‰∏ÄËà¨Êúâ‰∏§ÁßçÁ≠ñÁï•ÂèØ‰æõÈÄâÊã©Ôºö SAML 2.0 OAuth 2.0 Ê¨≤Êâ¨ÂÖàÊäëÔºåÂÖàËØ¥ËØ¥Âá†‰∏™ÈáçË¶ÅÁöÑÁü•ËØÜÁÇπ„ÄÇ Authentication VS Authorisation Authentication: Ë∫´‰ªΩÈâ¥Âà´ÔºåÈâ¥ÊùÉÔºå‰ª•‰∏ãÁÆÄÁß∞ËÆ§ËØÅ ËÆ§ËØÅ ÁöÑ‰ΩúÁî®Âú®‰∫éËÆ§ÂèØ‰Ω†ÊúâÊùÉÈôêËÆøÈóÆÁ≥ªÁªüÔºåÁî®‰∫éÈâ¥Âà´ËÆøÈóÆËÄÖÊòØÂê¶ÊòØÂêàÊ≥ïÁî®Êà∑„ÄÇË¥üË¥£ËÆ§ËØÅÁöÑÊúçÂä°ÈÄöÂ∏∏Áß∞‰∏∫ Authorization Server ÊàñËÄÖ Identity ProviderÔºå‰ª•‰∏ãÁÆÄÁß∞ IdP Authorisation: ÊéàÊùÉ ÊéàÊùÉ Áî®‰∫éÂÜ≥ÂÆö‰Ω†ÊúâËÆøÈóÆÂì™‰∫õËµÑÊ∫êÁöÑÊùÉÈôê„ÄÇÂ§ßÂ§öÊï∞‰∫∫‰∏ç‰ºöÂå∫ÂàÜËøô‰∏§ËÄÖÁöÑÂå∫Âà´ÔºåÂõ†‰∏∫Á´ôÂú®Áî®Êà∑ÁöÑÁ´ãÂú∫‰∏ä„ÄÇËÄå‰Ωú‰∏∫Á≥ªÁªüÁöÑËÆæËÆ°ËÄÖÊù•ËØ¥ÔºåËøô‰∏§ËÄÖÊòØÊúâÂ∑ÆÂà´ÁöÑÔºåËøôÊòØ‰∏çÂêåÁöÑ‰∏§‰∏™Â∑•‰ΩúËÅåË¥£ÔºåÊàë‰ª¨ÂèØ‰ª•Âè™ÈúÄË¶ÅËÆ§ËØÅÂäüËÉΩÔºåËÄå‰∏çÈúÄË¶ÅÊéàÊùÉÂäüËÉΩÔºåÁîöËá≥‰∏çÈúÄË¶ÅËá™Â∑±ÂÆûÁé∞ËÆ§ËØÅÂäüËÉΩÔºåËÄåÂÄüÂä© Google ÁöÑËÆ§ËØÅÁ≥ªÁªüÔºåÂç≥Áî®Êà∑ÂèØ‰ª•Áî® Google ÁöÑË¥¶Âè∑ËøõË°åÁôªÈôÜ„ÄÇË¥üË¥£Êèê‰æõËµÑÊ∫êÔºàAPIË∞ÉÁî®ÔºâÁöÑÊúçÂä°Áß∞‰∏∫ Resource Server ÊàñËÄÖ Service ProviderÔºå‰ª•‰∏ãÁÆÄÁß∞ SP SMAL 2.0 OAuthÔºàJWTÔºâOAuthÔºàÂºÄÊîæÊéàÊùÉÔºâÊòØ‰∏Ä‰∏™ÂºÄÊîæÁöÑÊéàÊùÉÊ†áÂáÜÔºåÂÖÅËÆ∏Áî®Êà∑ËÆ©Á¨¨‰∏âÊñπÂ∫îÁî®ËÆøÈóÆËØ•Áî®Êà∑Âú® Êüê‰∏ÄwebÊúçÂä°‰∏äÂ≠òÂÇ®ÁöÑÁßÅÂØÜÁöÑËµÑÊ∫êÔºàÂ¶ÇÁÖßÁâáÔºåËßÜÈ¢ëÔºåËÅîÁ≥ª‰∫∫ÂàóË°®ÔºâÔºåËÄåÊó†ÈúÄÂ∞ÜÁî®Êà∑ÂêçÂíåÂØÜÁ†ÅÊèê‰æõÁªôÁ¨¨‰∏âÊñπÂ∫îÁî®„ÄÇ ÊµÅÁ®ãÂèØ‰ª•ÂèÇËÄÉÂ¶Ç‰∏ãÔºö ÁÆÄÂçïÁöÑÊù•ËØ¥ÔºåÂ∞±ÊòØ‰Ω†Ë¶ÅËÆøÈóÆ‰∏Ä‰∏™Â∫îÁî®ÊúçÂä°ÔºåÂÖàÊâæÂÆÉË¶Å‰∏Ä‰∏™request tokenÔºàËØ∑Ê±Ç‰ª§ÁâåÔºâÔºåÂÜçÊääËøô‰∏™request tokenÂèëÂà∞Á¨¨‰∏âÊñπËÆ§ËØÅÊúçÂä°Âô®ÔºåÊ≠§Êó∂Á¨¨‰∏âÊñπËÆ§ËØÅÊúçÂä°Âô®‰ºöÁªô‰Ω†‰∏Ä‰∏™aceess tokenÔºàÈÄöË°å‰ª§ÁâåÔºâ, Êúâ‰∫Üaceess token‰Ω†Â∞±ÂèØ‰ª•‰ΩøÁî®‰Ω†ÁöÑÂ∫îÁî®ÊúçÂä°‰∫Ü„ÄÇ Ê≥®ÊÑèÂõæ‰∏≠Á¨¨4Ê≠•ÂÖëÊç¢ access token ÁöÑËøáÁ®ã‰∏≠ÔºåÂæàÂ§öÁ¨¨‰∏âÊñπÁ≥ªÁªüÔºåÂ¶ÇGoogle ÔºåÂπ∂‰∏ç‰ºö‰ªÖ‰ªÖËøîÂõû access tokenÔºåËøò‰ºöËøîÂõûÈ¢ùÂ§ñÁöÑ‰ø°ÊÅØÔºåËøôÂÖ∂‰∏≠Âíå‰πãÂêéÊõ¥Êñ∞Áõ∏ÂÖ≥ÁöÑÂ∞±ÊòØ refresh token„ÄÇ‰∏ÄÊó¶ access tokenËøáÊúüÔºå‰Ω†Â∞±ÂèØ‰ª•ÈÄöËøá refresh token ÂÜçÊ¨°ËØ∑Ê±Ç access token„ÄÇ ÂΩìÁÑ∂‰∫ÜÔºåÊµÅÁ®ãÊòØÊ†πÊçÆ‰Ω†ÁöÑËØ∑Ê±ÇÊñπÂºèÂíåËÆøÈóÆÁöÑËµÑÊ∫êÁ±ªÂûãËÄåÂÆöÁöÑÔºå‰∏öÂä°ÂæàÂ§ö‰πüÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑÔºåÊàëËøôÊòØÁÆÄÂçïÁöÑËÅäËÅä„ÄÇ Áé∞Âú®ËøôÁßçÊñπÊ≥ïÊØîËæÉÂ∏∏ËßÅÔºåÂ∏∏ËßÅÁöÑË≠¨Â¶Ç‰ΩøÁî®QQÂø´ÈÄüÁôªÈôÜÔºåÁî®ÁöÑÂü∫Êú¨ÁöÑÈÉΩÊòØËøôÁßçÊñπÊ≥ï„ÄÇ ÂºÄÊ∫êÈ°πÁõÆÊàë‰ª¨Áî®‰∏Ä‰∏™ÂæàÁÅ´ÁöÑÂºÄÊ∫êÈ°πÁõÆCloud-Admin‰∏∫Ê†óÂ≠êÔºåÊù•ÂàÜÊûê‰∏Ä‰∏ãjwtÁöÑÂ∫îÁî®„ÄÇ Cloud-AdminÊòØÂü∫‰∫éSpring CloudÂæÆÊúçÂä°ÂåñÂºÄÂèëÂπ≥Âè∞ÔºåÂÖ∑ÊúâÁªü‰∏ÄÊéàÊùÉ„ÄÅËÆ§ËØÅÂêéÂè∞ÁÆ°ÁêÜÁ≥ªÁªüÔºåÂÖ∂‰∏≠ÂåÖÂê´ÂÖ∑Â§áÁî®Êà∑ÁÆ°ÁêÜ„ÄÅËµÑÊ∫êÊùÉÈôêÁÆ°ÁêÜ„ÄÅÁΩëÂÖ≥APIÁÆ°ÁêÜÁ≠âÂ§ö‰∏™Ê®°ÂùóÔºåÊîØÊåÅÂ§ö‰∏öÂä°Á≥ªÁªüÂπ∂Ë°åÂºÄÂèë„ÄÇ ÁõÆÂΩïÁªìÊûÑ Èâ¥ÊùÉ‰∏≠ÂøÉÂäüËÉΩÂú®ace-auth‰∏éace-gate‰∏ã„ÄÇ Ê®°Âûã‰∏ãÈù¢ÊòØÂÆòÊñπÊèê‰æõÁöÑÊû∂ÊûÑÊ®°Âûã„ÄÇ ÂèØ‰ª•ÁúãÂà∞ÔºåAuthServerÂú®Êû∂ÊûÑÁöÑ‰∏≠ÂøÉÁéØËäÇÔºåË¶ÅËÆøÈóÆÊúçÂä°ÔºåÂøÖÈ°ªÈúÄË¶ÅÈâ¥ÊùÉ‰∏≠ÂøÉÁöÑJWTÈâ¥ÊùÉ„ÄÇ Èâ¥ÊùÉ‰∏≠ÂøÉÊúçÂä°Á´Ø‰ª£Á†ÅËß£ËØªÂÆû‰ΩìÁ±ªÂÖàÁúãÂÆû‰ΩìÁ±ªÔºåËøôÈáåÈâ¥ÊùÉ‰∏≠ÂøÉÂÆö‰πâ‰∫Ü‰∏ÄÁªÑÂÆ¢Êà∑Á´ØÂÆû‰ΩìÔºåÂ¶Ç‰∏ãÔºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849@Table(name = "auth_client")@Getter@Setterpublic class Client &#123; @Id private Integer id; private String code; private String secret; private String name; private String locked = "0"; private String description; @Column(name = "crt_time") private Date crtTime; @Column(name = "crt_user") private String crtUser; @Column(name = "crt_name") private String crtName; @Column(name = "crt_host") private String crtHost; @Column(name = "upd_time") private Date updTime; @Column(name = "upd_user") private String updUser; @Column(name = "upd_name") private String updName; @Column(name = "upd_host") private String updHost; private String attr1; private String attr2; private String attr3; private String attr4; private String attr5; private String attr6; private String attr7; private String attr8; ÂØπÂ∫îÊï∞ÊçÆÂ∫ìÔºö 12345678910111213141516171819202122232425CREATE TABLE `auth_client` ( `id` int(11) NOT NULL AUTO_INCREMENT, `code` varchar(255) DEFAULT NULL COMMENT 'ÊúçÂä°ÁºñÁ†Å', `secret` varchar(255) DEFAULT NULL COMMENT 'ÊúçÂä°ÂØÜÈí•', `name` varchar(255) DEFAULT NULL COMMENT 'ÊúçÂä°Âêç', `locked` char(1) DEFAULT NULL COMMENT 'ÊòØÂê¶ÈîÅÂÆö', `description` varchar(255) DEFAULT NULL COMMENT 'ÊèèËø∞', `crt_time` datetime DEFAULT NULL COMMENT 'ÂàõÂª∫Êó∂Èó¥', `crt_user` varchar(255) DEFAULT NULL COMMENT 'ÂàõÂª∫‰∫∫', `crt_name` varchar(255) DEFAULT NULL COMMENT 'ÂàõÂª∫‰∫∫ÂßìÂêç', `crt_host` varchar(255) DEFAULT NULL COMMENT 'ÂàõÂª∫‰∏ªÊú∫', `upd_time` datetime DEFAULT NULL COMMENT 'Êõ¥Êñ∞Êó∂Èó¥', `upd_user` varchar(255) DEFAULT NULL COMMENT 'Êõ¥Êñ∞‰∫∫', `upd_name` varchar(255) DEFAULT NULL COMMENT 'Êõ¥Êñ∞ÂßìÂêç', `upd_host` varchar(255) DEFAULT NULL COMMENT 'Êõ¥Êñ∞‰∏ªÊú∫', `attr1` varchar(255) DEFAULT NULL, `attr2` varchar(255) DEFAULT NULL, `attr3` varchar(255) DEFAULT NULL, `attr4` varchar(255) DEFAULT NULL, `attr5` varchar(255) DEFAULT NULL, `attr6` varchar(255) DEFAULT NULL, `attr7` varchar(255) DEFAULT NULL, `attr8` varchar(255) DEFAULT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8mb4; Ëøô‰∫õÊòØÊØèÁªÑÂæÆÊúçÂä°ÂÆ¢Êà∑Á´ØÁöÑ‰ø°ÊÅØ Á¨¨‰∫å‰∏™ÂÆû‰ΩìÁ±ªÔºåÂ∞±ÊòØÂÆ¢Êà∑Á´Ø_ÊúçÂä°ÁöÑÂÆû‰ΩìÔºå‰πüÂ∞±ÊòØÂØπÂ∫îÁùÄÈÇ£‰∫õÂæÆÊúçÂä°ÂÆ¢Êà∑Á´ØËÉΩË∞ÉÁî®Âì™‰∫õÂæÆÊúçÂä°ÂÆ¢Êà∑Á´ØÔºö Â§ßÊ¶ÇÂØπÂ∫îÁöÑÂ∞±ÊòØÂæÆÊúçÂä°Èó¥Ë∞ÉÁî®ÊùÉÈôêÂÖ≥Á≥ª„ÄÇ 123456789101112131415161718192021222324@Table(name = "auth_client_service")public class ClientService &#123; @Id private Integer id; @Column(name = "service_id") private String serviceId; @Column(name = "client_id") private String clientId; private String description; @Column(name = "crt_time") private Date crtTime; @Column(name = "crt_user") private String crtUser; @Column(name = "crt_name") private String crtName; @Column(name = "crt_host") private String crtHost;&#125; Êé•Âè£Â±ÇÊàë‰ª¨Ë∑≥ÁùÄÁúãÔºåÂÖàÁúãÊé•Âè£Â±Ç 1234567891011121314151617181920212223242526272829303132@RestController@RequestMapping("jwt")@Slf4jpublic class AuthController &#123; @Value("$&#123;jwt.token-header&#125;") private String tokenHeader; @Autowired private AuthService authService; @RequestMapping(value = "token", method = RequestMethod.POST) public ObjectRestResponse&lt;String&gt; createAuthenticationToken( @RequestBody JwtAuthenticationRequest authenticationRequest) throws Exception &#123; log.info(authenticationRequest.getUsername()+" require logging..."); final String token = authService.login(authenticationRequest); return new ObjectRestResponse&lt;&gt;().data(token); &#125; @RequestMapping(value = "refresh", method = RequestMethod.GET) public ObjectRestResponse&lt;String&gt; refreshAndGetAuthenticationToken( HttpServletRequest request) throws Exception &#123; String token = request.getHeader(tokenHeader); String refreshedToken = authService.refresh(token); return new ObjectRestResponse&lt;&gt;().data(refreshedToken); &#125; @RequestMapping(value = "verify", method = RequestMethod.GET) public ObjectRestResponse&lt;?&gt; verify(String token) throws Exception &#123; authService.validate(token); return new ObjectRestResponse&lt;&gt;(); &#125;&#125; ËøôÈáåÊîæÂá∫‰∫Ü‰∏â‰∏™Êé•Âè£ ÂÖàËØ¥Á¨¨‰∏Ä‰∏™Êé•Âè£ÔºåÂàõÂª∫token„ÄÇ ÂÖ∑‰ΩìÈÄªËæëÂ¶Ç‰∏ãÔºöÊØè‰∏Ä‰∏™Áî®Êà∑ÁôªÈôÜËøõÊù•Êó∂ÔºåÈÉΩ‰ºöËøõÂÖ•Ëøô‰∏™ÁéØËäÇ„ÄÇÊ†πÊçÆrequest‰∏≠Áî®Êà∑ÁöÑÁî®Êà∑ÂêçÂíåÂØÜÁ†ÅÔºåÂà©Áî®feignÂÆ¢Êà∑Á´ØÁöÑÊã¶Êà™Âô®Êã¶Êà™requestÔºåÁÑ∂Âêé‰ΩøÁî®‰ΩúËÄÖÂÜôÁöÑJwtTokenUtilÈáåÈù¢ÁöÑÂêÑÁßçÊñπÊ≥ïÂèñÂá∫token‰∏≠ÁöÑkeyÂíåÂØÜÈí•ÔºåÈ™åËØÅtokenÊòØÂê¶Ê≠£Á°ÆÔºåÊ≠£Á°ÆÂàôÁî®authService.login(authenticationRequest);ÁöÑÊñπÊ≥ïËøîÂõûÂá∫Âéª‰∏Ä‰∏™Êñ∞ÁöÑtoken„ÄÇ 1234567public String login(JwtAuthenticationRequest authenticationRequest) throws Exception &#123; UserInfo info = userService.validate(authenticationRequest); if (!StringUtils.isEmpty(info.getId())) &#123; return jwtTokenUtil.generateToken(new JWTInfo(info.getUsername(), info.getId() + "", info.getName())); &#125; throw new UserInvalidException("Áî®Êà∑‰∏çÂ≠òÂú®ÊàñË¥¶Êà∑ÂØÜÁ†ÅÈîôËØØ!"); &#125; ‰∏ãÂõæÊòØËØ¶ÁªÜÈÄªËæëÂõæÔºö Èâ¥ÊùÉ‰∏≠ÂøÉÂÆ¢Êà∑Á´Ø‰ª£Á†ÅÂÖ•Âè£‰ΩúËÄÖÂÜô‰∫Ü‰∏™Ê≥®Ëß£ÁöÑÂÖ•Âè£Ôºå‰ΩøÁî®@EnableAceAuthClientÂç≥Ëá™Âä®ÂºÄÂêØÂæÆÊúçÂä°(ÂÆ¢Êà∑Á´Ø)ÁöÑÈâ¥ÊùÉÁÆ°ÁêÜ 1234567@Target(ElementType.TYPE)@Retention(RetentionPolicy.RUNTIME)@Import(AutoConfiguration.class)@Documented@Inheritedpublic @interface EnableAceAuthClient &#123;&#125; ÈÖçÁΩÆÊé•ÁùÄÊ≤øÁùÄÊ≥®Ëß£ÁöÑÂÖ•Âè£Áúã 123456789101112@Configuration@ComponentScan(&#123;"com.github.wxiaoqi.security.auth.client","com.github.wxiaoqi.security.auth.common.event"&#125;)public class AutoConfiguration &#123; @Bean ServiceAuthConfig getServiceAuthConfig()&#123; return new ServiceAuthConfig(); &#125; @Bean UserAuthConfig getUserAuthConfig()&#123; return new UserAuthConfig(); &#125;&#125; Ê≥®Ëß£‰ºöËá™Âä®ÁöÑÂ∞ÜÂÆ¢Êà∑Á´ØÁöÑÁî®Êà∑tokenÂíåÊúçÂä°tokenÁöÑÂÖ≥ÈîÆ‰ø°ÊÅØÂä†ËΩΩÂà∞bean‰∏≠ feiginÊã¶Êà™Âô®‰ΩúËÄÖÈáçÂÜô‰∫Üokhttp3Êã¶Êà™Âô®ÁöÑÊñπÊ≥ïÔºåÊØè‰∏ÄÊ¨°ÂæÆÊúçÂä°ÂÆ¢Êà∑Á´ØËØ∑Ê±ÇÁöÑtokenÈÉΩ‰ºöË¢´Êã¶Êà™‰∏ãÊù•ÔºåÈ™åËØÅÊúçÂä°Ë∞ÉÁî®ÊúçÂä°ÁöÑtokenÂíåÁî®Êà∑Ë∞ÉÁî®ÊúçÂä°ÁöÑtokenÊòØÂê¶ËøáÊúüÔºåËøáÊúüÂàôËøîÂõûÊñ∞ÁöÑtoken 123456789101112131415161718192021222324252627282930@Override public Response intercept(Chain chain) throws IOException &#123; Request newRequest = null; if (chain.request().url().toString().contains("client/token")) &#123; newRequest = chain.request() .newBuilder() .header(userAuthConfig.getTokenHeader(), BaseContextHandler.getToken()) .build(); &#125; else &#123; newRequest = chain.request() .newBuilder() .header(userAuthConfig.getTokenHeader(), BaseContextHandler.getToken()) .header(serviceAuthConfig.getTokenHeader(), serviceAuthUtil.getClientToken()) .build(); &#125; Response response = chain.proceed(newRequest); if (HttpStatus.FORBIDDEN.value() == response.code()) &#123; if (response.body().string().contains(String.valueOf(CommonConstants.EX_CLIENT_INVALID_CODE))) &#123; log.info("Client Token Expire,Retry to request..."); serviceAuthUtil.refreshClientToken(); newRequest = chain.request() .newBuilder() .header(userAuthConfig.getTokenHeader(), BaseContextHandler.getToken()) .header(serviceAuthConfig.getTokenHeader(), serviceAuthUtil.getClientToken()) .build(); response = chain.proceed(newRequest); &#125; &#125; return response; &#125; springÂÆπÂô®ÁöÑÊã¶Êà™Âô®Á¨¨‰∫åÈÅìÊã¶Êà™Âô®ÊòØÊù•Ëá™springÂÆπÂô®ÁöÑÔºåÁ¨¨‰∏ÄÈÅìfeignÊã¶Êà™Âô®Âè™ÊòØÈ™åËØÅ‰∫Ü‰∏§‰∏™tokenÊòØÂê¶ËøáÊúüÔºå‰ΩÜtokenÁúüÂÆûÁöÑÊùÉÈôêÂç¥Ê≤°È™åËØÅ„ÄÇÊé•‰∏ãÊù•Â∞±Ë¶ÅÈ™åËØÅ‰∏§‰∏™tokenÁöÑÊùÉÈôêÈóÆÈ¢ò‰∫Ü„ÄÇ ÊúçÂä°Ë∞ÉÁî®ÊùÉÈôê‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 12345678910111213141516171819202122@Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception &#123; HandlerMethod handlerMethod = (HandlerMethod) handler; // ÈÖçÁΩÆËØ•Ê≥®Ëß£ÔºåËØ¥Êòé‰∏çËøõË°åÊúçÂä°Êã¶Êà™ IgnoreClientToken annotation = handlerMethod.getBeanType().getAnnotation(IgnoreClientToken.class); if (annotation == null) &#123; annotation = handlerMethod.getMethodAnnotation(IgnoreClientToken.class); &#125; if(annotation!=null) &#123; return super.preHandle(request, response, handler); &#125; String token = request.getHeader(serviceAuthConfig.getTokenHeader()); IJWTInfo infoFromToken = serviceAuthUtil.getInfoFromToken(token); String uniqueName = infoFromToken.getUniqueName(); for(String client:serviceAuthUtil.getAllowedClient())&#123; if(client.equals(uniqueName))&#123; return super.preHandle(request, response, handler); &#125; &#125; throw new ClientForbiddenException("Client is Forbidden!"); &#125; Áî®Êà∑ÊùÉÈôêÔºö 123456789101112131415161718192021222324252627282930313233@Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception &#123; HandlerMethod handlerMethod = (HandlerMethod) handler; // ÈÖçÁΩÆËØ•Ê≥®Ëß£ÔºåËØ¥Êòé‰∏çËøõË°åÁî®Êà∑Êã¶Êà™ IgnoreUserToken annotation = handlerMethod.getBeanType().getAnnotation(IgnoreUserToken.class); if (annotation == null) &#123; annotation = handlerMethod.getMethodAnnotation(IgnoreUserToken.class); &#125; if (annotation != null) &#123; return super.preHandle(request, response, handler); &#125; String token = request.getHeader(userAuthConfig.getTokenHeader()); if (StringUtils.isEmpty(token)) &#123; if (request.getCookies() != null) &#123; for (Cookie cookie : request.getCookies()) &#123; if (cookie.getName().equals(userAuthConfig.getTokenHeader())) &#123; token = cookie.getValue(); &#125; &#125; &#125; &#125; IJWTInfo infoFromToken = userAuthUtil.getInfoFromToken(token); BaseContextHandler.setUsername(infoFromToken.getUniqueName()); BaseContextHandler.setName(infoFromToken.getName()); BaseContextHandler.setUserID(infoFromToken.getId()); return super.preHandle(request, response, handler); &#125; @Override public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception &#123; BaseContextHandler.remove(); super.afterCompletion(request, response, handler, ex); &#125; spring cloud gatewayÁΩëÂÖ≥‰ª£Á†ÅËØ•Ê°ÜÊû∂‰∏≠ÊâÄÊúâÁöÑËØ∑Ê±ÇÈÉΩ‰ºöËµ∞ÁΩëÂÖ≥ÊúçÂä°Ôºàace-gatev2ÔºâÔºåÈÄöËøáÁΩëÂÖ≥ÔºåÊù•È™åËØÅtokenÊòØÂê¶ËøáÊúüÂºÇÂ∏∏ÔºåÈ™åËØÅtokenÊòØÂê¶‰∏çÂ≠òÂú®ÔºåÈ™åËØÅtokenÊòØÂê¶ÊúâÊùÉÈôêËøõË°åÊúçÂä°„ÄÇ ‰∏ãÈù¢ÊòØÊ†∏ÂøÉ‰ª£Á†ÅÔºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546@Override public Mono&lt;Void&gt; filter(ServerWebExchange serverWebExchange, GatewayFilterChain gatewayFilterChain) &#123; log.info("check token and user permission...."); LinkedHashSet requiredAttribute = serverWebExchange.getRequiredAttribute(ServerWebExchangeUtils.GATEWAY_ORIGINAL_REQUEST_URL_ATTR); ServerHttpRequest request = serverWebExchange.getRequest(); String requestUri = request.getPath().pathWithinApplication().value(); if (requiredAttribute != null) &#123; Iterator&lt;URI&gt; iterator = requiredAttribute.iterator(); while (iterator.hasNext())&#123; URI next = iterator.next(); if(next.getPath().startsWith(GATE_WAY_PREFIX))&#123; requestUri = next.getPath().substring(GATE_WAY_PREFIX.length()); &#125; &#125; &#125; final String method = request.getMethod().toString(); BaseContextHandler.setToken(null); ServerHttpRequest.Builder mutate = request.mutate(); // ‰∏çËøõË°åÊã¶Êà™ÁöÑÂú∞ÂùÄ if (isStartWith(requestUri)) &#123; ServerHttpRequest build = mutate.build(); return gatewayFilterChain.filter(serverWebExchange.mutate().request(build).build()); &#125; IJWTInfo user = null; try &#123; user = getJWTUser(request, mutate); &#125; catch (Exception e) &#123; log.error("Áî®Êà∑TokenËøáÊúüÂºÇÂ∏∏", e); return getVoidMono(serverWebExchange, new TokenForbiddenResponse("User Token Forbidden or Expired!")); &#125; List&lt;PermissionInfo&gt; permissionIfs = userService.getAllPermissionInfo(); // Âà§Êñ≠ËµÑÊ∫êÊòØÂê¶ÂêØÁî®ÊùÉÈôêÁ∫¶Êùü Stream&lt;PermissionInfo&gt; stream = getPermissionIfs(requestUri, method, permissionIfs); List&lt;PermissionInfo&gt; result = stream.collect(Collectors.toList()); PermissionInfo[] permissions = result.toArray(new PermissionInfo[]&#123;&#125;); if (permissions.length &gt; 0) &#123; if (checkUserPermission(permissions, serverWebExchange, user)) &#123; return getVoidMono(serverWebExchange, new TokenForbiddenResponse("User Forbidden!Does not has Permission!")); &#125; &#125; // Áî≥ËØ∑ÂÆ¢Êà∑Á´ØÂØÜÈí•Â§¥ mutate.header(serviceAuthConfig.getTokenHeader(), serviceAuthUtil.getClientToken()); ServerHttpRequest build = mutate.build(); return gatewayFilterChain.filter(serverWebExchange.mutate().request(build).build()); &#125; cloud adminÊÄªÁªìÊÄªÁöÑÊù•ËØ¥ÔºåÈâ¥ÊùÉÂíåÁΩëÂÖ≥Ê®°ÂùóÂ∞±ËØ¥ÂÆå‰∫Ü„ÄÇ‰ΩúËÄÖ‰ª£Á†ÅÊûÑÊÄùÊûÅÂÖ∂Á≤æÂ¶ôÔºå‰ΩøÁî®Âú®Â§ßÂûãÁöÑÊùÉÈôêÁ≥ªÁªü‰∏≠ÔºåÂèØ‰ª•Â∑ßÂ¶ôÁöÑÂáèÂ∞ëËÄ¶ÂêàÊÄßÔºåËÆ©ÊúçÂä°Èâ¥ÊùÉÁ≤íÂ∫¶ÁªÜÂåñÔºåÊñπ‰æøÁÆ°ÁêÜ„ÄÇ ÁªìÊùüÊ≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéÁúãÂøÉÊÉÖÂèØËÉΩ‰ºöÂú®CSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèãÔºåÂí±‰ª¨‰∏§‰∏™ÊÉ≥‰∏™Âè∑Á†ÅÔºå ‰π∞‰∏™ÂΩ©Á•®ÔºåÂÖàÊå£‰ªñ‰∏™Âá†Áôæ‰∏áüòù]]></content>
      <tags>
        <tag>Ê∫êÁ†Å</tag>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ</tag>
        <tag>ÁΩëÁªú</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖâÈ≤ú‰∏ãÁöÑchina]]></title>
    <url>%2F2018%2F11%2F03%2F%E5%88%86%E4%BA%AB%E5%BE%AE%E5%8D%9A%2F</url>
    <content type="text"><![CDATA[ÁúãÂà∞‰∏ÄÁØáÂæÆÂçöÊñáÁ´†ÔºåÂàÜ‰∫´‰∏Ä‰∏ã„ÄÇ ‰∏∫‰ªÄ‰πàÂàÜ‰∫´ËøôÁØáÊñáÁ´†Âë¢Ôºü ÂÖ∂ÂÆûÁé∞Âú®ÔºåÊàëÂØπÁé∞Âú®ÁöÑÁéØÂ¢ÉËøòÊòØÊä±Êúâ‰∏ÄÁÇπÊÇ≤ËßÇÊÄÅÂ∫¶ÁöÑ„ÄÇ‰ªäÂ§©ÂíåÂçÅÂπ¥ÂâçÁöÑ‰ªäÂ§©‰∏ç‰∏ÄÊ†∑ÔºåÂçÅÂπ¥ÂâçÔºåÊàëÂ∞èÂ≠¶6Âπ¥Á∫ßÔºåÂåó‰∫¨Â••Ëøê‰ºöÔºåÁ∫¢Ê≠åÊ¥ãÊ∫¢ÔºåÊ¨¢Â£∞Á¨ëËØ≠ÔºåÈÇ£Êó∂ÂÄôÔºåË∞∑Ê≠åÊ≤°ÊúâÈÄÄÂá∫‰∏≠ÂõΩÔºåFacebookËøòËÉΩÁªßÁª≠ÁôªÈôÜÔºåGFWÊ†πÊú¨‰∏çÂ≠òÂú®„ÄÇÈÇ£Êó∂ÂÄôÔºåÊàë‰ª¨‰∏çÂèëËææÔºå‰ΩÜÊòØÊàë‰ª¨ÊØèÂÆ∂ÂÆâÂ±Ö‰πê‰∏ö„ÄÇ ÈöèÂêéÊ±∂Â∑ùÂ§ßÂú∞ÈúáÔºåÊ≤°‰∏™‰∏≠ÂõΩ‰∫∫‰ºóÂøóÊàêÂüéÔºåÊàë‰ª¨Ê≤°Èí±Ôºå‰ΩÜÊòØÊàë‰ª¨ÊúâÁâ©ËµÑ„ÄÇÊØè‰∏™‰∫∫ÈÉΩ‰ºöËá™Âä®ÁåÆÂá∫Ëá™Â∑±ÁöÑ‰∏ÄÁâáÂøÉÊÑè„ÄÇÂ§ßË°ó‰∏äÂ§ßÂÆ∂‰ºôËá™ÂèëÂêë‰∏äÁöÑË∏äË∑ÉÊä•ÂêçÂøóÊÑøËÄÖÔºåÂÖ®‰∏≠ÂõΩ‰∫∫Ê∞ë‰ºóÂøóÊàêÂüé„ÄÇÈÇ£Êó∂ÂÄôÔºåÊàë‰ª¨‰∏çÂèëËææÔºå‰ΩÜÊòØÊàë‰ª¨Ëá™Áî±Âõ¢Áªì„ÄÇ ÂÜçÂêéÊù•ÔºåÈáëËûçÂç±Êú∫Ôºå‰∏æ‰∏ñËêßÊù°ÔºåÊàë‰ª¨Êã•Êúâ‰ºòËâØÁöÑÁ§æ‰ºöÂà∂Â∫¶ÔºåÊàë‰ª¨‰πüÈÅ≠ÂèóÁùÄ‰∏ÄÁ≥ªÂàóÁöÑÊçüÂ§±Ôºå‰ΩÜÊòØËøú‰∏çÂ¶ÇÂÖ∂‰ªñÂõΩÂÆ∂ÈÇ£‰πàÂº∫ÁÉà„ÄÇÂú®ËøôÊúüÈó¥ÔºåÊàë‰ª¨‰∏çÂÖâËá™ÊàëÊîπÈù©ÔºåËÄå‰∏îËøòÊè¥Âä©Êï¥‰∏™‰∏ñÁïå„ÄÇÈÇ£Êó∂ÂÄôÔºåÊàë‰ª¨‰∏çÂèëËææÔºå‰ΩÜÊòØÊàë‰ª¨Âà∂Â∫¶ÂÖàËøõ„ÄÇ Áé∞Âú®Âë¢Ôºü ÊàëÈïøÂ§ß‰∫ÜÔºåÊàêÂπ¥‰∫Ü„ÄÇ21Â≤ÅÔºå‰∏Ä‰∏™ÂÄºÂæóÂ®ìÂ®ìÈÅìÊù•ÁöÑÂπ¥ÈæÑÔºå‰∏Ä‰∏™ÈúÄË¶ÅÊãÖËµ∑Ë¥£‰ªªÁöÑÂπ¥ÈæÑÔºå‰∏Ä‰∏™ÂàùÂÖ•Á§æ‰ºöÁöÑÂπ¥ÈæÑ„ÄÇ‰∏Ä‰∏™Áî∑‰∫∫ÔºåÂèàÊòØ‰∏Ä‰∏™ÂÆ∂ÊóèÁöÑÁã¨ÁîüÂ≠êÔºåÈúÄË¶ÅÂÖªËÄÅÔºåÈúÄË¶ÅÊâæÂ™≥Â¶áÔºåÈúÄË¶ÅÂÆûÁé∞Ëá™ÊàëË¥£‰ªª‰∏é‰πâÂä°ÁöÑÂπ¥ÈæÑ„ÄÇ ÂèØÊòØÂú®Áé∞Âú®ÁöÑÁéØÂ¢É‰∏ãÔºåÊàø‰ª∑Ê∂®‰∫ÜÔºåÊàø‰ª∑ÔºàÈùíÂ≤õÔºâ‰ªéÂçÅÂπ¥ÂâçÁöÑ4000ÁøªÂà∞Áé∞Âú®ÁöÑ30000ÔºõÂ∞±‰∏öÂ∞ë‰∫ÜÔºåÂ∞±‰∏öÁîü/ÂΩìÂ±äÂ∫îÂ±äÁîü ÁöÑÊØî‰æã‰∏ÄÂπ¥ÊØî‰∏ÄÂπ¥Â∞ëÔºõÁ®éÊî∂È´ò‰∫ÜÔºåÈ´òÊñ∞‰∫ß‰∏öÁ®éÂä°‰∏•ÈáçÔºåÊ∂àË¥π‰∫ßÂìÅ‰∏ÄËà¨‰∫∫Ê∂àË¥π‰∏çËµ∑Êù•ÔºõGFWÊù•‰∫ÜÔºå‰∏ñÁïå‰πüÂèòÂ∞è‰∫ÜÔºåÁîöËá≥Êàë‰ª¨ÁîüËÄå‰∏∫‰∫∫-ËØ¥ËØùÁöÑÊùÉÂäõÔºåÈÉΩË¢´ÂâäÂº±‰∫Ü„ÄÇ Â•ΩÂ§±Êúõ„ÄÇ ‰∏çÂÖâÊòØÊàëÔºåËÇØÂÆö‰πüÊúâÂæàÂ§öÂíåÊàë‰∏Ä‰∏™Âπ¥ÈæÑÁöÑ‰∫∫ÔºåÊâøÂèóÁùÄÂíåÊàë‰∏ÄÊ†∑ÁöÑÂõ∞Êâ∞„ÄÇÊÜãÂú®ÂøÉÈáåÂ•ΩÈöæÂèóÂïäÔºåÊÉ≥ËØ¥ÔºÅÊÉ≥ËØ¥ÔºÅÊÉ≥ÊääÂÆÉÂÉèÁóòÁóò‰∏ÄÊ†∑Êå§Âá∫Êù•Ôºå‰∏çË¶ÅËÆ©‰ªñÂèòÂ§ßÔºå‰∏çË¶ÅËÆ©‰ªñÂèòÈªÑ„ÄÇ ÂèØÊòØÔºåÂ∑≤ÁªèÂæàÂ∞ëÊúâ‰∫∫ËØ¥ËØù‰∫Ü„ÄÇÂÖ≥‰∫éÊîøÊ≤ªÔºåÂÖ≥‰∫é‰∏≠ÂõΩÂ∑¶ÂÄæÔºåÂæàÂ∞ëÊúâ‰∫∫Âá∫Êù•ËØ¥ËØù‰∫Ü„ÄÇËØ¥‰∫ÜÔºåÂ∞±ÊòØ‰∏çÊáÇ‰∫ãÔºõËØ¥‰∫ÜÔºåÂ∞±ÊòØ‰∏çÂ∞äËÄÅÔºõËØ¥‰∫ÜÔºåÂ∞±ÊòØ‰∏çÁà±ÂõΩ„ÄÇ Ëß£ÂÜ≥ÈóÆÈ¢òÁöÑÊúÄÂ•ΩÊñπÊ≥ïÂ∞±ÊòØËß£ÂÜ≥ËØ¥Âá∫ÈóÆÈ¢òÁöÑ‰∫∫„ÄÇ Êàë‰∏çÊï¢ËØ¥ÔºåÊàëÊúâÁà∂ÊØçÔºåÊàëÊúâÁà±‰∫∫ÔºåËØ¥ËØùÁöÑ‰ª£‰ª∑Â§™Â§ß‰∫ÜÔºåÊàëÊâøÂèó‰∏çËµ∑„ÄÇ Áà∂ÊØçËÆ©ÊàëÂÅöÂÖ¨Âä°ÂëòÔºåÊàëËßâÂæóÂæà‰∏çÈîôÔºåÂõ†‰∏∫ÊàëËßâÂæóÊÄªÊúâÂíåÊàë‰∏ÄÊ†∑ÁöÑ‰∫∫ÔºåÁÉ≠Áà±ËøôÁâáÂúüÂú∞ÔºåËøôÁà±Ëøô‰∏™ÂõΩÂÆ∂ÔºåÂç¥ÂèàÁúãËßÅËøô‰∏ñÁïåÁüõÁõæ‰∏çÂÖ¨Âπ≥ÁöÑÁé∞Ë±°„ÄÇ ‰ΩÜÊàëÊîæÂºÉ‰∫Ü„ÄÇÁêÜÁî±ÔºåÂ∞±ÊòØÈÇ£Ê†∑„ÄÇ ÊàëÂæàÁ¨®ÔºåÊâÄ‰ª•ÊàëÈÄâÊã©Â≠¶ËÆ°ÁÆóÊú∫ÔºåÂÆâÂÆâÂøÉÂøÉÁöÑÂÅö‰∏Ä‰∏™ÊäÄÊúØ‰∫∫ÂëòÔºåÂÆâÂÆâÂøÉÂøÉÁöÑË∑üÁùÄ‰∫∫Ê∞ëÁæ§‰ºóËµ∞ÔºåÂùöÂÜ≥Êã•Êä§ÂÖöÁöÑÊ≠£Á°ÆÈ¢ÜÂØº„ÄÇÂÅö‰∏Ä‰∏™‰πåÈæüÔºåÂÅö‰∏Ä‰∏™‰π¶ÂëÜÂ≠êÔºåÊÖ¢ÊÖ¢ÁßØÂæ∑ÔºåÊ≤°ÂáÜÔºå‰∏ãËæàÂ≠êÊàëÂ∞±‰ºöÂØåË£ï‰∫ÜÂë¢ÔºÅ ÂΩìÊàëÊ≤âÈªòÁöÑÊó∂ÂÄôÔºåÊàëËßâÂæóÂæàÂÖÖÂÆûÔºåÂΩìÊàëÂºÄÂè£ËØ¥ËØùÔºåÂ∞±ÊÑüÂà∞‰∫ÜÁ©∫Ëôö„ÄÇ ‚ÄìÈ≤ÅËøÖ]]></content>
      <tags>
        <tag>Êó•Â∏∏</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁßãÊãõÂ§±Ë¥•‰∫ÜÔºåËøòÊòØË¶ÅÁªßÁª≠]]></title>
    <url>%2F2018%2F11%2F03%2F%E5%8A%A0%E6%B2%B92%2F</url>
    <content type="text"><![CDATA[Âú®ÊµéÂçóÊú¨Âú∞Êäï‰∫ÜÂá†‰ªΩÁÆÄÂéÜÔºåÊî∂Âà∞‰∫Ü‰∫îÂÖ≠‰ªΩofferÔºåÊÑüËßâÈô§‰∫Ü‰∏ÄÂÆ∂Â∞èÂÖ¨Âè∏‰ª•Â§ñ‰ª•Â§ñÔºåÈÉΩ‰∏çÊòØÂæàÊª°ÊÑè„ÄÇÂÆòÂÉö‰ΩúÈ£éÔºåÊäÄÊúØÂ∞ÅÈó≠ÔºåÂπ≤Ê¥ªÁ¥ØÔºå‰∏çÂ∞äÈáçÂ∫îËÅòËÄÖÔºå‰ªÄ‰πàÈÉΩÊúâ„ÄÇ ‰∫∫ÁîüÂ•ΩËø∑Ëå´ÔºåÂÅö‰∫∫Â•ΩÁ¥ØÂïä„ÄÇ ‰ªäÂ§©Â•≥ÊúãÂèãÈÄºÊàëÔºåÈóÆÊàëÊÑèÂêëÂüéÂ∏ÇÔºåÂ•πÊÄßÂ≠êÊÄ•ÔºåÂ•πÊÉ≥Ê†πÊçÆÊàëÈÄâÁöÑÂ∑•‰ΩúÂú∞ÁÇπÊâæÂ∑•‰Ωú„ÄÇÂèØÊòØÊàëÂ§™Âº±Â∞è‰∫ÜÔºåÊàëÊâæ‰∏çÂà∞Â∑•‰ΩúÔºåÂ•ΩÁÉ¶„ÄÇÂ•ΩÊÉÜÊÄÖ„ÄÇÂ•πÂíåÊàëËØ¥Êàë‰ª¨ÂèØËÉΩË¶ÅÂàÜÊâã‰∫ÜÔºåÂ∑•‰ΩúÂú∞ÁÇπ‰∏çÂêåÔºå‰∏§Êñπ‰∏ç‰ºöÂú®‰∏ÄËµ∑ÁöÑ„ÄÇÊàëÂæàÈöæÂèóÔºåÂèØÁé∞ÂÆûÂ∞±ÊòØËøôÊ†∑ÔºåËèúÊòØÂéüÁΩ™ÔºåËÄåÊàëÊÅ∞Â•ΩÂ∞±ÂæàËèú„ÄÇ Â•πÊòØ‰∏™ÂæàÊáíÁöÑ‰∫∫Ôºå‰πüÊòØ‰∏™ÁªèÂ∏∏ÁÑ¶ËôëÁöÑ‰∫∫„ÄÇ‰ªäÂπ¥ÁßãÊãõÔºåÂ•πÂè™Âéª‰∫Ü‰∏Ä‰∏™Èù¢ËØïÔºåÁªìÊûúËøá‰∫ÜÔºåÂ∑•‰ΩúÂú∞ÁÇπÂú®ÈùíÂ≤õÂç≥Â¢®Ôºå‰∏Ä‰∏™‰∏çÊòØÂæàÂèëËææÁöÑÂú∞ÊñπÔºåÂíåÊàëËÄÅÂÆ∂Âú®‰∏Ä‰∏™Â∏ÇÔºå‰ΩÜÊòØË∑ùÁ¶ªÈùûÂ∏∏ËøúÔºåÂ∑•ËµÑ4KÔºåÂ§ñË¥∏‰∏ìÂëò„ÄÇÊàë‰∏çÁúãÂ•ΩÂ•πÁöÑÂ∑•‰ΩúÔºå‰∏ªË¶ÅÊòØÂú∞ÁÇπ‰∏çÂ•ΩÔºå‰∏çÊòØÂ∏ÇÂå∫ÔºåÊàëËÆ©‰ªñÊîæÂºÉÔºåÂèØÂ•π‰∏çÁîòÂøÉÔºåËØ¥ÊÄ™ÊàëÊ≤°ÂÆö‰∏ãÊù•Âú∞ÁÇπÔºåÊàë‰∏çÈù†Ë∞±„ÄÇÊàë‰ª¨Âêµ‰∫ÜÂæàÂ§öÊ¨°ÔºåÊ≤°ÊúâÁªìÊûú„ÄÇ Ë∂ÖÁ∫ßÊÉ≥ËΩ¨Ë°å~ ÊúâÊó∂ÂÄôÁúüÁöÑËßâÂæóÔºåËÆ°ÁÆóÊú∫ÊñπÈù¢ÊàëÊúâÁà±Â•ΩÔºå‰ΩÜÊòØÂç¥Ê≤°ÊúâËøô‰∏™ËÉΩÂäõ„ÄÇ Â¶ÇÊûúÊàëÂÅöÁÆ°ÁêÜÔºåÁªìÊûú‰ºöÊÄé‰πàÊ†∑Âë¢ÔºüÂ¶ÇÊûúÊàëÂÅöËê•ÈîÄÔºåÁªìÊûú‰ºöÊÄé‰πàÊ†∑Âë¢ÔºüÂ¶ÇÊûúÊàëÂÅöÊïô‰π¶ÔºåÁªìÊûú‰ºöÊÄé‰πàÊ†∑Âë¢ÔºüÊàë‰∏çÁü•ÈÅìÔºå‰ΩÜÊàëËÆ§‰∏∫Êàë‰ºöÂÅöÁöÑÂæàÂ•ΩÔºåÂú®ÊàñËÄÖÔºå‰ºöÈùûÂ∏∏‰∏çÁîòÂøÉÂêß„ÄÇ ‰∏çÁÆ°Â¶Ç‰ΩïÔºåËøòÊòØÊÖ¢ÊÖ¢ÁöÑÊ¥ªÁùÄÂêß„ÄÇÂ∞±ÂÉèÊàëÁà∂ÊØçÊúÄÂºÄÂßãÁöÑÊÑøÊúõÔºåËÆ©ÊàëÂÆâÂÆâÁ®≥Á®≥ÁöÑÊ¥ªÁùÄÔºåÊúÄÂ•ΩË°£È£üÊó†ÂøßÔºå‰πü‰∏çË¶ÅÂÅö‰∏™ÂØå‰∫∫ÔºåÂèó‰∫∫Â´âÂ¶íÔºåÂÅö‰∏™Â∞èÂ∞èÁöÑÂã§Âä≥ÁöÑËöÇËöÅÂ∞±Â•Ω„ÄÇ Ëøô‰∏™Êúà‰∏≠Êó¨ÊàëË¶ÅÂéªÂÆû‰π†‰∫ÜÔºåÂéªÈÇ£ÂÆ∂Ôºå‰∏ÄÂºÄÂßãÁªôÊàëÈù¢ËØïÂæàÂíåËîºÂèàÊÑüËßâÂæàÊúâÊ∑±Â∫¶ÁöÑÈù¢ËØïÂÆòÊâÄÂú®ÁöÑÂÖ¨Âè∏„ÄÇÁîüÊ¥ªËøòÂú®ÁªßÁª≠ÔºåÊàëËøòÊòØ‰ºöÊÖ¢ÊÖ¢Ê¥ªÁùÄÔºå‰ΩÜÊòØÊàëÊ∞∏Ëøú‰∏ç‰ºöÂÅúÊ≠¢ÊàëÂØπËá™Â∑±ÁöÑËøΩÊ±ÇÔºÅ ‰ºòÁßÄÁöÑ‰∫∫‰∏çÂú®‰∫éÈ°∫Â¢ÉÂ¶Ç‰ΩïËøáÊ¥ªÔºåËÄåÊòØÂú®ÈÄÜÂ¢ÉÊ¥ªÂá∫Á≤æÂΩ©„ÄÇÈöæÁÜ¨ÁöÑÊó•Â≠êÊÄª‰ºöÂá∫Áé∞ÔºåËøáÂéª‰∫ÜÂ∞±ÊòØËøáÂéªÔºåÊõ¥Âä†ÂùöÈüß„ÄÇ È∏°Ê±§ÁÇπÂà∞‰∏∫Ê≠¢ÔºåË¶ÅÂºÄÂßãÂêÉÈ•≠‰∫ÜÔºåÁßãÊãõÂè™ÊòØÂ∑•‰ΩúÁîüÊ∂ØÁöÑÂºÄÂßãÔºåËµ∑Ë∑ëÁ∫øËêΩÊà∑ÁöÑ‰∫ã‰∏çÊòØÊ≤°ÁªèÂéÜËøáÔºåÁé∞Âú®ÂºÄÂßãÂä™ÂäõÔºåÊúÄÂ∑Æ‰∏çËøá‰∏ã‰∏ÄÁ´ôÊò•ÊãõÔºåÊ≤°ÂÜçÊÄïÁöÑ„ÄÇ Nothing to lose,everything will be !]]></content>
      <tags>
        <tag>Êó•Â∏∏</tag>
        <tag>ÁîüÊ¥ª</tag>
        <tag>ÂêêÊßΩ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊäÄÊúØÂ≠¶‰π†Ë∑ØÁ∫øÂõæ]]></title>
    <url>%2F2018%2F11%2F01%2F%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[ÂàÜ‰∫´‰∏Ä‰∏ãÂ≠¶‰π†ÊäÄÊúØÁöÑÊÄùÁª¥ËÑëÂõæÔºå‰∏ªË¶ÅÊòØÊû∂ÊûÑÂ∏àÂõæË∞±ÔºåjavaÁü•ËØÜÂõæË∞±ÔºåÂâçÁ´ØÊäÄÊúØÂ≠¶‰π†ÂØºÂõæÔºåÂ§ßÊï∞ÊçÆ‰∏é‰∫ëËÆ°ÁÆóÊäÄËÉΩÔºåDevOpsÁõ∏ÂÖ≥ÂõæË∞±ÔºåÁïô‰Ωú‰∏™‰∫∫Â§á‰ªΩÁî®„ÄÇÁ¥†ÊùêÂÖ®ÈÉ®ÊêúÈõÜ‰∫éÁΩëÁªúÔºå‰æµÂà†ÔºÅ Êû∂ÊûÑÂ∏àÂõæË∞± javaÁü•ËØÜÂõæË∞±javaÊ°ÜÊû∂ÂõæË∞± JavaÂπ∂ÂèëÁü•ËØÜÂõæË∞± ÂâçÁ´ØÊäÄÊúØÂ≠¶‰π†ÂØºÂõæ Â§ßÊï∞ÊçÆ‰∏é‰∫ëËÆ°ÁÆóÊäÄËÉΩ iosÊäÄËÉΩ DevOpsÁõ∏ÂÖ≥ÂõæË∞±]]></content>
      <tags>
        <tag>ÊäÄÊúØ</tag>
        <tag>ÂàÜ‰∫´</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êú™Êù•„ÅÆÁõÆÊ®ô]]></title>
    <url>%2F2018%2F10%2F27%2F%E6%9C%AA%E6%9D%A5%E3%81%AE%E7%9B%AE%E6%A8%99%2F</url>
    <content type="text"><![CDATA[ÂæàÂ§öÊó∂ÂÄôÔºåÁîüÊ¥ªÂπ∂‰∏çÂ¶ÇÊÑèÔºõÂæàÂ§öÊó∂ÂÄôÔºåÁêÜÊÉ≥Âπ∂‰∏çËÉΩÂÆûÁé∞ÔºõË∑ØÂæàÈïøÔºåË∫´‰ΩìÂæàÁ¥ØÔºåÂèØËøòÊòØ‰∏ÄÁõ¥Ë¶ÅËµ∞‰∏ãÂéª„ÄÇ ÂßãÊàëÊòØ‰∏Ä‰∏™‰∏Ä‰∏™ÊôÆÊôÆÈÄöÈÄöÁöÑÂèåÈùûÂ≠¶Ê†°ÁöÑÂ§ßÂ≠¶ÁîüÔºåÊù•Ëá™Â±±‰∏úÁöÑ‰∫åÂçÅÁ∫øÂ∞èÂüéÂ∏ÇÔºåÂÆ∂Â¢É‰∏ÄËà¨ÔºåÁîüÊ¥ªÂæàÂÆâÈÄ∏„ÄÇÂèØËÉΩÂ∞èÊó∂ÂÄôÂèóÂà∞ÁöÑÁÜèÈô∂ÊØîËæÉÂ§öÂêßÔºåÂÆ∂Èáå‰∫∫ÊØîËæÉÊä§ÁääÔºåÊé•Ëß¶ÁöÑ‰∫ãÊÉÖ‰πüÂæàÂ∞ë„ÄÇÂπ≥Êó∂Ê≤°Âï•‰π†ÊÉØÔºåÊúÄÂ§ßÁöÑÁà±Â•ΩÊòØÊç£ÈºìËÆ°ÁÆóÊú∫„ÄÇ Â¶àÂ¶àÁöÑÁúºÁïåÂæàÂπøÔºåÊàëÂ∞èÊó∂ÂÄô‰∏âÂπ¥Á∫ßÔºåÂ¶àÂ¶àÊïô‰∫ÜflashÂä®ÁîªÔºåÂàù‰∏≠ÂÇª‰∫ÜÂêßÂîßÁöÑÁöÑÁé©ÂõΩÂ§ñÊ∏∏ÊàèÔºåÂõ†Ê≠§Ëã±ËØ≠ËøòÁÆóÂèØ‰ª•ÔºåÈ´ò‰∏≠Ëá™Â∑±Â≠¶diyÁîµËÑëÔºåÊêûÊú∫Âô®„ÄÇ ‰∏ÄÊ≠•‰∏ÄÊ≠•ÁöÑÊàêÈïøÔºåÂà∞‰∫ÜÂø´‰∏äÂ§ßÂ≠¶ÁöÑÂπ¥Á∫™ÔºåËá™Â∑±Âï•‰πü‰∏çÁü•ÈÅìÔºåÂè™Èù†ÁùÄÁà∂ÊØç„ÄÇÁà∂ÊØçÂæàÁà±ÊàëÔºåÁªôÊàëÈÄâ‰∫Ü‰∏Ä‰∏™ÁΩëÁªúÂ∑•Á®ã‰∏ì‰∏ö„ÄÇËøõ‰∫ÜÂ§ßÂ≠¶Ôºå‰ªÄ‰πàÈÉΩÂèò‰∫ÜÔºå‰∫∫Âèò‰∫ÜÔºåÊ•ºÂèò‰∫ÜÔºå‰∏ñÁïåÂèò‰∫Ü„ÄÇËøôÈáåÁöÑ‰∫∫Ê∏©ÊñáÂ∞îÈõÖÔºåËøôÈáåÁöÑ‰∫∫Ë°£ÁùÄÊï¥ÈΩêÔºåÊàëÂä®ÂøÉ‰∫ÜÔºåÁîüÊ¥ªÂú®ËøôÈáåÂ•ΩÂπ∏Á¶è„ÄÇ ÊàëÂú®ÊÖ¢ÊÖ¢ÊáÇ‰∫ã„ÄÇ Á¨¨‰∏ÄÂπ¥ÔºåÊàëÂéª‰∫ÜÂ≠¶Áîü‰ºöÔºåÊàëÂéª‰∫Ü‰∏ÄÂÆ∂‰∏ñÁïå500Âº∫ÂÆû‰π†ÔºåÂêåÊó∂ËøòÊâæ‰∫Ü‰∏Ä‰ªΩ‰øÆÁîµËÑëÁöÑÂÖºËÅåÔºåÂèàÂØπ‰∏Ä‰∏™Â•≥Â≠©‰∫ßÁîü‰∫ÜÂ•ΩÊÑü„ÄÇ Á¨¨‰∫åÂπ¥ÔºåÊÖ¢ÊÖ¢ÁöÑÊë∏Á¥¢ÔºåÊàëÁªßÁª≠ÊàëÁöÑËÄÅË∑Ø„ÄÇÊàëËÆ§‰∏∫ÊàëËá™Â∑±ÂÅöÁöÑÂÜ≥ÂÆöÔºåÂæàÂÆåÂñÑÔºåÂæàÂ•ΩÔºåÊàëÊ≤âÊµ∏Âú®ÂÖ∂‰∏≠„ÄÇ Á¨¨‰∏âÂπ¥ÔºåÊÅãÁà±‰ΩôÊ∏©Èôç‰∏ãÊù•‰∫ÜÔºåÁé∞ÂÆû‰πüÊù•‰∫Ü„ÄÇÈùíÊò•ÊúüÁöÑÁÉ¶ÊÅºÊé•Ë∏µËÄåËá≥Ôºå‚ÄúÊàëÂú®Âì™ÔºüÊàë‰∏∫‰ªÄ‰πàË¶ÅËøô‰πàÂÅöÔºü‚ÄùÔºåÊàëÊÄªÊòØÂú®Ëá™Â∑±Êé¢Á¥¢ÔºåÊàëÊÄªÊòØÊØîÂà´‰∫∫ÊôöÂèëËÇ≤ÂæàÂ§ö„ÄÇ ÊúâËøôÊ†∑‰∏Ä‰∏™ÊïÖ‰∫ãÔºå‰∏ÄÂêçËÆ∞ËÄÖÁúãËßÅÂÜúÊùëÁöÑ‰∏Ä‰∏™Ê≠£Âú®ÊîæÁæäÁöÑÂ∞èÂ≠©ÔºåÈóÆ‰ªñ‚Äú‰Ω†ÁöÑÁêÜÊÉ≥ÊòØ‰ªÄ‰πàÔºü‚ÄùÂ∞èÂ≠©ÂõûÁ≠îËØ¥Ôºö‚ÄúÊîæÁæäÔºÅ‚Äù‚ÄúÁæäÂÑøÂñÇÂ§ß‰∫ÜÂπ≤‰ªÄ‰πàÔºü‚Äù‚ÄúÂçñÈí±ÔºÅ‚Äù‚ÄúÊúâ‰∫ÜÂçñÁæäÂÑøÁöÑÈí±Âπ≤‰ªÄ‰πàÔºü‚Äù‚ÄúÂ®∂ËÄÅÂ©ÜÔºÅ‚Äù‚ÄúÂ®∂ËÄÅÂ©ÜÂπ≤‰ªÄ‰πàÔºü‚Äù‚ÄúÁîüÂ∞èÂ≠©ÔºÅ‚Äù‚ÄúÁîüÂ∞èÂ≠©Êù•Âπ≤‰ªÄ‰πàÔºü‚Äù‚ÄúÊîæÁæäÔºÅ‚Äù‚Ä¶‚Ä¶ ÊîæÁæäÁöÑÂ∞èÂ≠©ÂØπ‰∏ñÁïåÁöÑÁêÜËß£‰πüÂ∞±ÊòØÔºöÊîæÁæäÊå£Èí±Â®∂ËÄÅÂ©ÜÁîüÂ∞èÂ≠©ÂÜçÊîæÁæä„ÄÇÂØπÂ§ñÈù¢‰∏ñÁïåÁöÑ‰∫ÜËß£ÂèØËÉΩË∂ãÂêë‰∫é‰∫ÜÈõ∂ÔºåÂú®‰ªñÁöÑ‰∏ñÁïåÈáåÔºåËøôÂ∞±ÊòØÁæéÂ•ΩÁöÑ‰∏ÄÂàáÔºåÂπ∏Á¶èÁöÑÁîüÊ¥ª„ÄÇÂØπ‰∏ñÁïåËÆ§ËØÜÁöÑÂ±ÄÈôêÊÄß‰ºöÂØºËá¥ÊÄùÁª¥ÁöÑÂ±ÄÈôêÊÄßÔºåÊÄùÁª¥ÁöÑÂ±ÄÈôêÊÄß‰ºöÂØºËá¥ÁõÆÊ†áÁöÑÂ±ÄÈôêÊÄßÔºåÁõÆÊ†áÁöÑÂ±ÄÈôêÊÄßÊúÄÁªàÂØºËá¥Ë°å‰∏∫ÁöÑÂ±ÄÈôêÊÄßÔºå‰ªéËÄåÂΩ±Âìç‰∫∫Áîü‰∏≠ÁöÑÂêÑÁßçÈÄâÊã©„ÄÇ ÊàëÔºå‰ºöÊîæÁæäÔºå‰ΩÜÊòØÊàë‰∏çÊÉ≥‰∏ÄÁõ¥ÊîæÁæä„ÄÇÊàëÈúÄË¶ÅÂä™ÂäõÔºåÊàëÈúÄË¶Å‰∏äËøõÔºåÊàëÊÉ≥ËµöÈí±ÔºåÊàëÊÉ≥ÁªôÊàëÁà±ÁöÑ‰∫∫ÊúÄÂ•ΩÁöÑ„ÄÇ ÊâÄ‰ª•ÔºåÊàëÊÉ≥ÂÅöÁ®ãÂ∫èÂëò„ÄÇ Ëµ∞ÊàëÂÅöËøáÂæàÂ§ö‰∫ãÊÉÖÔºåÂæàÂ§öÊ≤°ÊúâÁõÆÊ†á„ÄÇÂèØÂÅöÁ®ãÂ∫èÂëòÔºåÊ≤°ÊúâÁõÆÊ†áÊòØ‰∏çË°åÁöÑ„ÄÇÁé∞Âú®ÊòØ2018Âπ¥‰∫ÜÔºåÊàëÈù¢‰∏¥ÁùÄÈùûÂ∏∏Â∑®Â§ßÁöÑÁ´û‰∫âÂéãÂäõ„ÄÇËøô‰∏ÄÂπ¥ÔºåÊ≠£Â•ΩËµ∂‰∏ä‰∫Ü90ÂêéÁöÑÊú´Áè≠ÊΩÆÔºåÂÖ®ÂõΩÂ≠¶Ê†°ÈÉΩÂ∑≤ÁªèÊâ©ÂÆπÂÆåÊØïÔºåÊï∞‰∏çËÉúÊï∞ÁöÑÔºåÊØîÊàë‰ºòÁßÄÁöÑ211Ôºå985Â§ßÂ≠¶ÁîüÁ†îÁ©∂ÁîüÔºåÁñØÁãÇÁöÑÊå§ÂÖ•‰∫∫ÊâçÂ∏ÇÂú∫„ÄÇÂèØÊòØÔºå‰ªäÂπ¥ÁöÑ‰∫∫Êâç‰æõÊ±ÇÂç¥Ëøú‰∏çÂ¶ÇÂéªÂπ¥ÂâçÂπ¥„ÄÇÊàëÔºåËßâÂæóÊàëÂ§±‰∏ö‰∫Ü„ÄÇ Êàë‰∏çÁîòÂøÉÔºåÊàëÊäï‰∫ÜÂæàÂ§öÂæàÂ§öÈù¢ËØïÔºåÊúâÁöÑÈïøËæàÂØπÊàëÂ§ßÂêºÂ§ßÂè´ÔºåËØ¥ÊàëËøôÊ†∑ÊòØ‰∏çÂèØËÉΩÊâæÂà∞Â∑•‰ΩúÁöÑÔºåÊúâÁöÑÈïøËæàËøûÁúãÈÉΩ‰∏çÁúãÔºåÂè™ÊòØÂÜ∑Êº†ÁöÑËØ¥Â£∞‚Äú‰Ω†Ëµ∞Âêß‚Äù„ÄÇ ÊúõÂ∞Ω‰∏ñ‰øóÂ∏∏ÊÄÅÔºåÂîØÊúâÊèêÂçáËá™Â∑±ÊâçÊòØÊ†πÊú¨„ÄÇ ÊâÄ‰ª•ÊàëÊÉ≥Âä™ÂäõÔºåÊàëÊÉ≥Êàê‰∏∫ÊàëËá™Â∑±„ÄÇ Â≠¶‰π†ÁõÆÊ†áÂú®ËøôÈáåÊàëÂÆö‰∏ãÁõÆÊ†áÔºå‰∏âÂπ¥ÂÜÖÔºåÈúÄË¶ÅÂ≠¶‰ºöÊàñËÄÖÁ≤æÈÄö‰ª•‰∏ãÁü•ËØÜÔºö Êï∞ÊçÆÁªìÊûÑ ÈòüÂàó ÈõÜÂêà ÈìæË°®„ÄÅÊï∞ÁªÑ Â≠óÂÖ∏„ÄÅÂÖ≥ËÅîÊï∞ÁªÑ Ê†à Ê†ë ‰∫åÂèâÊ†ë ÂÆåÂÖ®‰∫åÂèâÊ†ë Âπ≥Ë°°‰∫åÂèâÊ†ë ‰∫åÂèâÊü•ÊâæÊ†ëÔºàBSTÔºâ BÔºåB+ÔºåB - [x]Ê†ë Á∫¢ÈªëÊ†ë LSM Ê†ë Â∏∏Áî®ÁÆóÊ≥ï ÊéíÂ∫è„ÄÅÊü•ÊâæÁÆóÊ≥ï ÈÄâÊã©ÊéíÂ∫è ÂÜíÊ≥°ÊéíÂ∫è ÊèíÂÖ•ÊéíÂ∫è Âø´ÈÄüÊéíÂ∫è ÂΩíÂπ∂ÊéíÂ∫è Ê°∂ÊéíÂ∫è ËÆ°Êï∞ÊéíÂ∫è Â∏åÂ∞îÊéíÂ∫è Âü∫Êï∞ÊéíÂ∫è ËÆ°Êï∞ÊéíÂ∫è ‰∫åÂàÜÊü•Êâæ ÂΩíÂπ∂ÊéíÂ∫è Java ‰∏≠ÁöÑÊéíÂ∫èÊï∞ÊçÆÁªìÊûÑÔºàarraylistÔºâ Â∏ÉÈöÜËøáÊª§Âô® Â≠óÁ¨¶‰∏≤ÊØîËæÉ KMP ÁÆóÊ≥ï Ê∑±Â∫¶‰ºòÂÖà„ÄÅÂπøÂ∫¶‰ºòÂÖà Ë¥™ÂøÉÁÆóÊ≥ï ÂõûÊ∫ØÁÆóÊ≥ï Ââ™ÊûùÁÆóÊ≥ï Âä®ÊÄÅËßÑÂàí Êú¥Á¥†Ë¥ùÂè∂ÊñØ ÊúÄÂ∞èÁîüÊàêÊ†ëÁÆóÊ≥ï ÊúÄÁü≠Ë∑ØÂæÑÁÆóÊ≥ï Âπ∂ÂèëÁºñÁ®ã Java Âπ∂Âèë Â§öÁ∫øÁ®ã Á∫øÁ®ãÂÆâÂÖ® ‰∏ÄËá¥ÊÄß„ÄÅ‰∫ãÂä° ACID ‰∫ãÂä°ÁöÑÈöîÁ¶ªÁ∫ßÂà´ MVCC ÈîÅ Java‰∏≠ÁöÑÈîÅÂíåÂêåÊ≠•Á±ª ÂÖ¨Âπ≥ÈîÅ &amp; ÈùûÂÖ¨Âπ≥ÈîÅ ÊÇ≤ËßÇÈîÅ ‰πêËßÇÈîÅ &amp; CAS ABA ÈóÆÈ¢ò CopyOnWriteÂÆπÂô® RingBuffer ÂèØÈáçÂÖ•ÈîÅ &amp; ‰∏çÂèØÈáçÂÖ•ÈîÅ ‰∫íÊñ•ÈîÅ &amp; ÂÖ±‰∫´ÈîÅ Ê≠ªÈîÅ Êìç‰ΩúÁ≥ªÁªü ËÆ°ÁÆóÊú∫ÂéüÁêÜ CPU ÂÜÖÂ≠ò ËøõÁ®ãÁ∫øÁ®ãÂçèÁ®ã Linux ËÆæËÆ°Ê®°Âºè 23ÁßçÂ∏∏ËßÅËÆæËÆ°Ê®°Âºè MVC IOC AOP ËÆæËÆ°Ê®°ÂºèÁöÑÂÖ≠Â§ßÂéüÂàô ÂæÆÊúçÂä°ÊÄùÊÉ≥ Â∫∑Â®ÅÂÆöÂæã ËøêÁª¥ Â∏∏ËßÑÁõëÊéß APM ÁªüËÆ°ÂàÜÊûê ÊåÅÁª≠ÈõÜÊàê(CI/CD) ÁéØÂ¢ÉÂàÜÁ¶ª Jenkins Ëá™Âä®ÂåñËøêÁª¥ ËøêÁª¥ ; ÁªüËÆ° ; ÊäÄÊúØÊîØÊåÅ Jenkins ÁéØÂ¢ÉÂàÜÁ¶ª Ëá™Âä®ÂåñËøêÁª¥ Ansible puppet chef ÊµãËØï TDD ÁêÜËÆ∫ ÂçïÂÖÉÊµãËØï ÂéãÂäõÊµãËØï ÂÖ®ÈìæË∑ØÂéãÊµã A/B „ÄÅÁÅ∞Â∫¶„ÄÅËìùÁªøÊµãËØï ËôöÊãüÂåñ KVM Xen OpenVZ ÂÆπÂô®ÊäÄÊúØ Docker ‰∫ëÊäÄÊúØ OpenStack DevOps ÊñáÊ°£ÁÆ°ÁêÜ ‰∏≠Èó¥‰ª∂ Web Server Nginx OpenResty Tengine Apache Httpd Tomcat Êû∂ÊûÑÂéüÁêÜ Ë∞É‰ºòÊñπÊ°à Jetty ÁºìÂ≠ò Êú¨Âú∞ÁºìÂ≠ò ÂÆ¢Êà∑Á´ØÁºìÂ≠ò ÊúçÂä°Á´ØÁºìÂ≠ò WebÁºìÂ≠ò Memcached Redis Êû∂ÊûÑ ÂõûÊî∂Á≠ñÁï• Tair Ê∂àÊÅØÈòüÂàó Ê∂àÊÅØÊÄªÁ∫ø Ê∂àÊÅØÁöÑÈ°∫Â∫è RabbitMQ RocketMQ ActiveMQ Kafka Redis Ê∂àÊÅØÊé®ÈÄÅ ZeroMQ ÂÆöÊó∂Ë∞ÉÂ∫¶ ÂçïÊú∫ÂÆöÊó∂Ë∞ÉÂ∫¶ ÂàÜÂ∏ÉÂºèÂÆöÊó∂Ë∞ÉÂ∫¶ RPC Dubbo Thrift gRPC Êï∞ÊçÆÂ∫ì‰∏≠Èó¥‰ª∂ Sharding Jdbc Êó•ÂøóÁ≥ªÁªü Êó•ÂøóÊêúÈõÜ ÈÖçÁΩÆ‰∏≠ÂøÉ API ÁΩëÂÖ≥ ÁΩëÁªú ÂçèËÆÆ OSI ‰∏ÉÂ±ÇÂçèËÆÆ TCP/IP HTTP HTTP2.0 HTTPS ÁΩëÁªúÊ®°Âûã Epoll Java NIO kqueue ËøûÊé•ÂíåÁü≠ËøûÊé• Ê°ÜÊû∂ Èõ∂Êã∑Ë¥ùÔºàZero-copyÔºâ Â∫èÂàóÂåñ(‰∫åËøõÂà∂ÂçèËÆÆ) Hessian Protobuf Êï∞ÊçÆÂ∫ì Âü∫Á°ÄÁêÜËÆ∫ Êï∞ÊçÆÂ∫ìËÆæËÆ°ÁöÑ‰∏âÂ§ßËåÉÂºè MySQL ÂéüÁêÜ InnoDB ‰ºòÂåñ Á¥¢Âºï ËÅöÈõÜÁ¥¢Âºï, ÈùûËÅöÈõÜÁ¥¢Âºï Â§çÂêàÁ¥¢Âºï Ëá™ÈÄÇÂ∫îÂìàÂ∏åÁ¥¢Âºï(AHI) explain NoSQL MongoDB Hbase ÊêúÁ¥¢ÂºïÊìé ÊêúÁ¥¢ÂºïÊìéÂéüÁêÜ Lucene Elasticsearch Solr sphinx ÊÄßËÉΩ ÊÄßËÉΩ‰ºòÂåñÊñπÊ≥ïËÆ∫ ÂÆπÈáèËØÑ‰º∞ CDN ÁΩëÁªú ËøûÊé•Ê±† ÊÄßËÉΩË∞É‰ºò Â§ßÊï∞ÊçÆ ÊµÅÂºèËÆ°ÁÆó Storm Flink Kafka Stream Â∫îÁî®Âú∫ÊôØ Hadoop HDFS MapReduce Yarn Spark ÂÆâÂÖ® web ÂÆâÂÖ® XSS CSRF SQL Ê≥®ÂÖ• Hash Dos ËÑöÊú¨Ê≥®ÂÖ• ÊºèÊ¥ûÊâ´ÊèèÂ∑•ÂÖ∑ È™åËØÅÁ†Å DDoS Èò≤ËåÉ Áî®Êà∑ÈöêÁßÅ‰ø°ÊÅØ‰øùÊä§ Â∫èÂàóÂåñÊºèÊ¥û Âä†ÂØÜËß£ÂØÜ ÂØπÁß∞Âä†ÂØÜ ÂìàÂ∏åÁÆóÊ≥ï ÈùûÂØπÁß∞Âä†ÂØÜ ÊúçÂä°Âô®ÂÆâÂÖ® Êï∞ÊçÆÂÆâÂÖ® Êï∞ÊçÆÂ§á‰ªΩ ÁΩëÁªúÈöîÁ¶ª ÂÜÖÂ§ñÁΩëÂàÜÁ¶ª ÁôªÂΩïË∑≥ÊùøÊú∫ ÊéàÊùÉ„ÄÅËÆ§ËØÅ RBAC OAuth2.0 ÂèåÂõ†Á¥†ËÆ§ËØÅÔºà2FAÔºâ ÂçïÁÇπÁôªÂΩï(SSO) Â∏∏Áî®ÂºÄÊ∫êÊ°ÜÊû∂ ÂºÄÊ∫êÂçèËÆÆ Êó•ÂøóÊ°ÜÊû∂ Log4j„ÄÅLog4j2 Logback ORM ÁΩëÁªúÊ°ÜÊû∂ Web Ê°ÜÊû∂ Spring ÂÆ∂Êóè Â∑•ÂÖ∑Ê°ÜÊû∂ ÂàÜÂ∏ÉÂºèËÆæËÆ° Êâ©Â±ïÊÄßËÆæËÆ° Á®≥ÂÆöÊÄß &amp; È´òÂèØÁî® Á°¨‰ª∂Ë¥üËΩΩÂùáË°° ËΩØ‰ª∂Ë¥üËΩΩÂùáË°° ÈôêÊµÅ Â∫îÁî®Â±ÇÂÆπÁÅæ Ë∑®Êú∫ÊàøÂÆπÁÅæ ÂÆπÁÅæÊºîÁªÉÊµÅÁ®ã Âπ≥ÊªëÂêØÂä® Êï∞ÊçÆÂ∫ìÊâ©Â±ï ËØªÂÜôÂàÜÁ¶ªÊ®°Âºè ÂàÜÁâáÊ®°Âºè ÊúçÂä°Ê≤ªÁêÜ ÊúçÂä°Ê≥®ÂÜå‰∏éÂèëÁé∞ ÊúçÂä°Ë∑ØÁî±ÊéßÂà∂ ÂàÜÂ∏ÉÂºè‰∏ÄËá¥ CAP ‰∏é BASE ÁêÜËÆ∫ ÂàÜÂ∏ÉÂºèÈîÅ ÂàÜÂ∏ÉÂºè‰∏ÄËá¥ÊÄßÁÆóÊ≥ï PAXOS Zab Raft Gossip ‰∏§Èò∂ÊÆµÊèê‰∫§„ÄÅÂ§öÈò∂ÊÆµÊèê‰∫§ ÂπÇÁ≠â ÂàÜÂ∏ÉÂºè‰∏ÄËá¥ÊñπÊ°à ÂàÜÂ∏ÉÂºè Leader ËäÇÁÇπÈÄâ‰∏æ TCC(Try/Confirm/Cancel) ÊüîÊÄß‰∫ãÂä° ÂàÜÂ∏ÉÂºèÊñá‰ª∂Á≥ªÁªü ÂîØ‰∏ÄID ÁîüÊàê ÂÖ®Â±ÄÂîØ‰∏ÄID ‰∏ÄËá¥ÊÄßHashÁÆóÊ≥ï ËÆæËÆ°ÊÄùÊÉ≥ &amp; ÂºÄÂèëÊ®°Âºè DDD(Domain-driven Design - È¢ÜÂüüÈ©±Âä®ËÆæËÆ°) ÂëΩ‰ª§Êü•ËØ¢ËÅåË¥£ÂàÜÁ¶ª(CQRS) Ë¥´Ë°ÄÔºåÂÖÖË°ÄÊ®°Âûã Actor Ê®°Âºè ÂìçÂ∫îÂºèÁºñÁ®ã Reactor RxJava Vert.x DODAF2.0 Serverless Service Mesh È°πÁõÆÁÆ°ÁêÜ Êû∂ÊûÑËØÑÂÆ° ÈáçÊûÑ ‰ª£Á†ÅËßÑËåÉ ‰ª£Á†Å Review RUP ÁúãÊùøÁÆ°ÁêÜ SCRUM ÊïèÊç∑ÂºÄÂèë ÊûÅÈôêÁºñÁ®ãÔºàXPÔºâ ÁªìÂØπÁºñÁ®ã PDCA Âæ™ÁéØË¥®ÈáèÁÆ°ÁêÜ FMEAÁÆ°ÁêÜÊ®°Âºè ÈÄöÁî®‰∏öÂä°ÊúØËØ≠ ÊäÄÊúØË∂ãÂäø ÊîøÁ≠ñ„ÄÅÊ≥ïËßÑ Ê≥ïÂæã ‰∏•Ê†ºÈÅµÂÆàÂàëÊ≥ï253Ê≥ïÊù° Êû∂ÊûÑÂ∏àÁ¥†Ë¥® Âõ¢ÈòüÁÆ°ÁêÜ ÊãõËÅòÁªìÊùüÊúâÁõÆÊ†áÔºåÂ∞±ÊúâÂä®Âäõ„ÄÇÊú™Êù•ÔºåÊàëÊúüÊúõÁùÄ‰Ω†ÔºÅ]]></content>
      <tags>
        <tag>ÁîüÊ¥ª</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ∫Â¶Ç‰ΩïÂú®ËÆ∫Êñá‰∏≠‰ºòÁæéÁöÑÈªèË¥¥‰ª£Á†Å]]></title>
    <url>%2F2018%2F10%2F27%2F%E8%AE%BA%E5%A6%82%E4%BD%95%E5%9C%A8%E8%AE%BA%E6%96%87%E4%B8%AD%E4%BC%98%E7%BE%8E%E7%9A%84%E9%BB%8F%E8%B4%B4%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[ÂèàÊòØ‰∏ÄÂπ¥ËÆ∫ÊñáÂ≠£ÔºåÂ≠¶ÁîüÂÖöË°®Á§∫È∏≠Ê¢®Â±±Â§ß„ÄÇ Ëøô‰∏çÔºåÂ§çÂà∂Á≤òË¥¥‰∏Ä‰∏™È°πÁõÆÈáåÁöÑ‰ª£Á†ÅÔºåÊêûÂæóÊï¥‰∏™ÁªìÊûÑ‰π±‰∏ÉÂÖ´Á≥üÁöÑÔºÅËøôËØ•Â¶Ç‰ΩïÊòØÂ•ΩÂë¢Ôºü ‰ªäÂ§©ÔºåÊàëÊù•ÂàÜ‰∫´‰∏Ä‰∏™ÁΩëÁ´ôÔºåÂèØ‰ª•‰ºòÈõÖÁöÑÂ∞ÜÊàëÁöÑ‰ª£Á†ÅÂ§çÂà∂Âà∞WORD‰∏ä~ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ Â∑•ÂÖ∑ÊñπÊ≥ï1ÔºöÊâìÂºÄËøô‰∏™ÁΩëÈ°µPlanetB ÊñπÊ≥ï2ÔºöË∞∑Ê≠åÊêúÁ¥¢syntax highlight code in word documentsÔºåÊ£ÄÁ¥¢ÁªìÊûúÁöÑÁ¨¨‰∏Ä‰∏™„ÄÇÂΩìÁÑ∂‰∫ÜÔºåËøô‰∏§‰∏™ÊñπÊ≥ïËøîÂõûÁöÑÊòØÂêå‰∏Ä‰∏™ÁΩëÁ´ô„ÄÇ Ê≠•È™§ Â∞Ü‰Ω†ÈúÄË¶ÅÊèíÂÖ•Âú®word‰∏≠ÁöÑ‰ª£Á†ÅÂÆåÊï¥ÁöÑÂ§çÂà∂Âà∞ËØ•ÁΩëÁ´ôÊèêÁ§∫ÁöÑÊñáÊú¨Ê°ÜÂÜÖÔºåÈÄâÊã©‰Ω†ÁöÑ‰ª£Á†ÅÁ±ªÂûãÔºåÂ¶ÇJava,C++,HTMLÁ≠âÔºåÂπ∂ÁÇπÂáªShow Highlighted„ÄÇÂ¶Ç‰∏ãÂõæÔºö ËØ•ÁΩëÈ°µ‰ºöËá™Âä®Â∞ÜËØ•‰ª£Á†ÅÁîüÊàêÂà∞‰∏Ä‰∏™Êñ∞ÁöÑÈ°µÈù¢ÔºåÊ≠§Êó∂ctrl+AÂÖ®ÈÄâÔºåÂêéctrl+cÂ§çÂà∂Âà∞word‰∏≠Á≤òË¥¥Â∞±Â•Ω„ÄÇÂ¶Ç‰∏ãÂõæÔºö ÊÄªÁªìÊÄé‰πàÊ†∑ÔºåÊòØ‰∏çÊòØÊïàÊûúÂæàÂ•ΩÔºüÂêÑ‰ΩçÁúãËßÇËÄÅÁà∑ÔºåÂñúÊ¨¢Â∞±ÁÇπ‰∏™ËµûÂêßÔºÅ]]></content>
      <tags>
        <tag>Á™çÈó®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∏áÁâ©Âü∫‰∫éSpringÔºà‰∏ÄÔºâ]]></title>
    <url>%2F2018%2F10%2F07%2F%E4%B8%87%E7%89%A9%E5%9F%BA%E4%BA%8ESpring%2F</url>
    <content type="text"><![CDATA[ÂâçÈù¢ÊñáÁ´†ÊèêÂà∞‰∫ÜÔºåSpringbootÊòØÂü∫‰∫éspring‰∏∫Âü∫Á°ÄÊâ©Â±ïÂá∫Êù•ÁöÑ‰∏Ä‰∏™Âø´ÈÄíÊ°ÜÊû∂„ÄÇÊ∑±ÂÖ•ÁêÜËß£springbootÂ∞±ÈúÄË¶ÅÁêÜËß£springÁöÑÁõ∏ÂÖ≥ÂéüÁêÜ„ÄÇÊâÄ‰ª•Êàë‰ª¨Â∞±ÂºÄÂßãÂêßÔºÅ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢https://blog.tengshe789.tech/Ôºàüòò SpringÁöÑÊ¶ÇËø∞SpringÊòØ‰∏Ä‰∏™ÂºÄÊ∫êÁöÑËΩªÈáèÁ∫ßJavaSEÔºàJavaÊ†áÂáÜÁâàÊú¨Ôºâ/ JavaEEÔºàJava‰ºÅ‰∏öÁâàÊú¨ÔºâÂºÄÂèëÂ∫îÁî®Ê°ÜÊû∂ÔºåÂÖ∂ÁõÆÁöÑÊòØÁî®‰∫éÁÆÄÂåñ‰ºÅ‰∏öÁ∫ßÂ∫îÁî®Á®ãÂ∫èÂºÄÂèë„ÄÇ Â∫îÁî®Á®ãÂ∫èÊòØÁî±‰∏ÄÁªÑÁõ∏‰∫íÂçè‰ΩúÁöÑÂØπË±°ÁªÑÊàê„ÄÇËÄåÂú®‰º†ÁªüÂ∫îÁî®Á®ãÂ∫èÂºÄÂèë‰∏≠Ôºå‰∏Ä‰∏™ÂÆåÊï¥ÁöÑÂ∫îÁî®ÊòØÁî±‰∏ÄÁªÑÁõ∏‰∫íÂçè‰ΩúÁöÑÂØπË±°ÁªÑÊàê„ÄÇÊâÄ‰ª•ÂºÄÂèë‰∏Ä‰∏™Â∫îÁî®Èô§‰∫ÜË¶ÅÂºÄÂèë‰∏öÂä°ÈÄªËæë‰πãÂ§ñÔºåÊúÄÂ§öÁöÑÊòØÂÖ≥Ê≥®Â¶Ç‰Ωï‰ΩøËøô‰∫õÂØπË±°Âçè‰ΩúÊù•ÂÆåÊàêÊâÄÈúÄÂäüËÉΩÔºåËÄå‰∏îË¶Å‰ΩéËÄ¶Âêà„ÄÅÈ´òÂÜÖËÅö„ÄÇ ‰∏öÂä°ÈÄªËæëÂºÄÂèëÊòØ‰∏çÂèØÈÅøÂÖçÁöÑÔºåÈÇ£Â¶ÇÊûúÊúâ‰∏™Ê°ÜÊû∂Âá∫Êù•Â∏ÆÊàë‰ª¨Êù•ÂàõÂª∫ÂØπË±°ÂèäÁÆ°ÁêÜËøô‰∫õÂØπË±°‰πãÈó¥ÁöÑ‰æùËµñÂÖ≥Á≥ª„ÄÇÂèØËÉΩÊúâ‰∫∫ËØ¥‰∫ÜÔºåÊØîÂ¶Ç‚ÄúÊäΩË±°Â∑•ÂéÇ„ÄÅÂ∑•ÂéÇÊñπÊ≥ïËÆæËÆ°Ê®°Âºè‚Äù‰∏ç‰πüÂèØ‰ª•Â∏ÆÊàë‰ª¨ÂàõÂª∫ÂØπË±°Ôºå‚ÄúÁîüÊàêÂô®Ê®°Âºè‚ÄùÂ∏ÆÊàë‰ª¨Â§ÑÁêÜÂØπË±°Èó¥ÁöÑ‰æùËµñÂÖ≥Á≥ªÔºå‰∏ç‰πüËÉΩÂÆåÊàêËøô‰∫õÂäüËÉΩÂêóÔºüÂèØÊòØËøô‰∫õÂèàÈúÄË¶ÅÊàë‰ª¨ÂàõÂª∫Âè¶‰∏Ä‰∫õÂ∑•ÂéÇÁ±ª„ÄÅÁîüÊàêÂô®Á±ªÔºåÊàë‰ª¨ÂèàË¶ÅËÄåÂ§ñÁÆ°ÁêÜËøô‰∫õÁ±ªÔºåÂ¢ûÂä†‰∫ÜÊàë‰ª¨ÁöÑË¥üÊãÖÔºåÂ¶ÇÊûúËÉΩÊúâÁßçÈÄöËøáÈÖçÁΩÆÊñπÂºèÊù•ÂàõÂª∫ÂØπË±°ÔºåÁÆ°ÁêÜÂØπË±°‰πãÈó¥‰æùËµñÂÖ≥Á≥ªÔºåÊàë‰ª¨‰∏çÈúÄË¶ÅÈÄöËøáÂ∑•ÂéÇÂíåÁîüÊàêÂô®Êù•ÂàõÂª∫ÂèäÁÆ°ÁêÜÂØπË±°‰πãÈó¥ÁöÑ‰æùËµñÂÖ≥Á≥ªÔºåËøôÊ†∑Êàë‰ª¨ÊòØ‰∏çÊòØÂáèÂ∞ë‰∫ÜËÆ∏Â§öÂ∑•‰ΩúÔºåÂä†ÈÄü‰∫ÜÂºÄÂèëÔºåËÉΩËäÇÁúÅÂá∫ÂæàÂ§öÊó∂Èó¥Êù•Âπ≤ÂÖ∂‰ªñ‰∫ã„ÄÇ SpringÊ°ÜÊû∂ÂàöÂá∫Êù•Êó∂‰∏ªË¶ÅÂ∞±ÊòØÊù•ÂÆåÊàêËøô‰∏™ÂäüËÉΩ„ÄÇ SpringÊ°ÜÊû∂Èô§‰∫ÜÂ∏ÆÊàë‰ª¨ÁÆ°ÁêÜÂØπË±°ÂèäÂÖ∂‰æùËµñÂÖ≥Á≥ªÔºåËøòÊèê‰æõÂÉèÈÄöÁî®Êó•ÂøóËÆ∞ÂΩï„ÄÅÊÄßËÉΩÁªüËÆ°„ÄÅÂÆâÂÖ®ÊéßÂà∂„ÄÅÂºÇÂ∏∏Â§ÑÁêÜÁ≠âÈù¢ÂêëÂàáÈù¢ÁöÑËÉΩÂäõÔºåËøòËÉΩÂ∏ÆÊàë‰ª¨ÁÆ°ÁêÜÊúÄÂ§¥ÁñºÁöÑÊï∞ÊçÆÂ∫ì‰∫ãÂä°ÔºåÊú¨Ë∫´Êèê‰æõ‰∫Ü‰∏ÄÂ•óÁÆÄÂçïÁöÑJDBCËÆøÈóÆÂÆûÁé∞ÔºåÊèê‰æõ‰∏éÁ¨¨‰∏âÊñπÊï∞ÊçÆËÆøÈóÆÊ°ÜÊû∂ÈõÜÊàêÔºåÂ¶ÇJPAÔºàÈªòËÆ§‰ΩøÁî®HibernateÔºâÔºå‰∏éÂêÑÁßçJavaEEÊäÄÊúØÊï¥ÂêàÔºàÂ¶ÇJavaMail„ÄÅ‰ªªÂä°Ë∞ÉÂ∫¶Á≠âÁ≠âÔºâÔºåÊèê‰æõ‰∏ÄÂ•óËá™Â∑±ÁöÑwebÂ±ÇÊ°ÜÊû∂SpringMVC„ÄÅWebflexÔºåËÄå‰∏îËøòËÉΩÈùûÂ∏∏ÁÆÄÂçïÁöÑ‰∏éÁ¨¨‰∏âÊñπWebÊ°ÜÊû∂ÈõÜÊàê„ÄÇ ‰ªéËøôÈáåÂèØ‰ª•ËÆ§‰∏∫SpringÊòØ‰∏Ä‰∏™Ë∂ÖÁ∫ßÁ≤òÂêàÂπ≥Âè∞ÔºåÈô§‰∫ÜËá™Â∑±Êèê‰æõÂäüËÉΩÂ§ñÔºåËøòÊèê‰æõÁ≤òÂêàÂÖ∂‰ªñÊäÄÊúØÂíåÊ°ÜÊû∂ÁöÑËÉΩÂäõÔºå‰ªéËÄå‰ΩøÊàë‰ª¨ÂèØ‰ª•Êõ¥Ëá™Áî±ÁöÑÈÄâÊã©Âà∞Â∫ï‰ΩøÁî®‰ªÄ‰πàÊäÄÊúØËøõË°åÂºÄÂèë„ÄÇËÄå‰∏î‰∏çÁÆ°ÊòØJAVASEÔºàC/SÊû∂ÊûÑÔºâÂ∫îÁî®Á®ãÂ∫èËøòÊòØJAVAEEÔºàB/SÊû∂ÊûÑÔºâÂ∫îÁî®Á®ãÂ∫èÈÉΩÂèØ‰ª•‰ΩøÁî®Ëøô‰∏™Âπ≥Âè∞ËøõË°åÂºÄÂèë„ÄÇËÆ©Êàë‰ª¨Êù•Ê∑±ÂÖ•Áúã‰∏Ä‰∏ãSpringÂà∞Â∫ïËÉΩÂ∏ÆÊàë‰ª¨ÂÅö‰∫õ‰ªÄ‰πàÔºü ÂéÜÂè≤ÁöÑÂºÄÂßã1996ÔºåJavaËøòÂè™ÊòØ‰∏Ä‰∏™Êñ∞ÂÖ¥ÁöÑ„ÄÅÂàùÂá∫ËåÖÂ∫êÁöÑÁºñÁ®ãËØ≠Ë®Ä„ÄÇ‰∫∫‰ª¨‰πãÊâÄ‰ª•ÂÖ≥Ê≥®Â•π‰ªÖ‰ªÖÊòØÂõ†‰∏∫ÔºåÂèØ‰ª•‰ΩøÁî®JavaÁöÑAppletÊù•ÂºÄÂèëWebÂ∫îÁî®„ÄÇ‰ΩÜËøô‰∫õÂºÄÂèëËÄÖÂæàÂø´Â∞±ÂèëÁé∞Ëøô‰∏™Êñ∞ÂÖ¥ÁöÑËØ≠Ë®ÄËøòËÉΩÂÅöÊõ¥Â§öÁöÑ‰∫ãÊÉÖ„ÄÇ‰∏é‰πãÂâçÁöÑÊâÄÊúâËØ≠Ë®Ä‰∏çÂêåÔºåJavaËÆ©Ê®°ÂùóÂåñÊûÑÂª∫Â§çÊùÇÁöÑÁ≥ªÁªüÊàê‰∏∫ÂèØËÉΩÔºàÂΩìÊó∂ÁöÑËΩØ‰ª∂Ë°å‰∏öËôΩÁÑ∂Âú®‰∏öÂä°‰∏äÁ™ÅÈ£ûÁåõËøõÔºå‰ΩÜÂΩìÊó∂ÂºÄÂèëÁî®ÁöÑÊòØ‰º†ÁªüÁöÑÈù¢ÂêëËøáÁ®ãÂºÄÂèëÊÄùÊÉ≥ÔºåËΩØ‰ª∂ÁöÑÂºÄÂèëÊïàÁéá‰∏ÄÁõ¥Ë∏üËπ∞‰∏çÂâç„ÄÇ‰º¥ÈöèÁùÄ‰∏öÂä°Â§çÊùÇÊÄßÁöÑ‰∏çÊñ≠Âä†Ê∑±ÔºåÂºÄÂèë‰πüÂèòÂæóË∂äÂèëÂõ∞Èöæ„ÄÇÂÖ∂ÂÆûÔºåÂΩìÊó∂‰πüÊòØÈù¢ÂêëÂØπË±°ÊÄùÊÉ≥È£ûÈÄüÂèëÂ±ïÁöÑÊó∂ÊúüÔºåÂ•πÂú®80Âπ¥‰ª£Êú´Ë¢´ÊèêÂá∫ÔºåÊàêÁÜü‰∫é90Âπ¥‰ª£ÔºåÁé∞‰ªäÂ§ßÂ§öÊï∞ÁºñÁ®ãËØ≠Ë®ÄÈÉΩÊòØÈù¢ÂêëÂØπË±°ÁöÑÔºåÂΩìÁÑ∂ËøôÊòØÂêéËØù‰∫ÜÔºâ„ÄÇ‰ªñ‰ª¨‰∏∫AppletËÄåÊù•Ôºå‰∏∫ÁªÑ‰ª∂ÂåñËÄåÁïô„ÄÇËøô‰æøÊòØÊúÄÊó©ÁöÑJava„ÄÇ ÂêåÊ†∑Âú®Ëøô‰∏ÄÂπ¥ÁöÑ12ÊúàÔºåSunÂÖ¨Âè∏ÂèëÂ∏É‰∫ÜÂΩìÊó∂ËøòÂêç‰∏çËßÅÁªè‰º†‰ΩÜÂêéÊù•‰∫∫Â∞ΩÁöÜÁü•ÁöÑJavaBean1.00-AËßÑËåÉ„ÄÇÊó©ÊúüÁöÑJavaBeanËßÑËåÉÈíàÂØπ‰∫éJavaÔºåÂ•πÂÆö‰πâ‰∫ÜËΩØ‰ª∂ÁªÑ‰ª∂Ê®°Âûã„ÄÇËøô‰∏™ËßÑËåÉËßÑÂÆö‰∫Ü‰∏ÄÊï¥Â•óÁºñÁ†ÅÁ≠ñÁï•Ôºå‰ΩøÁÆÄÂçïÁöÑJavaÂØπË±°‰∏ç‰ªÖÂèØ‰ª•Ë¢´ÈáçÁî®ÔºåËÄå‰∏îËøòÂèØ‰ª•ËΩªÊùæÂú∞ÊûÑÂª∫Êõ¥‰∏∫Â§çÊùÇÁöÑÂ∫îÁî®„ÄÇÂ∞ΩÁÆ°JavaBeanÊúÄÂàùÊòØ‰∏∫ÈáçÁî®Â∫îÁî®ÁªÑ‰ª∂ËÄåËÆæËÆ°ÁöÑÔºå‰ΩÜÂΩìÊó∂‰ªñ‰ª¨Âç¥ÊòØ‰∏ªË¶ÅÁî®‰ΩúÊûÑÂª∫Á™ó‰ΩìÊéß‰ª∂ÔºåÊØïÁ´üÂú®PCÊó∂‰ª£ÈÇ£ÊâçÊòØ‰∏ªÊµÅ„ÄÇ‰ΩÜÁõ∏ÊØî‰∫éÂΩìÊó∂Ê≠£Â¶ÇÊó•‰∏≠Â§©ÁöÑDelphi„ÄÅVBÂíåC++Ôºå‰ªñÁúãËµ∑Êù•ËøòÊòØÂ§™ÁÆÄÊòì‰∫ÜÔºå‰ª•Ëá≥‰∫éÊó†Ê≥ïËÉú‰ªª‰ªª‰Ωï‚ÄùÂÆûÈôÖÁöÑ‚ÄùÂ∑•‰Ωú„ÄÇ Â§çÊùÇÁöÑÂ∫îÁî®ÈÄöÂ∏∏ÈúÄË¶ÅËØ∏Â¶Ç‰∫ãÁâ©„ÄÅÂÆâÂÖ®„ÄÅÂàÜÂ∏ÉÂºèÁ≠âÊúçÂä°ÁöÑÊîØÊåÅÔºå‰ΩÜJavaBeanÂπ∂Êú™Áõ¥Êé•Êèê‰æõ„ÄÇÊâÄ‰ª•Âà∞‰∫Ü1998Âπ¥3ÊúàÔºåSunÂèëÂ∏É‰∫ÜEJB1.0ËßÑËåÉÔºåËØ•ËßÑËåÉÊääJavaÁªÑ‰ª∂ÁöÑËÆæËÆ°ÁêÜÂøµÂª∂‰º∏Âà∞‰∫ÜÊúçÂä°Âô®Á´ØÔºåÂπ∂Êèê‰æõ‰∫ÜËÆ∏Â§öÂøÖÈ°ªÁöÑ‰ºÅ‰∏öÁ∫ßÊúçÂä°Ôºå‰ΩÜ‰ªñ‰πü‰∏çÂÜçÂÉèÊó©ÊúüÁöÑJavaBeanÈÇ£‰πàÁÆÄÂçï‰∫Ü„ÄÇÂÆûÈôÖ‰∏äÔºåÈô§‰∫ÜÂêçÂ≠óÔºåEJBBeanÂ∑≤ÁªèÂíåJavaBeanÊ≤°Êúâ‰ªª‰ΩïÂÖ≥Á≥ª‰∫Ü„ÄÇ Â∞ΩÁÆ°Áé∞ÂÆû‰∏≠ÊúâÂæàÂ§öÁ≥ªÁªüÊòØÂü∫‰∫éEJBÊûÑÂª∫ÁöÑÔºå‰ΩÜEJB‰ªéÊù•Ê≤°ÊúâÂÆûÁé∞ÂÆÉÊúÄÂàùÁöÑËÆæÊÉ≥ÔºöÁÆÄÂåñÂºÄÂèë„ÄÇEJBÁöÑÂ£∞ÊòéÂºèÁºñÁ®ãÊ®°ÂûãÁöÑÁ°ÆÁÆÄÂåñ‰∫ÜÂæàÂ§öÂü∫Á°ÄÊû∂ÊûÑÂ±ÇÈù¢ÁöÑÂºÄÂèëÔºå‰æãÂ¶Ç‰∫ãÂä°ÂíåÂÆâÂÖ®Ôºõ‰ΩÜÂè¶‰∏ÄÊñπÈù¢EJBÂú®ÈÉ®ÁΩ≤ÊèèËø∞Á¨¶ÂíåÈÖçÂ•ó‰ª£Á†ÅÂÆûÁé∞Á≠âÊñπÈù¢ÂèòÂæóÂºÇÂ∏∏Â§çÊùÇ„ÄÇÈöèÁùÄÊó∂Èó¥ÁöÑÊé®ÁßªÔºåÂæàÂ§öÂºÄÂèëËÄÖÂØπEJBÂ∑≤Áªè‰∏çÂÜçÊä±ÊúâÂπªÊÉ≥ÔºåÂºÄÂßãÂØªÊ±ÇÊõ¥ÁÆÄÊ¥ÅÁöÑÊñπÊ≥ï„ÄÇ Áé∞Âú®JavaÁªÑ‰ª∂ÂºÄÂèëÁêÜÂøµÈáçÊñ∞ÂõûÂΩíÊ≠£ËΩ®„ÄÇÊñ∞ÁöÑÁºñÁ®ãÊäÄÊúØAOPÂíåDIÁöÑ‰∏çÊñ≠Âá∫Áé∞Ôºå‰ªñ‰ª¨‰∏∫JavaBeanÊèê‰æõ‰∫Ü‰πãÂâçEJBÊâçËÉΩÊã•ÊúâÁöÑÂº∫Â§ßÂäüËÉΩ„ÄÇËøô‰∫õÊäÄÊúØ‰∏∫POJOÊèê‰æõ‰∫ÜÁ±ª‰ººEJBÁöÑÂ£∞ÊòéÂºèÁºñÁ®ãÊ®°ÂûãÔºåËÄåÊ≤°ÊúâÂºïÂÖ•‰ªª‰ΩïEJBÁöÑÂ§çÊùÇÊÄß„ÄÇÂΩìÁÆÄÂçïÁöÑJavaBeanË∂≥‰ª•ËÉú‰ªªÊó∂Ôºå‰∫∫‰ª¨‰æø‰∏çÊÑøÁºñÂÜôÁ¨®ÈáçÁöÑEJBÁªÑ‰ª∂‰∫Ü„ÄÇ ÂÆ¢ËßÇÂú∞ËÆ≤ÔºåEJBÁöÑÂèëÂ±ïÁîöËá≥‰øÉËøõ‰∫ÜÂü∫‰∫éPOJOÁöÑÁºñÁ®ãÊ®°Âûã„ÄÇÂºïÂÖ•Êñ∞ÁöÑÁêÜÂøµÔºåÊúÄÊñ∞ÁöÑEJBËßÑËåÉÁõ∏ÊØî‰πãÂâçÁöÑËßÑËåÉÊúâ‰∫ÜÂâçÊâÄÊú™ÊúâÁöÑÁÆÄÂåñÔºå‰ΩÜÂØπÂæàÂ§öÂºÄÂèëËÄÖËÄåË®ÄÔºåËøô‰∏ÄÂàáÁöÑ‰∏ÄÂàáÈÉΩÊù•ÂæóÂ§™Ëøü‰∫Ü„ÄÇÂà∞‰∫ÜEJB3ËßÑËåÉÂèëÂ∏ÉÊó∂ÔºåÂÖ∂‰ªñÂü∫‰∫éPOJOÁöÑÂºÄÂèëÊû∂ÊûÑÂ∑≤ÁªèÊàê‰∏∫‰∫ãÂÆûÁöÑÊ†áÂáÜ‰∫ÜÔºåËÄåSpringÊ°ÜÊû∂‰πüÊòØÂú®ËøôÊ†∑ÁöÑÂ§ßÁéØÂ¢É‰∏ãÂá∫Áé∞ÁöÑ„ÄÇ SpringËÆæËÆ°ÁöÑÂàùË°∑SpringÊòØ‰∏∫Ëß£ÂÜ≥‰ºÅ‰∏öÁ∫ßÂ∫îÁî®ÂºÄÂèëÁöÑÂ§çÊùÇÊÄßËÄåËÆæËÆ°ÔºåÂ•πÂèØ‰ª•ÂÅöÂæàÂ§ö‰∫ã„ÄÇ‰ΩÜÂΩíÊ†πÂà∞Â∫ïÊîØÊíëSpringÁöÑ‰ªÖ‰ªÖÊòØÂ∞ëËÆ∏ÁöÑÂü∫Êú¨ÁêÜÂøµÔºåËÄåÊâÄÊúâÂú∞Ëøô‰∫õÁöÑÂü∫Êú¨ÁêÜÂøµÈÉΩËÉΩÂèØ‰ª•ËøΩÊ∫ØÂà∞‰∏Ä‰∏™ÊúÄÊ†πÊú¨ÁöÑ‰ΩøÂëΩÔºöÁÆÄÂåñÂºÄÂèë„ÄÇËøôÊòØ‰∏Ä‰∏™ÈÉëÈáçÁöÑÊâøËØ∫ÔºåÂÖ∂ÂÆûËÆ∏Â§öÊ°ÜÊû∂ÈÉΩÂ£∞Áß∞Âú®Êüê‰∫õÊñπÈù¢ÂÅö‰∫ÜÁÆÄÂåñ„ÄÇ ËÄåSpringÂàôÁ´ãÂøó‰∫éÂÖ®ÊñπÈù¢ÁöÑÁÆÄÂåñJavaÂºÄÂèë„ÄÇÂØπÊ≠§ÔºåÂ•π‰∏ªË¶ÅÈááÂèñ‰∫Ü4‰∏™ÂÖ≥ÈîÆÁ≠ñÁï•Ôºö 1ÔºåÂü∫‰∫éPOJOÁöÑËΩªÈáèÁ∫ßÂíåÊúÄÂ∞è‰æµÂÖ•ÊÄßÁºñÁ®ãÔºõ 2ÔºåÈÄöËøá‰æùËµñÊ≥®ÂÖ•ÂíåÈù¢ÂêëÊé•Âè£ÊùæËÄ¶ÂêàÔºõ 3ÔºåÂü∫‰∫éÂàáÈù¢ËøõË°åÂ£∞ÊòéÂºèÁºñÁ®ãÔºõ 4ÔºåÈÄöËøáÂàáÈù¢ÂíåÊ®°ÊùøÂáèÂ∞ëÊ†∑ÊùøÂºè‰ª£Á†ÅÔºõ ËÄå‰ªñ‰∏ªË¶ÅÊòØÈÄöËøáÔºöÈù¢ÂêëBean„ÄÅ‰æùËµñÊ≥®ÂÖ•‰ª•ÂèäÈù¢ÂêëÂàáÈù¢Ëøô‰∏âÁßçÊñπÂºèÊù•ËææÊàêÁöÑ„ÄÇ BOPÁºñÁ®ã‰ºäÂßãSpringÊòØÈù¢ÂêëBeanÁöÑÁºñÁ®ãÔºàBeanOrientedProgramming,BOPÔºâÔºåBeanÂú®Spring‰∏≠ÊâçÊòØÁúüÊ≠£ÁöÑ‰∏ªËßí„ÄÇBeanÂú®Spring‰∏≠‰ΩúÁî®Â∞±ÂÉèObjectÂØπOOPÁöÑÊÑè‰πâ‰∏ÄÊ†∑ÔºåSpring‰∏≠Ê≤°ÊúâBean‰πüÂ∞±Ê≤°ÊúâSpringÂ≠òÂú®ÁöÑÊÑè‰πâ„ÄÇSpringÊèê‰æõ‰∫ÜIOCÂÆπÂô®ÈÄöËøáÈÖçÁΩÆÊñá‰ª∂ÊàñËÄÖÊ≥®Ëß£ÁöÑÊñπÂºèÊù•ÁÆ°ÁêÜÂØπË±°‰πãÈó¥ÁöÑ‰æùËµñÂÖ≥Á≥ª„ÄÇ ÊéßÂà∂ÂèçËΩ¨(ÂÖ∂‰∏≠ÊúÄÂ∏∏ËßÅÁöÑÊñπÂºèÂè´ÂÅö‰æùËµñÊ≥®ÂÖ•ÔºàDependencyInjectionÔºåDIÔºâÔºåËøòÊúâ‰∏ÄÁßçÊñπÂºèÂè´‚Äú‰æùËµñÊü•Êâæ‚ÄùÔºàDependencyLookupÔºåDLÔºâÔºåÂ•πÂú®C++„ÄÅJava„ÄÅPHP‰ª•Âèä.NET‰∏≠ÈÉΩËøêÁî®„ÄÇÂú®ÊúÄÊó©ÁöÑSpring‰∏≠ÊòØÂåÖÂê´Êúâ‰æùËµñÊ≥®ÂÖ•ÊñπÊ≥ïÂíå‰æùËµñÊü•ËØ¢ÁöÑÔºå‰ΩÜÂõ†‰∏∫‰æùËµñÊü•ËØ¢‰ΩøÁî®È¢ëÁéáËøá‰ΩéÔºå‰∏ç‰πÖÂ∞±Ë¢´SpringÁßªÈô§‰∫ÜÔºåÊâÄ‰ª•Âú®Spring‰∏≠ÊéßÂà∂ÂèçËΩ¨‰πüË¢´Áß∞‰Ωú‰æùËµñÊ≥®ÂÖ•)ÔºåÂ•πÁöÑÂü∫Êú¨Ê¶ÇÂøµÊòØÔºö‰∏çÂàõÂª∫ÂØπË±°Ôºå‰ΩÜÊòØÊèèËø∞ÂàõÂª∫ÂÆÉ‰ª¨ÁöÑÊñπÂºè„ÄÇÂú®‰ª£Á†Å‰∏≠‰∏çÁõ¥Êé•‰∏éÂØπË±°ÂíåÊúçÂä°ËøûÊé•Ôºå‰ΩÜÂú®ÈÖçÁΩÆÊñá‰ª∂‰∏≠ÊèèËø∞Âì™‰∏Ä‰∏™ÁªÑ‰ª∂ÈúÄË¶ÅÂì™‰∏ÄÈ°πÊúçÂä°„ÄÇÂÆπÂô®ÔºàÂú®SpringÊ°ÜÊû∂‰∏≠ÊòØIOCÂÆπÂô®ÔºâË¥üË¥£Â∞ÜËøô‰∫õËÅîÁ≥ªÂú®‰∏ÄËµ∑„ÄÇ Âú®ÂÖ∏ÂûãÁöÑIOCÂú∫ÊôØ‰∏≠ÔºåÂÆπÂô®ÂàõÂª∫‰∫ÜÊâÄÊúâÂØπË±°ÔºåÂπ∂ËÆæÁΩÆÂøÖË¶ÅÁöÑÂ±ûÊÄßÂ∞ÜÂÆÉ‰ª¨ËøûÊé•Âú®‰∏ÄËµ∑ÔºåÂÜ≥ÂÆö‰ªÄ‰πàÊó∂Èó¥Ë∞ÉÁî®ÊñπÊ≥ï„ÄÇ ‰æùËµñÊ≥®ÂÖ•DIÁöÑÂü∫Êú¨Ê¶ÇÂøµSpringËÆæËÆ°ÁöÑÊ†∏ÂøÉorg.springframework.beansÂåÖÔºàÊû∂ÊûÑÊ†∏ÂøÉÊòØorg.springframework.coreÂåÖÔºâÔºåÂÆÉÁöÑËÆæËÆ°ÁõÆÊ†áÊòØ‰∏éJavaBeanÁªÑ‰ª∂‰∏ÄËµ∑‰ΩøÁî®„ÄÇËøô‰∏™ÂåÖÈÄöÂ∏∏‰∏çÊòØÁî±Áî®Êà∑Áõ¥Êé•‰ΩøÁî®ÔºåËÄåÊòØÁî±ÊúçÂä°Âô®Â∞ÜÂÖ∂Áî®‰ΩúÂÖ∂‰ªñÂ§öÊï∞ÂäüËÉΩÁöÑÂ∫ïÂ±Ç‰∏≠‰ªã„ÄÇ‰∏ã‰∏Ä‰∏™ÊúÄÈ´òÁ∫ßÊäΩË±°ÊòØBeanFactoryÊé•Âè£ÔºåÂÆÉÊòØÂ∑•ÂéÇËÆæËÆ°Ê®°ÂºèÁöÑÂÆûÁé∞ÔºåÂÖÅËÆ∏ÈÄöËøáÂêçÁß∞ÂàõÂª∫ÂíåÊ£ÄÁ¥¢ÂØπË±°„ÄÇBeanFactory‰πüÂèØ‰ª•ÁÆ°ÁêÜÂØπË±°‰πãÈó¥ÁöÑÂÖ≥Á≥ª„ÄÇ BeanFactoryÊîØÊåÅ‰∏§‰∏™ÂØπË±°Ê®°Âûã„ÄÇ 1ÔºåÂçï‰æãÔºöÊ®°ÂûãÊèê‰æõ‰∫ÜÂÖ∑ÊúâÁâπÂÆöÂêçÁß∞ÁöÑÂØπË±°ÁöÑÂÖ±‰∫´ÂÆû‰æãÔºåÂèØ‰ª•Âú®Êü•ËØ¢Êó∂ÂØπÂÖ∂ËøõË°åÊ£ÄÁ¥¢„ÄÇSingletonÊòØÈªòËÆ§ÁöÑ‰πüÊòØÊúÄÂ∏∏Áî®ÁöÑÂØπË±°Ê®°Âûã„ÄÇÂØπ‰∫éÊó†Áä∂ÊÄÅÊúçÂä°ÂØπË±°ÂæàÁêÜÊÉ≥„ÄÇ 2ÔºåÂéüÂûãÔºöÊ®°ÂûãÁ°Æ‰øùÊØèÊ¨°Ê£ÄÁ¥¢ÈÉΩ‰ºöÂàõÂª∫ÂçïÁã¨ÁöÑÂØπË±°„ÄÇÂú®ÊØè‰∏™Áî®Êà∑ÈÉΩÈúÄË¶ÅËá™Â∑±ÁöÑÂØπË±°Êó∂ÔºåÂéüÂûãÊ®°ÂûãÊúÄÈÄÇÂêà„ÄÇ BeanÂ∑•ÂéÇÁöÑÊ¶ÇÂøµÊòØSpring‰Ωú‰∏∫IOCÂÆπÂô®ÁöÑÂü∫Á°Ä„ÄÇIOCÂàôÂ∞ÜÂ§ÑÁêÜ‰∫ãÊÉÖÁöÑË¥£‰ªª‰ªéÂ∫îÁî®Á®ãÂ∫è‰ª£Á†ÅËΩ¨ÁßªÂà∞Ê°ÜÊû∂„ÄÇ AOPÁºñÁ®ãÁêÜÂøµÈù¢ÂêëÂàáÈù¢ÁºñÁ®ãÔºåÂç≥AOPÔºåÊòØ‰∏ÄÁßçÁºñÁ®ãÊÄùÊÉ≥ÔºåÂÆÉÂÖÅËÆ∏Á®ãÂ∫èÂëòÂØπÊ®™ÂàáÂÖ≥Ê≥®ÁÇπÊàñÊ®™ÂàáÂÖ∏ÂûãÁöÑËÅåË¥£ÂàÜÁïåÁ∫øÁöÑË°å‰∏∫Ôºà‰æãÂ¶ÇÊó•ÂøóÂíå‰∫ãÂä°ÁÆ°ÁêÜÔºâËøõË°åÊ®°ÂùóÂåñ„ÄÇAOPÁöÑÊ†∏ÂøÉÊûÑÈÄ†ÊòØÊñπÈù¢ÔºàÂàáÈù¢ÔºâÔºåÂÆÉÂ∞ÜÈÇ£‰∫õÂΩ±ÂìçÂ§ö‰∏™Á±ªÁöÑË°å‰∏∫Â∞ÅË£ÖÂà∞ÂèØÈáçÁî®ÁöÑÊ®°Âùó‰∏≠„ÄÇ AOPÂíåIOCÊòØË°•ÂÖÖÊÄßÁöÑÊäÄÊúØÔºåÂÆÉ‰ª¨ÈÉΩËøêÁî®Ê®°ÂùóÂåñÊñπÂºèËß£ÂÜ≥‰ºÅ‰∏öÂ∫îÁî®Á®ãÂ∫èÂºÄÂèë‰∏≠ÁöÑÂ§çÊùÇÈóÆÈ¢ò„ÄÇÂú®ÂÖ∏ÂûãÁöÑÈù¢ÂêëÂØπË±°ÂºÄÂèëÊñπÂºè‰∏≠ÔºåÂèØËÉΩË¶ÅÂ∞ÜÊó•ÂøóËÆ∞ÂΩïËØ≠Âè•ÊîæÂú®ÊâÄÊúâÊñπÊ≥ïÂíåJavaÁ±ª‰∏≠ÊâçËÉΩÂÆûÁé∞Êó•ÂøóÂäüËÉΩ„ÄÇÂú®AOPÊñπÂºè‰∏≠ÔºåÂèØ‰ª•ÂèçËøáÊù•Â∞ÜÊó•ÂøóÊúçÂä°Ê®°ÂùóÂåñÔºåÂπ∂‰ª•Â£∞ÊòéÁöÑÊñπÂºèÂ∞ÜÂÆÉ‰ª¨Â∫îÁî®Âà∞ÈúÄË¶ÅÊó•ÂøóÁöÑÁªÑ‰ª∂‰∏ä„ÄÇÂΩìÁÑ∂Ôºå‰ºòÂäøÂ∞±ÊòØJavaÁ±ª‰∏çÈúÄË¶ÅÁü•ÈÅìÊó•ÂøóÊúçÂä°ÁöÑÂ≠òÂú®Ôºå‰πü‰∏çÈúÄË¶ÅËÄÉËôëÁõ∏ÂÖ≥ÁöÑ‰ª£Á†Å„ÄÇÊâÄ‰ª•ÔºåÁî®SpringAOPÁºñÂÜôÁöÑÂ∫îÁî®Á®ãÂ∫è‰ª£Á†ÅÊòØÊùæÊï£ËÄ¶ÂêàÁöÑ„ÄÇ AOPÁöÑÂäüËÉΩÂÆåÂÖ®ÈõÜÊàêÂà∞‰∫ÜSpring‰∫ãÂä°ÁÆ°ÁêÜ„ÄÅÊó•ÂøóÂíåÂÖ∂‰ªñÂêÑÁßçÁâπÊÄßÁöÑ‰∏ä‰∏ãÊñá‰∏≠„ÄÇ AOPÁºñÁ®ãÁöÑÂ∏∏Áî®Âú∫ÊôØÊúâÔºöAuthenticationÊùÉÈôêËÆ§ËØÅ„ÄÅLoggingÊó•Âøó„ÄÅTransctionsManager‰∫ãÂä°„ÄÅLazyLoadingÊáíÂä†ËΩΩ„ÄÅContextProcess‰∏ä‰∏ãÊñáÂ§ÑÁêÜ„ÄÅErrorHandlerÈîôËØØË∑üË∏™ÔºàÂºÇÂ∏∏ÊçïËé∑Êú∫Âà∂Ôºâ„ÄÅCacheÁºìÂ≠ò„ÄÇ ÁºñÁ®ãÊÄùÊÉ≥ÊÄªÁªì SpringÊÄùÊÉ≥ Â∫îÁî®Âú∫ÊôØÔºàÁâπÁÇπÔºâ ‰∏ÄÂè•ËØùÂΩíÁ∫≥ AOP AspectOrientedProgramming(Èù¢ÂêëÂàáÈù¢ÁºñÁ®ã) ÊâæÂá∫Â§ö‰∏™Á±ª‰∏≠Êúâ‰∏ÄÂÆöËßÑÂæãÁöÑ‰ª£Á†ÅÔºåÂºÄÂèëÊó∂ÊãÜÂºÄÔºåËøêË°åÊó∂ÂÜçÂêàÂπ∂„ÄÇ Èù¢ÂêëÂàáÈù¢ÁºñÁ®ãÔºåÂç≥Èù¢ÂêëËßÑÂàôÁºñÁ®ã„ÄÇ Ëß£ËÄ¶Ôºå‰∏ì‰∫∫ÂÅö‰∏ì‰∫ã„ÄÇ OOP ObjectOrientedProgrammingÔºàÈù¢ÂêëÂØπË±°ÁºñÁ®ãÔºâ ÂΩíÁ∫≥ÊÄªÁªìÁîüÊ¥ª‰∏≠‰∏ÄÂàá‰∫ãÁâ©„ÄÇ Â∞ÅË£Ö„ÄÅÁªßÊâø„ÄÅÂ§öÊÄÅ„ÄÇ BOP BeanOrientedProgrammingÔºàÈù¢ÂêëBeanÁºñÁ®ãÔºâ Èù¢ÂêëBeanÔºàÊôÆÈÄöÁöÑjavaÁ±ªÔºâËÆæËÆ°Á®ãÂ∫è„ÄÇ ‰∏ÄÂàá‰ªéBeanÂºÄÂßã„ÄÇ IOC InversionofControlÔºàÊéßÂà∂ÂèçËΩ¨Ôºâ Â∞ÜnewÂØπË±°ÁöÑÂä®‰Ωú‰∫§ÁªôSpringÁÆ°ÁêÜÔºåÂπ∂Áî±Spring‰øùÂ≠òÂ∑≤ÂàõÂª∫ÁöÑÂØπË±°ÔºàIOCÂÆπÂô®Ôºâ„ÄÇ ËΩ¨‰∫§ÊéßÂà∂ÊùÉÔºàÂç≥ÊéßÂà∂ÊùÉÂèçËΩ¨Ôºâ„ÄÇ DI/DL DependencyInjectionÔºà‰æùËµñÊ≥®ÂÖ•ÔºâÊàñËÄÖDependencyLookupÔºà‰æùËµñÊü•ÊâæÔºâ ‰æùËµñÊ≥®ÂÖ•„ÄÅ‰æùËµñÊü•ÊâæÔºåSpring‰∏ç‰ªÖ‰øùÂ≠òËá™Â∑±ÂàõÂª∫ÁöÑÂØπË±°ÔºåËÄå‰∏î‰øùÂ≠òÂØπË±°‰∏éÂØπË±°‰πãÈó¥ÁöÑÂÖ≥Á≥ª„ÄÇ Ê≥®ÂÖ•Âç≥ËµãÂÄºÔºå‰∏ªË¶Å‰∏âÁßçÊñπÂºèÊûÑÈÄ†ÊñπÊ≥ï„ÄÅsetÊñπÊ≥ï„ÄÅÁõ¥Êé•ËµãÂÄº„ÄÇ ÂÖàÁêÜÊ∏ÖÂÖ≥Á≥ªÂÜçËµãÂÄº„ÄÇ SpringÊû∂ÊûÑËÆæËÆ°SpringÊÄªÂÖ±Â§ßÁ∫¶Êúâ20‰∏™Ê®°ÂùóÔºåÁî±1300Â§ö‰∏™‰∏çÂêåÁöÑÊñá‰ª∂ÊûÑÊàê„ÄÇËÄåËøô‰∫õÁªÑ‰ª∂Ë¢´ÂàÜÂà´Êï¥ÂêàÂú®Ê†∏ÂøÉÂÆπÂô®ÔºàCoreContainerÔºâ„ÄÅAOPÔºàAspectOrientedProgrammingÔºâÂíåËÆæÂ§áÊîØÊåÅÔºàInstrmentationÔºâ„ÄÅÊï∞ÊçÆËÆøÈóÆÂèäÈõÜÊàêÔºàDataAccess/IntegerationÔºâ„ÄÅWeb„ÄÅÊä•ÊñáÂèëÈÄÅÔºàMessagingÔºâ„ÄÅTestÔºå6‰∏™Ê®°ÂùóÈõÜÂêà‰∏≠„ÄÇ‰ª•‰∏ãÊòØspringÊÄª‰ΩìÊû∂ÊûÑÂõæÂíåSpring5ÁöÑÊ®°ÂùóÁªìÊûÑÂõæÔºö ÁªÑÊàêSpringÊ°ÜÊû∂ÁöÑÊØè‰∏™Ê®°ÂùóÈõÜÂêàÊàñËÄÖÊ®°ÂùóÈÉΩÂèØ‰ª•ÂçïÁã¨Â≠òÂú®Ôºå‰πüÂèØ‰ª•‰∏Ä‰∏™ÊàñÂ§ö‰∏™Ê®°ÂùóËÅîÂêàÂÆûÁé∞„ÄÇÊØè‰∏™Ê®°ÂùóÁöÑÁªÑÊàêÂíåÂäüËÉΩÂ¶Ç‰∏ãÔºö 1.Ê†∏ÂøÉÂÆπÂô®ÔºöÁî±spring-beans„ÄÅspring-core„ÄÅspring-contextÂíåspring-expressionÔºàSpringExpressionLanguage,SpELÔºâ4‰∏™Ê®°ÂùóÁªÑÊàê„ÄÇ spring-beansÂíåspring-coreÊ®°ÂùóÊòØSpringÊ°ÜÊû∂ÁöÑÊ†∏ÂøÉÊ®°ÂùóÔºåÂåÖÂê´‰∫ÜÊéßÂà∂ÂèçËΩ¨ÔºàInversionofControl,IOCÔºâÂíå‰æùËµñÊ≥®ÂÖ•ÔºàDependencyInjection,DIÔºâ„ÄÇBeanFactoryÊé•Âè£ÊòØSpringÊ°ÜÊû∂‰∏≠ÁöÑÊ†∏ÂøÉÊé•Âè£ÔºåÂÆÉÊòØÂ∑•ÂéÇÊ®°ÂºèÁöÑÂÖ∑‰ΩìÂÆûÁé∞„ÄÇBeanFactory‰ΩøÁî®ÊéßÂà∂ÂèçËΩ¨ÂØπÂ∫îÁî®Á®ãÂ∫èÁöÑÈÖçÁΩÆÂíå‰æùËµñÊÄßËßÑËåÉ‰∏éÂÆûÈôÖÁöÑÂ∫îÁî®Á®ãÂ∫è‰ª£Á†ÅËøõË°å‰∫ÜÂàÜÁ¶ª„ÄÇ‰ΩÜBeanFactoryÂÆπÂô®ÂÆû‰æãÂåñÂêéÂπ∂‰∏ç‰ºöËá™Âä®ÂÆû‰æãÂåñBeanÔºåÂè™ÊúâÂΩìBeanË¢´‰ΩøÁî®Êó∂BeanFactoryÂÆπÂô®Êâç‰ºöÂØπËØ•BeanËøõË°åÂÆû‰æãÂåñ‰∏é‰æùËµñÂÖ≥Á≥ªÁöÑË£ÖÈÖç„ÄÇ spring-contextÊ®°ÂùóÊûÑÊû∂‰∫éÊ†∏ÂøÉÊ®°Âùó‰πã‰∏äÔºå‰ªñÊâ©Â±ï‰∫ÜBeanFactoryÔºå‰∏∫Â•πÊ∑ªÂä†‰∫ÜBeanÁîüÂëΩÂë®ÊúüÊéßÂà∂„ÄÅÊ°ÜÊû∂‰∫ã‰ª∂‰ΩìÁ≥ª‰ª•ÂèäËµÑÊ∫êÂä†ËΩΩÈÄèÊòéÂåñÁ≠âÂäüËÉΩ„ÄÇÊ≠§Â§ñËØ•Ê®°ÂùóËøòÊèê‰æõ‰∫ÜËÆ∏Â§ö‰ºÅ‰∏öÁ∫ßÊîØÊåÅÔºåÂ¶ÇÈÇÆ‰ª∂ËÆøÈóÆ„ÄÅËøúÁ®ãËÆøÈóÆ„ÄÅ‰ªªÂä°Ë∞ÉÂ∫¶Á≠âÔºåApplicationContextÊòØËØ•Ê®°ÂùóÁöÑÊ†∏ÂøÉÊé•Âè£ÔºåÂ•πÊòØBeanFactoryÁöÑË∂ÖÁ±ªÔºå‰∏éBeanFactory‰∏çÂêåÔºåApplicationContextÂÆπÂô®ÂÆû‰æãÂåñÂêé‰ºöËá™Âä®ÂØπÊâÄÊúâÁöÑÂçïÂÆû‰æãBeanËøõË°åÂÆû‰æãÂåñ‰∏é‰æùËµñÂÖ≥Á≥ªÁöÑË£ÖÈÖçÔºå‰Ωø‰πãÂ§Ñ‰∫éÂæÖÁî®Áä∂ÊÄÅ„ÄÇ spring-expressionÊ®°ÂùóÊòØÁªü‰∏ÄË°®ËææÂºèËØ≠Ë®ÄÔºàELÔºâÁöÑÊâ©Â±ïÊ®°ÂùóÔºåÂèØ‰ª•Êü•ËØ¢„ÄÅÁÆ°ÁêÜËøêË°å‰∏≠ÁöÑÂØπË±°ÔºåÂêåÊó∂‰πüÊñπ‰æøÁöÑÂèØ‰ª•Ë∞ÉÁî®ÂØπË±°ÊñπÊ≥ï„ÄÅÊìç‰ΩúÊï∞ÁªÑ„ÄÅÈõÜÂêàÁ≠â„ÄÇÂÆÉÁöÑËØ≠Ê≥ïÁ±ª‰ºº‰∫é‰º†ÁªüELÔºå‰ΩÜÊèê‰æõ‰∫ÜÈ¢ùÂ§ñÁöÑÂäüËÉΩÔºåÊúÄÂá∫Ëâ≤ÁöÑË¶ÅÊï∞ÂáΩÊï∞Ë∞ÉÁî®ÂíåÁÆÄÂçïÂ≠óÁ¨¶‰∏≤ÁöÑÊ®°ÊùøÂáΩÊï∞„ÄÇËøôÁßçËØ≠Ë®ÄÁöÑÁâπÊÄßÊòØÂü∫‰∫éSpring‰∫ßÂìÅÁöÑÈúÄÊ±ÇËÄåËÆæËÆ°Ôºå‰ªñÂèØ‰ª•ÈùûÂ∏∏Êñπ‰æøÂú∞ÂêåSpringIOCËøõË°å‰∫§‰∫í„ÄÇ 2.AOPÂíåËÆæÂ§áÊîØÊåÅÔºöÁî±spring-aop„ÄÅspring-aspectsÂíåspring-instrument3‰∏™Ê®°ÂùóÁªÑÊàê„ÄÇ spring-aopÊòØSpringÁöÑÂè¶‰∏Ä‰∏™Ê†∏ÂøÉÊ®°ÂùóÔºåÊòØAOP‰∏ªË¶ÅÁöÑÂÆûÁé∞Ê®°Âùó„ÄÇ‰Ωú‰∏∫ÁªßOOPÂêéÔºåÂØπÁ®ãÂ∫èÂëòÂΩ±ÂìçÊúÄÂ§ßÁöÑÁºñÁ®ãÊÄùÊÉ≥‰πã‰∏ÄÔºåAOPÊûÅÂ§ßÂú∞ÂºÄÊãì‰∫Ü‰∫∫‰ª¨ÂØπ‰∫éÁºñÁ®ãÁöÑÊÄùË∑Ø„ÄÇÂú®Spring‰∏≠Ôºå‰ªñÊòØ‰ª•JVMÁöÑÂä®ÊÄÅ‰ª£ÁêÜÊäÄÊúØ‰∏∫Âü∫Á°ÄÔºåÁÑ∂ÂêéËÆæËÆ°Âá∫‰∫Ü‰∏ÄÁ≥ªÂàóÁöÑAOPÊ®™ÂàáÂÆûÁé∞ÔºåÊØîÂ¶ÇÂâçÁΩÆÈÄöÁü•„ÄÅËøîÂõûÈÄöÁü•„ÄÅÂºÇÂ∏∏ÈÄöÁü•Á≠âÔºåÂêåÊó∂ÔºåPointcutÊé•Âè£Êù•ÂåπÈÖçÂàáÂÖ•ÁÇπÔºåÂèØ‰ª•‰ΩøÁî®Áé∞ÊúâÁöÑÂàáÂÖ•ÁÇπÊù•ËÆæËÆ°Ê®™ÂàáÈù¢Ôºå‰πüÂèØ‰ª•Êâ©Â±ïÁõ∏ÂÖ≥ÊñπÊ≥ïÊ†πÊçÆÈúÄÊ±ÇËøõË°åÂàáÂÖ•„ÄÇ spring-aspectsÊ®°ÂùóÈõÜÊàêËá™AspectJÊ°ÜÊû∂Ôºå‰∏ªË¶ÅÊòØ‰∏∫SpringAOPÊèê‰æõÂ§öÁßçAOPÂÆûÁé∞ÊñπÊ≥ï„ÄÇ spring-instrumentÊ®°ÂùóÊòØÂü∫‰∫éJAVASE‰∏≠ÁöÑ‚Äùjava.lang.instrument‚ÄùËøõË°åËÆæËÆ°ÁöÑÔºåÂ∫îËØ•ÁÆóÊòØAOPÁöÑ‰∏Ä‰∏™ÊîØÊè¥Ê®°ÂùóÔºå‰∏ªË¶Å‰ΩúÁî®ÊòØÂú®JVMÂêØÁî®Êó∂ÔºåÁîüÊàê‰∏Ä‰∏™‰ª£ÁêÜÁ±ªÔºåÁ®ãÂ∫èÂëòÈÄöËøá‰ª£ÁêÜÁ±ªÂú®ËøêË°åÊó∂‰øÆÊîπÁ±ªÁöÑÂ≠óËäÇÔºå‰ªéËÄåÊîπÂèò‰∏Ä‰∏™Á±ªÁöÑÂäüËÉΩÔºåÂÆûÁé∞AOPÁöÑÂäüËÉΩ„ÄÇÂú®ÂàÜÁ±ªÈáåÔºåÊàëÊää‰ªñÂàÜÂú®‰∫ÜAOPÊ®°Âùó‰∏ãÔºåÂú®SpringÂÆòÊñπÊñáÊ°£ÈáåÂØπËøô‰∏™Âú∞Êñπ‰πüÊúâÁÇπÂê´Á≥ä‰∏çÊ∏ÖÔºåËøôÈáåÊòØÁ∫Ø‰∏™‰∫∫ËßÇÁÇπ„ÄÇ 3.Êï∞ÊçÆËÆøÈóÆÂèäÈõÜÊàêÔºöÁî±spring-jdbc„ÄÅspring-tx„ÄÅspring-orm„ÄÅspring-jmsÂíåspring-oxm5‰∏™Ê®°ÂùóÁªÑÊàê„ÄÇ spring-jdbcÊ®°ÂùóÊòØSpringÊèê‰æõÁöÑJDBCÊäΩË±°Ê°ÜÊû∂ÁöÑ‰∏ªË¶ÅÂÆûÁé∞Ê®°ÂùóÔºåÁî®‰∫éÁÆÄÂåñSpringJDBC„ÄÇ‰∏ªË¶ÅÊòØÊèê‰æõJDBCÊ®°ÊùøÊñπÂºè„ÄÅÂÖ≥Á≥ªÊï∞ÊçÆÂ∫ìÂØπË±°ÂåñÊñπÂºè„ÄÅSimpleJdbcÊñπÂºè„ÄÅ‰∫ãÂä°ÁÆ°ÁêÜÊù•ÁÆÄÂåñJDBCÁºñÁ®ãÔºå‰∏ªË¶ÅÂÆûÁé∞Á±ªÊòØJdbcTemplate„ÄÅSimpleJdbcTemplate‰ª•ÂèäNamedParameterJdbcTemplate„ÄÇ spring-txÊ®°ÂùóÊòØSpringJDBC‰∫ãÂä°ÊéßÂà∂ÂÆûÁé∞Ê®°Âùó„ÄÇ‰ΩøÁî®SpringÊ°ÜÊû∂ÔºåÂÆÉÂØπ‰∫ãÂä°ÂÅö‰∫ÜÂæàÂ•ΩÁöÑÂ∞ÅË£ÖÔºåÈÄöËøáÂÆÉÁöÑAOPÈÖçÁΩÆÔºåÂèØ‰ª•ÁÅµÊ¥ªÁöÑÈÖçÁΩÆÂú®‰ªª‰Ωï‰∏ÄÂ±ÇÔºõ‰ΩÜÊòØÂú®ÂæàÂ§öÁöÑÈúÄÊ±ÇÂíåÂ∫îÁî®ÔºåÁõ¥Êé•‰ΩøÁî®JDBC‰∫ãÂä°ÊéßÂà∂ËøòÊòØÊúâÂÖ∂‰ºòÂäøÁöÑ„ÄÇÂÖ∂ÂÆûÔºå‰∫ãÂä°ÊòØ‰ª•‰∏öÂä°ÈÄªËæë‰∏∫Âü∫Á°ÄÁöÑÔºõ‰∏Ä‰∏™ÂÆåÊï¥ÁöÑ‰∏öÂä°Â∫îËØ•ÂØπÂ∫î‰∏öÂä°Â±ÇÈáåÁöÑ‰∏Ä‰∏™ÊñπÊ≥ïÔºõÂ¶ÇÊûú‰∏öÂä°Êìç‰ΩúÂ§±Ë¥•ÔºåÂàôÊï¥‰∏™‰∫ãÂä°ÂõûÊªöÔºõÊâÄ‰ª•Ôºå‰∫ãÂä°ÊéßÂà∂ÊòØÁªùÂØπÂ∫îËØ•ÊîæÂú®‰∏öÂä°Â±ÇÁöÑÔºõ‰ΩÜÊòØÔºåÊåÅ‰πÖÂ±ÇÁöÑËÆæËÆ°ÂàôÂ∫îËØ•ÈÅµÂæ™‰∏Ä‰∏™ÂæàÈáçË¶ÅÁöÑÂéüÂàôÔºö‰øùËØÅÊìç‰ΩúÁöÑÂéüÂ≠êÊÄßÔºåÂç≥ÊåÅ‰πÖÂ±ÇÈáåÁöÑÊØè‰∏™ÊñπÊ≥ïÈÉΩÂ∫îËØ•ÊòØ‰∏çÂèØ‰ª•ÂàÜÂâ≤ÁöÑ„ÄÇÊâÄ‰ª•ÔºåÂú®‰ΩøÁî®SpringJDBC‰∫ãÂä°ÊéßÂà∂Êó∂ÔºåÂ∫îËØ•Ê≥®ÊÑèÂÖ∂ÁâπÊÆäÊÄß„ÄÇ spring-ormÊ®°ÂùóÊòØORMÊ°ÜÊû∂ÊîØÊåÅÊ®°ÂùóÔºå‰∏ªË¶ÅÈõÜÊàêHibernate,JavaPersistenceAPI(JPA)ÂíåJavaDataObjects(JDO)Áî®‰∫éËµÑÊ∫êÁÆ°ÁêÜ„ÄÅÊï∞ÊçÆËÆøÈóÆÂØπË±°(DAO)ÁöÑÂÆûÁé∞Âíå‰∫ãÂä°Á≠ñÁï•„ÄÇ spring-jmsÊ®°ÂùóÔºàJavaMessagingServiceÔºâËÉΩÂ§üÂèëÈÄÅÂíåÊé•Âèó‰ø°ÊÅØÔºåËá™SpringFramework4.1‰ª•ÂêéÔºå‰ªñËøòÊèê‰æõ‰∫ÜÂØπspring-messagingÊ®°ÂùóÁöÑÊîØÊíë„ÄÇ spring-oxmÊ®°Âùó‰∏ªË¶ÅÊèê‰æõ‰∏Ä‰∏™ÊäΩË±°Â±Ç‰ª•ÊîØÊíëOXMÔºàOXMÊòØObject-to-XML-MappingÁöÑÁº©ÂÜôÔºåÂÆÉÊòØ‰∏Ä‰∏™O/M-mapperÔºåÂ∞ÜjavaÂØπË±°Êò†Â∞ÑÊàêXMLÊï∞ÊçÆÔºåÊàñËÄÖÂ∞ÜXMLÊï∞ÊçÆÊò†Â∞ÑÊàêjavaÂØπË±°ÔºâÔºå‰æãÂ¶ÇÔºöJAXB,Castor,XMLBeans,JiBXÂíåXStreamÁ≠â„ÄÇ 4.WebÔºöÁî±spring-web„ÄÅspring-webmvc„ÄÅspring-websocketÂíåspring-webflux4‰∏™Ê®°ÂùóÁªÑÊàê„ÄÇ spring-webÊ®°Âùó‰∏∫SpringÊèê‰æõ‰∫ÜÊúÄÂü∫Á°ÄWebÊîØÊåÅÔºå‰∏ªË¶ÅÂª∫Á´ã‰∫éÊ†∏ÂøÉÂÆπÂô®‰πã‰∏äÔºåÈÄöËøáServletÊàñËÄÖListenersÊù•ÂàùÂßãÂåñIOCÂÆπÂô®Ôºå‰πüÂåÖÂê´‰∏Ä‰∫õ‰∏éWebÁõ∏ÂÖ≥ÁöÑÊîØÊåÅ„ÄÇ spring-webmvcÊ®°Âùó‰ºóÊâÄÂë®Áü•ÊòØ‰∏Ä‰∏™ÁöÑWeb-ServletÊ®°ÂùóÔºåÂÆûÁé∞‰∫ÜSpringMVCÔºàmodel-view-ControllerÔºâÁöÑWebÂ∫îÁî®„ÄÇ spring-websocketÊ®°Âùó‰∏ªË¶ÅÊòØ‰∏éWebÂâçÁ´ØÁöÑÂÖ®ÂèåÂ∑•ÈÄöËÆØÁöÑÂçèËÆÆ„ÄÇÔºàËµÑÊñôÁº∫‰πèÔºåËøôÊòØ‰∏™‰∫∫ÁêÜËß£Ôºâ spring-webfluxÊòØ‰∏Ä‰∏™Êñ∞ÁöÑÈùûÂ†µÂ°ûÂáΩÊï∞ÂºèReactiveWebÊ°ÜÊû∂ÔºåÂèØ‰ª•Áî®Êù•Âª∫Á´ãÂºÇÊ≠•ÁöÑÔºåÈùûÈòªÂ°ûÔºå‰∫ã‰ª∂È©±Âä®ÁöÑÊúçÂä°ÔºåÂπ∂‰∏îÊâ©Â±ïÊÄßÈùûÂ∏∏Â•Ω„ÄÇ 5.Êä•ÊñáÂèëÈÄÅÔºöÂç≥spring-messagingÊ®°Âùó„ÄÇ spring-messagingÊòØ‰ªéSpring4ÂºÄÂßãÊñ∞Âä†ÂÖ•ÁöÑ‰∏Ä‰∏™Ê®°ÂùóÔºå‰∏ªË¶ÅËÅåË¥£ÊòØ‰∏∫SpringÊ°ÜÊû∂ÈõÜÊàê‰∏Ä‰∫õÂü∫Á°ÄÁöÑÊä•Êñá‰º†ÈÄÅÂ∫îÁî®„ÄÇ 6.TestÔºöÂç≥spring-testÊ®°Âùó„ÄÇ spring-testÊ®°Âùó‰∏ªË¶Å‰∏∫ÊµãËØïÊèê‰æõÊîØÊåÅÁöÑÔºåÊØïÁ´üÂú®‰∏çÈúÄË¶ÅÂèëÂ∏ÉÔºàÁ®ãÂ∫èÔºâÂà∞‰Ω†ÁöÑÂ∫îÁî®ÊúçÂä°Âô®ÊàñËÄÖËøûÊé•Âà∞ÂÖ∂‰ªñ‰ºÅ‰∏öËÆæÊñΩÁöÑÊÉÖÂÜµ‰∏ãËÉΩÂ§üÊâßË°å‰∏Ä‰∫õÈõÜÊàêÊµãËØïÊàñËÄÖÂÖ∂‰ªñÊµãËØïÂØπ‰∫é‰ªª‰Ωï‰ºÅ‰∏öÈÉΩÊòØÈùûÂ∏∏ÈáçË¶ÅÁöÑ„ÄÇ SpirngÂêÑÊ®°Âùó‰πãÈó¥ÁöÑ‰æùËµñÂÖ≥Á≥ªËØ•ÂõæÊòØSpring5ÁöÑÂåÖÁªìÊûÑÔºåÂèØ‰ª•‰ªé‰∏≠Ê∏ÖÊ•öÁúãÂá∫SpringÂêÑ‰∏™Ê®°Âùó‰πãÈó¥ÁöÑ‰æùËµñÂÖ≥Á≥ª„ÄÇ Êú™ÂÆåÂæÖÁª≠ËøôÊòØ9Êúà‰ªΩÂÜôÁöÑÔºåÂ§ßÈÉ®ÂàÜÊòØÂ§çÂà∂ÁöÑÔºåÂõ†‰∏∫Èù¢ËØïÊ≤°ÊúâÂÜôÂÆåÔºåÊâÄ‰ª•Êú™ÂÆåÂæÖÁª≠ÂêßÔºÅ Êé•‰∏ãÊù•Âí±‰ª¨‰ªãÁªçSpringÁöÑËøô‰∏™ÂçöÂÆ¢ÔºåÊòØ‰ªéspring-coreÂºÄÂßãÔºåÂÖ∂Ê¨°ÊòØspring-beansÂíåspring-aopÔºåÈöèÂêéÊòØspring-contextÔºåÂÜçÂÖ∂Ê¨°ÊòØspring-txÂíåspring-ormÔºåÊúÄÂêéÊòØspring-webÂíåÂÖ∂‰ªñÈÉ®ÂàÜ„ÄÇ ÊÑüË∞¢ËßÇÁúã ÂèÇËÄÉËµÑÊñôÂ§ßÈÉ®ÂàÜÊù•Ëá™ÂíïÊ≥°Â≠¶Èô¢TOMËÄÅÂ∏àÁöÑÊùêÊñô]]></content>
      <tags>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âπ∂ÂèëÂü∫Á°Ä-ÁºìÂ≠ò„ÄÅÂÜÖÂ≠ò‰∏éJVM]]></title>
    <url>%2F2018%2F09%2F30%2FJava%E4%B8%8E%E5%86%85%E5%AD%98%2F</url>
    <content type="text"><![CDATA[ÂèàÊòØ‰∏ÄÂπ¥ÁßãÊãõÂ≠£ÔºåÂìéÂëÄÂ¶àÂëÄÊàëË¢´ËôêÁöÑÊÉ®Êù•~Ëøô‰∏çÔºåÂâçÂá†ÈòµÂ§±Ë∏™Ê≤°Êõ¥Êñ∞ÂçöÂÆ¢ÔºåÂÖ∂ÂÆûÊòØÊàëÂÅ∑ÂÅ∑ÊääÊó∂Èó¥Áî®Âú®Â§ç‰π†ËØæÊú¨‰∫ÜÔºàÈõæ ÂùöÊåÅÂú®Á§æÂå∫ÂàÜ‰∫´ÂçöÂÆ¢‰πüÂæà‰πÖ‰∫ÜÔºåÁî±‰∫éËøáÂéªÁöÑÊñáÁ´†ÊúâÂæàÂ§öÁñèÊºè‰πãÂ§ÑÔºåÂæàÂ§öÂ§ß‰Ω¨ÈÉΩÂú®ËØÑËÆ∫ÊåáÂá∫ÊàëÁöÑËøáÈîôÔºåÊàëÂæàÂºÄÂøÉ‰πüÂæàÂ§±ÊúõÔºåÂºÄÂøÉÁöÑÊòØÊúâÂ§ßÂÆ∂Â∏ÆÊàëÊåáÂá∫ÈîôËØØÔºåÂ§±ÊúõÁöÑÈÑô‰∫∫Â≠¶ËØÜÊµÖËñÑÊÄªÊ≤°Ê≥ïÂÅöÂà∞ÂÆåÁæé„ÄÇÊÄª‰πãÔºåÊ¨¢ËøéËØÑËÆ∫Âå∫ÂêÑÁßçpr~ Â•ΩÔºåÂõûÂà∞Ê≠£È¢ò„ÄÇÂ§ç‰π†ÁöÑÊó∂ÂÄôÔºåÊó†ÊÑèÈó¥ÁúãÂà∞javaËôöÊãüÊú∫ÁöÑÊúâÂÖ≥Áü•ËØÜÁÇπÔºåÊàë‰∫ßÁîü‰∫ÜÈùûÂ∏∏ÊµìÂéöÁöÑÂÖ¥Ë∂£Ôºå‰ªäÂ§©ÊàëÊù•ÁªìÂêàËÆ°ÁÆóÊú∫ÂÜÖÂ≠òÊ®°ÂûãÁöÑÁõ∏ÂÖ≥Áü•ËØÜÔºå‰∏éJavaÂÜÖÂ≠òÊ®°Âûã„ÄÅJavaÂØπË±°Ê®°Âûã„ÄÅJVMÂÜÖÂ≠òÁªìÊûÑÁ≠âÁõ∏ÂÖ≥ÁöÑÁü•ËØÜ‰∏≤ËÅîËµ∑Êù•ÔºåÊú¨ÁØáÊñáÁ´†ÂÖ±1.5WÂ≠óÔºåÂàÜ‰∫´ÁªôÂ§ßÂÆ∂ÔºåÊÑüË∞¢ÈòÖËØª„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢https://blog.tengshe789.tech/Ôºàüòò ËÆ°ÁÆóÊú∫ÂÜÖÂ≠òÁõ∏‰ø°ÊØè‰∏™‰∫∫ÈÉΩÊúâ‰∏ÄÂè∞ÁîµËÑëÔºå‰πüÊúâdiyÁîµËÑëÁöÑÁªèÂéÜ„ÄÇÁé∞Âú®‰∏ÄÂè∞ÂäüËÉΩÂº∫Â§ßÁöÑdiyÁîµËÑëÂ§ßÊ¶Ç3kÂ∞±ËÉΩÁªÑË£ÖËµ∑Êù•Ôºå‰∏Ä‰∏™i5-8400 ÁöÑcpu 869ÂÖÉÔºåDDR4 ÂÜÖÂ≠ò 1200ÂùóÈí±Ôºåb360‰∏ªÊùø300ÂÖÉ Êï£ÁÉ≠Âô®50ÂÖÉ Êú∫Ê¢∞Á°¨Áõò200ÂÖÉ 350wÁîµÊ∫ê300ÂÖÉ Êú∫ÁÆ±100ÂÖÉ ÔºåÊ≤°ÈîôÔºåÂè™Ë¶Å3kÂ∞±ËÉΩÊãøÂà∞‰∏Ä‰∏™ÊÄßËÉΩÂº∫Â§ßÁöÑ6C6TÁîµËÑë„ÄÇ Ë¶ÅËØ¥‰∏ÄÂè∞PC‰∏≠ÊúÄÈáçË¶ÅÁöÑÈÉ®‰ª∂ÊòØ‰ªÄ‰πàÔºüÂ§ßÂÆ∂Áúã‰ª∑Ê†º‰πü‰ºöÁúãÊòéÁôΩÔºåÊòØcpuÂíåÂÜÖÂ≠òÔºå‰∏ãÈù¢ÊàëÊù•‰ªãÁªç‰∏Ä‰∏ãcpuÂíåÂÜÖÂ≠ò‰πãÈó¥ÁöÑÂÖ≥Á≥ª„ÄÇ cpu‰∏éÂÜÖÂ≠òÁºìÂ≠òÁöÑÂçÉ‰∏ù‰∏áÁºïcpuÁõ∏ÂÖ≥ÊúØËØ≠È¶ñÂÖàËØ¥Êòé‰∏Ä‰∏ãÁõ∏ÂÖ≥ÁöÑcpuÊúØËØ≠Ôºö socketÔºöcpuÊèíÂú®‰∏ªÊùø‰∏äÈÇ£‰∏™ÊßΩ‰∏écpuÁß∞‰Ωú‰∏Ä‰∏™socket„ÄÇ DieÔºöÊ†∏ÂøÉÔºàDieÔºâÂèàÁß∞‰∏∫ÂÜÖÊ†∏ÔºåÊòØcpuÁöÑÁâ©ÁêÜÁªÑÊàêÈÉ®ÂàÜ‰πã‰∏Ä„ÄÇcpu‰πü‰ºöÂàÜ‰∏∫Â§ödie cpu‰∏éÂçïdie cpuÔºåË≠¨Â¶ÇÊàë‰ª¨Áé∞Âú®Âº∫Â§ßÁöÑAMD TR-2990WXÂ∞±ÊòØ4die cpuÔºåÊØè‰∏™dieÈáåÈù¢Êúâ8‰∏™Ê†∏ÂøÉÔºàcoreÔºâ coreÔºö‰πüÂ∞±ÊòØÁâ©ÁêÜÊ†∏ÂøÉ‰∫Ü„ÄÇcoreËøô‰∏™ËØçÊòØËã±ÁâπÂ∞îËµ∑ÁöÑÔºåËµ∑ÂàùÊòØ‰∏∫‰∫Ü‰∏éÁ´û‰∫âÂØπÊâãAMDÂå∫Âà´ÂºÄÔºåÂêéÈù¢Áî®ÁöÑÂ§ö‰∫Ü‰πüÊ∑°‰∫Ü„ÄÇ threadÔºöÂ∞±ÊòØÁ°¨‰ª∂Á∫øÁ®ãÊï∞„ÄÇ‰∏Ä‰∏™Á®ãÂ∫èÊâßË°åÂèØËÉΩÈúÄË¶ÅÂ§ö‰∏™Á∫øÁ®ã‰∏ÄËµ∑ËøõË°å~ËÄåÁé∞Âú®‰πüÂ∞±ÊØîËæÉÂº∫Â§ßÁöÑË∂ÖÁ∫øÁ®ãÊäÄÊúØÔºåËøáÂéªÁöÑcpuÂæÄÂæÄ‰∏Ä‰∏™cpuÊ†∏ÂøÉÂè™ÊîØÊåÅ‰∏Ä‰∏™Á∫øÁ®ãÔºåÁé∞Âú®‰∏Ä‰∫õÂº∫Â§ßÁöÑcpu‰∏≠ÔºåÂ∞±Ë≠¨Â¶ÇIBM ÁöÑPOWER 9 ÔºåÊîØÊåÅ8Ê†∏ÂøÉ32‰∏™Á∫øÁ®ãÔºàÂπ≥Âùá‰∏Ä‰∏™Ê†∏ÂøÉ4‰∏™Á∫øÁ®ãÔºâÔºåÁêÜËÆ∫ÊÄßËÉΩÈùûÂ∏∏Âº∫Â§ß„ÄÇ ÊÄªÁªì‰∏Ä‰∏ãÔºå‰ª•ÊòéÊòücpu AMD TR-2990WX‰Ωú‰∏∫Ê†óÂ≠êÔºåËøô‰∏™cpu‰ΩøÁî®‰∏Ä‰∏™socketÔºå‰∏Ä‰∏™socketÈáåÈù¢Êúâ4‰∏™dieÔºåÊÄªÂÖ±32‰∏™Áâ©ÁêÜÊ†∏ÂøÉ64‰∏™Á∫øÁ®ã cpuÁºìÂ≠òÊàë‰ª¨ÈÉΩÁü•ÈÅìÔºåcpuÂ∞ÜË¶ÅÂ§ÑÁêÜÁöÑÊï∞ÊçÆ‰ºöÊîæÂà∞ÂÜÖÂ≠ò‰∏≠‰øùÂ≠òÔºåÂèØÊòØÔºå‰∏∫‰ªÄ‰πà‰ºöËøôÊ†∑ÔºåÂ∞ÜÂÜÖÂ≠òÁºìÂ≠òÁ°¨ÁõòË°å‰∏çË°åÂë¢Ôºü Á≠îÊ°àÂΩìÁÑ∂ÊòØ‰∏çË°åÁöÑ„ÄÇcpuÁöÑÂ§ÑÁêÜÈÄüÂ∫¶ÂæàÂº∫Â§ßÔºåÂÜÖÂ≠òÁöÑÈÄüÂ∫¶ËôΩÁÑ∂ÈùûÂ∏∏Âø´ÈÄü‰ΩÜÊòØÊ†πÊú¨Ë∑ü‰∏ç‰∏äcpuÁöÑÊ≠•‰ºêÔºåÊâÄ‰ª•ÔºåÂ∞±Âá∫Áé∞ÁöÑÁºìÂ≠ò„ÄÇ‰∏éÊù•Ëá™DRAMÂÆ∂ÊóèÁöÑÂÜÖÂ≠ò‰∏çÂêåÔºåÁºìÂ≠òSRAM‰∏éÂÜÖÂ≠òÊúÄÂ§ßÁöÑÁâπÁÇπÊòØÔºåÁâπÂà´Âø´ÔºåÂÆπÈáèÂ∞èÔºåÁªìÊûÑÂ§çÊùÇÔºåÊàêÊú¨‰πüÈ´ò„ÄÇ ÈÄ†ÊàêÂÜÖÂ≠òÂíåÁºìÂ≠òÊÄßËÉΩÂ∑ÆÂºÇÔºå‰∏ªË¶ÅÊúâ‰ª•‰∏ãÂéüÂõ†Ôºö DRAMÂÇ®Â≠ò‰∏Ä‰ΩçÊï∞ÊçÆÂè™ÈúÄË¶Å‰∏Ä‰∏™ÁîµÂÆπÂä†‰∏ä‰∏Ä‰∏™Êô∂‰ΩìÁÆ°ÔºåËÄåSRAMÈúÄË¶Å6‰∏™Êô∂‰ΩìÁÆ°„ÄÇÁî±‰∫éDRAM‰øùÂ≠òÊï∞ÊçÆÂÖ∂ÂÆûÊòØÂú®ÁîµÂÆπÈáåÈù¢ÁöÑÔºåÁîµÂÆπÈúÄË¶ÅÂÖÖÊîæÁîµÊâçËÉΩËøõË°åËØªÂÜôÊìç‰ΩúÔºåËøôÂ∞±ÂØºËá¥ÂÖ∂ËØªÂÜôÊï∞ÊçÆÂ∞±ÊúâÊØîËæÉÂ§ßÁöÑÂª∂ËøüÈóÆÈ¢ò„ÄÇ Â≠òÂÇ®ÂèØ‰ª•ÁúãÈîô‰∏Ä‰∏™‰∫åÁª¥Êï∞ÁªÑÔºåÊØè‰∏™Â≠òÂÇ®ÂçïÂÖÉÈÉΩÊúâÂÖ∂Ë°åÂú∞ÂùÄÂàóÂú∞ÂùÄ„ÄÇSRAMÁöÑÂÆπÈáèÂæàÂ∞èÔºåÂÖ∂Â≠òÂÇ®ÂçïÂÖÉÊØîËæÉÁü≠ÔºàË°åÂàóÁü≠ÔºâÔºåÂèØ‰ª•‰∏ÄÊ¨°ÊÄß‰º†ËæìÂà∞SRAM‰∏≠ÔºõËÄåDRAMÔºåÈúÄË¶ÅÂàÜÂà´‰º†ÈÄÅË°åÂàóÂú∞ÂùÄ„ÄÇ SRAMÁöÑÈ¢ëÁéáÂíåcpuÈ¢ëÁéáÊØîËæÉÊé•ËøëÔºõËÄåDRAMÁöÑÈ¢ëÁéáÂíåcpuÂ∑ÆË∑ùÊØîËæÉÂ§ß„ÄÇ Ëøë‰ª£ÁöÑÁºìÂ≠òÈÄöÂ∏∏Ë¢´ÈõÜÊàêÂà∞cpuÂΩì‰∏≠Ôºå‰∏∫‰∫ÜÈÄÇÂ∫îÊÄßËÉΩ‰∏éÊàêÊú¨ÁöÑÈúÄË¶ÅÔºåÁé∞ÂÆû‰∏≠ÁöÑÁºìÂ≠òÂæÄÂæÄ‰ΩøÁî®ÈáëÂ≠óÂ°îÂûãÂ§öÁ∫ßÁºìÂ≠òÊû∂ÊûÑ„ÄÇ‰πüÂ∞±ÊòØÂΩìCPUË¶ÅËØªÂèñ‰∏Ä‰∏™Êï∞ÊçÆÊó∂ÔºåÈ¶ñÂÖà‰ªé‰∏ÄÁ∫ßÁºìÂ≠ò‰∏≠Êü•ÊâæÔºåÂ¶ÇÊûúÊ≤°ÊúâÊâæÂà∞ÂÜç‰ªé‰∫åÁ∫ßÁºìÂ≠ò‰∏≠Êü•ÊâæÔºåÂ¶ÇÊûúËøòÊòØÊ≤°ÊúâÂ∞±‰ªé‰∏âÁ∫ßÁºìÂ≠òÊàñÂÜÖÂ≠ò‰∏≠Êü•Êâæ„ÄÇ ‰∏ãÈù¢ÊòØËã±ÁâπÂ∞îÊúÄËøë‰ª•Êù•Áî®ÁöÑÂàù‰ª£skylakeÊû∂ÊûÑ ÂèØ‰ª•ÁúãÂà∞ÔºåÊØè‰∏™‰∏™Ê†∏ÂøÉÊúâ‰∏ìÂ±ûÁöÑL1ÔºåL2ÁºìÂ≠òÔºå‰ªñ‰ª¨ÂÖ±‰∫´‰∏Ä‰∏™L3ÁºìÂ≠ò„ÄÇÂ¶ÇÊûúcpuÂ¶ÇÊûúË¶ÅËÆøÈóÆÂÜÖÂ≠ò‰∏≠ÁöÑÊï∞ÊçÆÔºåÂøÖÈ°ªË¶ÅÁªèËøáL1,L2,L3,LLCÔºàÊàñËÄÖL4ÔºâÂõõÂ±ÇÁºìÂ≠ò„ÄÇ ÁºìÂ≠ò‰∏ÄËá¥ÊÄßÈóÆÈ¢òÊúÄÂºÄÂßãÁöÑcpuÔºåÂÖ∂ÂÆûÂè™ÊòØ‰∏Ä‰∏™Ê†∏ÂøÉ‰∏Ä‰∏™Á∫øÁ®ãÁöÑÔºåÂΩìÊó∂Ê†πÊú¨‰∏çÈúÄË¶ÅËÄÉËôëÁºìÂ≠ò‰∏ÄËá¥ÊÄßÈóÆÈ¢òÔºåÂçïÁ∫øÁ®ãÔºå‰πüÂ∞±ÊòØcpuÊ†∏ÂøÉÁöÑÁºìÂ≠òÂè™Ë¢´‰∏Ä‰∏™Á∫øÁ®ãËÆøÈóÆ„ÄÇÁºìÂ≠òÁã¨Âç†Ôºå‰∏ç‰ºöÂá∫Áé∞ËÆøÈóÆÂÜ≤Á™ÅÁ≠âÈóÆÈ¢ò„ÄÇ ÂêéÊù•Ë∂ÖÁ∫øÁ®ãÊäÄÊúØÊù•Âà∞Êàë‰ª¨ËßÜÈáéÔºå‚Äò‚ÄôÂçïÊ†∏CPUÂ§öÁ∫øÁ®ã‚Äô‚ÄôÔºå‰πüÂ∞±ÊòØËøõÁ®ã‰∏≠ÁöÑÂ§ö‰∏™Á∫øÁ®ã‰ºöÂêåÊó∂ËÆøÈóÆËøõÁ®ã‰∏≠ÁöÑÂÖ±‰∫´Êï∞ÊçÆÔºåCPUÂ∞ÜÊüêÂùóÂÜÖÂ≠òÂä†ËΩΩÂà∞ÁºìÂ≠òÂêéÔºå‰∏çÂêåÁ∫øÁ®ãÂú®ËÆøÈóÆÁõ∏ÂêåÁöÑÁâ©ÁêÜÂú∞ÂùÄÁöÑÊó∂ÂÄôÔºåÈÉΩ‰ºöÊò†Â∞ÑÂà∞Áõ∏ÂêåÁöÑÁºìÂ≠ò‰ΩçÁΩÆÔºåËøôÊ†∑Âç≥‰ΩøÂèëÁîüÁ∫øÁ®ãÁöÑÂàáÊç¢ÔºåÁºìÂ≠ò‰ªçÁÑ∂‰∏ç‰ºöÂ§±Êïà„ÄÇ‰ΩÜÁî±‰∫é‰ªª‰ΩïÊó∂ÂàªÂè™ËÉΩÊúâ‰∏Ä‰∏™Á∫øÁ®ãÂú®ÊâßË°åÔºåÂõ†Ê≠§‰∏ç‰ºöÂá∫Áé∞ÁºìÂ≠òËÆøÈóÆÂÜ≤Á™Å„ÄÇ Êó∂‰ª£‰∏çÊñ≠ÂèëÂ±ïÔºå‚ÄúÂ§öÊ†∏CPUÂ§öÁ∫øÁ®ã‚ÄùÊù•‰∫ÜÔºåÂç≥Â§ö‰∏™Á∫øÁ®ãËÆøÈóÆËøõÁ®ã‰∏≠ÁöÑÊüê‰∏™ÂÖ±‰∫´ÂÜÖÂ≠òÔºå‰∏îËøôÂ§ö‰∏™Á∫øÁ®ãÂàÜÂà´Âú®‰∏çÂêåÁöÑÊ†∏ÂøÉ‰∏äÊâßË°åÔºåÂàôÊØè‰∏™Ê†∏ÂøÉÈÉΩ‰ºöÂú®ÂêÑËá™ÁöÑcaehe‰∏≠‰øùÁïô‰∏Ä‰ªΩÂÖ±‰∫´ÂÜÖÂ≠òÁöÑÁºìÂÜ≤„ÄÇÁî±‰∫éÂ§öÊ†∏ÊòØÂèØ‰ª•Âπ∂Ë°åÁöÑÔºåÂèØËÉΩ‰ºöÂá∫Áé∞Â§ö‰∏™Á∫øÁ®ãÂêåÊó∂ÂÜôÂêÑËá™ÁöÑÁºìÂ≠òÁöÑÊÉÖÂÜµÔºåËÄåÂêÑËá™ÁöÑcache‰πãÈó¥ÁöÑÊï∞ÊçÆÂ∞±ÊúâÂèØËÉΩ‰∏çÂêå„ÄÇ ËøôÂ∞±ÊòØÊàë‰ª¨ËØ¥ÁöÑÁºìÂ≠ò‰∏ÄËá¥ÊÄßÈóÆÈ¢ò„ÄÇ ÁõÆÂâçÂÖ¨ËÆ§ÊúÄÂ•ΩÁöÑËß£ÂÜ≥ÊñπÊ°àÊòØËã±ÁâπÂ∞îÁöÑMESIÂçèËÆÆÔºå‰∏ãÈù¢Êàë‰ª¨ÁùÄÈáç‰ªãÁªç„ÄÇ MESIÂçèËÆÆÈ¶ñÂÖàËØ¥ËØ¥I/OÊìç‰ΩúÁöÑÂçï‰ΩçÈóÆÈ¢òÔºåÂ§ßÈÉ®ÂàÜ‰∫∫ÈÉΩÁü•ÈÅìÔºåÂú®ÂÜÖÂ≠ò‰∏≠Êìç‰ΩúI/O‰∏çÊòØ‰ª•Â≠óËäÇ‰∏∫Âçï‰ΩçÔºåËÄåÊòØ‰ª•‚ÄúÂùó‚Äù‰∏∫Âçï‰ΩçÔºåËøôÊòØ‰∏∫‰ªÄ‰πàÂë¢Ôºü ÂÖ∂ÂÆûËøôÊòØÂõ†‰∏∫I/OÊìç‰ΩúÁöÑÊï∞ÊçÆËÆøÈóÆÊúâÁ©∫Èó¥ËøûÁª≠ÊÄßÁâπÂæÅÔºåÂç≥ÈúÄË¶ÅËÆøÈóÆÂÜÖÂ≠òÁ©∫Èó¥ÂæàÂ§öÊï∞ÊçÆÔºå‰ΩÜÊòØI/OÊìç‰ΩúÊØîËæÉÊÖ¢ÔºåËØª‰∏Ä‰∏™Â≠óËäÇÂíåËØªN‰∏™Â≠óËäÇÁöÑÊó∂Èó¥Âü∫Êú¨Áõ∏Âêå„ÄÇ Êú∫Êô∫ÁöÑintelÂ∞±ËßÑÂÆö‰∫ÜÔºåcpuÁºìÂ≠ò‰∏≠ÊúÄÂ∞èÁöÑÂ≠òÂÇ®ÂçïÂÖÉÊòØÁºìÂ≠òË°åcache lineÔºåÂú®x86ÁöÑcpu‰∏≠Ôºå‰∏Ä‰∏™cache lineÂÇ®Â≠ò64Â≠óËäÇÔºåÊØè‰∏ÄÁ∫ßÁöÑÁºìÂ≠òÈÉΩ‰ºöË¢´ÂàíÂàÜÊàêËÆ∏Â§öÁªÑcache line„ÄÇ ÁºìÂ≠òÂ∑•‰ΩúÂéüÁêÜËØ∑ÁúãüëâÁª¥Âü∫ÁôæÁßë Êé•‰∏ãÊù•Êàë‰ª¨ÁúãÁúãMESIËßÑËåÉÔºåËøôÂÖ∂ÂÆûÊòØÁî®ÂõõÁßçÁºìÂ≠òË°åÁä∂ÊÄÅÂëΩÂêçÁöÑÔºåÊàë‰ª¨ÂÆö‰πâ‰∫ÜCPU‰∏≠ÊØè‰∏™ÁºìÂ≠òË°å‰ΩøÁî®4ÁßçÁä∂ÊÄÅËøõË°åÊ†áËÆ∞Ôºà‰ΩøÁî®È¢ùÂ§ñÁöÑ‰∏§‰Ωç(bit)Ë°®Á§∫)ÔºåÂàÜÂà´ÊòØ: M: Ë¢´‰øÆÊîπÔºàModified) ËØ•ÁºìÂ≠òË°åÂè™Ë¢´ÁºìÂ≠òÂú®ËØ•CPUÁöÑÁºìÂ≠ò‰∏≠ÔºåÂπ∂‰∏îÊòØË¢´‰øÆÊîπËøáÁöÑÔºàdirty),Âç≥‰∏é‰∏ªÂ≠ò‰∏≠ÁöÑÊï∞ÊçÆ‰∏ç‰∏ÄËá¥ÔºåËØ•ÁºìÂ≠òË°å‰∏≠ÁöÑÂÜÖÂ≠òÈúÄË¶ÅÂú®Êú™Êù•ÁöÑÊüê‰∏™Êó∂Èó¥ÁÇπÔºàÂÖÅËÆ∏ÂÖ∂ÂÆÉCPUËØªÂèñËØ∑‰∏ªÂ≠ò‰∏≠Áõ∏Â∫îÂÜÖÂ≠ò‰πãÂâçÔºâÂÜôÂõûÔºàwrite backÔºâ‰∏ªÂ≠ò„ÄÇÂΩìË¢´ÂÜôÂõû‰∏ªÂ≠ò‰πãÂêéÔºåËØ•ÁºìÂ≠òË°åÁöÑÁä∂ÊÄÅ‰ºöÂèòÊàêÁã¨‰∫´Ôºàexclusive)Áä∂ÊÄÅ„ÄÇ E: Áã¨‰∫´ÁöÑÔºàExclusive) ËØ•ÁºìÂ≠òË°åÂè™Ë¢´ÁºìÂ≠òÂú®ËØ•CPUÁöÑÁºìÂ≠ò‰∏≠ÔºåÂÆÉÊòØÊú™Ë¢´‰øÆÊîπËøáÁöÑÔºàclean)Ôºå‰∏é‰∏ªÂ≠ò‰∏≠Êï∞ÊçÆ‰∏ÄËá¥„ÄÇËØ•Áä∂ÊÄÅÂèØ‰ª•Âú®‰ªª‰ΩïÊó∂ÂàªÂΩìÊúâÂÖ∂ÂÆÉCPUËØªÂèñËØ•ÂÜÖÂ≠òÊó∂ÂèòÊàêÂÖ±‰∫´Áä∂ÊÄÅÔºàshared)„ÄÇÂêåÊ†∑Âú∞ÔºåÂΩìCPU‰øÆÊîπËØ•ÁºìÂ≠òË°å‰∏≠ÂÜÖÂÆπÊó∂ÔºåËØ•Áä∂ÊÄÅÂèØ‰ª•ÂèòÊàêModifiedÁä∂ÊÄÅ„ÄÇ S: ÂÖ±‰∫´ÁöÑÔºàShared) ËØ•Áä∂ÊÄÅÊÑèÂë≥ÁùÄËØ•ÁºìÂ≠òË°åÂèØËÉΩË¢´Â§ö‰∏™CPUÁºìÂ≠òÔºåÂπ∂‰∏îÂêÑ‰∏™ÁºìÂ≠ò‰∏≠ÁöÑÊï∞ÊçÆ‰∏é‰∏ªÂ≠òÊï∞ÊçÆ‰∏ÄËá¥Ôºàclean)ÔºåÂΩìÊúâ‰∏Ä‰∏™CPU‰øÆÊîπËØ•ÁºìÂ≠òË°å‰∏≠ÔºåÂÖ∂ÂÆÉCPU‰∏≠ËØ•ÁºìÂ≠òË°åÂèØ‰ª•Ë¢´‰ΩúÂ∫üÔºàÂèòÊàêÊó†ÊïàÁä∂ÊÄÅÔºàInvalidÔºâÔºâ„ÄÇ I: Êó†ÊïàÁöÑÔºàInvalidÔºâ ËØ•ÁºìÂ≠òÊòØÊó†ÊïàÁöÑÔºàÂèØËÉΩÊúâÂÖ∂ÂÆÉCPU‰øÆÊîπ‰∫ÜËØ•ÁºìÂ≠òË°åÔºâ„ÄÇ ÁÑ∂ËÄåÔºåÂè™ÊòØÊúâËøôÂõõÁßçÁä∂ÊÄÅ‰πü‰ºöÂ∏¶Êù•‰∏ÄÂÆöÁöÑÈóÆÈ¢ò„ÄÇ‰∏ãÈù¢ÂºïÁî®‰∏Ä‰∏ãoracleÁöÑÊñáÊ°£„ÄÇ ÂêåÊó∂Êõ¥Êñ∞Êù•Ëá™‰∏çÂêåÂ§ÑÁêÜÂô®ÁöÑÁõ∏ÂêåÁºìÂ≠ò‰ª£Á†ÅË°å‰∏≠ÁöÑÂçï‰∏™ÂÖÉÁ¥†‰ºö‰ΩøÊï¥‰∏™ÁºìÂ≠ò‰ª£Á†ÅË°åÊó†ÊïàÔºåÂç≥‰ΩøËøô‰∫õÊõ¥Êñ∞Âú®ÈÄªËæë‰∏äÊòØÂΩºÊ≠§Áã¨Á´ãÁöÑ„ÄÇÊØèÊ¨°ÂØπÁºìÂ≠ò‰ª£Á†ÅË°åÁöÑÂçï‰∏™ÂÖÉÁ¥†ËøõË°åÊõ¥Êñ∞Êó∂ÔºåÈÉΩ‰ºöÂ∞ÜÊ≠§‰ª£Á†ÅË°åÊ†áËÆ∞‰∏∫Êó†Êïà„ÄÇÂÖ∂‰ªñËÆøÈóÆÂêå‰∏Ä‰ª£Á†ÅË°å‰∏≠‰∏çÂêåÂÖÉÁ¥†ÁöÑÂ§ÑÁêÜÂô®Â∞ÜÁúãÂà∞ËØ•‰ª£Á†ÅË°åÂ∑≤Ê†áËÆ∞‰∏∫Êó†Êïà„ÄÇÂç≥‰ΩøÊâÄËÆøÈóÆÁöÑÂÖÉÁ¥†Êú™Ë¢´‰øÆÊîπÔºå‰πü‰ºöÂº∫Âà∂ÂÆÉ‰ª¨‰ªéÂÜÖÂ≠òÊàñÂÖ∂‰ªñ‰ΩçÁΩÆËé∑ÂèñËØ•‰ª£Á†ÅË°åÁöÑËæÉÊñ∞ÂâØÊú¨„ÄÇËøôÊòØÂõ†‰∏∫Âü∫‰∫éÁºìÂ≠ò‰ª£Á†ÅË°å‰øùÊåÅÁºìÂ≠ò‰∏ÄËá¥ÊÄßÔºåËÄå‰∏çÊòØÈíàÂØπÂçï‰∏™ÂÖÉÁ¥†ÁöÑ„ÄÇÂõ†Ê≠§Ôºå‰∫íËøûÈÄö‰ø°ÂíåÂºÄÈîÄÊñπÈù¢ÈÉΩÂ∞ÜÊúâÊâÄÂ¢ûÈïø„ÄÇÂπ∂‰∏îÔºåÊ≠£Âú®ËøõË°åÁºìÂ≠ò‰ª£Á†ÅË°åÊõ¥Êñ∞ÁöÑÊó∂ÂÄôÔºåÁ¶ÅÊ≠¢ËÆøÈóÆËØ•‰ª£Á†ÅË°å‰∏≠ÁöÑÂÖÉÁ¥†„ÄÇ MESIÂçèËÆÆÔºåÂèØ‰ª•‰øùËØÅÁºìÂ≠òÁöÑ‰∏ÄËá¥ÊÄßÔºå‰ΩÜÊòØÊó†Ê≥ï‰øùËØÅÂÆûÊó∂ÊÄß„ÄÇËøôÁßçÊÉÖÂÜµÁß∞‰∏∫‰º™ÂÖ±‰∫´„ÄÇ ‰º™ÂÖ±‰∫´ÈóÆÈ¢ò‰º™ÂÖ±‰∫´ÈóÆÈ¢òÂÖ∂ÂÆûÂú®Java‰∏≠ÊòØÁúüÂÆûÂ≠òÂú®ÁöÑ‰∏Ä‰∏™ÈóÆÈ¢ò„ÄÇÂÅáËÆæÊúâÂ¶Ç‰∏ãÊâÄÁ§∫ÁöÑjava class 12345class MyObiect&#123; long a; long b; long c;&#125; ÊåâÁÖßjavaËßÑËåÉÔºåMyObiectÂØπË±°ÊòØÂú®Â†ÜÁ©∫Èó¥‰∏≠ÂàÜÈÖçÁöÑÔºåa„ÄÅb„ÄÅcËøô‰∏â‰∏™ÂèòÈáèÂú®ÂÜÖÂ≠òÁ©∫Èó¥‰∏≠ÊòØËøëÈÇªÔºåÂàÜÂà´Âç†8Â≠óËäÇÔºåÈïøÂ∫¶‰πãÂíå‰∏∫24Â≠óËäÇ„ÄÇËÄåÊàë‰ª¨ÁöÑx86ÁöÑÁºìÂ≠òË°åÊòØ64Â≠óËäÇÔºåËøô‰∏â‰∏™ÂèòÈáèÂÆåÂÖ®ÊúâÂèØËÉΩ‰ºöÂú®‰∏Ä‰∏™ÁºìÂ≠òË°å‰∏≠ÔºåÂπ∂‰∏îË¢´‰∏§‰∏™‰∏çÂêåÁöÑcpuÊ†∏ÂøÉÂÖ±‰∫´ÔºÅ Ê†πÊçÆMESIÂçèËÆÆÔºåÂ¶ÇÊûú‰∏çÂêåÁâ©ÁêÜÊ†∏ÂøÉcpu‰∏≠ÁöÑÁ∫øÁ®ã1ÂíåÁ∫øÁ®ã2Ë¶Å‰∫íÊñ•ÁöÑÂØπËøôÂá†‰∏™ÂèòÈáèËøõË°åÊìç‰ΩúÔºåÂæàÊúâÂèØËÉΩË¶Å‰∫íÁõ∏Êä¢Âç†ËµÑÊ∫êÔºåÂØºËá¥ÂéüÊù•ÁöÑÂπ∂Ë°åÂèòÊàê‰∏≤Ë°åÔºåÂ§ßÂ§ßÈôç‰Ωé‰∫ÜÁ≥ªÁªüÁöÑÂπ∂ÂèëÊÄßÔºåËøôÂ∞±ÊòØÁºìÂ≠òÁöÑ‰º™ÂÖ±‰∫´„ÄÇ Ëß£ÂÜ≥‰º™ÂÖ±‰∫´ÂÖ∂ÂÆûËß£ÂÜ≥‰º™ÂÖ±‰∫´ÂæàÁÆÄÂçïÔºåÂè™ÈúÄË¶ÅÂ∞ÜËøôÂá†‰∏™ÂèòÈáèÂàÜÂà´ÊîæÂà∞‰∏çÂêåÁöÑÁºìÂ≠òË°åÂç≥ÂèØ„ÄÇÂú®java8‰∏≠ÔºåÂ∞±Â∑≤ÁªèÊèê‰æõ‰∫ÜÊôÆÈÄÇÊÄßÁöÑËß£ÂÜ≥ÊñπÊ°àÔºåÂç≥ÈááÁî®@ContendedÊ≥®Ëß£Êù•‰øùËØÅÂØπË±°‰∏≠ÁöÑÂèòÈáèÊàñËÄÖÂ±ûÊÄß‰∏çÂú®‰∏Ä‰∏™ÁºìÂ≠òË°å‰∏≠~ 123456@Contendedclass VolatileObiect&#123; volatile long a = 1L; volatile long b = 2L; volatile long c = 3L;&#125; ÂÜÖÂ≠ò‰∏ç‰∏ÄËá¥ÊÄßÈóÆÈ¢ò‰∏äÈù¢ÊàëËØ¥‰∫ÜMESIÂçèËÆÆÂú®Â§öÊ†∏ÂøÉcpu‰∏≠Ëß£ÂÜ≥ÁºìÂ≠ò‰∏ÄËá¥ÊÄßÁöÑÈóÆÈ¢òÔºå‰∏ãÈù¢Êàë‰ª¨ËØ¥ËØ¥cpuÁöÑÂÜÖÂ≠ò‰∏ç‰∏ÄËá¥ÊÄßÈóÆÈ¢ò„ÄÇ ‰∏âÁßçcpuÊû∂ÊûÑÈ¶ñÂÖàÔºåË¶Å‰∫ÜËß£‰∏â‰∏™ÂêçËØçÔºö SMP(Symmetric Multi-Processor) SMP ,ÂØπÁß∞Â§öÂ§ÑÁêÜÁ≥ªÁªüÂÜÖÊúâËÆ∏Â§öÁ¥ßËÄ¶ÂêàÂ§öÂ§ÑÁêÜÂô®ÔºåÂú®ËøôÊ†∑ÁöÑÁ≥ªÁªü‰∏≠ÔºåÊâÄÊúâÁöÑCPUÂÖ±‰∫´ÂÖ®ÈÉ®ËµÑÊ∫êÔºåÂ¶ÇÊÄªÁ∫øÔºåÂÜÖÂ≠òÂíåI/OÁ≥ªÁªüÁ≠âÔºåÊìç‰ΩúÁ≥ªÁªüÊàñÁÆ°ÁêÜÊï∞ÊçÆÂ∫ìÁöÑÂ§çÊú¨Âè™Êúâ‰∏Ä‰∏™ÔºåËøôÁßçÁ≥ªÁªüÊúâ‰∏Ä‰∏™ÊúÄÂ§ßÁöÑÁâπÁÇπÂ∞±ÊòØÂÖ±‰∫´ÊâÄÊúâËµÑÊ∫ê„ÄÇÂ§ö‰∏™CPU‰πãÈó¥Ê≤°ÊúâÂå∫Âà´ÔºåÂπ≥Á≠âÂú∞ËÆøÈóÆÂÜÖÂ≠ò„ÄÅÂ§ñËÆæ„ÄÅ‰∏Ä‰∏™Êìç‰ΩúÁ≥ªÁªü„ÄÇÊìç‰ΩúÁ≥ªÁªüÁÆ°ÁêÜÁùÄ‰∏Ä‰∏™ÈòüÂàóÔºåÊØè‰∏™Â§ÑÁêÜÂô®‰æùÊ¨°Â§ÑÁêÜÈòüÂàó‰∏≠ÁöÑËøõÁ®ã„ÄÇÂ¶ÇÊûú‰∏§‰∏™Â§ÑÁêÜÂô®ÂêåÊó∂ËØ∑Ê±ÇËÆøÈóÆ‰∏Ä‰∏™ËµÑÊ∫êÔºà‰æãÂ¶ÇÂêå‰∏ÄÊÆµÂÜÖÂ≠òÂú∞ÂùÄÔºâÔºåÁî±Á°¨‰ª∂„ÄÅËΩØ‰ª∂ÁöÑÈîÅÊú∫Âà∂ÂéªËß£ÂÜ≥ËµÑÊ∫ê‰∫âÁî®ÈóÆÈ¢ò„ÄÇ ÊâÄË∞ìÂØπÁß∞Â§öÂ§ÑÁêÜÂô®ÁªìÊûÑÔºåÊòØÊåáÊúçÂä°Âô®‰∏≠Â§ö‰∏™ CPU ÂØπÁß∞Â∑•‰ΩúÔºåÊó†‰∏ªÊ¨°Êàñ‰ªéÂ±ûÂÖ≥Á≥ª„ÄÇÂêÑ CPU ÂÖ±‰∫´Áõ∏ÂêåÁöÑÁâ©ÁêÜÂÜÖÂ≠òÔºåÊØè‰∏™ CPU ËÆøÈóÆÂÜÖÂ≠ò‰∏≠ÁöÑ‰ªª‰ΩïÂú∞ÂùÄÊâÄÈúÄÊó∂Èó¥ÊòØÁõ∏ÂêåÁöÑÔºåÂõ†Ê≠§ SMP ‰πüË¢´Áß∞‰∏∫‰∏ÄËá¥Â≠òÂÇ®Âô®ËÆøÈóÆÁªìÊûÑ (UMA Ôºö Uniform Memory Access) „ÄÇÂØπ SMP ÊúçÂä°Âô®ËøõË°åÊâ©Â±ïÁöÑÊñπÂºèÂåÖÊã¨Â¢ûÂä†ÂÜÖÂ≠ò„ÄÅ‰ΩøÁî®Êõ¥Âø´ÁöÑ CPU „ÄÅÂ¢ûÂä† CPU „ÄÅÊâ©ÂÖÖ I/O( ÊßΩÂè£Êï∞‰∏éÊÄªÁ∫øÊï∞ ) ‰ª•ÂèäÊ∑ªÂä†Êõ¥Â§öÁöÑÂ§ñÈÉ®ËÆæÂ§á ( ÈÄöÂ∏∏ÊòØÁ£ÅÁõòÂ≠òÂÇ® ) „ÄÇ SMP ÊúçÂä°Âô®ÁöÑ‰∏ªË¶ÅÁâπÂæÅÊòØÂÖ±‰∫´ÔºåÁ≥ªÁªü‰∏≠ÊâÄÊúâËµÑÊ∫ê (CPU „ÄÅÂÜÖÂ≠ò„ÄÅ I/O Á≠â ) ÈÉΩÊòØÂÖ±‰∫´ÁöÑ„ÄÇ‰πüÊ≠£ÊòØÁî±‰∫éËøôÁßçÁâπÂæÅÔºåÂØºËá¥‰∫Ü SMP ÊúçÂä°Âô®ÁöÑ‰∏ªË¶ÅÈóÆÈ¢òÔºåÈÇ£Â∞±ÊòØÂÆÉÁöÑÊâ©Â±ïËÉΩÂäõÈùûÂ∏∏ÊúâÈôê„ÄÇÂØπ‰∫é SMP ÊúçÂä°Âô®ËÄåË®ÄÔºåÊØè‰∏Ä‰∏™ÂÖ±‰∫´ÁöÑÁéØËäÇÈÉΩÂèØËÉΩÈÄ†Êàê SMP ÊúçÂä°Âô®Êâ©Â±ïÊó∂ÁöÑÁì∂È¢àÔºåËÄåÊúÄÂèóÈôêÂà∂ÁöÑÂàôÊòØÂÜÖÂ≠ò„ÄÇÁî±‰∫éÊØè‰∏™ CPU ÂøÖÈ°ªÈÄöËøáÁõ∏ÂêåÁöÑÂÜÖÂ≠òÊÄªÁ∫øËÆøÈóÆÁõ∏ÂêåÁöÑÂÜÖÂ≠òËµÑÊ∫êÔºåÂõ†Ê≠§ÈöèÁùÄ CPU Êï∞ÈáèÁöÑÂ¢ûÂä†ÔºåÂÜÖÂ≠òËÆøÈóÆÂÜ≤Á™ÅÂ∞ÜËøÖÈÄüÂ¢ûÂä†ÔºåÊúÄÁªà‰ºöÈÄ†Êàê CPU ËµÑÊ∫êÁöÑÊµ™Ë¥πÔºå‰Ωø CPU ÊÄßËÉΩÁöÑÊúâÊïàÊÄßÂ§ßÂ§ßÈôç‰Ωé„ÄÇÂÆûÈ™åËØÅÊòéÔºå SMP ÊúçÂä°Âô® CPU Âà©Áî®ÁéáÊúÄÂ•ΩÁöÑÊÉÖÂÜµÊòØ 2 Ëá≥ 4 ‰∏™ CPU „ÄÇ NUMA(Non-Uniform Memory Access) Áî±‰∫é SMP Âú®Êâ©Â±ïËÉΩÂäõ‰∏äÁöÑÈôêÂà∂Ôºå‰∫∫‰ª¨ÂºÄÂßãÊé¢Á©∂Â¶Ç‰ΩïËøõË°åÊúâÊïàÂú∞Êâ©Â±ï‰ªéËÄåÊûÑÂª∫Â§ßÂûãÁ≥ªÁªüÁöÑÊäÄÊúØÔºå NUMA Â∞±ÊòØËøôÁßçÂä™Âäõ‰∏ãÁöÑÁªìÊûú‰πã‰∏Ä„ÄÇÂà©Áî® NUMA ÊäÄÊúØÔºåÂèØ‰ª•ÊääÂá†ÂçÅ‰∏™ CPU( ÁîöËá≥‰∏äÁôæ‰∏™ CPU) ÁªÑÂêàÂú®‰∏Ä‰∏™ÊúçÂä°Âô®ÂÜÖ„ÄÇÂÖ∂NUMA ÊúçÂä°Âô® CPU Ê®°ÂùóÁªìÊûÑÂ¶ÇÂõæÊâÄÁ§∫Ôºö NUMA ÊúçÂä°Âô®ÁöÑÂü∫Êú¨ÁâπÂæÅÊòØÂÖ∑ÊúâÂ§ö‰∏™ CPU Ê®°ÂùóÔºåÊØè‰∏™ CPU Ê®°ÂùóÁî±Â§ö‰∏™ CPU( Â¶Ç 4 ‰∏™ ) ÁªÑÊàêÔºåÂπ∂‰∏îÂÖ∑ÊúâÁã¨Á´ãÁöÑÊú¨Âú∞ÂÜÖÂ≠ò„ÄÅ I/O ÊßΩÂè£Á≠â„ÄÇÁî±‰∫éÂÖ∂ËäÇÁÇπ‰πãÈó¥ÂèØ‰ª•ÈÄöËøá‰∫íËÅîÊ®°Âùó ( Â¶ÇÁß∞‰∏∫ Crossbar Switch) ËøõË°åËøûÊé•Âíå‰ø°ÊÅØ‰∫§‰∫íÔºåÂõ†Ê≠§ÊØè‰∏™ CPU ÂèØ‰ª•ËÆøÈóÆÊï¥‰∏™Á≥ªÁªüÁöÑÂÜÖÂ≠ò ( ËøôÊòØ NUMA Á≥ªÁªü‰∏é MPP Á≥ªÁªüÁöÑÈáçË¶ÅÂ∑ÆÂà´ ) „ÄÇÊòæÁÑ∂ÔºåËÆøÈóÆÊú¨Âú∞ÂÜÖÂ≠òÁöÑÈÄüÂ∫¶Â∞ÜËøúËøúÈ´ò‰∫éËÆøÈóÆËøúÂú∞ÂÜÖÂ≠ò ( Á≥ªÁªüÂÜÖÂÖ∂ÂÆÉËäÇÁÇπÁöÑÂÜÖÂ≠ò ) ÁöÑÈÄüÂ∫¶ÔºåËøô‰πüÊòØÈùû‰∏ÄËá¥Â≠òÂÇ®ËÆøÈóÆ NUMA ÁöÑÁî±Êù•„ÄÇÁî±‰∫éËøô‰∏™ÁâπÁÇπÔºå‰∏∫‰∫ÜÊõ¥Â•ΩÂú∞ÂèëÊå•Á≥ªÁªüÊÄßËÉΩÔºåÂºÄÂèëÂ∫îÁî®Á®ãÂ∫èÊó∂ÈúÄË¶ÅÂ∞ΩÈáèÂáèÂ∞ë‰∏çÂêå CPU Ê®°Âùó‰πãÈó¥ÁöÑ‰ø°ÊÅØ‰∫§‰∫í„ÄÇ Âà©Áî® NUMA ÊäÄÊúØÔºåÂèØ‰ª•ËæÉÂ•ΩÂú∞Ëß£ÂÜ≥ÂéüÊù• SMP Á≥ªÁªüÁöÑÊâ©Â±ïÈóÆÈ¢òÔºåÂú®‰∏Ä‰∏™Áâ©ÁêÜÊúçÂä°Âô®ÂÜÖÂèØ‰ª•ÊîØÊåÅ‰∏äÁôæ‰∏™ CPU „ÄÇÊØîËæÉÂÖ∏ÂûãÁöÑ NUMA ÊúçÂä°Âô®ÁöÑ‰æãÂ≠êÂåÖÊã¨ HP ÁöÑ Superdome „ÄÅ SUN15K „ÄÅ IBMp690 Á≠â„ÄÇ ‰ΩÜ NUMA ÊäÄÊúØÂêåÊ†∑Êúâ‰∏ÄÂÆöÁº∫Èô∑ÔºåÁî±‰∫éËÆøÈóÆËøúÂú∞ÂÜÖÂ≠òÁöÑÂª∂Êó∂ËøúËøúË∂ÖËøáÊú¨Âú∞ÂÜÖÂ≠òÔºåÂõ†Ê≠§ÂΩì CPU Êï∞ÈáèÂ¢ûÂä†Êó∂ÔºåÁ≥ªÁªüÊÄßËÉΩÊó†Ê≥ïÁ∫øÊÄßÂ¢ûÂä†„ÄÇÂ¶Ç HP ÂÖ¨Âè∏ÂèëÂ∏É Superdome ÊúçÂä°Âô®Êó∂ÔºåÊõæÂÖ¨Â∏É‰∫ÜÂÆÉ‰∏é HP ÂÖ∂ÂÆÉ UNIX ÊúçÂä°Âô®ÁöÑÁõ∏ÂØπÊÄßËÉΩÂÄºÔºåÁªìÊûúÂèëÁé∞Ôºå 64 Ë∑Ø CPU ÁöÑ Superdome (NUMA ÁªìÊûÑ ) ÁöÑÁõ∏ÂØπÊÄßËÉΩÂÄºÊòØ 20 ÔºåËÄå 8 Ë∑Ø N4000( ÂÖ±‰∫´ÁöÑ SMP ÁªìÊûÑ ) ÁöÑÁõ∏ÂØπÊÄßËÉΩÂÄºÊòØ 6.3 „ÄÇ‰ªéËøô‰∏™ÁªìÊûúÂèØ‰ª•ÁúãÂà∞Ôºå 8 ÂÄçÊï∞ÈáèÁöÑ CPU Êç¢Êù•ÁöÑÂè™ÊòØ 3 ÂÄçÊÄßËÉΩÁöÑÊèêÂçá„ÄÇ MPP(Massive Parallel Processing) Âíå NUMA ‰∏çÂêåÔºå MPP Êèê‰æõ‰∫ÜÂè¶Â§ñ‰∏ÄÁßçËøõË°åÁ≥ªÁªüÊâ©Â±ïÁöÑÊñπÂºèÔºåÂÆÉÁî±Â§ö‰∏™ SMP ÊúçÂä°Âô®ÈÄöËøá‰∏ÄÂÆöÁöÑËäÇÁÇπ‰∫íËÅîÁΩëÁªúËøõË°åËøûÊé•ÔºåÂçèÂêåÂ∑•‰ΩúÔºåÂÆåÊàêÁõ∏ÂêåÁöÑ‰ªªÂä°Ôºå‰ªéÁî®Êà∑ÁöÑËßíÂ∫¶Êù•ÁúãÊòØ‰∏Ä‰∏™ÊúçÂä°Âô®Á≥ªÁªü„ÄÇÂÖ∂Âü∫Êú¨ÁâπÂæÅÊòØÁî±Â§ö‰∏™ SMP ÊúçÂä°Âô® ( ÊØè‰∏™ SMP ÊúçÂä°Âô®Áß∞ËäÇÁÇπ ) ÈÄöËøáËäÇÁÇπ‰∫íËÅîÁΩëÁªúËøûÊé•ËÄåÊàêÔºåÊØè‰∏™ËäÇÁÇπÂè™ËÆøÈóÆËá™Â∑±ÁöÑÊú¨Âú∞ËµÑÊ∫ê ( ÂÜÖÂ≠ò„ÄÅÂ≠òÂÇ®Á≠â ) ÔºåÊòØ‰∏ÄÁßçÂÆåÂÖ®Êó†ÂÖ±‰∫´ (Share Nothing) ÁªìÊûÑÔºåÂõ†ËÄåÊâ©Â±ïËÉΩÂäõÊúÄÂ•ΩÔºåÁêÜËÆ∫‰∏äÂÖ∂Êâ©Â±ïÊó†ÈôêÂà∂ÔºåÁõÆÂâçÁöÑÊäÄÊúØÂèØÂÆûÁé∞ 512 ‰∏™ËäÇÁÇπ‰∫íËÅîÔºåÊï∞ÂçÉ‰∏™ CPU „ÄÇÁõÆÂâç‰∏öÁïåÂØπËäÇÁÇπ‰∫íËÅîÁΩëÁªúÊöÇÊó†Ê†áÂáÜÔºåÂ¶Ç NCR ÁöÑ Bynet Ôºå IBM ÁöÑ SPSwitch ÔºåÂÆÉ‰ª¨ÈÉΩÈááÁî®‰∫Ü‰∏çÂêåÁöÑÂÜÖÈÉ®ÂÆûÁé∞Êú∫Âà∂„ÄÇ‰ΩÜËäÇÁÇπ‰∫íËÅîÁΩë‰ªÖ‰æõ MPP ÊúçÂä°Âô®ÂÜÖÈÉ®‰ΩøÁî®ÔºåÂØπÁî®Êà∑ËÄåË®ÄÊòØÈÄèÊòéÁöÑ„ÄÇ Âú® MPP Á≥ªÁªü‰∏≠ÔºåÊØè‰∏™ SMP ËäÇÁÇπ‰πüÂèØ‰ª•ËøêË°åËá™Â∑±ÁöÑÊìç‰ΩúÁ≥ªÁªü„ÄÅÊï∞ÊçÆÂ∫ìÁ≠â„ÄÇ‰ΩÜÂíå NUMA ‰∏çÂêåÁöÑÊòØÔºåÂÆÉ‰∏çÂ≠òÂú®ÂºÇÂú∞ÂÜÖÂ≠òËÆøÈóÆÁöÑÈóÆÈ¢ò„ÄÇÊç¢Ë®Ä‰πãÔºåÊØè‰∏™ËäÇÁÇπÂÜÖÁöÑ CPU ‰∏çËÉΩËÆøÈóÆÂè¶‰∏Ä‰∏™ËäÇÁÇπÁöÑÂÜÖÂ≠ò„ÄÇËäÇÁÇπ‰πãÈó¥ÁöÑ‰ø°ÊÅØ‰∫§‰∫íÊòØÈÄöËøáËäÇÁÇπ‰∫íËÅîÁΩëÁªúÂÆûÁé∞ÁöÑÔºåËøô‰∏™ËøáÁ®ã‰∏ÄËà¨Áß∞‰∏∫Êï∞ÊçÆÈáçÂàÜÈÖç (Data Redistribution) „ÄÇ ‰ΩÜÊòØ MPP ÊúçÂä°Âô®ÈúÄË¶Å‰∏ÄÁßçÂ§çÊùÇÁöÑÊú∫Âà∂Êù•Ë∞ÉÂ∫¶ÂíåÂπ≥Ë°°ÂêÑ‰∏™ËäÇÁÇπÁöÑË¥üËΩΩÂíåÂπ∂Ë°åÂ§ÑÁêÜËøáÁ®ã„ÄÇÁõÆÂâç‰∏Ä‰∫õÂü∫‰∫é MPP ÊäÄÊúØÁöÑÊúçÂä°Âô®ÂæÄÂæÄÈÄöËøáÁ≥ªÁªüÁ∫ßËΩØ‰ª∂ ( Â¶ÇÊï∞ÊçÆÂ∫ì ) Êù•Â±èËîΩËøôÁßçÂ§çÊùÇÊÄß„ÄÇ‰∏æ‰æãÊù•ËØ¥Ôºå NCR ÁöÑ Teradata Â∞±ÊòØÂü∫‰∫é MPP ÊäÄÊúØÁöÑ‰∏Ä‰∏™ÂÖ≥Á≥ªÊï∞ÊçÆÂ∫ìËΩØ‰ª∂ÔºåÂü∫‰∫éÊ≠§Êï∞ÊçÆÂ∫ìÊù•ÂºÄÂèëÂ∫îÁî®Êó∂Ôºå‰∏çÁÆ°ÂêéÂè∞ÊúçÂä°Âô®Áî±Â§öÂ∞ë‰∏™ËäÇÁÇπÁªÑÊàêÔºåÂºÄÂèë‰∫∫ÂëòÊâÄÈù¢ÂØπÁöÑÈÉΩÊòØÂêå‰∏Ä‰∏™Êï∞ÊçÆÂ∫ìÁ≥ªÁªüÔºåËÄå‰∏çÈúÄË¶ÅËÄÉËôëÂ¶Ç‰ΩïË∞ÉÂ∫¶ÂÖ∂‰∏≠ÊüêÂá†‰∏™ËäÇÁÇπÁöÑË¥üËΩΩ„ÄÇ MPP (Massively Parallel Processing)ÔºåÂ§ßËßÑÊ®°Âπ∂Ë°åÂ§ÑÁêÜÁ≥ªÁªüÔºåËøôÊ†∑ÁöÑÁ≥ªÁªüÊòØÁî±ËÆ∏Â§öÊùæËÄ¶ÂêàÁöÑÂ§ÑÁêÜÂçïÂÖÉÁªÑÊàêÁöÑÔºåË¶ÅÊ≥®ÊÑèÁöÑÊòØËøôÈáåÊåáÁöÑÊòØÂ§ÑÁêÜÂçïÂÖÉËÄå‰∏çÊòØÂ§ÑÁêÜÂô®„ÄÇÊØè‰∏™ÂçïÂÖÉÂÜÖÁöÑCPUÈÉΩÊúâËá™Â∑±ÁßÅÊúâÁöÑËµÑÊ∫êÔºåÂ¶ÇÊÄªÁ∫øÔºåÂÜÖÂ≠òÔºåÁ°¨ÁõòÁ≠â„ÄÇÂú®ÊØè‰∏™ÂçïÂÖÉÂÜÖÈÉΩÊúâÊìç‰ΩúÁ≥ªÁªüÂíåÁÆ°ÁêÜÊï∞ÊçÆÂ∫ìÁöÑÂÆû‰æãÂ§çÊú¨„ÄÇËøôÁßçÁªìÊûÑÊúÄÂ§ßÁöÑÁâπÁÇπÂú®‰∫é‰∏çÂÖ±‰∫´ËµÑÊ∫ê„ÄÇ NUMAÁªìÊûÑ‰∏ãÁöÑÁºìÂ≠ò‰∏ÄËá¥ÊÄßË¶ÅÁü•ÈÅìÔºåMESIÂçèËÆÆËß£ÂÜ≥ÁöÑÊòØ‰º†ÁªüSMPÁªìÊûÑ‰∏ãÁºìÂ≠òÁöÑ‰∏ÄËá¥ÊÄßÔºå‰∏∫‰∫ÜÂú®NUMAÊû∂ÊûÑ‰πüÂÆûÁé∞ÁºìÂ≠ò‰∏ÄËá¥ÊÄßÔºåintelÂºïÂÖ•‰∫ÜMESIÁöÑ‰∏Ä‰∏™ÊãìÂ±ïÂçèËÆÆ‚ÄìMESIFÔºå‰ΩÜÊòØÁõÆÂâçÂπ∂Ê≤°Êúâ‰ªÄ‰πàËµÑÊñôÔºå‰πüÊ≤°Ê≥ïÁ†îÁ©∂ÔºåÊõ¥Â§öÊ∂àÊÅØËØ∑Êü•ÈòÖintelÁöÑwiki„ÄÇ JavaÂÜÖÂ≠òÊ®°ÂûãËµ∑Âõ†Êàë‰ª¨ÂÜôÁ®ãÂ∫èÔºå‰∏∫‰ªÄ‰πàË¶ÅËÄÉËôëÂÜÖÂ≠òÊ®°ÂûãÂë¢ÔºåÊàë‰ª¨ÂâçÈù¢ËØ¥‰∫ÜÔºåÁºìÂ≠ò‰∏ÄËá¥ÊÄßÈóÆÈ¢ò„ÄÅÂÜÖÂ≠ò‰∏ÄËá¥ÈóÆÈ¢òÊòØÁ°¨‰ª∂ÁöÑ‰∏çÊñ≠ÂçáÁ∫ßÂØºËá¥ÁöÑ„ÄÇËß£ÂÜ≥ÈóÆÈ¢òÔºåÊúÄÁÆÄÂçïÁõ¥Êé•ÁöÑÂÅöÊ≥ïÂ∞±ÊòØÂ∫üÈô§CPUÁºìÂ≠òÔºåËÆ©CPUÁõ¥Êé•Âíå‰∏ªÂ≠ò‰∫§‰∫í„ÄÇ‰ΩÜÊòØÔºåËøô‰πàÂÅöËôΩÁÑ∂ÂèØ‰ª•‰øùËØÅÂ§öÁ∫øÁ®ã‰∏ãÁöÑÂπ∂ÂèëÈóÆÈ¢ò„ÄÇ‰ΩÜÊòØÔºåËøôÂ∞±ÊúâÁÇπÊó∂‰ª£ÂÄíÈÄÄ‰∫Ü„ÄÇ ÊâÄ‰ª•Ôºå‰∏∫‰∫Ü‰øùËØÅÂπ∂ÂèëÁºñÁ®ã‰∏≠ÂèØ‰ª•Êª°Ë∂≥ÂéüÂ≠êÊÄß„ÄÅÂèØËßÅÊÄßÂèäÊúâÂ∫èÊÄß„ÄÇÊúâ‰∏Ä‰∏™ÈáçË¶ÅÁöÑÊ¶ÇÂøµÔºåÈÇ£Â∞±ÊòØ‚Äî‚ÄîÂÜÖÂ≠òÊ®°Âûã„ÄÇ Âç≥‰∏∫‰∫Ü‰øùËØÅÂÖ±‰∫´ÂÜÖÂ≠òÁöÑÊ≠£Á°ÆÊÄßÔºàÂèØËßÅÊÄß„ÄÅÊúâÂ∫èÊÄß„ÄÅÂéüÂ≠êÊÄßÔºâÔºåÈúÄË¶ÅÂÜÖÂ≠òÊ®°ÂûãÊù•ÂÆö‰πâ‰∫ÜÂÖ±‰∫´ÂÜÖÂ≠òÁ≥ªÁªü‰∏≠Â§öÁ∫øÁ®ãÁ®ãÂ∫èËØªÂÜôÊìç‰ΩúË°å‰∏∫ÁöÑÁõ∏Â∫îËßÑËåÉ~ JMMJavaÂÜÖÂ≠òÊ®°ÂûãÊòØÊ†πÊçÆËã±ÊñáJava Memory ModelÔºàJMMÔºâÁøªËØëËøáÊù•ÁöÑ„ÄÇÂÖ∂ÂÆûJMMÂπ∂‰∏çÂÉèJVMÂÜÖÂ≠òÁªìÊûÑ‰∏ÄÊ†∑ÊòØÁúüÂÆûÂ≠òÂú®ÁöÑ„ÄÇÂÆÉÊòØ‰∏ÄÁßçÁ¨¶ÂêàÂÜÖÂ≠òÊ®°ÂûãËßÑËåÉÁöÑÔºåÂ±èËîΩ‰∫ÜÂêÑÁßçÁ°¨‰ª∂ÂíåÊìç‰ΩúÁ≥ªÁªüÁöÑËÆøÈóÆÂ∑ÆÂºÇÁöÑÔºå‰øùËØÅ‰∫ÜJavaÁ®ãÂ∫èÂú®ÂêÑÁßçÂπ≥Âè∞‰∏ãÂØπÂÜÖÂ≠òÁöÑËÆøÈóÆÈÉΩËÉΩ‰øùËØÅÊïàÊûú‰∏ÄËá¥ÁöÑÊú∫Âà∂ÂèäËßÑËåÉ„ÄÇÂ∞±ÂÉèJSR-133: Java Memory Model and Thread Specification ‰∏≠ÊèèËø∞‰∫ÜÔºåJMMÊòØÂíåÂ§öÁ∫øÁ®ãÁõ∏ÂÖ≥ÁöÑÔºå‰ªñÊèèËø∞‰∫Ü‰∏ÄÁªÑËßÑÂàôÊàñËßÑËåÉÔºåËøô‰∏™ËßÑËåÉÂÆö‰πâ‰∫Ü‰∏Ä‰∏™Á∫øÁ®ãÂØπÂÖ±‰∫´ÂèòÈáèÁöÑÂÜôÂÖ•Êó∂ÂØπÂè¶‰∏Ä‰∏™Á∫øÁ®ãÊòØÂèØËßÅÁöÑ„ÄÇ JavaÁöÑÂ§öÁ∫øÁ®ã‰πãÈó¥ÊòØÈÄöËøáÂÖ±‰∫´ÂÜÖÂ≠òËøõË°åÈÄö‰ø°ÁöÑÔºåËÄåÁî±‰∫éÈááÁî®ÂÖ±‰∫´ÂÜÖÂ≠òËøõË°åÈÄö‰ø°ÔºåÂú®ÈÄö‰ø°ËøáÁ®ã‰∏≠‰ºöÂ≠òÂú®‰∏ÄÁ≥ªÂàóÂ¶ÇÂèØËßÅÊÄß„ÄÅÂéüÂ≠êÊÄß„ÄÅÈ°∫Â∫èÊÄßÁ≠âÈóÆÈ¢òÔºåËÄåJMMÂ∞±ÊòØÂõ¥ÁªïÁùÄÂ§öÁ∫øÁ®ãÈÄö‰ø°‰ª•Âèä‰∏éÂÖ∂Áõ∏ÂÖ≥ÁöÑ‰∏ÄÁ≥ªÂàóÁâπÊÄßËÄåÂª∫Á´ãÁöÑÊ®°Âûã„ÄÇJMMÂÆö‰πâ‰∫Ü‰∏Ä‰∫õËØ≠Ê≥ïÈõÜÔºåËøô‰∫õËØ≠Ê≥ïÈõÜÊò†Â∞ÑÂà∞JavaËØ≠Ë®Ä‰∏≠Â∞±ÊòØvolatile„ÄÅsynchronizedÁ≠âÂÖ≥ÈîÆÂ≠ó„ÄÇ Âú®JMM‰∏≠ÔºåÊàë‰ª¨ÊääÂ§ö‰∏™Á∫øÁ®ãÈó¥ÈÄö‰ø°ÁöÑÂÖ±‰∫´ÂÜÖÂ≠òÁß∞‰πã‰∏∫‰∏ªÂÜÖÂ≠òÔºåËÄåÂú®Âπ∂ÂèëÁºñÁ®ã‰∏≠Â§ö‰∏™Á∫øÁ®ãÈÉΩÁª¥Êä§‰∫Ü‰∏Ä‰∏™Ëá™Â∑±ÁöÑÊú¨Âú∞ÂÜÖÂ≠òÔºàËøôÊòØ‰∏™ÊäΩË±°Ê¶ÇÂøµÔºâÔºåÂÖ∂‰∏≠‰øùÂ≠òÁöÑÊï∞ÊçÆÊòØ‰∏ªÂÜÖÂ≠ò‰∏≠ÁöÑÊï∞ÊçÆÊã∑Ë¥ù„ÄÇËÄåJMM‰∏ªË¶ÅÊòØÊéßÂà∂Êú¨Âú∞ÂÜÖÂ≠òÂíå‰∏ªÂÜÖÂ≠ò‰πãÈó¥ÁöÑÊï∞ÊçÆ‰∫§‰∫íÁöÑ„ÄÇ ‰∏ãÈù¢ÁúãÁúãJavaÂÜÖÂ≠òÊ®°ÂûãÊäΩË±°ÂõæÔºö Âú®Java‰∏≠ÔºåJMMÊòØ‰∏Ä‰∏™ÈùûÂ∏∏ÈáçË¶ÅÁöÑÊ¶ÇÂøµÔºåÊ≠£ÊòØÁî±‰∫éÊúâ‰∫ÜJMMÔºåJavaÁöÑÂπ∂ÂèëÁºñÁ®ãÊâçËÉΩÈÅøÂÖçÂæàÂ§öÈóÆÈ¢ò„ÄÇ JMMÂêåÊ≠•ÂÖ´ÁßçÊìç‰ΩúJMMËßÑÂÆö‰∫Ü‰∏ÄÁ≥ªÂàóÊìç‰ΩúÔºå‰∏∫‰∫Ü‰øùËØÅÊï∞ÊçÆÁöÑÊìç‰ΩúÁöÑ‰∏ÄËá¥Êï∞ÊçÆÁöÑ‰∏ÄËá¥„ÄÇ Ôºà1Ôºâlock(ÈîÅÂÆö)Ôºö‰ΩúÁî®‰∫é‰∏ªÂÜÖÂ≠òÁöÑÂèòÈáèÔºåÊää‰∏Ä‰∏™ÂèòÈáèÊ†áËÆ∞‰∏∫‰∏ÄÊù°Á∫øÁ®ãÁã¨Âç†Áä∂ÊÄÅ Ôºà2Ôºâunlock(Ëß£ÈîÅ)Ôºö‰ΩúÁî®‰∫é‰∏ªÂÜÖÂ≠òÁöÑÂèòÈáèÔºåÊää‰∏Ä‰∏™Â§Ñ‰∫éÈîÅÂÆöÁä∂ÊÄÅÁöÑÂèòÈáèÈáäÊîæÂá∫Êù•ÔºåÈáäÊîæÂêéÁöÑÂèòÈáèÊâçÂèØ‰ª•Ë¢´ÂÖ∂‰ªñÁ∫øÁ®ãÈîÅÂÆö Ôºà3Ôºâread(ËØªÂèñ)Ôºö‰ΩúÁî®‰∫é‰∏ªÂÜÖÂ≠òÁöÑÂèòÈáèÔºåÊää‰∏Ä‰∏™ÂèòÈáèÂÄº‰ªé‰∏ªÂÜÖÂ≠ò‰º†ËæìÂà∞Á∫øÁ®ãÁöÑÂ∑•‰ΩúÂÜÖÂ≠ò‰∏≠Ôºå‰ª•‰æøÈöèÂêéÁöÑloadÂä®‰Ωú‰ΩøÁî® Ôºà4Ôºâload(ËΩΩÂÖ•)Ôºö‰ΩúÁî®‰∫éÂ∑•‰ΩúÂÜÖÂ≠òÁöÑÂèòÈáèÔºåÂÆÉÊääreadÊìç‰Ωú‰ªé‰∏ªÂÜÖÂ≠ò‰∏≠ÂæóÂà∞ÁöÑÂèòÈáèÂÄºÊîæÂÖ•Â∑•‰ΩúÂÜÖÂ≠òÁöÑÂèòÈáèÂâØÊú¨‰∏≠ Ôºà5Ôºâuse(‰ΩøÁî®)Ôºö‰ΩúÁî®‰∫éÂ∑•‰ΩúÂÜÖÂ≠òÁöÑÂèòÈáèÔºåÊääÂ∑•‰ΩúÂÜÖÂ≠ò‰∏≠ÁöÑ‰∏Ä‰∏™ÂèòÈáèÂÄº‰º†ÈÄíÁªôÊâßË°åÂºïÊìé Ôºà6Ôºâassign(ËµãÂÄº)Ôºö‰ΩúÁî®‰∫éÂ∑•‰ΩúÂÜÖÂ≠òÁöÑÂèòÈáèÔºåÂÆÉÊää‰∏Ä‰∏™‰ªéÊâßË°åÂºïÊìéÊé•Êî∂Âà∞ÁöÑÂÄºËµãÁªôÂ∑•‰ΩúÂÜÖÂ≠òÁöÑÂèòÈáè Ôºà7Ôºâstore(Â≠òÂÇ®)Ôºö‰ΩúÁî®‰∫éÂ∑•‰ΩúÂÜÖÂ≠òÁöÑÂèòÈáèÔºåÊääÂ∑•‰ΩúÂÜÖÂ≠ò‰∏≠ÁöÑ‰∏Ä‰∏™ÂèòÈáèÁöÑÂÄº‰º†ÈÄÅÂà∞‰∏ªÂÜÖÂ≠ò‰∏≠Ôºå‰ª•‰æøÈöèÂêéÁöÑwriteÁöÑÊìç‰Ωú Ôºà8Ôºâwrite(ÂÜôÂÖ•)Ôºö‰ΩúÁî®‰∫éÂ∑•‰ΩúÂÜÖÂ≠òÁöÑÂèòÈáèÔºåÂÆÉÊäästoreÊìç‰Ωú‰ªéÂ∑•‰ΩúÂÜÖÂ≠ò‰∏≠ÁöÑ‰∏Ä‰∏™ÂèòÈáèÁöÑÂÄº‰º†ÈÄÅÂà∞‰∏ªÂÜÖÂ≠òÁöÑÂèòÈáè‰∏≠ ÊåâÁÖßÈ°∫Â∫èÂ¶ÇÂõæÊâÄÁ§∫Ôºö ÂêåÊ≠•ËßÑÂàôÂêåÊ≠•ËßÑÂàôÂàÜÊûêÔºö ‰∏çÂÖÅËÆ∏‰∏Ä‰∏™Á∫øÁ®ãÊó†ÂéüÂõ†Âú∞ÔºàÊ≤°ÊúâÂèëÁîüËøá‰ªª‰ΩïassignÊìç‰ΩúÔºâÊääÊï∞ÊçÆ‰ªéÂ∑•‰ΩúÂÜÖÂ≠òÂêåÊ≠•‰ºö‰∏ªÂÜÖÂ≠ò‰∏≠ ‰∏Ä‰∏™Êñ∞ÁöÑÂèòÈáèÂè™ËÉΩÂú®‰∏ªÂÜÖÂ≠ò‰∏≠ËØûÁîüÔºå‰∏çÂÖÅËÆ∏Âú®Â∑•‰ΩúÂÜÖÂ≠ò‰∏≠Áõ¥Êé•‰ΩøÁî®‰∏Ä‰∏™Êú™Ë¢´ÂàùÂßãÂåñÔºàloadÊàñËÄÖassignÔºâÁöÑÂèòÈáè„ÄÇÂç≥Â∞±ÊòØÂØπ‰∏Ä‰∏™ÂèòÈáèÂÆûÊñΩuseÂíåstoreÊìç‰Ωú‰πãÂâçÔºåÂøÖÈ°ªÂÖàËá™Ë°åassignÂíåloadÊìç‰Ωú„ÄÇ ‰∏Ä‰∏™ÂèòÈáèÂú®Âêå‰∏ÄÊó∂ÂàªÂè™ÂÖÅËÆ∏‰∏ÄÊù°Á∫øÁ®ãÂØπÂÖ∂ËøõË°ålockÊìç‰ΩúÔºå‰ΩÜlockÊìç‰ΩúÂèØ‰ª•Ë¢´Âêå‰∏ÄÁ∫øÁ®ãÈáçÂ§çÊâßË°åÂ§öÊ¨°ÔºåÂ§öÊ¨°ÊâßË°ålockÂêéÔºåÂè™ÊúâÊâßË°åÁõ∏ÂêåÊ¨°Êï∞ÁöÑunlockÊìç‰ΩúÔºåÂèòÈáèÊâç‰ºöË¢´Ëß£ÈîÅ„ÄÇlockÂíåunlockÂøÖÈ°ªÊàêÂØπÂá∫Áé∞„ÄÇ Â¶ÇÊûúÂØπ‰∏Ä‰∏™ÂèòÈáèÊâßË°ålockÊìç‰ΩúÔºåÂ∞Ü‰ºöÊ∏ÖÁ©∫Â∑•‰ΩúÂÜÖÂ≠ò‰∏≠Ê≠§ÂèòÈáèÁöÑÂÄºÔºåÂú®ÊâßË°åÂºïÊìé‰ΩøÁî®Ëøô‰∏™ÂèòÈáè‰πãÂâçÈúÄË¶ÅÈáçÊñ∞ÊâßË°åloadÊàñassignÊìç‰ΩúÂàùÂßãÂåñÂèòÈáèÁöÑÂÄº„ÄÇ Â¶ÇÊûú‰∏Ä‰∏™ÂèòÈáè‰∫ãÂÖàÊ≤°ÊúâË¢´lockÊìç‰ΩúÈîÅÂÆöÔºåÂàô‰∏çÂÖÅËÆ∏ÂØπÂÆÉÊâßË°åunlockÊìç‰ΩúÔºõ‰πü‰∏çÂÖÅËÆ∏Âéªunlock‰∏Ä‰∏™Ë¢´ÂÖ∂‰ªñÁ∫øÁ®ãÈîÅÂÆöÁöÑÂèòÈáè„ÄÇ ÂØπ‰∏Ä‰∏™ÂèòÈáèÊâßË°åunlockÊìç‰Ωú‰πãÂâçÔºåÂøÖÈ°ªÂÖàÊääÊ≠§ÂèòÈáèÂêåÊ≠•Âà∞‰∏ªÂÜÖÂ≠ò‰∏≠ÔºàÊâßË°åstoreÂíåwriteÊìç‰ΩúÔºâ JMMÂ∫îÁî®‰∫ÜËß£JavaÂ§öÁ∫øÁ®ãÁöÑÊúãÂèãÈÉΩÁü•ÈÅìÔºåÂú®Java‰∏≠Êèê‰æõ‰∫Ü‰∏ÄÁ≥ªÂàóÂíåÂπ∂ÂèëÂ§ÑÁêÜÁõ∏ÂÖ≥ÁöÑÂÖ≥ÈîÆÂ≠óÔºåÊØîÂ¶Çvolatile„ÄÅsynchronized„ÄÅfinal„ÄÅconcurrentÂåÖÁ≠â„ÄÇÂÖ∂ÂÆûËøô‰∫õÂ∞±ÊòØJavaÂÜÖÂ≠òÊ®°ÂûãÂ∞ÅË£Ö‰∫ÜÂ∫ïÂ±ÇÁöÑÂÆûÁé∞ÂêéÊèê‰æõÁªôÊàë‰ª¨‰ΩøÁî®ÁöÑ‰∏Ä‰∫õÂÖ≥ÈîÆÂ≠ó„ÄÇ Âú®ÂºÄÂèëÂ§öÁ∫øÁ®ãÁöÑ‰ª£Á†ÅÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨ÂèØ‰ª•Áõ¥Êé•‰ΩøÁî®synchronizedÁ≠âÂÖ≥ÈîÆÂ≠óÊù•ÊéßÂà∂Âπ∂ÂèëÔºå‰ªéÊù•Â∞±‰∏çÈúÄË¶ÅÂÖ≥ÂøÉÂ∫ïÂ±ÇÁöÑÁºñËØëÂô®‰ºòÂåñ„ÄÅÁºìÂ≠ò‰∏ÄËá¥ÊÄßÁ≠âÈóÆÈ¢ò„ÄÇÊâÄ‰ª•ÔºåJavaÂÜÖÂ≠òÊ®°ÂûãÔºåÈô§‰∫ÜÂÆö‰πâ‰∫Ü‰∏ÄÂ•óËßÑËåÉÔºåËøòÊèê‰æõ‰∫Ü‰∏ÄÁ≥ªÂàóÂéüËØ≠ÔºåÂ∞ÅË£Ö‰∫ÜÂ∫ïÂ±ÇÂÆûÁé∞ÂêéÔºå‰æõÂºÄÂèëËÄÖÁõ¥Êé•‰ΩøÁî®„ÄÇ Âπ∂ÂèëÁºñÁ®ãË¶ÅËß£ÂÜ≥ÂéüÂ≠êÊÄß„ÄÅÊúâÂ∫èÊÄßÂíåÂèØËßÅÊÄßÁöÑÈóÆÈ¢òÔºåÊàë‰ª¨Â∞±ÂÜçÊù•Áúã‰∏ãÔºåÂú®Java‰∏≠ÔºåÂàÜÂà´‰ΩøÁî®‰ªÄ‰πàÊñπÂºèÊù•‰øùËØÅ„ÄÇ ÂéüÂ≠êÊÄßÂéüÂ≠êÊÄßÊòØÊåáÂú®‰∏Ä‰∏™Êìç‰Ωú‰∏≠Â∞±ÊòØcpu‰∏çÂèØ‰ª•Âú®‰∏≠ÈÄîÊöÇÂÅúÁÑ∂ÂêéÂÜçË∞ÉÂ∫¶ÔºåÊó¢‰∏çË¢´‰∏≠Êñ≠Êìç‰ΩúÔºåË¶Å‰∏çÊâßË°åÂÆåÊàêÔºåË¶Å‰∏çÂ∞±‰∏çÊâßË°å„ÄÇ JMMÊèê‰æõ‰øùËØÅ‰∫ÜËÆøÈóÆÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑÂéüÂ≠êÊÄßÔºàÂÖ∂ÂÆûÂú®ÂÜô‰∏Ä‰∏™Â∑•‰ΩúÂÜÖÂ≠òÂèòÈáèÂà∞‰∏ªÂÜÖÂ≠òÊòØÂàÜ‰∏ªË¶Å‰∏§Ê≠•Ôºöstore„ÄÅwriteÔºâÔºå‰ΩÜÊòØÂÆûÈôÖ‰∏öÂä°Â§ÑÁêÜÂú∫ÊôØÂæÄÂæÄÊòØÈúÄË¶ÅÊõ¥Â§ßÁöÑËåÉÂõ¥ÁöÑÂéüÂ≠êÊÄß‰øùËØÅ„ÄÇ Âú®Java‰∏≠Ôºå‰∏∫‰∫Ü‰øùËØÅÂéüÂ≠êÊÄßÔºåÊèê‰æõ‰∫Ü‰∏§‰∏™È´òÁ∫ßÁöÑÂ≠óËäÇÁ†ÅÊåá‰ª§monitorenterÂíåmonitorexitÔºåËÄåËøô‰∏§‰∏™Â≠óËäÇÁ†ÅÔºåÂú®Java‰∏≠ÂØπÂ∫îÁöÑÂÖ≥ÈîÆÂ≠óÂ∞±ÊòØsynchronized„ÄÇ Âõ†Ê≠§ÔºåÂú®Java‰∏≠ÂèØ‰ª•‰ΩøÁî®synchronizedÊù•‰øùËØÅÊñπÊ≥ïÂíå‰ª£Á†ÅÂùóÂÜÖÁöÑÊìç‰ΩúÊòØÂéüÂ≠êÊÄßÁöÑ„ÄÇËøôÈáåÊé®Ëçê‰∏ÄÁØáÊñáÁ´†Ê∑±ÂÖ•ÁêÜËß£JavaÂπ∂Âèë‰πãsynchronizedÂÆûÁé∞ÂéüÁêÜ„ÄÇ ÂèØËßÅÊÄßÂèØËßÅÊÄßÊòØÊåáÂΩìÂ§ö‰∏™Á∫øÁ®ãËÆøÈóÆÂêå‰∏Ä‰∏™ÂèòÈáèÊó∂Ôºå‰∏Ä‰∏™Á∫øÁ®ã‰øÆÊîπ‰∫ÜËøô‰∏™ÂèòÈáèÁöÑÂÄºÔºåÂÖ∂‰ªñÁ∫øÁ®ãËÉΩÂ§üÁ´ãÂç≥ÁúãÂæóÂà∞‰øÆÊîπÁöÑÂÄº„ÄÇ JavaÂÜÖÂ≠òÊ®°ÂûãÊòØÈÄöËøáÂú®ÂèòÈáè‰øÆÊîπÂêéÂ∞ÜÊñ∞ÂÄºÂêåÊ≠•Âõû‰∏ªÂÜÖÂ≠òÔºåÂú®ÂèòÈáèËØªÂèñÂâç‰ªé‰∏ªÂÜÖÂ≠òÂà∑Êñ∞ÂèòÈáèÂÄºÁöÑËøôÁßç‰æùËµñ‰∏ªÂÜÖÂ≠ò‰Ωú‰∏∫‰º†ÈÄíÂ™í‰ªãÁöÑÊñπÂºèÊù•ÂÆûÁé∞ÁöÑ„ÄÇ Java‰∏≠ÁöÑvolatileÂÖ≥ÈîÆÂ≠óÊèê‰æõ‰∫Ü‰∏Ä‰∏™ÂäüËÉΩÔºåÈÇ£Â∞±ÊòØË¢´ÂÖ∂‰øÆÈ•∞ÁöÑÂèòÈáèÂú®Ë¢´‰øÆÊîπÂêéÂèØ‰ª•Á´ãÂç≥ÂêåÊ≠•Âà∞‰∏ªÂÜÖÂ≠òÔºåË¢´ÂÖ∂‰øÆÈ•∞ÁöÑÂèòÈáèÂú®ÊØèÊ¨°ÊòØÁî®‰πãÂâçÈÉΩ‰ªé‰∏ªÂÜÖÂ≠òÂà∑Êñ∞„ÄÇÂõ†Ê≠§ÔºåÂèØ‰ª•‰ΩøÁî®volatileÊù•‰øùËØÅÂ§öÁ∫øÁ®ãÊìç‰ΩúÊó∂ÂèòÈáèÁöÑÂèØËßÅÊÄß„ÄÇ Èô§‰∫ÜvolatileÔºåJava‰∏≠ÁöÑsynchronizedÂíåfinal„ÄÅstatic‰∏â‰∏™ÂÖ≥ÈîÆÂ≠ó‰πüÂèØ‰ª•ÂÆûÁé∞ÂèØËßÅÊÄß„ÄÇ‰∏ãÈù¢ÂàÜ‰∫´‰∏Ä‰∏ãÊàëÁöÑËØª‰π¶Á¨îËÆ∞Ôºö ÊúâÂ∫èÊÄßÊúâÂ∫èÊÄßÂç≥Á®ãÂ∫èÊâßË°åÁöÑÈ°∫Â∫èÊåâÁÖß‰ª£Á†ÅÁöÑÂÖàÂêéÈ°∫Â∫èÊâßË°å„ÄÇ Âú®Java‰∏≠ÔºåÂèØ‰ª•‰ΩøÁî®synchronizedÂíåvolatileÊù•‰øùËØÅÂ§öÁ∫øÁ®ã‰πãÈó¥Êìç‰ΩúÁöÑÊúâÂ∫èÊÄß„ÄÇÂÆûÁé∞ÊñπÂºèÊúâÊâÄÂå∫Âà´Ôºö volatileÂÖ≥ÈîÆÂ≠ó‰ºöÁ¶ÅÊ≠¢Êåá‰ª§ÈáçÊéí„ÄÇsynchronizedÂÖ≥ÈîÆÂ≠ó‰øùËØÅÂêå‰∏ÄÊó∂ÂàªÂè™ÂÖÅËÆ∏‰∏ÄÊù°Á∫øÁ®ãÊìç‰Ωú„ÄÇ Â•Ω‰∫ÜÔºåËøôÈáåÁÆÄÂçïÁöÑ‰ªãÁªçÂÆå‰∫ÜJavaÂπ∂ÂèëÁºñÁ®ã‰∏≠Ëß£ÂÜ≥ÂéüÂ≠êÊÄß„ÄÅÂèØËßÅÊÄß‰ª•ÂèäÊúâÂ∫èÊÄßÂèØ‰ª•‰ΩøÁî®ÁöÑÂÖ≥ÈîÆÂ≠ó„ÄÇËØªËÄÖÂèØËÉΩÂèëÁé∞‰∫ÜÔºåÂ•ΩÂÉèsynchronizedÂÖ≥ÈîÆÂ≠óÊòØ‰∏áËÉΩÁöÑÔºå‰ªñÂèØ‰ª•ÂêåÊó∂Êª°Ë∂≥‰ª•‰∏ä‰∏âÁßçÁâπÊÄßÔºåËøôÂÖ∂ÂÆû‰πüÊòØÂæàÂ§ö‰∫∫Êª•Áî®synchronizedÁöÑÂéüÂõ†„ÄÇ ‰ΩÜÊòØsynchronizedÊòØÊØîËæÉÂΩ±ÂìçÊÄßËÉΩÁöÑÔºåËôΩÁÑ∂ÁºñËØëÂô®Êèê‰æõ‰∫ÜÂæàÂ§öÈîÅ‰ºòÂåñÊäÄÊúØÔºå‰ΩÜÊòØ‰πü‰∏çÂª∫ËÆÆËøáÂ∫¶‰ΩøÁî®„ÄÇ JVMÊàë‰ª¨ÈÉΩÁü•ÈÅìÔºåJava‰ª£Á†ÅÊòØË¶ÅËøêË°åÂú®ËôöÊãüÊú∫‰∏äÁöÑÔºåËÄåËôöÊãüÊú∫Âú®ÊâßË°åJavaÁ®ãÂ∫èÁöÑËøáÁ®ã‰∏≠‰ºöÊääÊâÄÁÆ°ÁêÜÁöÑÂÜÖÂ≠òÂàíÂàÜ‰∏∫Ëã•Âπ≤‰∏™‰∏çÂêåÁöÑÊï∞ÊçÆÂå∫ÂüüÔºåËøô‰∫õÂå∫ÂüüÈÉΩÊúâÂêÑËá™ÁöÑÁî®ÈÄî„ÄÇ‰∏ãÈù¢Êàë‰ª¨Êù•ËØ¥ËØ¥JVMËøêË°åÊó∂ÂÜÖÂ≠òÂå∫ÂüüÁªìÊûÑ JVMËøêË°åÊó∂ÂÜÖÂ≠òÂå∫ÂüüÁªìÊûÑÂú®„ÄäJavaËôöÊãüÊú∫ËßÑËåÉÔºàJava SE 8Ôºâ„Äã‰∏≠ÊèèËø∞‰∫ÜJVMËøêË°åÊó∂ÂÜÖÂ≠òÂå∫ÂüüÁªìÊûÑÂ¶Ç‰∏ãÔºö 1.Á®ãÂ∫èËÆ°Êï∞Âô® Á®ãÂ∫èËÆ°Êï∞Âô®ÔºàProgram Counter RegisterÔºâÔºå‰πüÊúâÁß∞‰Ωú‰∏∫PCÂØÑÂ≠òÂô®„ÄÇÊÉ≥ÂøÖÂ≠¶ËøáÊ±áÁºñËØ≠Ë®ÄÁöÑÊúãÂèãÂØπÁ®ãÂ∫èËÆ°Êï∞Âô®Ëøô‰∏™Ê¶ÇÂøµÂπ∂‰∏çÈôåÁîüÔºåÂú®Ê±áÁºñËØ≠Ë®Ä‰∏≠ÔºåÁ®ãÂ∫èËÆ°Êï∞Âô®ÊòØÊåáCPU‰∏≠ÁöÑÂØÑÂ≠òÂô®ÔºåÂÆÉ‰øùÂ≠òÁöÑÊòØÁ®ãÂ∫èÂΩìÂâçÊâßË°åÁöÑÊåá‰ª§ÁöÑÂú∞ÂùÄÔºà‰πüÂèØ‰ª•ËØ¥‰øùÂ≠ò‰∏ã‰∏ÄÊù°Êåá‰ª§ÁöÑÊâÄÂú®Â≠òÂÇ®ÂçïÂÖÉÁöÑÂú∞ÂùÄÔºâÔºåÂΩìCPUÈúÄË¶ÅÊâßË°åÊåá‰ª§Êó∂ÔºåÈúÄË¶Å‰ªéÁ®ãÂ∫èËÆ°Êï∞Âô®‰∏≠ÂæóÂà∞ÂΩìÂâçÈúÄË¶ÅÊâßË°åÁöÑÊåá‰ª§ÊâÄÂú®Â≠òÂÇ®ÂçïÂÖÉÁöÑÂú∞ÂùÄÔºåÁÑ∂ÂêéÊ†πÊçÆÂæóÂà∞ÁöÑÂú∞ÂùÄËé∑ÂèñÂà∞Êåá‰ª§ÔºåÂú®ÂæóÂà∞Êåá‰ª§‰πãÂêéÔºåÁ®ãÂ∫èËÆ°Êï∞Âô®‰æøËá™Âä®Âä†1ÊàñËÄÖÊ†πÊçÆËΩ¨ÁßªÊåáÈíàÂæóÂà∞‰∏ã‰∏ÄÊù°Êåá‰ª§ÁöÑÂú∞ÂùÄÔºåÂ¶ÇÊ≠§Âæ™ÁéØÔºåÁõ¥Ëá≥ÊâßË°åÂÆåÊâÄÊúâÁöÑÊåá‰ª§„ÄÇ ËôΩÁÑ∂JVM‰∏≠ÁöÑÁ®ãÂ∫èËÆ°Êï∞Âô®Âπ∂‰∏çÂÉèÊ±áÁºñËØ≠Ë®Ä‰∏≠ÁöÑÁ®ãÂ∫èËÆ°Êï∞Âô®‰∏ÄÊ†∑ÊòØÁâ©ÁêÜÊ¶ÇÂøµ‰∏äÁöÑCPUÂØÑÂ≠òÂô®Ôºå‰ΩÜÊòØJVM‰∏≠ÁöÑÁ®ãÂ∫èËÆ°Êï∞Âô®ÁöÑÂäüËÉΩË∑üÊ±áÁºñËØ≠Ë®Ä‰∏≠ÁöÑÁ®ãÂ∫èËÆ°Êï∞Âô®ÁöÑÂäüËÉΩÂú®ÈÄªËæë‰∏äÊòØÁ≠âÂêåÁöÑÔºå‰πüÂ∞±ÊòØËØ¥ÊòØÁî®Êù•ÊåáÁ§∫ ÊâßË°åÂì™Êù°Êåá‰ª§ÁöÑ„ÄÇ Áî±‰∫éÂú®JVM‰∏≠ÔºåÂ§öÁ∫øÁ®ãÊòØÈÄöËøáÁ∫øÁ®ãËΩÆÊµÅÂàáÊç¢Êù•Ëé∑ÂæóCPUÊâßË°åÊó∂Èó¥ÁöÑÔºåÂõ†Ê≠§ÔºåÂú®‰ªª‰∏ÄÂÖ∑‰ΩìÊó∂ÂàªÔºå‰∏Ä‰∏™CPUÁöÑÂÜÖÊ†∏Âè™‰ºöÊâßË°å‰∏ÄÊù°Á∫øÁ®ã‰∏≠ÁöÑÊåá‰ª§ÔºåÂõ†Ê≠§Ôºå‰∏∫‰∫ÜËÉΩÂ§ü‰ΩøÂæóÊØè‰∏™Á∫øÁ®ãÈÉΩÂú®Á∫øÁ®ãÂàáÊç¢ÂêéËÉΩÂ§üÊÅ¢Â§çÂú®ÂàáÊç¢‰πãÂâçÁöÑÁ®ãÂ∫èÊâßË°å‰ΩçÁΩÆÔºåÊØè‰∏™Á∫øÁ®ãÈÉΩÈúÄË¶ÅÊúâËá™Â∑±Áã¨Á´ãÁöÑÁ®ãÂ∫èËÆ°Êï∞Âô®ÔºåÂπ∂‰∏î‰∏çËÉΩ‰∫íÁõ∏Ë¢´Âπ≤Êâ∞ÔºåÂê¶ÂàôÂ∞±‰ºöÂΩ±ÂìçÂà∞Á®ãÂ∫èÁöÑÊ≠£Â∏∏ÊâßË°åÊ¨°Â∫è„ÄÇÂõ†Ê≠§ÔºåÂèØ‰ª•Ëøô‰πàËØ¥ÔºåÁ®ãÂ∫èËÆ°Êï∞Âô®ÊòØÊØè‰∏™Á∫øÁ®ãÊâÄÁßÅÊúâÁöÑ„ÄÇ Âú®JVMËßÑËåÉ‰∏≠ËßÑÂÆöÔºåÂ¶ÇÊûúÁ∫øÁ®ãÊâßË°åÁöÑÊòØÈùûnativeÊñπÊ≥ïÔºåÂàôÁ®ãÂ∫èËÆ°Êï∞Âô®‰∏≠‰øùÂ≠òÁöÑÊòØÂΩìÂâçÈúÄË¶ÅÊâßË°åÁöÑÊåá‰ª§ÁöÑÂú∞ÂùÄÔºõÂ¶ÇÊûúÁ∫øÁ®ãÊâßË°åÁöÑÊòØnativeÊñπÊ≥ïÔºåÂàôÁ®ãÂ∫èËÆ°Êï∞Âô®‰∏≠ÁöÑÂÄºÊòØundefined„ÄÇ Áî±‰∫éÁ®ãÂ∫èËÆ°Êï∞Âô®‰∏≠Â≠òÂÇ®ÁöÑÊï∞ÊçÆÊâÄÂç†Á©∫Èó¥ÁöÑÂ§ßÂ∞è‰∏ç‰ºöÈöèÁ®ãÂ∫èÁöÑÊâßË°åËÄåÂèëÁîüÊîπÂèòÔºåÂõ†Ê≠§ÔºåÂØπ‰∫éÁ®ãÂ∫èËÆ°Êï∞Âô®ÊòØ‰∏ç‰ºöÂèëÁîüÂÜÖÂ≠òÊ∫¢Âá∫Áé∞Ë±°(OutOfMemory)ÁöÑ„ÄÇ 2.JavaÊ†à JavaÊ†à‰πüÁß∞‰ΩúËôöÊãüÊú∫Ê†àÔºàJava Vitual Machine StackÔºâÔºå‰πüÂ∞±ÊòØÊàë‰ª¨Â∏∏Â∏∏ÊâÄËØ¥ÁöÑÊ†àÔºåË∑üCËØ≠Ë®ÄÁöÑÊï∞ÊçÆÊÆµ‰∏≠ÁöÑÊ†àÁ±ª‰ºº„ÄÇ‰∫ãÂÆû‰∏äÔºåJavaÊ†àÊòØJavaÊñπÊ≥ïÊâßË°åÁöÑÂÜÖÂ≠òÊ®°Âûã„ÄÇ‰∏∫‰ªÄ‰πàËøô‰πàËØ¥Âë¢Ôºü‰∏ãÈù¢Â∞±Êù•Ëß£Èáä‰∏Ä‰∏ãÂÖ∂‰∏≠ÁöÑÂéüÂõ†„ÄÇ JavaÊ†à‰∏≠Â≠òÊîæÁöÑÊòØ‰∏Ä‰∏™‰∏™ÁöÑÊ†àÂ∏ßÔºåÊØè‰∏™Ê†àÂ∏ßÂØπÂ∫î‰∏Ä‰∏™Ë¢´Ë∞ÉÁî®ÁöÑÊñπÊ≥ïÔºåÂú®Ê†àÂ∏ß‰∏≠ÂåÖÊã¨Â±ÄÈÉ®ÂèòÈáèË°®(Local Variables)„ÄÅÊìç‰ΩúÊï∞Ê†à(Operand Stack)„ÄÅÊåáÂêëÂΩìÂâçÊñπÊ≥ïÊâÄÂ±ûÁöÑÁ±ªÁöÑËøêË°åÊó∂Â∏∏ÈáèÊ±†ÔºàËøêË°åÊó∂Â∏∏ÈáèÊ±†ÁöÑÊ¶ÇÂøµÂú®ÊñπÊ≥ïÂå∫ÈÉ®ÂàÜ‰ºöË∞àÂà∞ÔºâÁöÑÂºïÁî®(Reference to runtime constant pool)„ÄÅÊñπÊ≥ïËøîÂõûÂú∞ÂùÄ(Return Address)Âíå‰∏Ä‰∫õÈ¢ùÂ§ñÁöÑÈôÑÂä†‰ø°ÊÅØ„ÄÇÂΩìÁ∫øÁ®ãÊâßË°å‰∏Ä‰∏™ÊñπÊ≥ïÊó∂ÔºåÂ∞±‰ºöÈöè‰πãÂàõÂª∫‰∏Ä‰∏™ÂØπÂ∫îÁöÑÊ†àÂ∏ßÔºåÂπ∂Â∞ÜÂª∫Á´ãÁöÑÊ†àÂ∏ßÂéãÊ†à„ÄÇÂΩìÊñπÊ≥ïÊâßË°åÂÆåÊØï‰πãÂêéÔºå‰æø‰ºöÂ∞ÜÊ†àÂ∏ßÂá∫Ê†à„ÄÇÂõ†Ê≠§ÂèØÁü•ÔºåÁ∫øÁ®ãÂΩìÂâçÊâßË°åÁöÑÊñπÊ≥ïÊâÄÂØπÂ∫îÁöÑÊ†àÂ∏ßÂøÖÂÆö‰Ωç‰∫éJavaÊ†àÁöÑÈ°∂ÈÉ®„ÄÇËÆ≤Âà∞ËøôÈáåÔºåÂ§ßÂÆ∂Â∞±Â∫îËØ•‰ºöÊòéÁôΩ‰∏∫‰ªÄ‰πà Âú® ‰ΩøÁî® ÈÄíÂΩíÊñπÊ≥ïÁöÑÊó∂ÂÄôÂÆπÊòìÂØºËá¥Ê†àÂÜÖÂ≠òÊ∫¢Âá∫ÁöÑÁé∞Ë±°‰∫Ü‰ª•Âèä‰∏∫‰ªÄ‰πàÊ†àÂå∫ÁöÑÁ©∫Èó¥‰∏çÁî®Á®ãÂ∫èÂëòÂéªÁÆ°ÁêÜ‰∫ÜÔºàÂΩìÁÑ∂Âú®Java‰∏≠ÔºåÁ®ãÂ∫èÂëòÂü∫Êú¨‰∏çÁî®ÂÖ≥Á≥ªÂà∞ÂÜÖÂ≠òÂàÜÈÖçÂíåÈáäÊîæÁöÑ‰∫ãÊÉÖÔºåÂõ†‰∏∫JavaÊúâËá™Â∑±ÁöÑÂûÉÂúæÂõûÊî∂Êú∫Âà∂ÔºâÔºåËøôÈÉ®ÂàÜÁ©∫Èó¥ÁöÑÂàÜÈÖçÂíåÈáäÊîæÈÉΩÊòØÁî±Á≥ªÁªüËá™Âä®ÂÆûÊñΩÁöÑ„ÄÇÂØπ‰∫éÊâÄÊúâÁöÑÁ®ãÂ∫èËÆæËÆ°ËØ≠Ë®ÄÊù•ËØ¥ÔºåÊ†àËøôÈÉ®ÂàÜÁ©∫Èó¥ÂØπÁ®ãÂ∫èÂëòÊù•ËØ¥ÊòØ‰∏çÈÄèÊòéÁöÑ„ÄÇ‰∏ãÂõæË°®Á§∫‰∫Ü‰∏Ä‰∏™JavaÊ†àÁöÑÊ®°ÂûãÔºö Â±ÄÈÉ®ÂèòÈáèË°®ÔºåÈ°æÂêçÊÄù‰πâÔºåÊÉ≥ÂøÖ‰∏çÁî®Ëß£ÈáäÂ§ßÂÆ∂Â∫îËØ•ÊòéÁôΩÂÆÉÁöÑ‰ΩúÁî®‰∫ÜÂêß„ÄÇÂ∞±ÊòØÁî®Êù•Â≠òÂÇ®ÊñπÊ≥ï‰∏≠ÁöÑÂ±ÄÈÉ®ÂèòÈáèÔºàÂåÖÊã¨Âú®ÊñπÊ≥ï‰∏≠Â£∞ÊòéÁöÑÈùûÈùôÊÄÅÂèòÈáè‰ª•ÂèäÂáΩÊï∞ÂΩ¢ÂèÇÔºâ„ÄÇÂØπ‰∫éÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑÂèòÈáèÔºåÂàôÁõ¥Êé•Â≠òÂÇ®ÂÆÉÁöÑÂÄºÔºåÂØπ‰∫éÂºïÁî®Á±ªÂûãÁöÑÂèòÈáèÔºåÂàôÂ≠òÁöÑÊòØÊåáÂêëÂØπË±°ÁöÑÂºïÁî®„ÄÇÂ±ÄÈÉ®ÂèòÈáèË°®ÁöÑÂ§ßÂ∞èÂú®ÁºñËØëÂô®Â∞±ÂèØ‰ª•Á°ÆÂÆöÂÖ∂Â§ßÂ∞è‰∫ÜÔºåÂõ†Ê≠§Âú®Á®ãÂ∫èÊâßË°åÊúüÈó¥Â±ÄÈÉ®ÂèòÈáèË°®ÁöÑÂ§ßÂ∞èÊòØ‰∏ç‰ºöÊîπÂèòÁöÑ„ÄÇ Êìç‰ΩúÊï∞Ê†àÔºåÊÉ≥ÂøÖÂ≠¶ËøáÊï∞ÊçÆÁªìÊûÑ‰∏≠ÁöÑÊ†àÁöÑÊúãÂèãÊÉ≥ÂøÖÂØπË°®ËææÂºèÊ±ÇÂÄºÈóÆÈ¢ò‰∏ç‰ºöÈôåÁîüÔºåÊ†àÊúÄÂÖ∏ÂûãÁöÑ‰∏Ä‰∏™Â∫îÁî®Â∞±ÊòØÁî®Êù•ÂØπË°®ËææÂºèÊ±ÇÂÄº„ÄÇÊÉ≥ÊÉ≥‰∏Ä‰∏™Á∫øÁ®ãÊâßË°åÊñπÊ≥ïÁöÑËøáÁ®ã‰∏≠ÔºåÂÆûÈôÖ‰∏äÂ∞±ÊòØ‰∏çÊñ≠ÊâßË°åËØ≠Âè•ÁöÑËøáÁ®ãÔºåËÄåÂΩíÊ†πÂà∞Â∫ïÂ∞±ÊòØËøõË°åËÆ°ÁÆóÁöÑËøáÁ®ã„ÄÇÂõ†Ê≠§ÂèØ‰ª•Ëøô‰πàËØ¥ÔºåÁ®ãÂ∫è‰∏≠ÁöÑÊâÄÊúâËÆ°ÁÆóËøáÁ®ãÈÉΩÊòØÂú®ÂÄüÂä©‰∫éÊìç‰ΩúÊï∞Ê†àÊù•ÂÆåÊàêÁöÑ„ÄÇ ÊåáÂêëËøêË°åÊó∂Â∏∏ÈáèÊ±†ÁöÑÂºïÁî®ÔºåÂõ†‰∏∫Âú®ÊñπÊ≥ïÊâßË°åÁöÑËøáÁ®ã‰∏≠ÊúâÂèØËÉΩÈúÄË¶ÅÁî®Âà∞Á±ª‰∏≠ÁöÑÂ∏∏ÈáèÔºåÊâÄ‰ª•ÂøÖÈ°ªË¶ÅÊúâ‰∏Ä‰∏™ÂºïÁî®ÊåáÂêëËøêË°åÊó∂Â∏∏Èáè„ÄÇ ÊñπÊ≥ïËøîÂõûÂú∞ÂùÄÔºåÂΩì‰∏Ä‰∏™ÊñπÊ≥ïÊâßË°åÂÆåÊØï‰πãÂêéÔºåË¶ÅËøîÂõû‰πãÂâçË∞ÉÁî®ÂÆÉÁöÑÂú∞ÊñπÔºåÂõ†Ê≠§Âú®Ê†àÂ∏ß‰∏≠ÂøÖÈ°ª‰øùÂ≠ò‰∏Ä‰∏™ÊñπÊ≥ïËøîÂõûÂú∞ÂùÄ„ÄÇ Áî±‰∫éÊØè‰∏™Á∫øÁ®ãÊ≠£Âú®ÊâßË°åÁöÑÊñπÊ≥ïÂèØËÉΩ‰∏çÂêåÔºåÂõ†Ê≠§ÊØè‰∏™Á∫øÁ®ãÈÉΩ‰ºöÊúâ‰∏Ä‰∏™Ëá™Â∑±ÁöÑJavaÊ†àÔºå‰∫í‰∏çÂπ≤Êâ∞„ÄÇ 3.Êú¨Âú∞ÊñπÊ≥ïÊ†à Êú¨Âú∞ÊñπÊ≥ïÊ†à‰∏éJavaÊ†àÁöÑ‰ΩúÁî®ÂíåÂéüÁêÜÈùûÂ∏∏Áõ∏‰ºº„ÄÇÂå∫Âà´Âè™‰∏çËøáÊòØJavaÊ†àÊòØ‰∏∫ÊâßË°åJavaÊñπÊ≥ïÊúçÂä°ÁöÑÔºåËÄåÊú¨Âú∞ÊñπÊ≥ïÊ†àÂàôÊòØ‰∏∫ÊâßË°åÊú¨Âú∞ÊñπÊ≥ïÔºàNative MethodÔºâÊúçÂä°ÁöÑ„ÄÇÂú®JVMËßÑËåÉ‰∏≠ÔºåÂπ∂Ê≤°ÊúâÂØπÊú¨Âú∞ÊñπÂèëÂ±ïÁöÑÂÖ∑‰ΩìÂÆûÁé∞ÊñπÊ≥ï‰ª•ÂèäÊï∞ÊçÆÁªìÊûÑ‰ΩúÂº∫Âà∂ËßÑÂÆöÔºåËôöÊãüÊú∫ÂèØ‰ª•Ëá™Áî±ÂÆûÁé∞ÂÆÉ„ÄÇÂú®HotSoptËôöÊãüÊú∫‰∏≠Áõ¥Êé•Â∞±ÊääÊú¨Âú∞ÊñπÊ≥ïÊ†àÂíåJavaÊ†àÂêà‰∫å‰∏∫‰∏Ä„ÄÇ 4.Â†Ü Âú®CËØ≠Ë®Ä‰∏≠ÔºåÂ†ÜËøôÈÉ®ÂàÜÁ©∫Èó¥ÊòØÂîØ‰∏Ä‰∏Ä‰∏™Á®ãÂ∫èÂëòÂèØ‰ª•ÁÆ°ÁêÜÁöÑÂÜÖÂ≠òÂå∫Âüü„ÄÇÁ®ãÂ∫èÂëòÂèØ‰ª•ÈÄöËøámallocÂáΩÊï∞ÂíåfreeÂáΩÊï∞Âú®Â†Ü‰∏äÁî≥ËØ∑ÂíåÈáäÊîæÁ©∫Èó¥„ÄÇÈÇ£‰πàÂú®Java‰∏≠ÊòØÊÄé‰πàÊ†∑ÁöÑÂë¢Ôºü Java‰∏≠ÁöÑÂ†ÜÊòØÁî®Êù•Â≠òÂÇ®ÂØπË±°Êú¨Ë∫´ÁöÑ‰ª•ÂèäÊï∞ÁªÑÔºàÂΩìÁÑ∂ÔºåÊï∞ÁªÑÂºïÁî®ÊòØÂ≠òÊîæÂú®JavaÊ†à‰∏≠ÁöÑÔºâ„ÄÇÂè™‰∏çËøáÂíåCËØ≠Ë®Ä‰∏≠ÁöÑ‰∏çÂêåÔºåÂú®Java‰∏≠ÔºåÁ®ãÂ∫èÂëòÂü∫Êú¨‰∏çÁî®ÂéªÂÖ≥ÂøÉÁ©∫Èó¥ÈáäÊîæÁöÑÈóÆÈ¢òÔºåJavaÁöÑÂûÉÂúæÂõûÊî∂Êú∫Âà∂‰ºöËá™Âä®ËøõË°åÂ§ÑÁêÜ„ÄÇÂõ†Ê≠§ËøôÈÉ®ÂàÜÁ©∫Èó¥‰πüÊòØJavaÂûÉÂúæÊî∂ÈõÜÂô®ÁÆ°ÁêÜÁöÑ‰∏ªË¶ÅÂå∫Âüü„ÄÇÂè¶Â§ñÔºåÂ†ÜÊòØË¢´ÊâÄÊúâÁ∫øÁ®ãÂÖ±‰∫´ÁöÑÔºåÂú®JVM‰∏≠Âè™Êúâ‰∏Ä‰∏™Â†Ü„ÄÇ 5.ÊñπÊ≥ïÂå∫ ÊñπÊ≥ïÂå∫Âú®JVM‰∏≠‰πüÊòØ‰∏Ä‰∏™ÈùûÂ∏∏ÈáçË¶ÅÁöÑÂå∫ÂüüÔºåÂÆÉ‰∏éÂ†Ü‰∏ÄÊ†∑ÔºåÊòØË¢´Á∫øÁ®ãÂÖ±‰∫´ÁöÑÂå∫Âüü„ÄÇÂú®ÊñπÊ≥ïÂå∫‰∏≠ÔºåÂ≠òÂÇ®‰∫ÜÊØè‰∏™Á±ªÁöÑ‰ø°ÊÅØÔºàÂåÖÊã¨Á±ªÁöÑÂêçÁß∞„ÄÅÊñπÊ≥ï‰ø°ÊÅØ„ÄÅÂ≠óÊÆµ‰ø°ÊÅØÔºâ„ÄÅÈùôÊÄÅÂèòÈáè„ÄÅÂ∏∏Èáè‰ª•ÂèäÁºñËØëÂô®ÁºñËØëÂêéÁöÑ‰ª£Á†ÅÁ≠â„ÄÇ Âú®ClassÊñá‰ª∂‰∏≠Èô§‰∫ÜÁ±ªÁöÑÂ≠óÊÆµ„ÄÅÊñπÊ≥ï„ÄÅÊé•Âè£Á≠âÊèèËø∞‰ø°ÊÅØÂ§ñÔºåËøòÊúâ‰∏ÄÈ°π‰ø°ÊÅØÊòØÂ∏∏ÈáèÊ±†ÔºåÁî®Êù•Â≠òÂÇ®ÁºñËØëÊúüÈó¥ÁîüÊàêÁöÑÂ≠óÈù¢ÈáèÂíåÁ¨¶Âè∑ÂºïÁî®„ÄÇ Âú®ÊñπÊ≥ïÂå∫‰∏≠Êúâ‰∏Ä‰∏™ÈùûÂ∏∏ÈáçË¶ÅÁöÑÈÉ®ÂàÜÂ∞±ÊòØËøêË°åÊó∂Â∏∏ÈáèÊ±†ÔºåÂÆÉÊòØÊØè‰∏Ä‰∏™Á±ªÊàñÊé•Âè£ÁöÑÂ∏∏ÈáèÊ±†ÁöÑËøêË°åÊó∂Ë°®Á§∫ÂΩ¢ÂºèÔºåÂú®Á±ªÂíåÊé•Âè£Ë¢´Âä†ËΩΩÂà∞JVMÂêéÔºåÂØπÂ∫îÁöÑËøêË°åÊó∂Â∏∏ÈáèÊ±†Â∞±Ë¢´ÂàõÂª∫Âá∫Êù•„ÄÇÂΩìÁÑ∂Âπ∂ÈùûClassÊñá‰ª∂Â∏∏ÈáèÊ±†‰∏≠ÁöÑÂÜÖÂÆπÊâçËÉΩËøõÂÖ•ËøêË°åÊó∂Â∏∏ÈáèÊ±†ÔºåÂú®ËøêË°åÊúüÈó¥‰πüÂèØÂ∞ÜÊñ∞ÁöÑÂ∏∏ÈáèÊîæÂÖ•ËøêË°åÊó∂Â∏∏ÈáèÊ±†‰∏≠ÔºåÊØîÂ¶ÇStringÁöÑinternÊñπÊ≥ï„ÄÇ Âú®JVMËßÑËåÉ‰∏≠ÔºåÊ≤°ÊúâÂº∫Âà∂Ë¶ÅÊ±ÇÊñπÊ≥ïÂå∫ÂøÖÈ°ªÂÆûÁé∞ÂûÉÂúæÂõûÊî∂„ÄÇÂæàÂ§ö‰∫∫‰π†ÊÉØÂ∞ÜÊñπÊ≥ïÂå∫Áß∞‰∏∫‚ÄúÊ∞∏‰πÖ‰ª£‚ÄùÔºåÊòØÂõ†‰∏∫HotSpotËôöÊãüÊú∫‰ª•Ê∞∏‰πÖ‰ª£Êù•ÂÆûÁé∞ÊñπÊ≥ïÂå∫Ôºå‰ªéËÄåJVMÁöÑÂûÉÂúæÊî∂ÈõÜÂô®ÂèØ‰ª•ÂÉèÁÆ°ÁêÜÂ†ÜÂå∫‰∏ÄÊ†∑ÁÆ°ÁêÜËøôÈÉ®ÂàÜÂå∫ÂüüÔºå‰ªéËÄå‰∏çÈúÄË¶Å‰∏ìÈó®‰∏∫ËøôÈÉ®ÂàÜËÆæËÆ°ÂûÉÂúæÂõûÊî∂Êú∫Âà∂„ÄÇ‰∏çËøáËá™‰ªéJDK7‰πãÂêéÔºåHotspotËôöÊãüÊú∫‰æøÂ∞ÜËøêË°åÊó∂Â∏∏ÈáèÊ±†‰ªéÊ∞∏‰πÖ‰ª£ÁßªÈô§‰∫Ü„ÄÇ JavaÂØπË±°Ê®°ÂûãÁöÑÂÜÖÂ≠òÂ∏ÉÂ±ÄjavaÊòØ‰∏ÄÁßçÈù¢ÂêëÂØπË±°ÁöÑËØ≠Ë®ÄÔºåËÄåJavaÂØπË±°Âú®JVM‰∏≠ÁöÑÂ≠òÂÇ®‰πüÊòØÊúâ‰∏ÄÂÆöÁöÑÁªìÊûÑÁöÑ„ÄÇËÄåËøô‰∏™ÂÖ≥‰∫éJavaÂØπË±°Ëá™Ë∫´ÁöÑÂ≠òÂÇ®Ê®°ÂûãÁß∞‰πã‰∏∫JavaÂØπË±°Ê®°Âûã„ÄÇ HotSpotËôöÊãüÊú∫‰∏≠ÔºåËÆæËÆ°‰∫Ü‰∏Ä‰∏™OOP-Klass Model„ÄÇOOPÔºàOrdinary Object PointerÔºâÊåáÁöÑÊòØÊôÆÈÄöÂØπË±°ÊåáÈíàÔºåËÄåKlassÁî®Êù•ÊèèËø∞ÂØπË±°ÂÆû‰æãÁöÑÂÖ∑‰ΩìÁ±ªÂûã„ÄÇ ÊØè‰∏Ä‰∏™JavaÁ±ªÔºåÂú®Ë¢´JVMÂä†ËΩΩÁöÑÊó∂ÂÄôÔºåJVM‰ºöÁªôËøô‰∏™Á±ªÂàõÂª∫‰∏Ä‰∏™instanceKlassÔºå‰øùÂ≠òÂú®ÊñπÊ≥ïÂå∫ÔºåÁî®Êù•Âú®JVMÂ±ÇË°®Á§∫ËØ•JavaÁ±ª„ÄÇÂΩìÊàë‰ª¨Âú®Java‰ª£Á†Å‰∏≠Ôºå‰ΩøÁî®newÂàõÂª∫‰∏Ä‰∏™ÂØπË±°ÁöÑÊó∂ÂÄôÔºåJVM‰ºöÂàõÂª∫‰∏Ä‰∏™instanceOopDescÂØπË±°ÔºåÂØπË±°Âú®ÂÜÖÂ≠ò‰∏≠Â≠òÂÇ®ÁöÑÂ∏ÉÂ±ÄÂèØ‰ª•ÂàÜ‰∏∫3ÂùóÂå∫ÂüüÔºöÂØπË±°Â§¥ÔºàHeaderÔºâ„ÄÅ ÂÆû‰æãÊï∞ÊçÆÔºàInstance DataÔºâÂíåÂØπÈΩêÂ°´ÂÖÖÔºàPaddingÔºâ„ÄÇ ÂØπË±°Â§¥ÔºöÊ†áËÆ∞Â≠óÔºà32‰ΩçËôöÊãüÊú∫4BÔºå64‰ΩçËôöÊãüÊú∫8BÔºâ + Á±ªÂûãÊåáÈíàÔºà32‰ΩçËôöÊãüÊú∫4BÔºå64‰ΩçËôöÊãüÊú∫8BÔºâ+ [Êï∞ÁªÑÈïøÔºàÂØπ‰∫éÊï∞ÁªÑÂØπË±°ÊâçÈúÄË¶ÅÊ≠§ÈÉ®ÂàÜ‰ø°ÊÅØÔºâ] ÂÆû‰æãÊï∞ÊçÆÔºöÂ≠òÂÇ®ÁöÑÊòØÁúüÊ≠£ÊúâÊïàÊï∞ÊçÆÔºåÂ¶ÇÂêÑÁßçÂ≠óÊÆµÂÜÖÂÆπÔºåÂêÑÂ≠óÊÆµÁöÑÂàÜÈÖçÁ≠ñÁï•‰∏∫longs/doubles„ÄÅints„ÄÅshorts/chars„ÄÅbytes/boolean„ÄÅoops(ordinary object pointers)ÔºåÁõ∏ÂêåÂÆΩÂ∫¶ÁöÑÂ≠óÊÆµÊÄªÊòØË¢´ÂàÜÈÖçÂà∞‰∏ÄËµ∑Ôºå‰æø‰∫é‰πãÂêéÂèñÊï∞ÊçÆ„ÄÇÁà∂Á±ªÂÆö‰πâÁöÑÂèòÈáè‰ºöÂá∫Áé∞Âú®Â≠êÁ±ªÂÆö‰πâÁöÑÂèòÈáèÁöÑÂâçÈù¢„ÄÇ ÂØπÈΩêÂ°´ÂÖÖÔºöÂØπ‰∫é64‰ΩçËôöÊãüÊú∫Êù•ËØ¥ÔºåÂØπË±°Â§ßÂ∞èÂøÖÈ°ªÊòØ8BÁöÑÊï¥Êï∞ÂÄçÔºå‰∏çÂ§üÁöÑËØùÈúÄË¶ÅÂç†‰ΩçÂ°´ÂÖÖ JVMÂÜÖÂ≠òÂûÉÂúæÊî∂ÈõÜÂô®‰∏∫‰∫ÜÁêÜËß£Áé∞ÊúâÊî∂ÈõÜÂô®ÔºåÊàë‰ª¨ÈúÄË¶ÅÂÖà‰∫ÜËß£‰∏Ä‰∫õÊúØËØ≠„ÄÇÊúÄÂü∫Êú¨ÁöÑÂûÉÂúæÊî∂ÈõÜÊ∂âÂèäËØÜÂà´‰∏çÂÜç‰ΩøÁî®ÁöÑÂÜÖÂ≠òÂπ∂‰ΩøÂÖ∂ÂèØÈáçÁî®„ÄÇÁé∞‰ª£Êî∂ÈõÜÂô®Âú®Âá†‰∏™Èò∂ÊÆµËøõË°åËøô‰∏ÄËøáÁ®ãÔºåÂØπ‰∫éËøô‰∫õÈò∂ÊÆµÊàë‰ª¨ÂæÄÂæÄÊúâÂ¶Ç‰∏ãÊèèËø∞Ôºö Âπ∂Ë°å- Âú®JVMËøêË°åÊó∂ÔºåÂêåÊó∂Â≠òÂú®Â∫îÁî®Á®ãÂ∫èÁ∫øÁ®ãÂíåÂûÉÂúæÊî∂ÈõÜÂô®Á∫øÁ®ã„ÄÇ Âπ∂Ë°åÈò∂ÊÆµÊòØÁî±Â§ö‰∏™gcÁ∫øÁ®ãÊâßË°åÔºåÂç≥gcÂ∑•‰ΩúÂú®ÂÆÉ‰ª¨‰πãÈó¥ÂàÜÈÖç„ÄÇ ‰∏çÊ∂âÂèäGCÁ∫øÁ®ãÊòØÂê¶ÈúÄË¶ÅÊöÇÂÅúÂ∫îÁî®Á®ãÂ∫èÁ∫øÁ®ã„ÄÇ ‰∏≤Ë°å- ‰∏≤Ë°åÈò∂ÊÆµ‰ªÖÂú®Âçï‰∏™gcÁ∫øÁ®ã‰∏äÊâßË°å„ÄÇ‰∏é‰πãÂâç‰∏ÄÊ†∑ÔºåÂÆÉ‰πüÊ≤°ÊúâËØ¥ÊòéGCÁ∫øÁ®ãÊòØÂê¶ÈúÄË¶ÅÊöÇÂÅúÂ∫îÁî®Á®ãÂ∫èÁ∫øÁ®ã„ÄÇ STW - STWÈò∂ÊÆµÔºåÂ∫îÁî®Á®ãÂ∫èÁ∫øÁ®ãË¢´ÊöÇÂÅúÔºå‰ª•‰æøgcÊâßË°åÂÖ∂Â∑•‰Ωú„ÄÇ ÂΩìÂ∫îÁî®Á®ãÂ∫èÂõ†‰∏∫GCÊöÇÂÅúÊó∂ÔºåËøôÈÄöÂ∏∏ÊòØÁî±‰∫éStop The WorldÈò∂ÊÆµ„ÄÇ Âπ∂Âèë -Â¶ÇÊûú‰∏Ä‰∏™Èò∂ÊÆµÊòØÂπ∂ÂèëÁöÑÔºåÈÇ£‰πàGCÁ∫øÁ®ãÂèØ‰ª•ÂíåÂ∫îÁî®Á®ãÂ∫èÁ∫øÁ®ãÂêåÊó∂ËøõË°å„ÄÇ Âπ∂ÂèëÈò∂ÊÆµÂæàÂ§çÊùÇÔºåÂõ†‰∏∫ÂÆÉ‰ª¨ÈúÄË¶ÅÂú®Èò∂ÊÆµÂÆåÊàê‰πãÂâçÂ§ÑÁêÜÂèØËÉΩ‰ΩøÂ∑•‰ΩúÊó†ÊïàÔºàËØëËÄÖÊ≥®ÔºöÂõ†‰∏∫ÊòØÂπ∂ÂèëËøõË°åÁöÑÔºåGCÁ∫øÁ®ãÂú®ÂÆåÊàê‰∏ÄÈò∂ÊÆµÁöÑÂêåÊó∂ÔºåÂ∫îÁî®Á∫øÁ®ã‰πüÂú®Â∑•‰Ωú‰∫ßÁîüÊìç‰ΩúÂÜÖÂ≠òÔºåÊâÄ‰ª•ÈúÄË¶ÅÈ¢ùÂ§ñÂ§ÑÁêÜÔºâÁöÑÂ∫îÁî®Á®ãÂ∫èÁ∫øÁ®ã„ÄÇ Â¢ûÈáè -Â¶ÇÊûú‰∏Ä‰∏™Èò∂ÊÆµÊòØÂ¢ûÈáèÁöÑÔºåÈÇ£‰πàÂÆÉÂèØ‰ª•ËøêË°å‰∏ÄÊÆµÊó∂Èó¥‰πãÂêéÁî±‰∫éÊüê‰∫õÊù°‰ª∂ÊèêÂâçÁªàÊ≠¢Ôºå‰æãÂ¶ÇÈúÄË¶ÅÊâßË°åÊõ¥È´ò‰ºòÂÖàÁ∫ßÁöÑgcÈò∂ÊÆµÔºåÂêåÊó∂‰ªçÁÑ∂ÂÆåÊàêÁîü‰∫ßÊÄßÂ∑•‰Ωú„ÄÇ Â¢ûÈáèÈò∂ÊÆµ‰∏éÈúÄË¶ÅÂÆåÂÖ®ÂÆåÊàêÁöÑÈò∂ÊÆµÂΩ¢ÊàêÈ≤úÊòéÂØπÊØî„ÄÇ SerialÊî∂ÈõÜÂô®SerialÊî∂ÈõÜÂô®ÊòØÊúÄÂü∫Êú¨ÁöÑÊî∂ÈõÜÂô®ÔºåËøôÊòØ‰∏Ä‰∏™ÂçïÁ∫øÁ®ãÊî∂ÈõÜÂô®ÔºåÂÆÉ‰ªçÁÑ∂ÊòØJVMÂú®ClientÊ®°Âºè‰∏ãÁöÑÈªòËÆ§Êñ∞Áîü‰ª£Êî∂ÈõÜÂô®„ÄÇÂÆÉÊúâÁùÄ‰ºò‰∫éÂÖ∂‰ªñÊî∂ÈõÜÂô®ÁöÑÂú∞ÊñπÔºöÁÆÄÂçïËÄåÈ´òÊïàÔºà‰∏éÂÖ∂‰ªñÊî∂ÈõÜÂô®ÁöÑÂçïÁ∫øÁ®ãÊØîËæÉÔºâÔºåSerialÊî∂ÈõÜÂô®Áî±‰∫éÊ≤°ÊúâÁ∫øÁ®ã‰∫§‰∫íÁöÑÂºÄÈîÄÔºå‰∏ìÂøÉÂè™ÂÅöÂûÉÂúæÊî∂ÈõÜËá™ÁÑ∂‰πüËé∑ÂæóÊúÄÈ´òÁöÑÊïàÁéá„ÄÇÂú®Áî®Êà∑Ê°åÈù¢Âú∫ÊôØ‰∏ãÔºåÂàÜÈÖçÁªôJVMÁöÑÂÜÖÂ≠ò‰∏ç‰ºöÂ§™Â§öÔºåÂÅúÈ°øÊó∂Èó¥ÂÆåÂÖ®ÂèØ‰ª•Âú®Âá†ÂçÅÂà∞‰∏ÄÁôæÂ§öÊØ´Áßí‰πãÈó¥ÔºåÂè™Ë¶ÅÊî∂ÈõÜ‰∏çÈ¢ëÁπÅÔºåËøôÊòØÂÆåÂÖ®ÂèØ‰ª•Êé•ÂèóÁöÑ„ÄÇ ParNewÊî∂ÈõÜÂô®ParNewÊòØSerialÁöÑÂ§öÁ∫øÁ®ãÁâàÊú¨ÔºåÂú®ÂõûÊî∂ÁÆóÊ≥ï„ÄÅÂØπË±°ÂàÜÈÖçÂéüÂàô‰∏äÈÉΩÊòØ‰∏ÄËá¥ÁöÑ„ÄÇParNewÊî∂ÈõÜÂô®ÊòØËÆ∏Â§öËøêË°åÂú®ServerÊ®°Âºè‰∏ãÁöÑÈªòËÆ§Êñ∞Áîü‰ª£ÂûÉÂúæÊî∂ÈõÜÂô®ÔºåÂÖ∂‰∏ªË¶ÅÂú®‰∫éÈô§‰∫ÜSerialÊî∂ÈõÜÂô®ÔºåÁõÆÂâçÂè™ÊúâParNewÊî∂ÈõÜÂô®ËÉΩÂ§ü‰∏éCMSÊî∂ÈõÜÂô®ÈÖçÂêàÂ∑•‰Ωú„ÄÇ Parallel ScavengeÊî∂ÈõÜÂô®Parallel ScavengeÊî∂ÈõÜÂô®ÊòØ‰∏Ä‰∏™Êñ∞Áîü‰ª£ÂûÉÂúæÊî∂ÈõÜÂô®ÔºåÂÖ∂‰ΩøÁî®ÁöÑÁÆóÊ≥ïÊòØÂ§çÂà∂ÁÆóÊ≥ïÔºå‰πüÊòØÂπ∂Ë°åÁöÑÂ§öÁ∫øÁ®ãÊî∂ÈõÜÂô®„ÄÇ Parallel Scavenge Êî∂ÈõÜÂô®Êõ¥ÂÖ≥Ê≥®ÂèØÊéßÂà∂ÁöÑÂêûÂêêÈáèÔºåÂêûÂêêÈáèÁ≠â‰∫éËøêË°åÁî®Êà∑‰ª£Á†ÅÁöÑÊó∂Èó¥/(ËøêË°åÁî®Êà∑‰ª£Á†ÅÁöÑÊó∂Èó¥+ÂûÉÂúæÊî∂ÈõÜÊó∂Èó¥)„ÄÇÁõ¥ËßÇ‰∏äÔºåÂè™Ë¶ÅÊúÄÂ§ßÁöÑÂûÉÂúæÊî∂ÈõÜÂÅúÈ°øÊó∂Èó¥Ë∂äÂ∞èÔºåÂêûÂêêÈáèÊòØË∂äÈ´òÁöÑÔºå‰ΩÜÊòØGCÂÅúÈ°øÊó∂Èó¥ÁöÑÁº©Áü≠ÊòØ‰ª•Áâ∫Áâ≤ÂêûÂêêÈáèÂíåÊñ∞Áîü‰ª£Á©∫Èó¥‰Ωú‰∏∫‰ª£‰ª∑ÁöÑ„ÄÇÊØîÂ¶ÇÂéüÊù•10ÁßíÊî∂ÈõÜ‰∏ÄÊ¨°ÔºåÊØèÊ¨°ÂÅúÈ°ø100ÊØ´ÁßíÔºåÁé∞Âú®ÂèòÊàê5ÁßíÊî∂ÈõÜ‰∏ÄÊ¨°ÔºåÊØèÊ¨°ÂÅúÈ°ø70ÊØ´Áßí„ÄÇÂÅúÈ°øÊó∂Èó¥‰∏ãÈôçÁöÑÂêåÊó∂ÔºåÂêûÂêêÈáè‰πü‰∏ãÈôç‰∫Ü„ÄÇ ÂÅúÈ°øÊó∂Èó¥Ë∂äÁü≠Â∞±Ë∂äÈÄÇÂêàÈúÄË¶Å‰∏éÁî®Êà∑‰∫§‰∫íÁöÑÁ®ãÂ∫èÔºõËÄåÈ´òÂêûÂêêÈáèÂàôÂèØ‰ª•ÊúÄÈ´òÊïàÁöÑÂà©Áî®CPUÁöÑÊó∂Èó¥ÔºåÂ∞ΩÂø´ÁöÑÂÆåÊàêËÆ°ÁÆó‰ªªÂä°Ôºå‰∏ªË¶ÅÈÄÇÁî®‰∫éÂêéÂè∞ËøêÁÆó„ÄÇ Serial OldÊî∂ÈõÜÂô®Serial OldÊî∂ÈõÜÂô®ÊòØSerialÊî∂ÈõÜÂô®ÁöÑËÄÅÂπ¥‰ª£ÁâàÊú¨Ôºå‰πüÊòØ‰∏Ä‰∏™ÂçïÁ∫øÁ®ãÊî∂ÈõÜÂô®ÔºåÈááÁî®‚ÄúÊ†áËÆ∞-Êï¥ÁêÜÁÆóÊ≥ï‚ÄùËøõË°åÂõûÊî∂„ÄÇÂÖ∂ËøêË°åËøáÁ®ã‰∏éSerialÊî∂ÈõÜÂô®‰∏ÄÊ†∑„ÄÇ Parallel OldÊî∂ÈõÜÂô®Parallel OldÊî∂ÈõÜÂô®ÊòØParallel ScavengeÊî∂ÈõÜÂô®ÁöÑËÄÅÂπ¥‰ª£ÁâàÊú¨Ôºå‰ΩøÁî®Â§öÁ∫øÁ®ãÂíåÊ†áËÆ∞-Êï¥ÁêÜÁÆóÊ≥ïËøõË°åÂûÉÂúæÂõûÊî∂„ÄÇÂÖ∂ÈÄöÂ∏∏‰∏éParallel ScavengeÊî∂ÈõÜÂô®ÈÖçÂêà‰ΩøÁî®Ôºå‚ÄúÂêûÂêêÈáè‰ºòÂÖà‚ÄùÊî∂ÈõÜÂô®ÊòØËøô‰∏™ÁªÑÂêàÁöÑÁâπÁÇπÔºåÂú®Ê≥®ÈáçÂêûÂêêÈáèÂíåCPUËµÑÊ∫êÊïèÊÑüÁöÑÂú∫ÂêàÔºåÈÉΩÂèØ‰ª•‰ΩøÁî®Ëøô‰∏™ÁªÑÂêà„ÄÇ CMS Êî∂ÈõÜÂô®CMSÔºàConcurrent Mark SweepÔºâÊî∂ÈõÜÂô®ÊòØ‰∏ÄÁßç‰ª•Ëé∑ÂèñÊúÄÁü≠ÂÅúÈ°øÊó∂Èó¥‰∏∫ÁõÆÊ†áÁöÑÊî∂ÈõÜÂô®ÔºåCMSÊî∂ÈõÜÂô®ÈááÁî®Ê†áËÆ∞‚ÄìÊ∏ÖÈô§ÁÆóÊ≥ïÔºåËøêË°åÂú®ËÄÅÂπ¥‰ª£„ÄÇ‰∏ªË¶ÅÂåÖÂê´‰ª•‰∏ãÂá†‰∏™Ê≠•È™§Ôºö ÂàùÂßãÊ†áËÆ∞ Âπ∂ÂèëÊ†áËÆ∞ ÈáçÊñ∞Ê†áËÆ∞ Âπ∂ÂèëÊ∏ÖÈô§ ÂÖ∂‰∏≠ÂàùÂßãÊ†áËÆ∞ÂíåÈáçÊñ∞Ê†áËÆ∞‰ªçÁÑ∂ÈúÄË¶Å‚ÄúStop the world‚Äù„ÄÇÂàùÂßãÊ†áËÆ∞‰ªÖ‰ªÖÊ†áËÆ∞GC RootËÉΩÁõ¥Êé•ÂÖ≥ËÅîÁöÑÂØπË±°ÔºåÂπ∂ÂèëÊ†áËÆ∞Â∞±ÊòØËøõË°åGC Root TracingËøáÁ®ãÔºåËÄåÈáçÊñ∞Ê†áËÆ∞ÂàôÊòØ‰∏∫‰∫Ü‰øÆÊ≠£Âπ∂ÂèëÊ†áËÆ∞ÊúüÈó¥ÔºåÂõ†Áî®Êà∑Á®ãÂ∫èÁªßÁª≠ËøêË°åËÄåÂØºËá¥Ê†áËÆ∞ÂèòÂä®ÁöÑÈÇ£ÈÉ®ÂàÜÂØπË±°ÁöÑÊ†áËÆ∞ËÆ∞ÂΩï„ÄÇ Áî±‰∫éÊï¥‰∏™ËøáÁ®ã‰∏≠ÊúÄËÄóÊó∂ÁöÑÂπ∂ÂèëÊ†áËÆ∞ÂíåÂπ∂ÂèëÊ∏ÖÈô§ÔºåÊî∂ÈõÜÁ∫øÁ®ãÂíåÁî®Êà∑Á∫øÁ®ã‰∏ÄËµ∑Â∑•‰ΩúÔºåÊâÄ‰ª•ÊÄª‰Ωì‰∏äÊù•ËØ¥ÔºåCMSÊî∂ÈõÜÂô®ÂõûÊî∂ËøáÁ®ãÊòØ‰∏éÁî®Êà∑Á∫øÁ®ãÂπ∂ÂèëÊâßË°åÁöÑ„ÄÇËôΩÁÑ∂CMS‰ºòÁÇπÊòØÂπ∂ÂèëÊî∂ÈõÜ„ÄÅ‰ΩéÂÅúÈ°øÔºåÂæàÂ§ßÁ®ãÂ∫¶‰∏äÂ∑≤ÁªèÊòØ‰∏Ä‰∏™‰∏çÈîôÁöÑÂûÉÂúæÊî∂ÈõÜÂô®Ôºå‰ΩÜÊòØËøòÊòØÊúâ‰∏â‰∏™ÊòæËëóÁöÑÁº∫ÁÇπÔºö CMSÊî∂ÈõÜÂô®ÂØπCPUËµÑÊ∫êÂæàÊïèÊÑü„ÄÇÂú®Âπ∂ÂèëÈò∂ÊÆµÔºåËôΩÁÑ∂ÂÆÉ‰∏ç‰ºöÂØºËá¥Áî®Êà∑Á∫øÁ®ãÂÅúÈ°øÔºå‰ΩÜÊòØ‰ºöÂõ†‰∏∫Âç†Áî®‰∏ÄÈÉ®ÂàÜÁ∫øÁ®ãÔºàCPUËµÑÊ∫êÔºâËÄåÂØºËá¥Â∫îÁî®Á®ãÂ∫èÂèòÊÖ¢„ÄÇ CMSÊî∂ÈõÜÂô®‰∏çËÉΩÂ§ÑÁêÜÊµÆÂä®ÂûÉÂúæ„ÄÇÊâÄË∞ìÁöÑ‚ÄúÊµÆÂä®ÂûÉÂúæ‚ÄùÔºåÂ∞±ÊòØÂú®Âπ∂ÂèëÊ†áËÆ∞Èò∂ÊÆµÔºåÁî±‰∫éÁî®Êà∑Á®ãÂ∫èÂú®ËøêË°åÔºåÈÇ£‰πàËá™ÁÑ∂Â∞±‰ºöÊúâÊñ∞ÁöÑÂûÉÂúæ‰∫ßÁîüÔºåËøôÈÉ®ÂàÜÂûÉÂúæË¢´Ê†áËÆ∞ËøáÂêéÔºåCMSÊó†Ê≥ïÂú®ÂΩìÊ¨°ÈõÜ‰∏≠Â§ÑÁêÜÂÆÉ‰ª¨ÔºåÂè™Â•ΩÂú®‰∏ã‰∏ÄÊ¨°GCÁöÑÊó∂ÂÄôÂ§ÑÁêÜÔºåËøôÈÉ®ÂàÜÊú™Â§ÑÁêÜÁöÑÂûÉÂúæÂ∞±Áß∞‰∏∫‚ÄúÊµÆÂä®ÂûÉÂúæ‚Äù„ÄÇ‰πüÊòØÁî±‰∫éÂú®ÂûÉÂúæÊî∂ÈõÜÈò∂ÊÆµÁ®ãÂ∫èËøòÈúÄË¶ÅËøêË°åÔºåÂç≥ËøòÈúÄË¶ÅÈ¢ÑÁïôË∂≥Â§üÁöÑÂÜÖÂ≠òÁ©∫Èó¥‰æõÁî®Êà∑‰ΩøÁî®ÔºåÂõ†Ê≠§CMSÊî∂ÈõÜÂô®‰∏çËÉΩÂÉèÂÖ∂‰ªñÊî∂ÈõÜÂô®ÈÇ£Ê†∑Á≠âÂà∞ËÄÅÂπ¥‰ª£Âá†‰πéÂ°´Êª°ÊâçËøõË°åÊî∂ÈõÜÔºåÈúÄË¶ÅÈ¢ÑÁïô‰∏ÄÈÉ®ÂàÜÁ©∫Èó¥Êèê‰æõÂπ∂ÂèëÊî∂ÈõÜÊó∂Á®ãÂ∫èËøê‰Ωú‰ΩøÁî®„ÄÇË¶ÅÊòØCMSÈ¢ÑÁïôÁöÑÂÜÖÂ≠òÁ©∫Èó¥‰∏çËÉΩÊª°Ë∂≥Á®ãÂ∫èÁöÑË¶ÅÊ±ÇÔºåËøôÊòØJVMÂ∞±‰ºöÂêØÂä®È¢ÑÂ§áÊñπÊ°àÔºö‰∏¥Êó∂ÂêØÂä®Serial OldÊî∂ÈõÜÂô®Êù•Êî∂ÈõÜËÄÅÂπ¥‰ª£ÔºåËøôÊ†∑ÂÅúÈ°øÁöÑÊó∂Èó¥Â∞±‰ºöÂæàÈïø„ÄÇ Áî±‰∫éCMS‰ΩøÁî®Ê†áËÆ∞‚ÄìÊ∏ÖÈô§ÁÆóÊ≥ïÔºåÊâÄ‰ª•Âú®Êî∂ÈõÜ‰πãÂêé‰ºö‰∫ßÁîüÂ§ßÈáèÂÜÖÂ≠òÁ¢éÁâá„ÄÇÂΩìÂÜÖÂ≠òÁ¢éÁâáËøáÂ§öÊó∂ÔºåÂ∞Ü‰ºöÁªôÂàÜÈÖçÂ§ßÂØπË±°Â∏¶Êù•Âõ∞ÈöæÔºåËøôÊòØÂ∞±‰ºöËøõË°åFull GC„ÄÇ G1Êî∂ÈõÜÂô®G1Êî∂ÈõÜÂô®‰∏éCMSÁõ∏ÊØîÊúâÂæàÂ§ßÁöÑÊîπËøõÔºö ¬∑ G1Êî∂ÈõÜÂô®ÈááÁî®Ê†áËÆ∞‚ÄìÊï¥ÁêÜÁÆóÊ≥ïÂÆûÁé∞„ÄÇ ¬∑ ÂèØ‰ª•ÈùûÂ∏∏Á≤æÁ°ÆÂú∞ÊéßÂà∂ÂÅúÈ°ø„ÄÇ ‚Äã G1Êî∂ÈõÜÂô®ÂèØ‰ª•ÂÆûÁé∞Âú®Âü∫Êú¨‰∏çÁâ∫Áâ≤ÂêûÂêêÈáèÁöÑÊÉÖÂÜµ‰∏ãÂÆåÊàê‰ΩéÂÅúÈ°øÁöÑÂÜÖÂ≠òÂõûÊî∂ÔºåËøôÊòØÁî±‰∫éÂÆÉÊûÅÂäõÁöÑÈÅøÂÖçÂÖ®Âå∫ÂüüÁöÑÂõûÊî∂ÔºåG1Êî∂ÈõÜÂô®Â∞ÜJavaÂ†ÜÔºàÂåÖÊã¨Êñ∞Áîü‰ª£ÂíåËÄÅÂπ¥‰ª£ÔºâÂàíÂàÜ‰∏∫Â§ö‰∏™Âå∫ÂüüÔºàRegionÔºâÔºåÂπ∂Âú®ÂêéÂè∞Áª¥Êä§‰∏Ä‰∏™‰ºòÂÖàÂàóË°®ÔºåÊØèÊ¨°Ê†πÊçÆÂÖÅËÆ∏ÁöÑÊó∂Èó¥Ôºå‰ºòÂÖàÂõûÊî∂ÂûÉÂúæÊúÄÂ§öÁöÑÂå∫Âüü „ÄÇ ZGCÊî∂ÈõÜÂô®Java 11 Êñ∞Âä†ÂÖ•ÁöÑZGCÂûÉÂúæÊî∂ÈõÜÂô®Âè∑Áß∞ÂèØ‰ª•ËææÂà∞10ms ‰ª•‰∏ãÁöÑ GC ÂÅúÈ°øÔºåZGCÁªôHotspot Garbage CollectorsÂ¢ûÂä†‰∫Ü‰∏§ÁßçÊñ∞ÊäÄÊúØÔºöÁùÄËâ≤ÊåáÈíàÂíåËØªÂ±èÈöú„ÄÇ‰∏ãÈù¢ÂºïÁî®ÂõΩÂ§ñÊñáÁ´†ËØ¥ÁöÑÂÜÖÂÆπÔºö ÁùÄËâ≤ÊåáÈíàÁùÄËâ≤ÊåáÈíàÊòØ‰∏ÄÁßçÂ∞Ü‰ø°ÊÅØÂ≠òÂÇ®Âú®ÊåáÈíàÔºàÊàñ‰ΩøÁî®JavaÊúØËØ≠ÂºïÁî®Ôºâ‰∏≠ÁöÑÊäÄÊúØ„ÄÇÂõ†‰∏∫Âú®64‰ΩçÂπ≥Âè∞‰∏äÔºàZGC‰ªÖÊîØÊåÅ64‰ΩçÂπ≥Âè∞ÔºâÔºåÊåáÈíàÂèØ‰ª•Â§ÑÁêÜÊõ¥Â§öÁöÑÂÜÖÂ≠òÔºåÂõ†Ê≠§ÂèØ‰ª•‰ΩøÁî®‰∏Ä‰∫õ‰ΩçÊù•Â≠òÂÇ®Áä∂ÊÄÅ„ÄÇ ZGCÂ∞ÜÈôêÂà∂ÊúÄÂ§ßÊîØÊåÅ4TbÂ†ÜÔºà42-bitsÔºâÔºåÈÇ£‰πà‰ºöÂâ©‰∏ã22‰ΩçÂèØÁî®ÔºåÂÆÉÁõÆÂâç‰ΩøÁî®‰∫Ü4‰ΩçÔºö finalizableÔºå remapÔºå mark0Âíåmark1„ÄÇ Êàë‰ª¨Á®çÂêéËß£ÈáäÂÆÉ‰ª¨ÁöÑÁî®ÈÄî„ÄÇ ÁùÄËâ≤ÊåáÈíàÁöÑ‰∏Ä‰∏™ÈóÆÈ¢òÊòØÔºåÂΩìÊÇ®ÈúÄË¶ÅÂèñÊ∂àÁùÄËâ≤Êó∂ÔºåÂÆÉÈúÄË¶ÅÈ¢ùÂ§ñÁöÑÂ∑•‰ΩúÔºàÂõ†‰∏∫ÈúÄË¶ÅÂ±èËîΩ‰ø°ÊÅØ‰ΩçÔºâ„ÄÇ ÂÉèSPARCËøôÊ†∑ÁöÑÂπ≥Âè∞ÊúâÂÜÖÁΩÆÁ°¨‰ª∂ÊîØÊåÅÊåáÈíàÂ±èËîΩÊâÄ‰ª•‰∏çÊòØÈóÆÈ¢òÔºåËÄåÂØπ‰∫éx86Âπ≥Âè∞Êù•ËØ¥ÔºåZGCÂõ¢Èòü‰ΩøÁî®‰∫ÜÁÆÄÊ¥ÅÁöÑÂ§öÈáçÊò†Â∞ÑÊäÄÂ∑ß„ÄÇ Â§öÈáçÊò†Â∞ÑË¶Å‰∫ÜËß£Â§öÈáçÊò†Â∞ÑÁöÑÂ∑•‰ΩúÂéüÁêÜÔºåÊàë‰ª¨ÈúÄË¶ÅÁÆÄË¶ÅËß£ÈáäËôöÊãüÂÜÖÂ≠òÂíåÁâ©ÁêÜÂÜÖÂ≠ò‰πãÈó¥ÁöÑÂå∫Âà´„ÄÇ Áâ©ÁêÜÂÜÖÂ≠òÊòØÁ≥ªÁªüÂèØÁî®ÁöÑÂÆûÈôÖÂÜÖÂ≠òÔºåÈÄöÂ∏∏ÊòØÂÆâË£ÖÁöÑDRAMËäØÁâáÁöÑÂÆπÈáè„ÄÇ ËôöÊãüÂÜÖÂ≠òÊòØÊäΩË±°ÁöÑÔºåËøôÊÑèÂë≥ÁùÄÂ∫îÁî®Á®ãÂ∫èÂØπÔºàÈÄöÂ∏∏ÊòØÈöîÁ¶ªÁöÑÔºâÁâ©ÁêÜÂÜÖÂ≠òÊúâËá™Â∑±ÁöÑËßÜÂõæ„ÄÇ Êìç‰ΩúÁ≥ªÁªüË¥üË¥£Áª¥Êä§ËôöÊãüÂÜÖÂ≠òÂíåÁâ©ÁêÜÂÜÖÂ≠òËåÉÂõ¥‰πãÈó¥ÁöÑÊò†Â∞ÑÔºåÂÆÉÈÄöËøá‰ΩøÁî®È°µË°®ÂíåÂ§ÑÁêÜÂô®ÁöÑÂÜÖÂ≠òÁÆ°ÁêÜÂçïÂÖÉÔºàMMUÔºâÂíåËΩ¨Êç¢Êü•ÊâæÁºìÂÜ≤Âô®ÔºàTLBÔºâÊù•ÂÆûÁé∞Ëøô‰∏ÄÁÇπÔºåÂêéËÄÖËΩ¨Êç¢Â∫îÁî®Á®ãÂ∫èËØ∑Ê±ÇÁöÑÂú∞ÂùÄ„ÄÇ Â§öÈáçÊò†Â∞ÑÊ∂âÂèäÂ∞Ü‰∏çÂêåËåÉÂõ¥ÁöÑËôöÊãüÂÜÖÂ≠òÊò†Â∞ÑÂà∞Âêå‰∏ÄÁâ©ÁêÜÂÜÖÂ≠ò„ÄÇ Áî±‰∫éËÆæËÆ°‰∏≠Âè™Êúâ‰∏Ä‰∏™remapÔºåmark0Âíåmark1Âú®‰ªª‰ΩïÊó∂Èó¥ÁÇπÈÉΩÂèØ‰ª•‰∏∫1ÔºåÂõ†Ê≠§ÂèØ‰ª•‰ΩøÁî®‰∏â‰∏™Êò†Â∞ÑÊù•ÂÆåÊàêÊ≠§Êìç‰Ωú„ÄÇ ZGCÊ∫ê‰ª£Á†Å‰∏≠Êúâ‰∏Ä‰∏™ÂæàÂ•ΩÁöÑÂõæË°®ÂèØ‰ª•ËØ¥ÊòéËøô‰∏ÄÁÇπ„ÄÇ ËØªÂ±èÈöúËØªÂ±èÈöúÊòØÊØèÂΩìÂ∫îÁî®Á®ãÂ∫èÁ∫øÁ®ã‰ªéÂ†ÜÂä†ËΩΩÂºïÁî®Êó∂ËøêË°åÁöÑ‰ª£Á†ÅÁâáÊÆµÔºàÂç≥ËÆøÈóÆÂØπË±°‰∏äÁöÑÈùûÂéüÁîüÂ≠óÊÆµnon-primitive fieldÔºâÔºö 1234567&gt; void printName( Person person ) &#123;&gt; String name = person.name; // ËøôÈáåËß¶ÂèëËØªÂ±èÈöú&gt; // Âõ†‰∏∫ÈúÄË¶Å‰ªéheapËØªÂèñÂºïÁî® &gt; // &gt; System.out.println(name); // ËøôÈáåÊ≤°ÊúâÁõ¥Êé•Ëß¶ÂèëËØªÂ±èÈöú&gt; &#125;&gt; Âú®‰∏äÈù¢ÁöÑ‰ª£Á†Å‰∏≠ÔºåString name = person.name ËÆøÈóÆ‰∫ÜÂ†Ü‰∏äÁöÑpersonÂºïÁî®ÔºåÁÑ∂ÂêéÂ∞ÜÂºïÁî®Âä†ËΩΩÂà∞Êú¨Âú∞ÁöÑnameÂèòÈáè„ÄÇÊ≠§Êó∂Ëß¶ÂèëËØªÂ±èÈöú„ÄÇ Systemt.outÈÇ£Ë°å‰∏ç‰ºöÁõ¥Êé•Ëß¶ÂèëËØªÂ±èÈöúÔºåÂõ†‰∏∫Ê≤°ÊúâÊù•Ëá™Â†ÜÁöÑÂºïÁî®Âä†ËΩΩÔºànameÊòØÂ±ÄÈÉ®ÂèòÈáèÔºåÂõ†Ê≠§Ê≤°Êúâ‰ªéÂ†ÜÂä†ËΩΩÂºïÁî®Ôºâ„ÄÇ ‰ΩÜÊòØSystemÂíåoutÔºåÊàñËÄÖprintlnÂÜÖÈÉ®ÂèØËÉΩ‰ºöËß¶ÂèëÂÖ∂‰ªñËØªÂ±èÈöú„ÄÇ Ëøô‰∏éÂÖ∂‰ªñGC‰ΩøÁî®ÁöÑÂÜôÂ±èÈöúÂΩ¢ÊàêÂØπÊØîÔºå‰æãÂ¶ÇG1„ÄÇËØªÂ±èÈöúÁöÑÂ∑•‰ΩúÊòØÊ£ÄÊü•ÂºïÁî®ÁöÑÁä∂ÊÄÅÔºåÂπ∂Âú®Â∞ÜÂºïÁî®ÔºàÊàñËÄÖÁîöËá≥ÊòØ‰∏çÂêåÁöÑÂºïÁî®ÔºâËøîÂõûÁªôÂ∫îÁî®Á®ãÂ∫è‰πãÂâçÊâßË°å‰∏Ä‰∫õÂ∑•‰Ωú„ÄÇ Âú®ZGC‰∏≠ÔºåÂÆÉÈÄöËøáÊµãËØïÂä†ËΩΩÁöÑÂºïÁî®Êù•ÊâßË°åÊ≠§‰ªªÂä°Ôºå‰ª•Êü•ÁúãÊòØÂê¶ËÆæÁΩÆ‰∫ÜÊüê‰∫õ‰Ωç„ÄÇ Â¶ÇÊûúÈÄöËøá‰∫ÜÊµãËØïÔºåÂàô‰∏çÊâßË°å‰ªª‰ΩïÂÖ∂‰ªñÂ∑•‰ΩúÔºåÂ¶ÇÊûúÂ§±Ë¥•ÔºåÂàôÂú®Â∞ÜÂºïÁî®ËøîÂõûÁªôÂ∫îÁî®Á®ãÂ∫è‰πãÂâçÊâßË°åÊüê‰∫õÁâπÂÆö‰∫éÈò∂ÊÆµÁöÑ‰ªªÂä°„ÄÇ Ê†áËÆ∞Áé∞Âú®Êàë‰ª¨‰∫ÜËß£‰∫ÜËøô‰∏§ÁßçÊñ∞ÊäÄÊúØÊòØ‰ªÄ‰πàÔºåËÆ©Êàë‰ª¨Êù•ÁúãÁúãZGÁöÑGCÂæ™ÁéØ„ÄÇ GCÂæ™ÁéØÁöÑÁ¨¨‰∏ÄÈÉ®ÂàÜÊòØÊ†áËÆ∞„ÄÇÊ†áËÆ∞ÂåÖÊã¨Êü•ÊâæÂíåÊ†áËÆ∞ËøêË°å‰∏≠ÁöÑÂ∫îÁî®Á®ãÂ∫èÂèØ‰ª•ËÆøÈóÆÁöÑÊâÄÊúâÂ†ÜÂØπË±°ÔºåÊç¢Âè•ËØùËØ¥ÔºåÊü•Êâæ‰∏çÊòØÂûÉÂúæÁöÑÂØπË±°„ÄÇ ZGCÁöÑÊ†áËÆ∞ÂàÜ‰∏∫‰∏â‰∏™Èò∂ÊÆµ„ÄÇ Á¨¨‰∏ÄÈò∂ÊÆµÊòØSTWÔºåÂÖ∂‰∏≠GC rootsË¢´Ê†áËÆ∞‰∏∫Ê¥ªÂØπË±°„ÄÇ GC rootsÁ±ª‰ºº‰∫éÂ±ÄÈÉ®ÂèòÈáèÔºåÈÄöËøáÂÆÉÂèØ‰ª•ËÆøÈóÆÂ†Ü‰∏äÂÖ∂‰ªñÂØπË±°„ÄÇ Â¶ÇÊûú‰∏Ä‰∏™ÂØπË±°‰∏çËÉΩÈÄöËøáÈÅçÂéÜ‰ªérootsÂºÄÂßãÁöÑÂØπË±°ÂõæÊù•ËÆøÈóÆÔºåÈÇ£‰πàÂ∫îÁî®Á®ãÂ∫è‰πüÂ∞±Êó†Ê≥ïËÆøÈóÆÂÆÉÔºåÂàôËØ•ÂØπË±°Ë¢´ËÆ§‰∏∫ÊòØÂûÉÂúæ„ÄÇ‰ªérootsËÆøÈóÆÁöÑÂØπË±°ÈõÜÂêàÁß∞‰∏∫LiveÈõÜ„ÄÇGC rootsÊ†áËÆ∞Ê≠•È™§ÈùûÂ∏∏Áü≠ÔºåÂõ†‰∏∫rootsÁöÑÊÄªÊï∞ÈÄöÂ∏∏ÊØîËæÉÂ∞è„ÄÇ ËØ•Èò∂ÊÆµÂÆåÊàêÂêéÔºåÂ∫îÁî®Á®ãÂ∫èÊÅ¢Â§çÊâßË°åÔºåZGCÂºÄÂßã‰∏ã‰∏ÄÈò∂ÊÆµÔºåËØ•Èò∂ÊÆµÂêåÊó∂ÈÅçÂéÜÂØπË±°ÂõæÂπ∂Ê†áËÆ∞ÊâÄÊúâÂèØËÆøÈóÆÁöÑÂØπË±°„ÄÇ Âú®Ê≠§Èò∂ÊÆµÊúüÈó¥ÔºåËØªÂ±èÈöúÈíà‰ΩøÁî®Êé©Á†ÅÊµãËØïÊâÄÊúâÂ∑≤Âä†ËΩΩÁöÑÂºïÁî®ÔºåËØ•Êé©Á†ÅÁ°ÆÂÆöÂÆÉ‰ª¨ÊòØÂê¶Â∑≤Ê†áËÆ∞ÊàñÂ∞öÊú™Ê†áËÆ∞ÔºåÂ¶ÇÊûúÂ∞öÊú™Ê†áËÆ∞ÂºïÁî®ÔºåÂàôÂ∞ÜÂÖ∂Ê∑ªÂä†Âà∞ÈòüÂàó‰ª•ËøõË°åÊ†áËÆ∞„ÄÇ Âú®ÈÅçÂéÜÂÆåÊàê‰πãÂêéÔºåÊúâ‰∏Ä‰∏™ÊúÄÁªàÁöÑÔºåÊó∂Èó¥ÂæàÁü≠ÁöÑÁöÑStop The WorldÈò∂ÊÆµÔºåËøô‰∏™Èò∂ÊÆµÂ§ÑÁêÜ‰∏Ä‰∫õËæπÁºòÊÉÖÂÜµÔºàÊàë‰ª¨Áé∞Âú®Â∞ÜÂÆÉÂøΩÁï•ÔºâÔºåËØ•Èò∂ÊÆµÂÆåÊàê‰πãÂêéÊ†áËÆ∞Èò∂ÊÆµÂ∞±ÂÆåÊàê‰∫Ü„ÄÇ ÈáçÂÆö‰ΩçGCÂæ™ÁéØÁöÑ‰∏ã‰∏Ä‰∏™‰∏ªË¶ÅÈÉ®ÂàÜÊòØÈáçÂÆö‰Ωç„ÄÇÈáçÂÆö‰ΩçÊ∂âÂèäÁßªÂä®Ê¥ªÂä®ÂØπË±°‰ª•ÈáäÊîæÈÉ®ÂàÜÂ†ÜÂÜÖÂ≠ò„ÄÇ ‰∏∫‰ªÄ‰πàË¶ÅÁßªÂä®ÂØπË±°ËÄå‰∏çÊòØÂ°´Ë°•Á©∫ÈöôÔºü Êúâ‰∫õGCÂÆûÈôÖÊòØËøôÊ†∑ÂÅöÁöÑÔºå‰ΩÜÊòØÂÆÉÂØºËá¥‰∫Ü‰∏Ä‰∏™‰∏çÂπ∏ÁöÑÂêéÊûúÔºåÂç≥ÂàÜÈÖçÂÜÖÂ≠òÂèòÂæóÊõ¥Âä†ÊòÇË¥µÔºåÂõ†‰∏∫ÂΩìÈúÄË¶ÅÂàÜÈÖçÂÜÖÂ≠òÊó∂ÔºåÂÜÖÂ≠òÂàÜÈÖçÂô®ÈúÄË¶ÅÊâæÂà∞ÂèØ‰ª•ÊîæÁΩÆÂØπË±°ÁöÑÁ©∫Èó≤Á©∫Èó¥„ÄÇ Áõ∏ÊØî‰πã‰∏ãÔºåÂ¶ÇÊûúÂèØ‰ª•ÈáäÊîæÂ§ßÂùóÂÜÖÂ≠òÔºåÈÇ£‰πàÂàÜÈÖçÂÜÖÂ≠òÂ∞±ÂæàÁÆÄÂçïÔºåÂè™ÈúÄË¶ÅÂ∞ÜÊåáÈíàÈÄíÂ¢ûÊñ∞ÂØπË±°ÊâÄÈúÄÁöÑÂÜÖÂ≠òÂ§ßÂ∞èÂç≥ÂèØ„ÄÇ ZGCÂ∞ÜÂ†ÜÂàÜÊàêËÆ∏Â§öÈ°µÈù¢ÔºåÂú®Ê≠§Èò∂ÊÆµÂºÄÂßãÊó∂ÔºåÂÆÉÂêåÊó∂ÈÄâÊã©‰∏ÄÁªÑÈúÄË¶ÅÈáçÂÆö‰ΩçÊ¥ªÂä®ÂØπË±°ÁöÑÈ°µÈù¢„ÄÇÈÄâÊã©ÈáçÂÆö‰ΩçÈõÜÂêéÔºå‰ºöÂá∫Áé∞‰∏Ä‰∏™Stop The WorldÊöÇÂÅúÔºåÂÖ∂‰∏≠ZGCÈáçÂÆö‰ΩçËØ•ÈõÜÂêà‰∏≠rootÂØπË±°ÔºåÂπ∂Â∞Ü‰ªñ‰ª¨ÁöÑÂºïÁî®Êò†Â∞ÑÂà∞Êñ∞‰ΩçÁΩÆ„ÄÇ‰∏é‰πãÂâçÁöÑStop The WorldÊ≠•È™§‰∏ÄÊ†∑ÔºåÊ≠§Â§ÑÊ∂âÂèäÁöÑÊöÇÂÅúÊó∂Èó¥‰ªÖÂèñÂÜ≥‰∫érootÁöÑÊï∞Èáè‰ª•ÂèäÈáçÂÆö‰ΩçÈõÜÁöÑÂ§ßÂ∞è‰∏éÂØπË±°ÁöÑÊÄªÊ¥ªÂä®ÈõÜÁöÑÊØîÁéáÔºåËøôÈÄöÂ∏∏Áõ∏ÂΩìÂ∞è„ÄÇÊâÄ‰ª•‰∏çÂÉèÂæàÂ§öÊî∂ÈõÜÂô®ÈÇ£Ê†∑ÔºåÊöÇÂÅúÊó∂Èó¥ÈöèÂ†ÜÂ¢ûÂä†ËÄåÂ¢ûÂä†„ÄÇ ÁßªÂä®rootÂêéÔºå‰∏ã‰∏ÄÈò∂ÊÆµÊòØÂπ∂ÂèëÈáçÂÆö‰Ωç„ÄÇ Âú®Ê≠§Èò∂ÊÆµÔºåGCÁ∫øÁ®ãÈÅçÂéÜÈáçÂÆö‰ΩçÈõÜÂπ∂ÈáçÊñ∞ÂÆö‰ΩçÂÖ∂ÂåÖÂê´ÁöÑÈ°µ‰∏≠ÊâÄÊúâÂØπË±°„ÄÇ Â¶ÇÊûúÂ∫îÁî®Á®ãÂ∫èÁ∫øÁ®ãËØïÂõæÂú®GCÈáçÊñ∞ÂÆö‰ΩçÂØπË±°‰πãÂâçÂä†ËΩΩÂÆÉ‰ª¨ÔºåÈÇ£‰πàÂ∫îÁî®Á®ãÂ∫èÁ∫øÁ®ã‰πüÂèØ‰ª•ÈáçÂÆö‰ΩçËØ•ÂØπË±°ÔºåËøôÂèØ‰ª•ÈÄöËøáËØªÂ±èÈöúÔºàÂú®‰ªéÂ†ÜÂä†ËΩΩÂºïÁî®Êó∂Ëß¶ÂèëÔºâ ËøôÂèØÁ°Æ‰øùÂ∫îÁî®Á®ãÂ∫èÁúãÂà∞ÁöÑÊâÄÊúâÂºïÁî®ÈÉΩÂ∑≤Êõ¥Êñ∞ÔºåÂπ∂‰∏îÂ∫îÁî®Á®ãÂ∫è‰∏çÂèØËÉΩÂêåÊó∂ÂØπÈáçÂÆö‰ΩçÁöÑÂØπË±°ËøõË°åÊìç‰Ωú„ÄÇ GCÁ∫øÁ®ãÊúÄÁªàÂ∞ÜÂØπÈáçÂÆö‰ΩçÈõÜ‰∏≠ÁöÑÊâÄÊúâÂØπË±°ÈáçÂÆö‰ΩçÔºåÁÑ∂ËÄåÂèØËÉΩ‰ªçÊúâÂºïÁî®ÊåáÂêëËøô‰∫õÂØπË±°ÁöÑÊóß‰ΩçÁΩÆ„ÄÇ GCÂèØ‰ª•ÈÅçÂéÜÂØπË±°ÂõæÂπ∂ÈáçÊñ∞Êò†Â∞ÑËøô‰∫õÂºïÁî®Âà∞Êñ∞‰ΩçÁΩÆÔºå‰ΩÜÊòØËøô‰∏ÄÊ≠•‰ª£‰ª∑ÂæàÈ´òÊòÇ„ÄÇ Âõ†Ê≠§Ëøô‰∏ÄÊ≠•‰∏é‰∏ã‰∏Ä‰∏™Ê†áËÆ∞Èò∂ÊÆµÂêàÂπ∂Âú®‰∏ÄËµ∑„ÄÇÂú®‰∏ã‰∏Ä‰∏™GCÂë®ÊúüÁöÑÊ†áËÆ∞Èò∂ÊÆµÈÅçÂéÜÂØπË±°ÂØπË±°ÂõæÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûúÂèëÁé∞Êú™ÈáçÊò†Â∞ÑÁöÑÂºïÁî®ÔºåÂàôÂ∞ÜÂÖ∂ÈáçÊñ∞Êò†Â∞ÑÔºåÁÑ∂ÂêéÊ†áËÆ∞‰∏∫Ê¥ªÂä®Áä∂ÊÄÅ„ÄÇ JVMÂÜÖÂ≠ò‰ºòÂåñÂú®„ÄäÊ∑±ÂÖ•ÁêÜËß£JavaËôöÊãüÊú∫„Äã‰∏Ä‰π¶‰∏≠ËÆ≤‰∫ÜÂæàÂ§öjvm‰ºòÂåñÊÄùË∑ØÔºå‰∏ãÈù¢ÊàëÊù•ÁÆÄÂçïËØ¥ËØ¥„ÄÇ javaÂÜÖÂ≠òÊäñÂä®Â†ÜÂÜÖÂ≠òÈÉΩÊúâ‰∏ÄÂÆöÁöÑÂ§ßÂ∞èÔºåËÉΩÂÆπÁ∫≥ÁöÑÊï∞ÊçÆÊòØÊúâÈôêÂà∂ÁöÑÔºåÂΩìJavaÂ†ÜÁöÑÂ§ßÂ∞èÂ§™Â§ßÊó∂ÔºåÂûÉÂúæÊî∂ÈõÜ‰ºöÂêØÂä®ÂÅúÊ≠¢Â†Ü‰∏≠‰∏çÂÜçÂ∫îÁî®ÁöÑÂØπË±°ÔºåÊù•ÈáäÊîæÂÜÖÂ≠ò„ÄÇÁé∞Âú®ÔºåÂÜÖÂ≠òÊäñÂä®Ëøô‰∏™ÊúØËØ≠ÂèØÁî®‰∫éÊèèËø∞Âú®ÊûÅÁü≠Êó∂Èó¥ÂÜÖÂàÜÈÖçÁªôÂØπË±°ÁöÑËøáÁ®ã„ÄÇ ÂÖ∑‰ΩìÂ¶Ç‰Ωï‰ºòÂåñËØ∑Ë∞∑Ê≠åÊü•ËØ¢~ jvmÂ§ßÈ°µÂÜÖÂ≠ò‰ªÄ‰πàÊòØÂÜÖÂ≠òÂàÜÈ°µÔºüCPUÊòØÈÄöËøáÂØªÂùÄÊù•ËÆøÈóÆÂÜÖÂ≠òÁöÑ„ÄÇ32‰ΩçCPUÁöÑÂØªÂùÄÂÆΩÂ∫¶ÊòØ 0~0xFFFFFFFFÔºåÂç≥4GÔºå‰πüÂ∞±ÊòØËØ¥ÂèØÊîØÊåÅÁöÑÁâ©ÁêÜÂÜÖÂ≠òÊúÄÂ§ßÊòØ4G„ÄÇ‰ΩÜÂú®ÂÆûË∑µËøáÁ®ã‰∏≠ÔºåÁ®ãÂ∫èÈúÄË¶Å‰ΩøÁî®4GÂÜÖÂ≠òÔºåËÄåÂèØÁî®Áâ©ÁêÜÂÜÖÂ≠òÂ∞è‰∫é4GÔºåÂØºËá¥Á®ãÂ∫è‰∏çÂæó‰∏çÈôç‰ΩéÂÜÖÂ≠òÂç†Áî®„ÄÇ‰∏∫‰∫ÜËß£ÂÜ≥Ê≠§Á±ªÈóÆÈ¢òÔºåÁé∞‰ª£CPUÂºïÂÖ•‰∫ÜMMUÔºàMemory Management UnitÔºåÂÜÖÂ≠òÁÆ°ÁêÜÂçïÂÖÉÔºâ„ÄÇ MMU ÁöÑÊ†∏ÂøÉÊÄùÊÉ≥ÊòØÂà©Áî®ËôöÊãüÂú∞ÂùÄÊõø‰ª£Áâ©ÁêÜÂú∞ÂùÄÔºåÂç≥CPUÂØªÂùÄÊó∂‰ΩøÁî®ËôöÂùÄÔºåÁî±MMUË¥üË¥£Â∞ÜËôöÂùÄÊò†Â∞Ñ‰∏∫Áâ©ÁêÜÂú∞ÂùÄ„ÄÇMMUÁöÑÂºïÂÖ•ÔºåËß£ÂÜ≥‰∫ÜÂØπÁâ©ÁêÜÂÜÖÂ≠òÁöÑÈôêÂà∂ÔºåÂØπÁ®ãÂ∫èÊù•ËØ¥ÔºåÂ∞±ÂÉèËá™Â∑±Âú®‰ΩøÁî®4GÂÜÖÂ≠ò‰∏ÄÊ†∑„ÄÇ ÂÜÖÂ≠òÂàÜÈ°µ(Paging)ÊòØÂú®‰ΩøÁî®MMUÁöÑÂü∫Á°Ä‰∏äÔºåÊèêÂá∫ÁöÑ‰∏ÄÁßçÂÜÖÂ≠òÁÆ°ÁêÜÊú∫Âà∂„ÄÇÂÆÉÂ∞ÜËôöÊãüÂú∞ÂùÄÂíåÁâ©ÁêÜÂú∞ÂùÄÊåâÂõ∫ÂÆöÂ§ßÂ∞èÔºà4KÔºâÂàÜÂâ≤ÊàêÈ°µ(page)ÂíåÈ°µÂ∏ß(page frame)ÔºåÂπ∂‰øùËØÅÈ°µ‰∏éÈ°µÂ∏ßÁöÑÂ§ßÂ∞èÁõ∏Âêå„ÄÇËøôÁßçÊú∫Âà∂Ôºå‰ªéÊï∞ÊçÆÁªìÊûÑ‰∏äÔºå‰øùËØÅ‰∫ÜËÆøÈóÆÂÜÖÂ≠òÁöÑÈ´òÊïàÔºåÂπ∂‰ΩøOSËÉΩÊîØÊåÅÈùûËøûÁª≠ÊÄßÁöÑÂÜÖÂ≠òÂàÜÈÖç„ÄÇÂú®Á®ãÂ∫èÂÜÖÂ≠ò‰∏çÂ§üÁî®Êó∂ÔºåËøòÂèØ‰ª•Â∞Ü‰∏çÂ∏∏Áî®ÁöÑÁâ©ÁêÜÂÜÖÂ≠òÈ°µËΩ¨ÁßªÂà∞ÂÖ∂‰ªñÂ≠òÂÇ®ËÆæÂ§á‰∏äÔºåÊØîÂ¶ÇÁ£ÅÁõòÔºåËøôÂ∞±ÊòØËôöÊãüÂÜÖÂ≠ò„ÄÇ Ë¶ÅÁü•ÈÅìÔºåËôöÊãüÂú∞ÂùÄ‰∏éÁâ©ÁêÜÂú∞ÂùÄÈúÄË¶ÅÈÄöËøáÊò†Â∞ÑÔºåÊâçËÉΩ‰ΩøCPUÊ≠£Â∏∏Â∑•‰Ωú„ÄÇËÄåÊò†Â∞ÑÂ∞±ÈúÄË¶ÅÂ≠òÂÇ®Êò†Â∞ÑË°®„ÄÇÂú®Áé∞‰ª£CPUÊû∂ÊûÑ‰∏≠ÔºåÊò†Â∞ÑÂÖ≥Á≥ªÈÄöÂ∏∏Ë¢´Â≠òÂÇ®Âú®Áâ©ÁêÜÂÜÖÂ≠ò‰∏ä‰∏Ä‰∏™Ë¢´Áß∞‰πã‰∏∫È°µË°®(page table)ÁöÑÂú∞Êñπ„ÄÇ È°µË°®ÊòØË¢´Â≠òÂÇ®Âú®ÂÜÖÂ≠ò‰∏≠ÁöÑÔºåCPUÈÄöËøáÊÄªÁ∫øËÆøÈóÆÂÜÖÂ≠òÔºåËÇØÂÆöÊÖ¢‰∫éÁõ¥Êé•ËÆøÈóÆÂØÑÂ≠òÂô®ÁöÑ„ÄÇ‰∏∫‰∫ÜËøõ‰∏ÄÊ≠•‰ºòÂåñÊÄßËÉΩÔºåÁé∞‰ª£CPUÊû∂ÊûÑÂºïÂÖ•‰∫ÜTLBÔºàTranslation lookaside bufferÔºåÈ°µË°®ÂØÑÂ≠òÂô®ÁºìÂÜ≤ÔºâÔºåÁî®Êù•ÁºìÂ≠ò‰∏ÄÈÉ®ÂàÜÁªèÂ∏∏ËÆøÈóÆÁöÑÈ°µË°®ÂÜÖÂÆπ „ÄÇ ‰∏∫‰ªÄ‰πàË¶ÅÊîØÊåÅÂ§ßÂÜÖÂ≠òÂàÜÈ°µÔºüTLBÊòØÊúâÈôêÁöÑÔºåËøôÁÇπÊØ´Êó†ÁñëÈóÆ„ÄÇÂΩìË∂ÖÂá∫TLBÁöÑÂ≠òÂÇ®ÊûÅÈôêÊó∂ÔºåÂ∞±‰ºöÂèëÁîü TLB missÔºå‰∫éÊòØOSÂ∞±‰ºöÂëΩ‰ª§CPUÂéªËÆøÈóÆÂÜÖÂ≠ò‰∏äÁöÑÈ°µË°®„ÄÇÂ¶ÇÊûúÈ¢ëÁπÅÁöÑÂá∫Áé∞TLB missÔºåÁ®ãÂ∫èÁöÑÊÄßËÉΩ‰ºö‰∏ãÈôçÂú∞ÂæàÂø´„ÄÇ ‰∏∫‰∫ÜËÆ©TLBÂèØ‰ª•Â≠òÂÇ®Êõ¥Â§öÁöÑÈ°µÂú∞ÂùÄÊò†Â∞ÑÂÖ≥Á≥ªÔºåÊàë‰ª¨ÁöÑÂÅöÊ≥ïÊòØË∞ÉÂ§ßÂÜÖÂ≠òÂàÜÈ°µÂ§ßÂ∞è„ÄÇ Â¶ÇÊûú‰∏Ä‰∏™È°µ4MÔºåÂØπÊØî‰∏Ä‰∏™È°µ4KÔºåÂâçËÄÖÂèØ‰ª•ËÆ©TLBÂ§öÂ≠òÂÇ®1000‰∏™È°µÂú∞ÂùÄÊò†Â∞ÑÂÖ≥Á≥ªÔºåÊÄßËÉΩÁöÑÊèêÂçáÊòØÊØîËæÉÂèØËßÇÁöÑ„ÄÇ ÂºÄÂêØJVMÂ§ßÈ°µÂÜÖÂ≠òJVMÂêØÁî®Êó∂Âä†ÂèÇÊï∞ -XX:LargePageSizeInBytes=10m Â¶ÇÊûúJDKÊòØÂú®1.5 update5‰ª•ÂâçÁöÑÔºåËøòÈúÄË¶ÅÂä† -XX:+UseLargePagesÔºå‰ΩúÁî®ÊòØÂêØÁî®Â§ßÂÜÖÂ≠òÈ°µÊîØÊåÅ„ÄÇ ÈÄöËøáËΩØÂºïÁî®ÂíåÂº±ÂºïÁî®ÊèêÂçáJVMÂÜÖÂ≠ò‰ΩøÁî®ÊÄßËÉΩÂº∫ËΩØÂº±Ëôö Âº∫ÂºïÁî®Ôºö Âè™Ë¶ÅÂºïÁî®Â≠òÂú®ÔºåÂûÉÂúæÂõûÊî∂Âô®Ê∞∏Ëøú‰∏ç‰ºöÂõûÊî∂ Object obj = new Object(); //ÂèØÁõ¥Êé•ÈÄöËøáobjÂèñÂæóÂØπÂ∫îÁöÑÂØπË±° Â¶Çobj.equels(new Object()); ËÄåËøôÊ†∑ objÂØπË±°ÂØπÂêéÈù¢new ObjectÁöÑ‰∏Ä‰∏™Âº∫ÂºïÁî®ÔºåÂè™ÊúâÂΩìobjËøô‰∏™ÂºïÁî®Ë¢´ÈáäÊîæ‰πãÂêéÔºåÂØπË±°Êâç‰ºöË¢´ÈáäÊîæÊéâÔºåËøô‰πüÊòØÊàë‰ª¨ÁªèÂ∏∏ÊâÄÁî®Âà∞ÁöÑÁºñÁ†ÅÂΩ¢Âºè„ÄÇ ËΩØÂºïÁî®ÔºàÂèØ‰ª•ÂÆûÁé∞ÁºìÂ≠òÔºâÔºö ÈùûÂøÖÈ°ªÂºïÁî®ÔºåÂÜÖÂ≠òÊ∫¢Âá∫‰πãÂâçËøõË°åÂõûÊî∂ÔºåÂèØ‰ª•ÈÄöËøá‰ª•‰∏ã‰ª£Á†ÅÂÆûÁé∞1234567Object obj = new Object();SoftReference&lt;Object&gt; sf = new SoftReference&lt;Object&gt;(obj);obj = null;sf.get();//ÊúâÊó∂ÂÄô‰ºöËøîÂõûnull ËøôÊó∂ÂÄôsfÊòØÂØπobjÁöÑ‰∏Ä‰∏™ËΩØÂºïÁî®ÔºåÈÄöËøásf.get()ÊñπÊ≥ïÂèØ‰ª•ÂèñÂà∞Ëøô‰∏™ÂØπË±°ÔºåÂΩìÁÑ∂ÔºåÂΩìËøô‰∏™ÂØπË±°Ë¢´Ê†áËÆ∞‰∏∫ÈúÄË¶ÅÂõûÊî∂ÁöÑÂØπË±°Êó∂ÔºåÂàôËøîÂõûnullÔºõËΩØÂºïÁî®‰∏ªË¶ÅÁî®Êà∑ÂÆûÁé∞Á±ª‰ººÁºìÂ≠òÁöÑÂäüËÉΩÔºåÂú®ÂÜÖÂ≠òË∂≥Â§üÁöÑÊÉÖÂÜµ‰∏ãÁõ¥Êé•ÈÄöËøáËΩØÂºïÁî®ÂèñÂÄºÔºåÊó†ÈúÄ‰ªéÁπÅÂøôÁöÑÁúüÂÆûÊù•Ê∫êÊü•ËØ¢Êï∞ÊçÆÔºåÊèêÂçáÈÄüÂ∫¶ÔºõÂΩìÂÜÖÂ≠ò‰∏çË∂≥Êó∂ÔºåËá™Âä®Âà†Èô§ËøôÈÉ®ÂàÜÁºìÂ≠òÊï∞ÊçÆÔºå‰ªéÁúüÊ≠£ÁöÑÊù•Ê∫êÊü•ËØ¢Ëøô‰∫õÊï∞ÊçÆ„ÄÇ Âº±ÂºïÁî®ÔºàÁî®Êù•Âú®ÂõûË∞ÉÂáΩÊï∞‰∏≠Èò≤Ê≠¢ÂÜÖÂ≠òÊ≥ÑÈú≤ÔºâÔºö Á¨¨‰∫åÊ¨°ÂûÉÂúæÂõûÊî∂Êó∂ÂõûÊî∂ÔºåÂèØ‰ª•ÈÄöËøáÂ¶Ç‰∏ã‰ª£Á†ÅÂÆûÁé∞123456789Object obj = new Object();WeakReference&lt;Object&gt; wf = new WeakReference&lt;Object&gt;(obj);obj = null;wf.get();//ÊúâÊó∂ÂÄô‰ºöËøîÂõûnullwf.isEnQueued();//ËøîÂõûÊòØÂê¶Ë¢´ÂûÉÂúæÂõûÊî∂Âô®Ê†áËÆ∞‰∏∫Âç≥Â∞ÜÂõûÊî∂ÁöÑÂûÉÂúæ Âº±ÂºïÁî®ÊòØÂú®Á¨¨‰∫åÊ¨°ÂûÉÂúæÂõûÊî∂Êó∂ÂõûÊî∂ÔºåÁü≠Êó∂Èó¥ÂÜÖÈÄöËøáÂº±ÂºïÁî®ÂèñÂØπÂ∫îÁöÑÊï∞ÊçÆÔºåÂèØ‰ª•ÂèñÂà∞ÔºåÂΩìÊâßË°åËøáÁ¨¨‰∫åÊ¨°ÂûÉÂúæÂõûÊî∂Êó∂ÔºåÂ∞ÜËøîÂõûnull„ÄÇÂº±ÂºïÁî®‰∏ªË¶ÅÁî®‰∫éÁõëÊéßÂØπË±°ÊòØÂê¶Â∑≤ÁªèË¢´ÂûÉÂúæÂõûÊî∂Âô®Ê†áËÆ∞‰∏∫Âç≥Â∞ÜÂõûÊî∂ÁöÑÂûÉÂúæÔºåÂèØ‰ª•ÈÄöËøáÂº±ÂºïÁî®ÁöÑisEnQueuedÊñπÊ≥ïËøîÂõûÂØπË±°ÊòØÂê¶Ë¢´ÂûÉÂúæÂõûÊî∂Âô®Ê†áËÆ∞„ÄÇ ËôöÂºïÁî®Ôºö ÂûÉÂúæÂõûÊî∂Êó∂ÂõûÊî∂ÔºåÊó†Ê≥ïÈÄöËøáÂºïÁî®ÂèñÂà∞ÂØπË±°ÂÄºÔºåÂèØ‰ª•ÈÄöËøáÂ¶Ç‰∏ã‰ª£Á†ÅÂÆûÁé∞ 12345Object obj = new Object();PhantomReference&lt;Object&gt; pf = new PhantomReference&lt;Object&gt;(obj);obj=null;pf.get();//Ê∞∏ËøúËøîÂõûnullpf.isEnQueued();//ËøîÂõûÊòØÂê¶‰ªéÂÜÖÂ≠ò‰∏≠Â∑≤ÁªèÂà†Èô§ ËôöÂºïÁî®ÊòØÊØèÊ¨°ÂûÉÂúæÂõûÊî∂ÁöÑÊó∂ÂÄôÈÉΩ‰ºöË¢´ÂõûÊî∂ÔºåÈÄöËøáËôöÂºïÁî®ÁöÑgetÊñπÊ≥ïÊ∞∏ËøúËé∑ÂèñÂà∞ÁöÑÊï∞ÊçÆ‰∏∫nullÔºåÂõ†Ê≠§‰πüË¢´Êàê‰∏∫ÂπΩÁÅµÂºïÁî®„ÄÇËôöÂºïÁî®‰∏ªË¶ÅÁî®‰∫éÊ£ÄÊµãÂØπË±°ÊòØÂê¶Â∑≤Áªè‰ªéÂÜÖÂ≠ò‰∏≠Âà†Èô§„ÄÇ ‰ºòÂåñÁÆÄÂçïÊù•ËØ¥ÔºåÂèØ‰ª•‰ΩøÁî®ËΩØÂºïÁî®ËøòÂºïÁî®Êï∞ÈáèÂ∑®Â§ßÁöÑÂØπË±°ÔºåËØ¶ÊÉÖËØ∑ÂèÇËÄÉhttp://www.cnblogs.com/JavaArchitect/p/8685993.html ÊÄªÁªìÊ≠§ÁØáÊñáÁ´†ÊÄªÂÖ±1.5WÂ≠óÔºåÊàë‰ªéËÆ°ÁÆóÊú∫Áâ©ÁêÜÂÜÖÂ≠ò‰ΩìÁ≥ªËÆ≤Âà∞‰∫ÜjavaÂÜÖÂ≠òÊ®°ÂûãÔºåÂú®ÈÄöËøájavaÂÜÖÂ≠òÊ®°ÂûãÂºïÂá∫‰∫ÜJVMÂÜÖÂ≠òÁöÑÁõ∏ÂÖ≥Áü•ËØÜÁÇπ„ÄÇËßâÂæóÂÜôÁöÑÂ•ΩÁöÑËØ∑Áªô‰∏™Ëµû„ÄÇÊú¨ÁØáÊñáÁ´†Êàë‰ºöÁéáÂÖàÂèëÂ∏ÉÂú®ÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ÔºåÈöèÂêé‰ºöÂú®ÊéòÈáëÁ≠âÂπ≥Âè∞Áõ∏ÁªßÂèëÂá∫„ÄÇÊúÄÂêéÔºåÈùûÂ∏∏ÊÑüË∞¢‰Ω†ÁöÑÈòÖËØª~ ÂèÇËÄÉËµÑÊñôÊñá‰∏≠ÁöÑÂêÑÁßçË∂ÖÈìæÊé• „ÄäÊ∑±ÂÖ•ÁêÜËß£JavaËôöÊãüÊú∫„Äã „ÄäJavaÂπ∂ÂèëÁºñÁ®ãÁöÑËâ∫ÊúØ„Äã „ÄäÊû∂ÊûÑËß£ÂØÜ‰ªéÂàÜÂ∏ÉÂºèÂà∞ÂæÆÊúçÂä°„Äã SMP„ÄÅNUMA„ÄÅMPP‰ΩìÁ≥ªÁªìÊûÑ‰ªãÁªç ZGCÂéüÁêÜÔºàËØ∑Áî®Ê≠£Á°ÆÁöÑÂßøÂäøÈ≠îÊ≥ï‰∏äÁΩëËßÇÁúãÔºâ Stefan KarlssonÂíåPerLiden JfokusÁöÑÊºîËÆ≤ÔºàËØ∑Áî®Ê≠£Á°ÆÁöÑÂßøÂäøÈ≠îÊ≥ï‰∏äÁΩëÔºâ Â£∞Êòé„ÄêÁâàÊùÉÁî≥Êòé„ÄëÊ≠§Áâá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºå‰ΩøÁî® CC BY-NC-SA 3.0ÊéàÊùÉÊù°Ê¨æÔºåËØ∑ÈÅµÂÆàÂØπÂ∫îÁöÑ‰πâÂä°ÔºåÂç≥Ë¢´ÊéàÊùÉ‰∫∫Êúâ‰πâÂä°Âú®ÊâÄÊúâÂâØÊú¨‰∏≠ÈÉΩÂøÖÈ°ªÂåÖÂê´ÁâàÊùÉÂ£∞Êòé„ÄÇË∞¢Ë∞¢Âêà‰Ωú~ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢https://blog.tengshe789.tech/Ôºàüòò]]></content>
      <tags>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Âπ∂Âèë</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ∞‰∏ÄÊ¨°‰∏çÁªèÊÄùËÄÉÁöÑÊ∂àË¥π(AppStoreÈÄÄÊ¨æ)]]></title>
    <url>%2F2018%2F09%2F03%2F%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%B8%8D%E7%BB%8F%E6%80%9D%E8%80%83%E7%9A%84%E6%B6%88%E8%B4%B9-AppStore%E9%80%80%E6%AC%BE%2F</url>
    <content type="text"><![CDATA[Êò®Â§©Êôö‰∏äÔºåÊàëÂÅö‰∫Ü‰∏Ä‰∏™ÊÉäÂ§©Âú∞Ê≥£È¨ºÁ•ûÁöÑ‰∫ãÊÉÖ Â∏ÆÂ™≥Â¶áÊîπÂÆåËÆ∫ÊñáÔºåÁ™ÅÁÑ∂Êäñ‰∫Ü‰∏Ä‰∏™Êú∫ÁÅµ‚ÄúÊØèÂ§©ÈÉΩÁî®ÁîµËÑëÔºåÊàëÈöæÈÅìÊ∞∏ËøúÁöÑËÑ±Á¶ª‰ΩøÁî®Á∫∏ÂíåÁ¨î‰πàÔºü‚Äù ÊàëËøòÊòØ‰∏™Â≠©Â≠êÔºÅ ËØ¥ÁΩ¢ÔºåÊâìÂºÄAppStoreÔºåÂ∞±ÊòØ‰∏ÄÂ†ÜÁøª„ÄÇÊ≤°ÈîôÔºå‰∏ä‰∏™ÊúàÊàëÂÖ•‰∫Ü‰∏Ä‰∏™apple pencilÔºåÂá†‰πéÊ≤°ÊÄé‰πàÁî®„ÄÇÊàëÁé∞Âú®ÁöÑÊâÄÊúâÊÄùÁª¥ÈÉΩÊòØÁªôÊàëÁöÑapple pencilÊâæËÄÅÂ©Ü ‰∏ÄÁúºÂ∞±ÁúãÂà∞‰∫ÜËøô‰∏™appÔºåÊîØÊåÅÊâãÂÜôÁ¨îÔºåËá™Âä®Ë∞∑Ê≠åÂêåÊ≠•ÔºåÂèØ‰ª•OCRÔºåÈÇ£‰∏™ÁúºÈ¶ãÂïä Á∫†Áªì‰∫Ü‰∏ÄÈòµÔºå üëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá üëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá üëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá üëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá üëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá üëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá ÁÑ∂ÂêéÊàëÂ∞±‰π∞‰∫Ü„ÄÇ„ÄÇ ÊâìÂºÄapp‰ª•ÂêéÔºå ËøôÂï•ÂïäÔºåÈïøÂæóÂíåOneNote‰∏ÄÊØõ‰∏ÄÊ†∑ÔºåÁ´üÁÑ∂Êî∂50Â§ßÊ¥ã ÈÄÄÈÄÄÈÄÄÔºÅ ÊûúÊñ≠ÊâìÂºÄÊûúÂ≠êÂÆòÊñπÁΩëÊâæÈÄÄÊ¨æÈÄöÈÅì ü§®ü§®ü§®ü§®ü§®ü§®ü§®ü§®ü§®ü§®ü§®ü§®ü§®ü§®ü§®ü§®ü§®ü§® ‰∏ÄÂ∞èÊó∂ËøáÂéª‰∫Ü üòµüòµüòµüòµüòµüòµüòµüòµüòµüòµüòµüòµüòµüòµüòµüòµüòµüòµ Â§úËøòÊòØËæ£‰πàÈªëÔºåÊàëÁöÑÈí±ÂåÖËøòÊòØËæ£‰πàÁò™ Ê≥ïÂÖãQüôÇÊûúÂ≠ê ÊàëÂøÉÈáåÂíÜÂìÆÁùÄ Ê≤°ÂäûÊ≥ïÔºåÁôæÂ∫¶ÂêßÔºå‰ª•‰∏ãÊòØÊ≠£Êñá ÈÄÄÊ¨æË¶ÅÁü•ÈÅìÔºåÂú®ËãπÊûúÁúº‰∏≠ÔºåÈÄÄÊ¨æÊòØÂàÜ‰∏∫‰∏§ÁßçÁöÑÔºåË∂ÖËøá90Â§©ÂíåÊ≤°ÊúâË∂ÖËøá90Â§©„ÄÇË¶ÅÈòÖËØªÊú¨ÁâáÊñáÁ´†Ôºå‰Ω†Ë¶ÅÁü•ÈÅìÔºåÁî®‰∫ÜË∂ÖËøá90Â§©ÁöÑappÊòØÈùûÂ∏∏ÈöæÈÄÄÊ¨æÁöÑ„ÄÇ‰∏ãÈù¢ÊàëÊù•‰ªãÁªçËãπÊûúÂÆ∂Ê≤°ÊúâË∂ÖËøá90Â§©ÈÄÄÊ¨æappÁöÑÊñπÊ≥ï Á¨¨‰∏ÄÊ≠•ÊâìÂºÄ https://reportaproblem.apple.com/ ÔºåÂπ∂ÁôªÈôÜ‰Ω†ÁöÑÊûúÂ≠êË¥¶Âè∑ ‚ÄªÁ¨¨‰∫åÊ≠•‚Äª ÂØªÊâæ‰Ω†‰π∞ËøáÁöÑÁà±Âï™Âï™ÔºåÁÇπÂáªÊä•ÂëäÈóÆÈ¢òÔºåÈÄâÊã©ÈúÄË¶ÅÊä•ÂëäÁöÑÈóÆÈ¢ò„ÄÇ ËøôÂÖ∂‰∏≠Êúâ‚ÄúÊàëÊ≤°ÊúâÊéàÊùÉÊ≠§È°πË¥≠‰π∞‚Äù„ÄÅ‚ÄúÂπ∂‰∏çÂÉèË¥≠‰π∞Ê≠§È°πÁõÆ‚Äù„ÄÅ‚ÄúÂéüÊú¨ÊâìÁÆóË¥≠‰π∞Âè¶‰∏Ä‰∏™È°πÁõÆ‚Äù„ÄÅ‚ÄúÊú™‰∏ãËΩΩÈ°πÁõÆÊàñËÄÖÊó†Ê≥ïÊâæÂà∞È°πÁõÆ‚Äù„ÄÅ‚ÄúÈ°πÁõÆÊó†Ê≥ïÂÆâË£ÖÊàñ‰∏ãËΩΩÂ§™ÊÖ¢‚Äù„ÄÅ‚ÄúÈ°πÁõÆÂèØÊâìÂºÄÔºå‰ΩÜÊòØÊú™Ëµ∑Âà∞È¢ÑÊúüÁöÑ‰ΩúÁî®‚Äù„ÄÅ‚ÄúÊ≤°ÊúâÂàóÂá∫ÊàëÁöÑÈóÆÈ¢ò‚ÄùÁ≠âÂ§ö‰∏™ÈÄâÈ°πÂêÑÈÄâ„ÄÇ Áî±Ëøô‰∫õÈÄâÈ°πÊàë‰ª¨ÂèØ‰ª•ÁúãÂá∫ÔºåËãπÊûúÂØπÈÄÄÊ¨æÂéüÂõ†ÁöÑÊé•ÂèóÂ∫¶ËøòÊòØÊå∫ÂπøÁöÑÔºåËøô‰∫õÈÄâÈ°πÂá†‰πéÂåÖÂê´‰∫ÜÊâÄÊúâÁöÑÂéüÂõ†ÔºåÂ∞§ÂÖ∂ÊòØ‚ÄúÂπ∂‰∏çÊÉ≥Ë¥≠‰π∞Ê≠§È°πÁõÆ‚ÄùÊòæÂæóÊ†ºÂ§ñ‰ªªÊÄß„ÄÇ ‰∏ãÈù¢ÁªôÂ§ßÂÆ∂‰∏Ä‰∏™ÈóÆÈ¢òÊèèËø∞ÁöÑËåÉÊñáÔºö I have downloaded a XXXXÔºàË¶ÅÈÄÄË¥πÁ®ãÂ∫èÁöÑÂêçÁß∞Ôºâprogram for iPhone ÔºàÊàñ iPadÔºâ from the App StoreÔºå but this item dose not meet my expectation. Would you please help me refund my payment Ôºü Thank you very much. Á¨¨‰∏âÊ≠•ÊÖ¢ÊÖ¢Á≠âÈÇÆ‰ª∂‰πàÔºåÊàëÊòØÊôö‰∏ä12ÁÇπÈÄÄÁöÑÔºåÁ¨¨‰∫åÂ§©ÈÜíÊù•Â∞±Êî∂Âà∞ÈÄÄÊ¨æÂíåÈÄÄÊ¨æÈÇÆ‰ª∂‰∫Ü~ Â¶Ç‰ΩïÁêÜÊÄßÊ∂àË¥π ÁêÜÊÄßÔºÅ ‰∏çÂèØËÉΩÁöÑÔºÅËøôËæàÂ≠êÈÉΩÊó†Ê≥ïÁêÜÊÄßÔºÅ]]></content>
      <tags>
        <tag>Á™çÈó®</tag>
        <tag>ÁîüÊ¥ª</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â¶Ç‰ΩïÁî®Java‰∏épython‰ª£Á†ÅËß£ÈáäIOÊ®°Âûã]]></title>
    <url>%2F2018%2F08%2F25%2FIO%E6%A8%A1%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[ÊúÄËøëÁà∑Áà∑ÁîüÁóÖÔºåÊàë‰∏ÄÁõ¥Âú®Èô™Â∫ä„ÄÇÈô™Â∫äÁ©∫ÈöôÔºåÂÅ∂ËÄåÁ†îÁ©∂‰∏Ä‰ºöËµÑÊñô„ÄÇÂâçÂ§©ÂàöÂ•ΩÁúã‰∫ÜÁÇπ„ÄäUNIXÁΩëÁªúÁºñÁ®ã„ÄãÔºåÊØîËæÉÂ§¥Â§ß„ÄÇÁé∞Âú®ÊàëÊù•Êï¥ÁêÜ‰∏Ä‰∏ãÊâÄÂ≠¶ÊâÄÂæóÔºåÂπ∂Áî®‰∫é‰∏™‰∫∫Â§áÂøò„ÄÇÂ¶ÇÊûúÊúâ‰∏çÂØπÔºåËØ∑ÊâπËØÑ„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆhttps://blog.tengshe789.tech/ IOÊ®°Âûã‰ªãÁªçIOÊ®°ÂûãÊòØ‰ªÄ‰πàÔºüÂæàÂ§ö‰π¶Á±çÊàñËÄÖÁôæÂ∫¶ÁôæÂ∫¶ÁôæÁßëÔºåÈÉΩÊ≤°ÊúâÁªôÂá∫ÊòéÁ°ÆÁöÑËß£ÈáäÔºåÊàë‰πü‰∏çÊï¢‰π±‰∏ãÂÆö‰πâ„ÄÇ‰ª•ÊàëÊÑöËßÅÔºåIOÊ®°ÂûãÔºåÊòØÈÄöËøáÊ†πÊçÆÂâç‰∫∫‰∏ªËßÇÊÑèËØÜÁöÑÊÄùËÄÉËÄåÊûÑÊàêÂÆ¢ËßÇÈòêËø∞IOÂ§çÊùÇÊìç‰ΩúÈÄªËæëÁöÑÁâ©‰ª∂„ÄÇ Ë¶ÅÁü•ÈÅìÔºåÂ∫îÁî®Á®ãÂ∫è‰ΩøÁî®Á≥ªÁªüËµÑÊ∫êÁöÑ‰∏Ä‰∏™ËøáÁ®ãÔºåËøõÁ®ãÊó†Ê≥ïÁõ¥Êé•Êìç‰ΩúIOËÆæÂ§áÁöÑÔºåÂõ†‰∏∫Áî®Êà∑ËøõÁ®ã‰∏çËÉΩÁõ¥Êé•ËÆøÈóÆÁ£ÅÁõòÔºåÊâÄ‰ª•Ë¶ÅÈÄöËøáÂÜÖÊ†∏ÁöÑÁ≥ªÁªüË∞ÉÁî®ËØªÂèñÔºåËøô‰∏™ÂÜÖÊ†∏ËØªÂèñÁöÑËøáÁ®ãÂ∞±ÊòØÁî®Êà∑ËøõÁ®ãÁ≠âÂæÖÁöÑËøáÁ®ãÔºåÁ≠âÂæÖÂÜÖÊ†∏ËØªÂèñÂêéÂ∞ÜÊï∞ÊçÆ‰ªéÂÜÖÊ†∏ÂÜÖÂ≠òÂ§çÂà∂Âà∞ËøõÁ®ãÂÜÖÂ≠ò„ÄÇÂõ†Ê≠§Êìç‰ΩúÁ≥ªÁªüËÆæÁ´ã‰∏Ä‰∏™IOÊ®°ÂûãËøõË°åËßÑËåÉÔºåÂ∞±ÈùûÂ∏∏ÊúâÂøÖË¶Å‰∫Ü„ÄÇ ‰∏∫‰∫ÜÊõ¥Â•ΩÂú∞‰∫ÜËß£IOÊ®°ÂûãÔºåÊàë‰ª¨ÈúÄË¶Å‰∫ãÂÖàÂõûÈ°æ‰∏ãÔºöÂêåÊ≠•„ÄÅÂºÇÊ≠•„ÄÅÈòªÂ°û„ÄÅÈùûÈòªÂ°û ÂêåÊ≠•‰∏éÂºÇÊ≠•ÔºöÊèèËø∞ÁöÑÊòØÁî®Êà∑Á∫øÁ®ã‰∏éÂÜÖÊ†∏ÁöÑ‰∫§‰∫íÊñπÂºèÔºåÂêåÊ≠•ÊåáÁî®Êà∑Á∫øÁ®ãÂèëËµ∑IOËØ∑Ê±ÇÂêéÈúÄË¶ÅÁ≠âÂæÖÊàñËÄÖËΩÆËØ¢ÂÜÖÊ†∏IOÊìç‰ΩúÂÆåÊàêÂêéÊâçËÉΩÁªßÁª≠ÊâßË°åÔºõËÄåÂºÇÊ≠•ÊòØÊåáÁî®Êà∑Á∫øÁ®ãÂèëËµ∑IOËØ∑Ê±ÇÂêé‰ªçÁÑ∂ÁªßÁª≠ÊâßË°åÔºåÂΩìÂÜÖÊ†∏IOÊìç‰ΩúÂÆåÊàêÂêé‰ºöÈÄöÁü•Áî®Êà∑Á∫øÁ®ãÔºåÊàñËÄÖË∞ÉÁî®Áî®Êà∑Á∫øÁ®ãÊ≥®ÂÜåÁöÑÂõûË∞ÉÂáΩÊï∞„ÄÇ ÈòªÂ°û‰∏éÈùûÈòªÂ°ûÔºöÊèèËø∞ÊòØÁî®Êà∑Á∫øÁ®ãË∞ÉÁî®ÂÜÖÊ†∏IOÊìç‰ΩúÁöÑÊñπÂºèÔºåÈòªÂ°ûÊòØÊåáIOÊìç‰ΩúÈúÄË¶ÅÂΩªÂ∫ïÂÆåÊàêÂêéÊâçËøîÂõûÂà∞Áî®Êà∑Á©∫Èó¥ÔºõËÄåÈùûÈòªÂ°ûÊòØÊåáIOÊìç‰ΩúË¢´Ë∞ÉÁî®ÂêéÁ´ãÂç≥ËøîÂõûÁªôÁî®Êà∑‰∏Ä‰∏™Áä∂ÊÄÅÂÄºÔºåÊó†ÈúÄÁ≠âÂà∞IOÊìç‰ΩúÂΩªÂ∫ïÂÆåÊàê„ÄÇ IOÊ®°Âûã‰∏ÄÂÖ±Êúâ5Á±ªÔºö blocking-IO BIOÔºàÈòªÂ°ûIOÔºâ non-blocking IO NIOÔºàÈùûÈòªÂ°ûIOÔºâ IO multiplexing IOÂ§öË∑ØÂ§çÁî® signal driven IO ‰ø°Âè∑È©±Âä®IO asynchronous IO AIOÔºàÂºÇÊ≠•IOÔºâ Áî±‰∫ésignal driven IOÔºà‰ø°Âè∑È©±Âä®IOÔºâÂú®ÂÆûÈôÖ‰∏≠Âπ∂‰∏çÂ∏∏Áî®ÔºåÊâÄ‰ª•‰∏ªË¶Å‰ªãÁªçÂÖ∂‰ΩôÂõõÁßçIO Model„ÄÇ BIOÔºàblocking ioÔºâÂÖàÊù•ÁúãÁúãËØªÊìç‰ΩúÊµÅÁ®ã ‰ªéÂõæ‰∏≠ÂèØ‰ª•ÁúãÂá∫ÔºåÁî®Êà∑ËøõÁ®ãË∞ÉÁî®‰∫ÜrecvfromËøô‰∏™Á≥ªÁªüË∞ÉÁî®ÔºåkernelÂ∞±ÂºÄÂßã‰∫ÜIOÁöÑÁ¨¨‰∏Ä‰∏™Èò∂ÊÆµÔºöÂáÜÂ§áÊï∞ÊçÆ„ÄÇ ÂØπ‰∫énetwork ioÊù•ËØ¥ÔºåÂæàÂ§öÊó∂ÂÄôÊï∞ÊçÆÂú®‰∏ÄÂºÄÂßãËøòÊ≤°ÊúâÂà∞ËææÔºàÊØîÂ¶ÇÔºåËøòÊ≤°ÊúâÊî∂Âà∞‰∏Ä‰∏™ÂÆåÊï¥ÁöÑUDPÂåÖÔºâÔºåËøô‰∏™Êó∂ÂÄôkernelÂ∞±Ë¶ÅÁ≠âÂæÖË∂≥Â§üÁöÑÊï∞ÊçÆÂà∞Êù•„ÄÇ ËÄåÂú®Áî®Êà∑ËøõÁ®ãËøôËæπÔºåÊï¥‰∏™ËøõÁ®ã‰ºöË¢´ÈòªÂ°û„ÄÇÂΩìkernel‰∏ÄÁõ¥Á≠âÂà∞Êï∞ÊçÆÂáÜÂ§áÂ•Ω‰∫ÜÔºåÂÆÉÂ∞±‰ºöÂ∞ÜÊï∞ÊçÆ‰ªékernel‰∏≠Êã∑Ë¥ùÂà∞Áî®Êà∑ÂÜÖÂ≠òÔºåÁÑ∂ÂêékernelËøîÂõûÁªìÊûúÔºåÁî®Êà∑ËøõÁ®ãÊâçËß£Èô§blockÁöÑÁä∂ÊÄÅÔºåÈáçÊñ∞ËøêË°åËµ∑Êù•„ÄÇ ‰πüÂ∞±ÊòØËØ¥Ôºåblocking IOÁöÑÁâπÁÇπÂ∞±ÊòØÂú®IOÊâßË°åÁöÑ‰∏§‰∏™Èò∂ÊÆµÔºàÁ≠âÂæÖÊï∞ÊçÆÂíåÊã∑Ë¥ùÊï∞ÊçÆ‰∏§‰∏™Èò∂ÊÆµÔºâÈÉΩË¢´block‰∫Ü„ÄÇ JAVA ÈòªÂ°û demo‰∏ãÈù¢ÁöÑ‰æãÂ≠ê‰∏ªË¶Å‰ΩøÁî®SocketÈÄöÈÅìËøõË°åÁºñÁ®ã„ÄÇÊúçÂä°Á´ØÂ¶Ç‰∏ãÔºö 1234567891011121314151617181920212223242526272829303132/** * @program: socketTest * @description: one thread demo for bio version * @author: tEngSHe789 * @create: 2018-08-26 21:17 **/public class Server &#123; public static void main(String[] args) &#123; try &#123; ServerSocket serverSocket=new ServerSocket(8888); System.out.println("ÊúçÂä°Á´ØStart...."); //Á≠âÂæÖÂÆ¢Êà∑Á´ØÂ∞±Áª™ -&gt; Â†µÂ°û while (true)&#123; Socket socket = serverSocket.accept(); System.out.println("ÂèëÁé∞ÂÆ¢Êà∑Á´ØËøûÊé•"); InputStream is=socket.getInputStream(); byte[] b =new byte[1024]; //Á≠âÂæÖÂÆ¢Êà∑Á´ØÂèëÈÄÅËØ∑Ê±Ç -&gt; Â†µÂ°û while (true) &#123; int data = is.read(b); String info=null; if (data!=-1)&#123; info=new String(b,0,data,"GBK"); &#125; System.out.println(info); &#125; &#125; &#125; catch (IOException e) &#123; &#125; &#125;&#125; ÂÆ¢Êà∑Á´Ø 123456789101112131415161718/** * @program: socketTest * @description: one thread demo for bio version * @author: tEngSHe789 **/public class Client &#123; public static void main(String[] args) &#123; try &#123; Socket socket=new Socket("127.0.0.1",8888); OutputStream os = socket.getOutputStream(); System.out.println("Ê≠£Âú®ÂèëÈÄÅÊï∞ÊçÆ"); os.write("ËøôÊòØÊù•Ëá™ÂÆ¢Êà∑Á´ØÁöÑ‰ø°ÊÅØ".getBytes()); os.flush(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125;&#125; PY ÈòªÂ°û demoÊúçÂä°Á´Ø 12345678910111213import sockets = socket.socket()s.bind(('127.0.0.1',8888))print('ÊúçÂä°Á´ØÂêØÂä®....')# Á≠âÂæÖÂÆ¢Êà∑Á´ØÂ∞±Áª™ -&gt; Â†µÂ°ûs.listen()# Á≠âÂæÖÂÆ¢Êà∑Á´ØÂèëÈÄÅËØ∑Ê±Ç -&gt; Â†µÂ°ûconn,addr = s.accept()msg = conn.recv(1024).decode('utf-8')print(msg)conn.close()s.close() ÂÆ¢Êà∑Á´Ø 1234567import sockets = socket.socket()s.connect(('127.0.0.1',8888))print('ÂÆ¢Êà∑Á´ØÂ∑≤ÂêØÂä®....')s.send('Ê≠£Âú®ÂèëÈÄÅÊï∞ÊçÆ'.encode('utf-8'))s.close() NIOÔºànon blocking ioÔºâNIOÂ∞±‰∏ç‰∏ÄÊ†∑‰∫ÜÔºårecvformÁ≥ªÁªüË∞ÉÁî®Ë∞ÉÁî®‰πãÂêéÔºåËøõÁ®ãÂπ∂Ê≤°ÊúâË¢´ÈòªÂ°ûÔºåÂÜÖÊ†∏È©¨‰∏äËøîÂõûÁªôËøõÁ®ãÔºåÂ¶ÇÊûúÊï∞ÊçÆËøòÊ≤°ÂáÜÂ§áÂ•ΩÔºåÊ≠§Êó∂‰ºöËøîÂõû‰∏Ä‰∏™error„ÄÇËøõÁ®ãÂú®ËøîÂõû‰πãÂêéÔºåÂèØ‰ª•Âπ≤ÁÇπÂà´ÁöÑ‰∫ãÊÉÖÔºåÁÑ∂ÂêéÂÜçÂèëËµ∑recvformÁ≥ªÁªüË∞ÉÁî®„ÄÇÈáçÂ§ç‰∏äÈù¢ÁöÑËøáÁ®ãÔºåÂæ™ÁéØÂæÄÂ§çÁöÑËøõË°årecvformÁ≥ªÁªüË∞ÉÁî®„ÄÇËøô‰∏™ËøáÁ®ãÈÄöÂ∏∏Ë¢´Áß∞‰πã‰∏∫ËΩÆËØ¢„ÄÇ ËΩÆËØ¢Ê£ÄÊü•ÂÜÖÊ†∏Êï∞ÊçÆÔºåÁõ¥Âà∞Êï∞ÊçÆÂáÜÂ§áÂ•ΩÔºåÂÜçÊã∑Ë¥ùÊï∞ÊçÆÂà∞ËøõÁ®ãÔºåËøõË°åÊï∞ÊçÆÂ§ÑÁêÜ„ÄÇÈúÄË¶ÅÊ≥®ÊÑèÔºåÊã∑Ë¥ùÊï∞ÊçÆÊï¥‰∏™ËøáÁ®ãÔºåËøõÁ®ã‰ªçÁÑ∂ÊòØÂ±û‰∫éÈòªÂ°ûÁöÑÁä∂ÊÄÅ„ÄÇ JAVA ‰∏éNIOJava NIO(New IO)ÊòØ‰∏Ä‰∏™ÂèØ‰ª•Êõø‰ª£Ê†áÂáÜJava IO APIÁöÑIO APIÔºà‰ªéJava 1.4ÂºÄÂßã)ÔºåJava NIOÊèê‰æõ‰∫Ü‰∏éÊ†áÂáÜIO‰∏çÂêåÁöÑIOÂ∑•‰ΩúÊñπÂºè„ÄÇ Âú®java‰∏≠ÔºåÊ†áÂáÜÁöÑIOÂü∫‰∫éÂ≠óËäÇÊµÅÂíåÂ≠óÁ¨¶ÊµÅËøõË°åÊìç‰ΩúÁöÑÔºåËÄåNIOÊòØÂü∫‰∫éÈÄöÈÅìÔºàChannelÔºâÂíåÁºìÂÜ≤Âå∫ÔºàBufferÔºâËøõË°åÊìç‰ΩúÔºåÊï∞ÊçÆÊÄªÊòØ‰ªéÈÄöÈÅìËØªÂèñÂà∞ÁºìÂÜ≤Âå∫‰∏≠ÔºåÊàñËÄÖ‰ªéÁºìÂÜ≤Âå∫ÂÜôÂÖ•Âà∞ÈÄöÈÅì‰∏≠„ÄÇ Êàë‰ª¨ÂÖàÁúãÁúãBufferÁ±ª BufferÁ±ªJava NIO‰∏≠ÁöÑBuffer‰∏ªË¶ÅÁî®‰∫é‰∏éNIOÈÄöÈÅìËøõË°å‰∫§‰∫íÔºåÊï∞ÊçÆÊòØ‰ªéÈÄöÈÅìËØªÂÖ•Âà∞ÁºìÂÜ≤Âå∫Ôºå‰ªéÁºìÂÜ≤Âå∫ÂÜôÂÖ•ÈÄöÈÅì‰∏≠ÁöÑ„ÄÇÊ¶ÇÂøµ‰∏äÔºåÁºìÂÜ≤Âå∫ÂèØ‰ª•ÁúãÊàêÂåÖÂú®‰∏Ä‰∏™ÂØπË±°ÂÜÖÁöÑÊï∞ÁªÑÔºå‰∏ãÈù¢Áúã‰∏Ä‰∏™Âõæ ËøôÊòØ‰∏Ä‰∏™Êñ∞ÂàõÂª∫ÁöÑÂÆπÈáè‰∏∫10ÁöÑByteBufferÈÄªËæëÂõæÔºå‰ªñÊúâÂõõ‰∏™Â±ûÊÄßÊù•Êèê‰æõÂÖ≥‰∫éÂÖ∂ÂåÖÂê´ÁöÑÊï∞ÊçÆÂÖÉÁ¥†‰ø°ÊÅØÔºåÂàÜÂà´ÊòØÔºö 1ÔºâÂÆπÈáèÔºàcapacityÔºâÔºöË°®Á§∫BufferÊúÄÂ§ßÊï∞ÊçÆÂÆπÈáèÔºåÁºìÂÜ≤Âå∫ÂÆπÈáè‰∏çËÉΩ‰∏∫Ë¥üÔºåÂπ∂‰∏îÂª∫Á´ãÂêé‰∏çËÉΩ‰øÆÊîπ„ÄÇ 2ÔºâÈôêÂà∂ÔºàlimitÔºâÔºö‰πüÂè´‰∏äÁïå„ÄÇÁ¨¨‰∏Ä‰∏™‰∏çÂ∫îËØ•ËØªÂèñÊàñËÄÖÂÜôÂÖ•ÁöÑÊï∞ÊçÆÁöÑÁ¥¢ÂºïÔºåÂç≥‰Ωç‰∫élimitÂêéÁöÑÊï∞ÊçÆ‰∏çÂèØ‰ª•ËØªÂÜô„ÄÇÁºìÂÜ≤Âå∫ÁöÑÈôêÂà∂‰∏çËÉΩ‰∏∫Ë¥üÔºåÂπ∂‰∏î‰∏çËÉΩÂ§ß‰∫éÂÖ∂ÂÆπÈáèÔºàcapacityÔºâ„ÄÇ 3Ôºâ‰ΩçÁΩÆÔºàpositionÔºâÔºö‰∏ã‰∏Ä‰∏™Ë¶ÅËØªÂèñÊàñÂÜôÂÖ•ÁöÑÊï∞ÊçÆÁöÑÁ¥¢Âºï„ÄÇÁºìÂÜ≤Âå∫ÁöÑ‰ΩçÁΩÆ‰∏çËÉΩ‰∏∫Ë¥üÔºåÂπ∂‰∏î‰∏çËÉΩÂ§ß‰∫éÂÖ∂ÈôêÂà∂ÔºàlimitÔºâ„ÄÇ 4ÔºâÊ†áËÆ∞ÔºàmarkÔºâ‰∏éÈáçÁΩÆÔºàresetÔºâÔºöÊ†áËÆ∞ÊòØ‰∏Ä‰∏™Á¥¢ÂºïÔºåÈÄöËøáBuffer‰∏≠ÁöÑmark()ÊñπÊ≥ïÊåáÂÆöBuffer‰∏≠‰∏Ä‰∏™ÁâπÂÆöÁöÑpositionÔºå‰πãÂêéÂèØ‰ª•ÈÄöËøáË∞ÉÁî®reset()ÊñπÊ≥ïÊÅ¢Â§çÂà∞Ëøô‰∏™position„ÄÇ ‰ªéËøôÂπÖÂõæÂèØ‰ª•ÁúãÂà∞Ôºå‰ªñÁöÑÂÆπÈáèÔºàcapacityÔºâÂíåÈôêÂà∂ÔºàlimitÔºâËÆæÁΩÆ‰∏∫10Ôºå‰ΩçÁΩÆËÆæÁΩÆ‰∏∫0ÔºåÊØè‰∏™ÁºìÂÜ≤Âå∫ÂÆπÈáèÊòØÂõ∫ÂÆöÁöÑÔºåÊ†áËÆ∞ÊòØÊú™ÂÆö‰πâÁöÑÔºåÂÖ∂‰ªñ‰∏â‰∏™Â±ûÊÄßÂèØ‰ª•ÈÄöËøá‰ΩøÁî®ÁºìÂÜ≤Âå∫Ëß£ÂÜ≥„ÄÇ ÁºìÂÜ≤Âå∫Â≠òÂÇ®Êï∞ÊçÆÊîØÊåÅÁöÑÊï∞ÊçÆÁ±ªÂûãÊîØÊåÅ‰∏ÉÁßçÊï∞ÊçÆÁ±ªÂûãÔºå‰ªñ‰ª¨ÊòØÔºö1.byteBuffer2.charBuffer3.shortBuffer4.IntBuffer5.LongBuffer6.FloatBuffer7.DubooBuffer Âü∫Êú¨Áî®Ê≥ï‰ΩøÁî®BufferËØªÂÜôÊï∞ÊçÆ‰∏ÄËà¨ÈÅµÂæ™‰ª•‰∏ãÂõõ‰∏™Ê≠•È™§Ôºö (1) ÂÜôÂÖ•Êï∞ÊçÆÂà∞BufferÔºå‰∏ÄËà¨ÊúâÂèØ‰ª•‰ªéChannelËØªÂèñÂà∞ÁºìÂÜ≤Âå∫‰∏≠Ôºå‰πüÂèØ‰ª•Ë∞ÉÁî®putÊñπÊ≥ïÂÜôÂÖ•„ÄÇ (2) Ë∞ÉÁî®flip()ÊñπÊ≥ïÔºåÂàáÊç¢Êï∞ÊçÆÊ®°Âºè„ÄÇ (3) ‰ªéBuffer‰∏≠ËØªÂèñÊï∞ÊçÆÔºå‰∏ÄËà¨‰ªéÁºìÂÜ≤Âå∫ËØªÂèñÊï∞ÊçÆÂÜôÂÖ•Âà∞ÈÄöÈÅì‰∏≠Ôºå‰πüÂèØ‰ª•Ë∞ÉÁî®getÊñπÊ≥ïËØªÂèñ„ÄÇ (4) Ë∞ÉÁî®clear()ÊñπÊ≥ïÊàñËÄÖcompact()ÊñπÊ≥ï„ÄÇ ÁºìÂÜ≤Âå∫APIÈ¶ñÂÖàÔºåÁî®allocate ÊåáÂÆöÁºìÂÜ≤Âå∫Â§ßÂ∞è1024 1ByteBuffer byteBuffer=ByteBuffer.allocate(1024); Â≠òÂÇ®ÊàñÂ°´ÂÖÖÊàë‰ª¨ÂèØ‰ª•Áî®put Â≠òÂÖ•Êï∞ÊçÆÂà∞ÁºìÂÜ≤Âå∫ 1byteBuffer.put("tengshe789".getBytes()); ÂΩìË∞ÉÁî®putÊó∂Ôºå‰ºöÊåáÂá∫‰∏ã‰∏Ä‰∏™ÂÖÉÁ¥†Â∫îÂΩìË¢´ÊèíÂÖ•ÁöÑ‰ΩçÁΩÆÔºå‰ΩçÁΩÆÔºàpositionÔºâÊåáÂêëÁöÑÊòØ‰∏ã‰∏Ä‰∏™ÂÖÉÁ¥†„ÄÇÂ¶ÇÊûúÊåáÂêëÁöÑ‰ΩçÁΩÆË∂ÖËøáÈôêÂà∂ÔºàlimitÔºâÔºåÂàôÊäõÂá∫BufferOverFlowExceptionÂºÇÂ∏∏„ÄÇ ÁøªËΩ¨FlipÂ∞Ü‰∏Ä‰∏™ËÉΩÂ§üÁªßÁª≠Ê∑ªÂä†Êï∞ÊçÆÂÖÉÁ¥†ÁöÑÂ°´ÂÖÖÁä∂ÊÄÅÁöÑÁºìÂÜ≤Âå∫ÁøªËΩ¨Êàê‰∏Ä‰∏™ÂáÜÂ§áËØªÂá∫ÂÖÉÁ¥†ÁöÑÈáäÊîæÁä∂ÊÄÅ 1byteBuffer.flip(); ÂÖ∑‰ΩìÊúâ‰ªÄ‰πàÁî®Âë¢Ôºü ÂØπ‰∫éÂ∑≤ÁªèÂÜôÊª°‰∫ÜÁºìÂÜ≤Âå∫ÔºåÂ¶ÇÊûúÂ∞ÜÁºìÂÜ≤Âå∫ÂÜÖÂÆπ‰º†ÈÄíÁªô‰∏Ä‰∏™ÈÄöÈÅìÔºå‰ª•‰ΩøÂÜÖÂÆπËÉΩË¢´ÂÖ®ÈÉ®ÂÜôÂá∫„ÄÇ ‰ΩÜÂ¶ÇÊûúÈÄöÈÅìÁé∞Âú®Âú®ÁºìÂÜ≤Âå∫‰∏äÊâßË°ågetÔºåÈÇ£‰πàÂÆÉÂ∞Ü‰ªéÊàë‰ª¨ÂàöÂàöÊèíÂÖ•ÁöÑÊúâÁî®Êï∞ÊçÆ‰πãÂ§ñÂèñÂá∫Êú™ÂÆö‰πâÊï∞ÊçÆ„ÄÇÈÄöËøáÁøªËΩ¨Â∞Ü‰ΩçÁΩÆÂÄºÈáçÊñ∞ËÆæ‰∏∫ 0ÔºåÈÄöÈÅìÂ∞±‰ºö‰ªéÊ≠£Á°Æ‰ΩçÁΩÆÂºÄÂßãËé∑Âèñ„ÄÇ ‰æãÂ¶ÇÊàë‰ª¨ÂÆö‰πâ‰∫Ü‰∏Ä‰∏™ÂÆπÈáèÊòØ10ÁöÑbufferÔºåÂπ∂Â°´ÂÖ•helloÔºåÂ¶Ç‰∏ãÂõæÊâÄÁ§∫ ÁøªËΩ¨ÂêéÂ¶Ç‰∏ãÂõæÊâÄÁ§∫ ÈáçËØªRewind‰∏é flipÁõ∏‰ººÔºå‰ΩÜ‰∏çÂΩ±Âìç‰∏äÁïåÂ±ûÊÄß„ÄÇÂÆÉÂè™ÊòØÂ∞Ü‰ΩçÁΩÆÂÄºËÆæÂõû 0„ÄÇÂèØ‰ª•‰ΩøÁî® rewind()ÂêéÈÄÄÔºåÈáçËØªÂ∑≤ÁªèË¢´ÁøªËΩ¨ÁöÑÁºìÂÜ≤Âå∫‰∏≠ÁöÑÊï∞ÊçÆ„ÄÇ 1byteBuffer.rewind(); Ëé∑ÂèñÁøªËΩ¨ÂÆå‰∫ÜÔºåÂ∞±ÂèØ‰ª•Áî®getËé∑ÂèñÁºìÂÜ≤Âå∫Êï∞ÊçÆ‰∫Ü 12byte[] b= new byte[byteBuffer.limit()];byteBuffer.get(b); ÂΩìË∞ÉÁî®getÊó∂Ôºå‰ºöÊåáÂá∫‰∏ã‰∏Ä‰∏™ÂÖÉÁ¥†Â∫îÂΩìË¢´Á¥¢ÂºïÁöÑ‰ΩçÁΩÆÔºå‰ΩçÁΩÆÔºàpositionÔºâËøîÂõûÊó∂‰ºö+1s„ÄÇÂ¶ÇÊûúÊåáÂêëÁöÑ‰ΩçÁΩÆË∂ÖËøáÈôêÂà∂ÔºàlimitÔºâÔºåÂàôÊäõÂá∫BufferUnderFlowExceptionÂºÇÂ∏∏„ÄÇÂ¶ÇÊûúÊèê‰æõÁöÑÁ¥¢ÂºïË∂ÖËøáËåÉÂõ¥Ôºå‰πü‰ºöÊäõÂá∫IndexOutOfBoundsExceptionÂºÇÂ∏∏ ÈáäÊîæremainingÂèØ‰ª•ÂëäËØâ‰Ω†‰ªéÂΩìÂâç‰ΩçÁΩÆÔºàpositionÔºâÂà∞ÈôêÂà∂ÔºàlimitÔºâËøòÂâ©ÁöÑÂÖÉÁ¥†Êï∞ÁõÆ 1int count = byteBuffer.remaining(); clearÂ∞ÜÁºìÂÜ≤Âå∫ÈáçÁΩÆ‰∏∫Á©∫Áä∂ÊÄÅ 1byteBuffer.clear(); ÂéãÁº©Â¶ÇÊûúÊàë‰ª¨Âè™ÊÉ≥‰ªéÁºìÂÜ≤Âå∫‰∏≠ÈáäÊîæ‰∏ÄÈÉ®ÂàÜÊï∞ÊçÆÔºåËÄå‰∏çÊòØÂÖ®ÈÉ®ÔºåÁÑ∂ÂêéÈáçÊñ∞Â°´ÂÖÖ„ÄÇ‰∏∫‰∫ÜÂÆûÁé∞Ëøô‰∏ÄÁÇπÔºåÊú™ËØªÁöÑÊï∞ÊçÆÂÖÉÁ¥†ÈúÄË¶Å‰∏ãÁßª‰ª•‰ΩøÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†Á¥¢Âºï‰∏∫ 0„ÄÇÂ∞ΩÁÆ°ÈáçÂ§çËøôÊ†∑ÂÅö‰ºöÊïàÁéá‰Ωé‰∏ãÔºå‰ΩÜËøôÊúâÊó∂ÈùûÂ∏∏ÂøÖË¶ÅÔºåËÄå API ÂØπÊ≠§‰∏∫ÊÇ®Êèê‰æõ‰∫Ü‰∏Ä‰∏™ compact()ÂáΩÊï∞„ÄÇ 1byteBuffer.compact(); Ê†áËÆ∞‰∏éÈáçÁΩÆÊ†áËÆ∞ÊòØ‰∏Ä‰∏™Á¥¢ÂºïÔºåÈÄöËøáBuffer‰∏≠ÁöÑmark()ÊñπÊ≥ïÊåáÂÆöBuffer‰∏≠‰∏Ä‰∏™ÁâπÂÆöÁöÑpositionÔºå‰πãÂêéÂèØ‰ª•ÈÄöËøáË∞ÉÁî®reset()ÊñπÊ≥ïÊÅ¢Â§çÂà∞Ëøô‰∏™position„ÄÇË¶ÅÁü•ÈÅìÁºìÂÜ≤Âå∫ÁöÑÊ†áËÆ∞Âú®mark()ÂáΩÊï∞Ë¢´Ë∞ÉÁî®ÂâçÊó∂Êú™ÂÆö‰πâÁöÑÔºåÂ¶ÇÊûúÊ†áËÆ∞Êú™ÂÆö‰πâÔºåË∞ÉÁî®reset()‰ºöÂØºËá¥InvalidMarkExceptionÂºÇÂ∏∏ 1byteBuffer.position(2).mark().position(4).reset(); Ë¶ÅÊ≥®ÊÑèÔºåjava.nio‰∏≠ÁöÑÁ±ªÁâπÊÑèË¢´ËÆæËÆ°‰∏∫ÊîØÊåÅÁ∫ßËÅîË∞ÉÁî®Ôºå‰ºòÈõÖÁöÑ‰ΩøÁî®Á∫ßËÅîË∞ÉÁî®ÔºåÂèØ‰ª•‰∫ßÁîü‰ºòÁæéÊòìËØªÁöÑ‰ª£Á†Å„ÄÇ Áõ¥Êé•ÁºìÂÜ≤Âå∫‰∏éÈùûÁõ¥Êé•ÁºìÂÜ≤Âå∫ÈùûÁõ¥Êé•ÁºìÂÜ≤Âå∫‰∏äÈù¢Êàë‰ª¨ËØ¥‰∫ÜByteBufferÔºå‰πüÂ∞±ÊòØÁºìÂÜ≤Âå∫ÁöÑÁî®Ê≥ïÔºåË≠¨Â¶ÇÁî®allocate() ÊñπÊ≥ïÊåáÂÆöÁºìÂÜ≤Âå∫Â§ßÂ∞èÔºåÁÑ∂ÂêéËøõË°åÂ°´ÂÖÖÊàñÁøªËΩ¨Êìç‰ΩúÁ≠âÁ≠âÁ≠â„ÄÇÊàë‰ª¨ÊâÄÂàõÂª∫ÁöÑÁºìÂÜ≤Âå∫ÔºåÈÉΩÂ±û‰∫éÁõ¥Êé•ÁºìÂÜ≤Âå∫„ÄÇ‰ªñ‰ª¨ÈÉΩÊòØÂú®JVM‰∏≠ÂÜÖÂ≠ò‰∏≠ÂàõÂª∫ÔºåÂú®ÊØèÊ¨°Ë∞ÉÁî®Âü∫Á°ÄÊìç‰ΩúÁ≥ªÁªüÁöÑ‰∏Ä‰∏™Êú¨Êú∫IO‰πãÂâçÊàñËÄÖ‰πãÂêéÔºåËôöÊãüÊú∫ÈÉΩ‰ºöÂ∞ÜÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπÂ§çÂà∂Âà∞‰∏≠Èó¥ÁºìÂÜ≤Âå∫ÔºàÊàñËÄÖ‰ªé‰∏≠Èó¥ÁºìÂÜ≤Âå∫Â§çÂà∂ÂÜÖÂÆπÔºâÔºåÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπÈ©ªÁïôÂú®JVMÂÜÖÔºåÂõ†Ê≠§ÈîÄÊØÅÂÆπÊòìÔºå‰ΩÜÊòØÂç†Áî®JVMÂÜÖÂ≠òÂºÄÈîÄÔºåÂ§ÑÁêÜËøáÁ®ã‰∏≠ÊúâÂ§çÂà∂Êìç‰Ωú„ÄÇ ÈùûÁõ¥Êé•ÁºìÂÜ≤Âå∫ÂÜôÂÖ•Ê≠•È™§Ôºö 1.ÂàõÂª∫‰∏Ä‰∏™‰∏¥Êó∂ÁöÑÁõ¥Êé•ByteBufferÂØπË±°„ÄÇ2.Â∞ÜÈùûÁõ¥Êé•ÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπÂ§çÂà∂Âà∞‰∏¥Êó∂ÁºìÂÜ≤‰∏≠„ÄÇ3.‰ΩøÁî®‰∏¥Êó∂ÁºìÂÜ≤Âå∫ÊâßË°å‰ΩéÂ±ÇÊ¨°I/OÊìç‰Ωú„ÄÇ4.‰∏¥Êó∂ÁºìÂÜ≤Âå∫ÂØπË±°Á¶ªÂºÄ‰ΩúÁî®ÂüüÔºåÂπ∂ÊúÄÁªàÊàê‰∏∫Ë¢´ÂõûÊî∂ÁöÑÊó†Áî®Êï∞ÊçÆ„ÄÇ 1234567891011121314151617181920212223242526/** * @program: UndirectBuffer * @description: Âà©Áî®ÈÄöÈÅìÂÆåÊàêÊñá‰ª∂ÁöÑÂ§çÂà∂(ÈùûÁõ¥Êé•ÁºìÂÜ≤Âå∫) * @author: tEngSHe789 **/public class UndirectBuffer &#123; public static void main(String[] args) throws IOException &#123; // ÂàõÂª∫ÊµÅ FileInputStream fis = new FileInputStream("d://blog.md"); FileOutputStream fos = new FileOutputStream("d://blog.md"); //Ëé∑ÂèñÁÆ°ÈÅì FileChannel in = fis.getChannel(); FileChannel out = fos.getChannel(); // ÂàÜÈÖçÊåáÂÆöÂ§ßÂ∞èÁöÑÁºìÂÜ≤Âå∫ ByteBuffer buffer = ByteBuffer.allocate(1024); while (in.read(buffer) !=-1)&#123; buffer.flip();// ÂáÜÂ§áËØªÊï∞ÊçÆ‰∫Ü out.write(buffer); buffer.clear(); &#125; out.close(); in.close(); fis.close(); fos.close(); &#125;&#125; Áõ¥Êé•ÁºìÂÜ≤Âå∫Áõ¥Êé•ÁºìÂÜ≤Âå∫ÔºåÊòØÈÄöËøá allocateDirect() ÊñπÊ≥ïÂú®JVMÂÜÖÂ≠òÂ§ñÂºÄËæüÂÜÖÂ≠òÔºåÂú®ÊØèÊ¨°Ë∞ÉÁî®Âü∫Á°ÄÊìç‰ΩúÁ≥ªÁªüÁöÑ‰∏Ä‰∏™Êú¨Êú∫IO‰πãÂâçÊàñËÄÖ‰πãÂêéÔºåËôöÊãüÊú∫ÈÉΩ‰ºöÈÅøÂÖçÂ∞ÜÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπÂ§çÂà∂Âà∞‰∏≠Èó¥ÁºìÂÜ≤Âå∫ÔºàÊàñËÄÖ‰ªé‰∏≠Èó¥ÁºìÂÜ≤Âå∫Â§çÂà∂ÂÜÖÂÆπÔºâÔºåÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπÈ©ªÁïôÂú®Áâ©ÁêÜÂÜÖÂ≠òÂÜÖÔºå‰ºöÂ∞ë‰∏ÄÊ¨°Â§çÂà∂ËøáÁ®ãÔºåÂ¶ÇÊûúÈúÄË¶ÅÂæ™ÁéØ‰ΩøÁî®ÁºìÂÜ≤Âå∫ÔºåÁî®Áõ¥Êé•ÁºìÂÜ≤Âå∫ÂèØ‰ª•ÂæàÂ§ßÂú∞ÊèêÈ´òÊÄßËÉΩ„ÄÇ ËôΩÁÑ∂Áõ¥Êé•ÁºìÂÜ≤Âå∫‰ΩøJVMÂèØ‰ª•ËøõË°åÈ´òÊïàÁöÑI/OÊìç‰ΩúÔºå‰ΩÜÂÆÉ‰ΩøÁî®ÁöÑÂÜÖÂ≠òÊòØÊìç‰ΩúÁ≥ªÁªüÂàÜÈÖçÁöÑÔºåÁªïËøá‰∫ÜJVMÂ†ÜÊ†àÔºåÂª∫Á´ãÂíåÈîÄÊØÅÊØîÂ†ÜÊ†à‰∏äÁöÑÁºìÂÜ≤Âå∫Ë¶ÅÊõ¥Â§ßÁöÑÂºÄÈîÄ„ÄÇ 12345678910111213141516171819202122/** * @program: DirectBuffer * @description: ‰ΩøÁî®Áõ¥Êé•ÁºìÂÜ≤Âå∫ÂÆåÊàêÊñá‰ª∂ÁöÑÂ§çÂà∂(ÂÜÖÂ≠òÊò†Â∞ÑÊñá‰ª∂) * @author: tEngSHe789 **/public class DirectBuffer &#123; public static void main(String[] args) throws IOException &#123; //ÂàõÂª∫ÁÆ°ÈÅì FileChannel in=FileChannel.open(Paths.get("d://blog.md"),StandardOpenOption.READ); FileChannel out=FileChannel.open(Paths.get("d://blog.md"),StandardOpenOption.WRITE ,StandardOpenOption.READ,StandardOpenOption.CREATE); // ÊãøÂà∞Â∞ÜÁÆ°ÈÅìÂÜÖÂÆπÊò†Â∞ÑÂà∞ÂÜÖÂ≠òÁöÑÁõ¥Êé•ÁºìÂÜ≤Âå∫Êò†Â∞ÑÊñá‰ª∂Ôºà‰∏Ä‰∏™‰ΩçÁΩÆÂú®Á°¨ÁõòÁöÑÂü∫‰∫éÂÜÖÂ≠òÁöÑÁºìÂÜ≤Âå∫Ôºâ MappedByteBuffer inMappedByteBuffer = in.map(FileChannel.MapMode.READ_ONLY, 0, in.size()); MappedByteBuffer outMappedByteBuffer = out.map(FileChannel.MapMode.READ_WRITE, 0, in.size()); // ÂØπÁõ¥Êé•ÁºìÂÜ≤Âå∫ËøõË°åÊï∞ÊçÆËØªÂÜôÊìç‰Ωú byte[] bytes=new byte[inMappedByteBuffer.limit()]; inMappedByteBuffer.get(bytes); outMappedByteBuffer.put(bytes); in.close(); out.close(); &#125;&#125; Áõ¥Êé•ÁºìÂÜ≤Âå∫‰∏éÈùûÁõ¥Êé•ÁºìÂÜ≤Âå∫ÁöÑÂå∫Âà´ Â≠óËäÇÁºìÂÜ≤Âå∫Ë¶Å‰πàÊòØÁõ¥Êé•ÁöÑÔºåË¶Å‰πàÊòØÈùûÁõ¥Êé•ÁöÑ„ÄÇÂ¶ÇÊûú‰∏∫Áõ¥Êé•Â≠óËäÇÁºìÂÜ≤Âå∫ÔºåÂàô Java ËôöÊãüÊú∫‰ºöÂ∞ΩÊúÄÂ§ßÂä™ÂäõÁõ¥Êé•Âú®Ê≠§ÁºìÂÜ≤Âå∫‰∏äÊâßË°åÊú¨Êú∫ I/O Êìç‰Ωú„ÄÇ‰πüÂ∞±ÊòØËØ¥ÔºåÂú®ÊØèÊ¨°Ë∞ÉÁî®Âü∫Á°ÄÊìç‰ΩúÁ≥ªÁªüÁöÑ‰∏Ä‰∏™Êú¨Êú∫ I/O Êìç‰Ωú‰πãÂâçÔºàÊàñ‰πãÂêéÔºâÔºåËôöÊãüÊú∫ÈÉΩ‰ºöÂ∞ΩÈáèÈÅøÂÖçÂ∞ÜÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπÂ§çÂà∂Âà∞‰∏≠Èó¥ÁºìÂÜ≤Âå∫‰∏≠ÔºàÊàñ‰ªé‰∏≠Èó¥ÁºìÂÜ≤Âå∫‰∏≠Â§çÂà∂ÂÜÖÂÆπÔºâ„ÄÇ Áõ¥Êé•Â≠óËäÇÁºìÂÜ≤Âå∫ÂèØ‰ª•ÈÄöËøáË∞ÉÁî®Ê≠§Á±ªÁöÑ allocateDirect() Â∑•ÂéÇÊñπÊ≥ïÊù•ÂàõÂª∫„ÄÇÊ≠§ÊñπÊ≥ïËøîÂõûÁöÑÁºìÂÜ≤Âå∫ËøõË°åÂàÜÈÖçÂíåÂèñÊ∂àÂàÜÈÖçÊâÄÈúÄÊàêÊú¨ÈÄöÂ∏∏È´ò‰∫éÈùûÁõ¥Êé•ÁºìÂÜ≤Âå∫„ÄÇÁõ¥Êé•ÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπÂèØ‰ª•È©ªÁïôÂú®Â∏∏ËßÑÁöÑÂûÉÂúæÂõûÊî∂Â†Ü‰πãÂ§ñÔºåÂõ†Ê≠§ÔºåÂÆÉ‰ª¨ÂØπÂ∫îÁî®Á®ãÂ∫èÁöÑÂÜÖÂ≠òÈúÄÊ±ÇÈáèÈÄ†ÊàêÁöÑÂΩ±ÂìçÂèØËÉΩÂπ∂‰∏çÊòéÊòæ„ÄÇÊâÄ‰ª•ÔºåÂª∫ËÆÆÂ∞ÜÁõ¥Êé•ÁºìÂÜ≤Âå∫‰∏ªË¶ÅÂàÜÈÖçÁªôÈÇ£‰∫õÊòìÂèóÂü∫Á°ÄÁ≥ªÁªüÁöÑÊú¨Êú∫ I/O Êìç‰ΩúÂΩ±ÂìçÁöÑÂ§ßÂûã„ÄÅÊåÅ‰πÖÁöÑÁºìÂÜ≤Âå∫„ÄÇ‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÔºåÊúÄÂ•Ω‰ªÖÂú®Áõ¥Êé•ÁºìÂÜ≤Âå∫ËÉΩÂú®Á®ãÂ∫èÊÄßËÉΩÊñπÈù¢Â∏¶Êù•ÊòéÊòæÂ•ΩÂ§ÑÊó∂ÂàÜÈÖçÂÆÉ‰ª¨„ÄÇ Áõ¥Êé•Â≠óËäÇÁºìÂÜ≤Âå∫ËøòÂèØ‰ª•ÈÄöËøá FileChannel ÁöÑ map() ÊñπÊ≥ï Â∞ÜÊñá‰ª∂Âå∫ÂüüÁõ¥Êé•Êò†Â∞ÑÂà∞ÂÜÖÂ≠ò‰∏≠Êù•ÂàõÂª∫„ÄÇËØ•ÊñπÊ≥ïËøîÂõûMappedByteBuffer „ÄÇ Java Âπ≥Âè∞ÁöÑÂÆûÁé∞ÊúâÂä©‰∫éÈÄöËøá JNI ‰ªéÊú¨Êú∫‰ª£Á†ÅÂàõÂª∫Áõ¥Êé•Â≠óËäÇÁºìÂÜ≤Âå∫„ÄÇÂ¶ÇÊûú‰ª•‰∏äËøô‰∫õÁºìÂÜ≤Âå∫‰∏≠ÁöÑÊüê‰∏™ÁºìÂÜ≤Âå∫ÂÆû‰æãÊåáÁöÑÊòØ‰∏çÂèØËÆøÈóÆÁöÑÂÜÖÂ≠òÂå∫ÂüüÔºåÂàôËØïÂõæËÆøÈóÆËØ•Âå∫Âüü‰∏ç‰ºöÊõ¥ÊîπËØ•ÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπÔºåÂπ∂‰∏îÂ∞Ü‰ºöÂú®ËÆøÈóÆÊúüÈó¥ÊàñÁ®çÂêéÁöÑÊüê‰∏™Êó∂Èó¥ÂØºËá¥ÊäõÂá∫‰∏çÁ°ÆÂÆöÁöÑÂºÇÂ∏∏„ÄÇ Â≠óËäÇÁºìÂÜ≤Âå∫ÊòØÁõ¥Êé•ÁºìÂÜ≤Âå∫ËøòÊòØÈùûÁõ¥Êé•ÁºìÂÜ≤Âå∫ÂèØÈÄöËøáË∞ÉÁî®ÂÖ∂ isDirect() ÊñπÊ≥ïÊù•Á°ÆÂÆö„ÄÇÊèê‰æõÊ≠§ÊñπÊ≥ïÊòØ‰∏∫‰∫ÜËÉΩÂ§üÂú®ÊÄßËÉΩÂÖ≥ÈîÆÂûã‰ª£Á†Å‰∏≠ÊâßË°åÊòæÂºèÁºìÂÜ≤Âå∫ÁÆ°ÁêÜ„ÄÇ ChannelÈÄöÈÅìÊòØjava.nioÁöÑÁ¨¨‰∫å‰∏™ÂàõÊñ∞ÔºåË°®Á§∫Êèê‰æõ IO ËÆæÂ§á(‰æãÂ¶ÇÔºöÊñá‰ª∂„ÄÅÂ•óÊé•Â≠ó)ÁöÑÁõ¥Êé•ËøûÊé•„ÄÇ Ëã•ÈúÄË¶Å‰ΩøÁî® NIO Á≥ªÁªüÔºåÈúÄË¶ÅËé∑ÂèñÁî®‰∫éËøûÊé• IO ËÆæÂ§áÁöÑÈÄöÈÅì‰ª•ÂèäÁî®‰∫éÂÆπÁ∫≥Êï∞ÊçÆÁöÑÁºìÂÜ≤Âå∫„ÄÇÁÑ∂ÂêéÊìç‰ΩúÁºìÂÜ≤Âå∫ÔºåÂØπÊï∞ÊçÆËøõË°åÂ§ÑÁêÜ„ÄÇËøôÂÖ∂‰∏≠ÔºåChannelË¥üË¥£‰º†ËæìÔºå Buffer Ë¥üË¥£Â≠òÂÇ®„ÄÇ ÈÄöÈÅìÊòØÁî±java.nio.channels ÂåÖÂÆö‰πâÁöÑÔºåChannel Ë°®Á§∫ IO Ê∫ê‰∏éÁõÆÊ†áÊâìÂºÄÁöÑËøûÊé•„ÄÇChannel Á±ª‰ºº‰∫é‰º†ÁªüÁöÑ‚ÄúÊµÅ‚Äù„ÄÇÂè™‰∏çËøá ChannelÊú¨Ë∫´‰∏çËÉΩÁõ¥Êé•ËÆøÈóÆÊï∞ÊçÆÔºå Channel Âè™ËÉΩ‰∏éBuffer ËøõË°å‰∫§‰∫í„ÄÇ Êé•Âè£java.nio.channels.Channel Êé•Âè£Ôºö FileChannel SocketChannel ServerSocketChannel DatagramChannel ‰∏éÁºìÂÜ≤Âå∫‰∏çÂêåÔºåÈÄöÈÅìAPI‰∏ªË¶ÅÁî±Êé•Âè£ÊåáÂÆöÔºå‰∏çÂêåÊìç‰ΩúÁ≥ªÁªü‰∏äÈÄöÈÅìÁöÑÂÆûÁé∞‰ºö‰∏ç‰∏ÄÊ†∑ ÂÆûÁé∞Áõ¥Êé•ÁºìÂÜ≤Âå∫‰∏éÈùûÁõ¥Êé•ÁºìÂÜ≤Âå∫ÁöÑÊ†óÂ≠ê ÂàÜÊï£ËØªÂèñ‰∏éËÅöÈõÜÂÜôÂÖ•ÈÄöÈÅìÂèØ‰ª•ÊúâÈÄâÊã©Âú∞ÂÆûÁé∞‰∏§‰∏™Êñ∞ÁöÑÊé•Âè£Ôºö ScatteringByteChannel Âíå GatheringByteChannel„ÄÇ ScatteringByteChannel Êúâ2‰∏™readÊñπÊ≥ïÔºåÊàë‰ª¨ÈÉΩÂè´Â•πÂàÜÊï£ËØªÂèñ(scattering Reads)ÔºåÂàÜÊï£ËØªÂèñ‰∏≠ÔºåÈÄöÈÅì‰æùÊ¨°Â°´ÂÖÖÊØè‰∏™ÁºìÂÜ≤Âå∫„ÄÇÂ°´Êª°‰∏Ä‰∏™ÁºìÂÜ≤Âå∫ÂêéÔºåÂÆÉÂ∞±ÂºÄÂßãÂ°´ÂÖÖ‰∏ã‰∏Ä‰∏™„ÄÇÂú®ÊüêÁßçÊÑè‰πâ‰∏äÔºåÁºìÂÜ≤Âå∫Êï∞ÁªÑÂ∞±ÂÉè‰∏Ä‰∏™Â§ßÁºìÂÜ≤Âå∫„ÄÇ GatheringByteChannel‰∏≠Êúâ2‰∏™wirteÊñπÊ≥ïÔºåÊàë‰ª¨ÈÉΩÂè´Â•πËÅöÈõÜÂÜôÂÖ•(gathering Writes)Ôºå‰ªñÂèØ‰ª•Â∞ÜÂ§ö‰∏™ÁºìÂÜ≤Âå∫ÁöÑÊï∞ÊçÆËÅöÈõÜÂà∞ÈÄöÈÅì‰∏≠ ÂàÜÊï£ËØªÂèñ‰∏éËÅöÈõÜÂÜôÂÖ•ÁöÑÂ∫îÁî®ÂàÜÊï£ËØªÂèñ/ËÅöÈõÜÂÜôÂÖ•ÂØπ‰∫éÂ∞ÜÊï∞ÊçÆÂàíÂàÜ‰∏∫Âá†‰∏™ÈÉ®ÂàÜÂæàÊúâÁî®„ÄÇ‰æãÂ¶ÇÔºåÊÇ®ÂèØËÉΩÂú®ÁºñÂÜô‰∏Ä‰∏™‰ΩøÁî®Ê∂àÊÅØÂØπË±°ÁöÑÁΩëÁªúÂ∫îÁî®Á®ãÂ∫èÔºåÊØè‰∏Ä‰∏™Ê∂àÊÅØË¢´ÂàíÂàÜ‰∏∫Âõ∫ÂÆöÈïøÂ∫¶ÁöÑÂ§¥ÈÉ®ÂíåÂõ∫ÂÆöÈïøÂ∫¶ÁöÑÊ≠£Êñá„ÄÇÊÇ®ÂèØ‰ª•ÂàõÂª∫‰∏Ä‰∏™ÂàöÂ•ΩÂèØ‰ª•ÂÆπÁ∫≥Â§¥ÈÉ®ÁöÑÁºìÂÜ≤Âå∫ÂíåÂè¶‰∏Ä‰∏™ÂàöÂ•ΩÂèØ‰ª•ÂÆπÈöæÊ≠£ÊñáÁöÑÁºìÂÜ≤Âå∫„ÄÇÂΩìÊÇ®Â∞ÜÂÆÉ‰ª¨ÊîæÂÖ•‰∏Ä‰∏™Êï∞ÁªÑ‰∏≠Âπ∂‰ΩøÁî®ÂàÜÊï£ËØªÂèñÊù•ÂêëÂÆÉ‰ª¨ËØªÂÖ•Ê∂àÊÅØÊó∂ÔºåÂ§¥ÈÉ®ÂíåÊ≠£ÊñáÂ∞ÜÊï¥ÈΩêÂú∞ÂàíÂàÜÂà∞Ëøô‰∏§‰∏™ÁºìÂÜ≤Âå∫‰∏≠„ÄÇ Êàë‰ª¨‰ªéÁºìÂÜ≤Âå∫ÊâÄÂæóÂà∞ÁöÑÊñπ‰æøÊÄßÂØπ‰∫éÁºìÂÜ≤Âå∫Êï∞ÁªÑÂêåÊ†∑ÊúâÊïà„ÄÇÂõ†‰∏∫ÊØè‰∏Ä‰∏™ÁºìÂÜ≤Âå∫ÈÉΩË∑üË∏™Ëá™Â∑±ËøòÂèØ‰ª•Êé•ÂèóÂ§öÂ∞ëÊï∞ÊçÆÔºåÊâÄ‰ª•ÂàÜÊï£ËØªÂèñ‰ºöËá™Âä®ÊâæÂà∞ÊúâÁ©∫Èó¥Êé•ÂèóÊï∞ÊçÆÁöÑÁ¨¨‰∏Ä‰∏™ÁºìÂÜ≤Âå∫„ÄÇÂú®Ëøô‰∏™ÁºìÂÜ≤Âå∫Â°´Êª°ÂêéÔºåÂÆÉÂ∞±‰ºöÁßªÂä®Âà∞‰∏ã‰∏Ä‰∏™ÁºìÂÜ≤Âå∫„ÄÇ Python‰∏éNIOÊúçÂä°Á´ØÔºàÂÖ∑‰ΩìËßÅÊ≥®ÈáäÔºâ 1234567891011121314151617181920212223242526272829303132333435from socket import *import times=socket(AF_INET,SOCK_STREAM)s.bind(('127.0.0.1',8888))s.listen(5)s.setblocking(False) #ËÆæÁΩÆsocketÁöÑÊé•Âè£‰∏∫ÈùûÈòªÂ°ûconn_l=[] # Â≠òÂÇ®ÂíåserverÁöÑËøûÊé• ÁöÑ ËøûÊé•del_l=[] # Â≠òÂÇ®ÂíåÂíåserverÁöÑÊñ≠ÂºÄ ÁöÑ ËøûÊé•while True: try: # Ëøô‰∏™ËøáÁ®ãÊòØ‰∏çÈòªÂ°ûÁöÑ conn,addr=s.accept() # ÂΩìÊ≤°‰∫∫ËøûÊé•ÁöÑÊó∂ÂÄô‰ºöÊä•ÈîôÔºåËµ∞exceptionÔºà&lt;- py‰∏≠ÊòØexceptÔºâ conn_l.append(conn) except BlockingIOError: print(conn_l) for conn in conn_l: try: data=conn.recv(1024) if not data: del_l.append(conn) # Ëøô‰∏™ËøáÁ®ãÊòØ‰∏çÈòªÂ°ûÁöÑ data=conn.recv(1024) # ‰∏çÈòªÂ°û if not data: # Â¶ÇÊûúÊãø‰∏çÂà∞data del_l.append(conn) # Âú®Â∫üÂºÉÂàóË°®‰∏≠Ê∑ªÂä†conn continue conn.send(data.upper()) except BlockingIOError: pass except ConnectionResetError: del_l.append(conn) for conn in del_l: conn_l.remove(conn) conn.close() del_l=[] ÂÆ¢Êà∑Á´Ø 12345678910from socket import *c=socket(AF_INET,SOCK_STREAM)c.connect(('127.0.0.1',8888))while True: msg=input('&gt;&gt;: ') if not msg:continue c.send(msg.encode('utf-8')) data=c.recv(1024) print(data.decode('utf-8')) IOÂ§çÁî®(IO multiplexing)I/OÂ§öË∑ØÂ§çÁî®ÂÆûÈôÖ‰∏äÂ∞±ÊòØÁî®select, poll, epollÁõëÂê¨Â§ö‰∏™ioÂØπË±°ÔºåÂΩìioÂØπË±°ÊúâÂèòÂåñÔºàÊúâÊï∞ÊçÆÔºâÁöÑÊó∂ÂÄôÂ∞±ÈÄöÁü•Áî®Êà∑ËøõÁ®ã„ÄÇÊúâ‰∫õÂú∞Êñπ‰πüÁß∞ËøôÁßçIOÊñπÂºè‰∏∫‰∫ã‰ª∂È©±Âä®IO(event driven IO)„ÄÇ‰∏éÂ§öËøõÁ®ãÂíåÂ§öÁ∫øÁ®ãÊäÄÊúØÁõ∏ÊØîÔºåI/OÂ§öË∑ØÂ§çÁî®ÊäÄÊúØÁöÑÊúÄÂ§ß‰ºòÂäøÊòØÁ≥ªÁªüÂºÄÈîÄÂ∞èÔºåÁ≥ªÁªü‰∏çÂøÖÂàõÂª∫ËøõÁ®ã/Á∫øÁ®ãÔºå‰πü‰∏çÂøÖÁª¥Êä§Ëøô‰∫õËøõÁ®ã/Á∫øÁ®ãÔºå‰ªéËÄåÂ§ßÂ§ßÂáèÂ∞è‰∫ÜÁ≥ªÁªüÁöÑÂºÄÈîÄ„ÄÇÂΩìÁÑ∂ÂÖ∑‰ΩìÁöÑÂèØ‰ª•ÁúãÁúãËøôÁØáÂçöÂÆ¢ÔºåÁé∞Âú®ÂÖàÊù•Áúã‰∏ãI/OÂ§öË∑ØÂ§çÁî®ÁöÑÊµÅÁ®ãÔºö Ôºà1ÔºâÂΩìÁî®Êà∑ËøõÁ®ãË∞ÉÁî®‰∫ÜselectÔºåÈÇ£‰πàÊï¥‰∏™ËøõÁ®ã‰ºöË¢´blockÔºõ Ôºà2ÔºâËÄåÂêåÊó∂Ôºåkernel‰ºö‚ÄúÁõëËßÜ‚ÄùÊâÄÊúâselectË¥üË¥£ÁöÑsocketÔºõ Ôºà3ÔºâÂΩì‰ªª‰Ωï‰∏Ä‰∏™socket‰∏≠ÁöÑÊï∞ÊçÆÂáÜÂ§áÂ•Ω‰∫ÜÔºåselectÂ∞±‰ºöËøîÂõûÔºõ Ôºà4ÔºâËøô‰∏™Êó∂ÂÄôÁî®Êà∑ËøõÁ®ãÂÜçË∞ÉÁî®readÊìç‰ΩúÔºåÂ∞ÜÊï∞ÊçÆ‰ªékernelÊã∑Ë¥ùÂà∞Áî®Êà∑ËøõÁ®ã„ÄÇ Ëøô‰∏™ÂõæÂíåBIOÁöÑÂõæÂÖ∂ÂÆûÂπ∂Ê≤°ÊúâÂ§™Â§ßÁöÑ‰∏çÂêåÔºå‰∫ãÂÆû‰∏äËøòÊõ¥Â∑Æ‰∏Ä‰∫õ„ÄÇÂõ†‰∏∫ËøôÈáåÈúÄË¶Å‰ΩøÁî®‰∏§‰∏™Á≥ªÁªüË∞ÉÁî®(selectÂíårecvfrom)ÔºåËÄåBIOÂè™Ë∞ÉÁî®‰∫Ü‰∏Ä‰∏™Á≥ªÁªüË∞ÉÁî®(recvfrom)„ÄÇ‰ΩÜÊòØÔºåÁî®selectÁöÑ‰ºòÂäøÂú®‰∫éÂÆÉÂèØ‰ª•ÂêåÊó∂Â§ÑÁêÜÂ§ö‰∏™connection„ÄÇ JAVAÂÆûÁé∞IOÂ§çÁî®ËøôÈáåÊàë‰ª¨‰ΩøÁî®ÁöÑÊòØjava.nio‰∏ãÊ®°ÂùóÊù•ÂÆåÊàêI/OÂ§öË∑ØÂ§çÁî®ÁöÑ‰æãÂ≠ê„ÄÇÊàëÁî®Âà∞ÁöÑSelectorÔºàÈÄâÊã©Âô®ÔºâÔºåÊòØJava NIO‰∏≠ËÉΩÂ§üÊ£ÄÊµã‰∏ÄÂà∞Â§ö‰∏™NIOÈÄöÈÅìÔºåÂπ∂ËÉΩÂ§üÁü•ÊôìÈÄöÈÅìÊòØÂê¶‰∏∫ËØ∏Â¶ÇËØªÂÜô‰∫ã‰ª∂ÂÅöÂ•ΩÂáÜÂ§áÁöÑÁªÑ‰ª∂„ÄÇËøôÊ†∑Ôºå‰∏Ä‰∏™ÂçïÁã¨ÁöÑÁ∫øÁ®ãÂèØ‰ª•ÁÆ°ÁêÜÂ§ö‰∏™channelÔºå‰ªéËÄåÁÆ°ÁêÜÂ§ö‰∏™ÁΩëÁªúËøûÊé•„ÄÇ SelectorÁöÑ‰ΩøÁî®SelectorÁöÑÂàõÂª∫1Selector selector = Selector.open(); ÂêëSelectorÊ≥®ÂÜåÈÄöÈÅì‰∏∫‰∫ÜÂ∞ÜChannelÂíåSelectorÈÖçÂêà‰ΩøÁî®ÔºåÂøÖÈ°ªÂ∞ÜchannelÊ≥®ÂÜåÂà∞selector‰∏ä„ÄÇÈÄöËøáSelectableChannel.register()ÊñπÊ≥ïÊù•ÂÆûÁé∞ÔºåÂ¶Ç‰∏ãÔºö 12channel.configureBlocking(false);SelectionKey key = channel.register(selector,Selectionkey.OP_READ); register()ÊñπÊ≥ïÁöÑÁ¨¨‰∫å‰∏™ÂèÇÊï∞ÊòØ‰∏Ä‰∏™‚ÄúinterestÈõÜÂêà‚ÄùÔºåÊÑèÊÄùÊòØÂú®ÈÄöËøáSelectorÁõëÂê¨ChannelÊó∂ÂØπ‰ªÄ‰πà‰∫ã‰ª∂ÊÑüÂÖ¥Ë∂£„ÄÇÂèØ‰ª•ÁõëÂê¨ÂõõÁßç‰∏çÂêåÁ±ªÂûãÁöÑ‰∫ã‰ª∂ÔºöConnect„ÄÅAccept„ÄÅRead„ÄÅWrite ÈÄöÈÅìËß¶Âèë‰∫Ü‰∏Ä‰∏™‰∫ã‰ª∂ÊÑèÊÄùÊòØËØ•‰∫ã‰ª∂Â∑≤ÁªèÂ∞±Áª™„ÄÇÊâÄ‰ª•ÔºåÊüê‰∏™channelÊàêÂäüËøûÊé•Âà∞Âè¶‰∏Ä‰∏™ÊúçÂä°Âô®Áß∞‰∏∫‚ÄúËøûÊé•Â∞±Áª™‚Äù„ÄÇ‰∏Ä‰∏™server socket channelÂáÜÂ§áÂ•ΩÊé•Êî∂Êñ∞ËøõÂÖ•ÁöÑËøûÊé•Áß∞‰∏∫‚ÄúÊé•Êî∂Â∞±Áª™‚Äù„ÄÇ‰∏Ä‰∏™ÊúâÊï∞ÊçÆÂèØËØªÁöÑÈÄöÈÅìÂèØ‰ª•ËØ¥ÊòØ‚ÄúËØªÂ∞±Áª™‚Äù„ÄÇÁ≠âÂæÖÂÜôÊï∞ÊçÆÁöÑÈÄöÈÅìÂèØ‰ª•ËØ¥ÊòØ‚ÄúÂÜôÂ∞±Áª™‚Äù„ÄÇ ËøôÂõõÁßç‰∫ã‰ª∂Áî®SelectionKeyÁöÑÂõõ‰∏™Â∏∏ÈáèÊù•Ë°®Á§∫Ôºö SelectionKey.OP_CONNECTÂèØËøûÊé• SelectionKey.OP_ACCEPTÂèØÊé•ÂèóËøûÊé• SelectionKey.OP_READÂèØËØª SelectionKey.OP_WRITEÂèØÂÜô SelectionKeyÂΩìÂêëSelectorÊ≥®ÂÜåChannelÊó∂Ôºåregister()ÊñπÊ≥ï‰ºöËøîÂõû‰∏Ä‰∏™SelectionKeyÂØπË±°„ÄÇÂÆÉÂåÖÂê´‰∫ÜÔºö interestÈõÜÂêà readyÈõÜÂêà Channel Selector ÈôÑÂä†ÁöÑÂØπË±°ÔºàÂèØÈÄâÔºâ interestÈõÜÂêàinterestÈõÜÂêàÊòØ‰Ω†ÊâÄÈÄâÊã©ÁöÑÊÑüÂÖ¥Ë∂£ÁöÑ‰∫ã‰ª∂ÈõÜÂêà„ÄÇÂèØ‰ª•ÈÄöËøáSelectionKeyËØªÂÜôinterestÈõÜÂêàÔºåÂÉèËøôÊ†∑Ôºö 123456int interestSet = selectionKey.interestOps();boolean isInterestedInAccept = (interestSet &amp; SelectionKey.OP_ACCEPT) == SelectionKey.OP_ACCEPTÔºõboolean isInterestedInConnect = interestSet &amp; SelectionKey.OP_CONNECT;boolean isInterestedInRead = interestSet &amp; SelectionKey.OP_READ;boolean isInterestedInWrite = interestSet &amp; SelectionKey.OP_WRITE; ÂèØ‰ª•ÁúãÂà∞ÔºåÁî®‚Äú‰Ωç‰∏é‚ÄùÊìç‰Ωúinterest ÈõÜÂêàÂíåÁªôÂÆöÁöÑSelectionKeyÂ∏∏ÈáèÔºåÂèØ‰ª•Á°ÆÂÆöÊüê‰∏™Á°ÆÂÆöÁöÑ‰∫ã‰ª∂ÊòØÂê¶Âú®interest ÈõÜÂêà‰∏≠„ÄÇ readyÈõÜÂêàready ÈõÜÂêàÊòØÈÄöÈÅìÂ∑≤ÁªèÂáÜÂ§áÂ∞±Áª™ÁöÑÊìç‰ΩúÁöÑÈõÜÂêà„ÄÇÂú®‰∏ÄÊ¨°ÈÄâÊã©(Selection)‰πãÂêéÔºå‰Ω†‰ºöÈ¶ñÂÖàËÆøÈóÆËøô‰∏™ready set„ÄÇSelectionÂ∞ÜÂú®‰∏ã‰∏ÄÂ∞èËäÇËøõË°åËß£Èáä„ÄÇÂèØ‰ª•ËøôÊ†∑ËÆøÈóÆreadyÈõÜÂêàÔºö 1int readySet = selectionKey.readyOps(); ÂèØ‰ª•Áî®ÂÉèÊ£ÄÊµãinterestÈõÜÂêàÈÇ£Ê†∑ÁöÑÊñπÊ≥ïÔºåÊù•Ê£ÄÊµãchannel‰∏≠‰ªÄ‰πà‰∫ã‰ª∂ÊàñÊìç‰ΩúÂ∑≤ÁªèÂ∞±Áª™„ÄÇ‰ΩÜÊòØÔºå‰πüÂèØ‰ª•‰ΩøÁî®‰ª•‰∏ãÂõõ‰∏™ÊñπÊ≥ïÔºåÂÆÉ‰ª¨ÈÉΩ‰ºöËøîÂõû‰∏Ä‰∏™Â∏ÉÂ∞îÁ±ªÂûãÔºö 1234selectionKey.isAcceptable();selectionKey.isConnectable();selectionKey.isReadable();selectionKey.isWritable(); ‰ªéSelectionKeyËÆøÈóÆChannelÂíåSelector12Channel channel = selectionKey.channel();Selector selector = selectionKey.selector(); java‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849/** * @program: NIOServer * @description: ÊúçÂä°Á´Ø * @author: tEngSHe789 **/public class NIOServer &#123; public static void main(String[] args) throws IOException &#123; System.out.println("ÊúçÂä°Á´ØStart...."); // ÂàõÂª∫ÈÄöÈÅì ServerSocketChannel serverSocketChannel=ServerSocketChannel.open(); // ËÆæÁΩÆÈùûÈòªÂ°û serverSocketChannel.configureBlocking(false); // ÁªëÂÆöËøûÊé• serverSocketChannel.bind(new InetSocketAddress(8888)); // Ëé∑ÂèñÈÄâÊã©Âô® Selector selector=Selector.open(); // Â∞ÜÈÄöÈÅìÊ≥®ÂÜåÂà∞ÈÄâÊã©Âô® serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT); // ËΩÆË∞ÉÂºèËé∑ÂèñÈÄâÊã©‚ÄúÂ∑≤ÁªèÂáÜÂ§áÂ∞±Áª™‚ÄùÁöÑ‰∫ã‰ª∂ while (selector.select() &gt; 0)&#123; // Ëé∑ÂèñÂΩìÂâçÈÄâÊã©Âô®ÁöÑÂ∑¶Âè≥Â∑≤ÁªèÂáÜÂ§áÂ∞±Áª™ÁöÑÁõëÂê¨‰∫ã‰ª∂ÔºàÈÄâÊã©keyÔºâ Iterator&lt;SelectionKey&gt; iterator=selector.selectedKeys().iterator(); while (iterator.hasNext())&#123; // Ëé∑ÂèñÂáÜÂ§áÂ∞±Áª™‰∫ã‰ª∂ SelectionKey selectionKey=iterator.next(); // Âà§Êñ≠ÂÖ∑‰ΩìÊòØ‰ªÄ‰πà‰∫ã‰ª∂ if (selectionKey.isAcceptable())&#123;//Â¶ÇÊûúÊòØ‚ÄúÊé•ÂèóÂ∞±Áª™‚Äù SocketChannel socketChannel=serverSocketChannel.accept();// Ëé∑ÂèñËøûÊé• socketChannel.configureBlocking(false); // ËÆæÁΩÆÈùûÈòªÂ°û //Â∞ÜËØ•ÈÄöÈÅìÊ≥®ÂÜåÂà∞ÊúçÂä°Âô®‰∏ä socketChannel.register(selector, SelectionKey.OP_READ); &#125;else if (selectionKey.isReadable())&#123;//Â¶ÇÊòØ‚ÄúÂ∑≤ÁªèÂ∞±Áª™‚Äù SocketChannel socketChannel= (SocketChannel) selectionKey.channel();//Ëé∑ÂèñËøûÊé• //ËØªÊï∞ÊçÆ ByteBuffer buffer=ByteBuffer.allocate(1024); int len = 0; //ÂàÜÊï£ËØªÂèñ len=socketChannel.read(buffer); while (len &gt; 0)&#123; buffer.flip(); System.out.println(new String(buffer.array(),0,len)); buffer.clear(); &#125; &#125; iterator.remove(); &#125; &#125; &#125;&#125; ÂÆ¢Êà∑Á´ØÔºö1234567891011121314151617181920212223242526272829/** * @program: NIOClient * @description: ÂÆ¢Êà∑Á´Ø * @author: tEngSHe789 **/public class NIOClient &#123; public static void main(String[] args) throws IOException &#123; System.out.println("ÂÆ¢Êà∑Á´ØStart...."); // ÂàõÂª∫ÈÄöÈÅì SocketChannel socketChannel=SocketChannel.open(new InetSocketAddress("127.0.0.1",8888)); // ËÆæÁΩÆSocketChannelÊé•Âè£‰∏∫ÈùûÈòªÂ°û socketChannel.configureBlocking(false); //ÊåáÂÆöÁºìÂÜ≤Âå∫Â§ßÂ∞è ByteBuffer buffer=ByteBuffer.allocate(1024); Scanner scanner=new Scanner(System.in); while (scanner.hasNext())&#123; String msg = scanner.next(); // Â≠òÂÇ® buffer.put((new Date().toString()+"\n"+msg).getBytes()); // ÁøªËΩ¨ buffer.flip(); // ËÅöÈõÜÂÜôÂÖ• socketChannel.write(buffer); // ÈáäÊîæ buffer.clear(); &#125; socketChannel.close(); &#125;&#125; pythonÂÆûÁé∞IOÂ§çÁî®ÂØπÊØîjavaÁî®ÁöÑÊòØSelectorÔºåÂèØ‰ª•Â∏ÆÊàë‰ª¨Âú®ÈªòËÆ§Êìç‰ΩúÁ≥ªÁªü‰∏ãÈÄâÊã©ÊúÄÂêàÈÄÇÁöÑselect, poll, epollËøô‰∏âÁßçÂ§öË∑ØÂ§çÂêàÊ®°ÂûãÔºåpythonÊòØÈÄöËøá‰∏ÄÁßçÊú∫Âà∂‰∏Ä‰∏™ËøõÁ®ãËÉΩÂêåÊó∂Á≠âÂæÖÂ§ö‰∏™Êñá‰ª∂ÊèèËø∞Á¨¶ÔºåËÄåËøô‰∫õÊñá‰ª∂ÊèèËø∞Á¨¶ÔºàÂ•óÊé•Â≠óÊèèËø∞Á¨¶ÔºâÂÖ∂‰∏≠ÁöÑ‰ªªÊÑè‰∏Ä‰∏™ËøõÂÖ•ËØªÂ∞±Áª™Áä∂ÊÄÅÔºåselect()ÂáΩÊï∞Â∞±ÂèØ‰ª•ËøîÂõû„ÄÇ ÊúçÂä°Á´Ø12345678910111213141516171819202122232425262728293031from socket import *import selects=socket(AF_INET,SOCK_STREAM)s.setsockopt(SOL_SOCKET,SO_REUSEADDR,1)s.bind(('127.0.0.1',8888))s.listen(5)s.setblocking(False) #ËÆæÁΩÆsocketÁöÑÊé•Âè£‰∏∫ÈùûÈòªÂ°ûread_l=[s,] # Êï∞ÊçÆÂèØËØªÈÄöÈÅìÁöÑÂàóË°®while True: # ÁõëÂê¨ÁöÑread_l‰∏≠ÁöÑsocketÂØπË±°ÂÜÖÈÉ®Â¶ÇÊûúÊúâÂèòÂåñÔºåÈÇ£‰πàËøô‰∏™ÂØπË±°Â∞±‰ºöÂú®r_l # Á¨¨‰∫å‰∏™ÂèÇÊï∞ÈáåÊúâ‰ªÄ‰πàÂØπË±°Ôºåw_l‰∏≠Â∞±Êúâ‰ªÄ‰πàÂØπË±° # Á¨¨‰∏â‰∏™ÂèÇÊï∞ Â¶ÇÊûúËøôÈáåÁöÑÂØπË±°ÂÜÖÈÉ®Âá∫ÈîôÔºåÈÇ£‰ºöÊääËøô‰∫õÂØπË±°Âä†Âà∞x_l‰∏≠ # 1 ÊòØË∂ÖÊó∂Êó∂Èó¥ r_l,w_l,x_l=select.select(read_l,[],[],1) print(r_l) for ready_obj in r_l: if ready_obj == s: conn,addr=ready_obj.accept() #Ê≠§Êó∂ÁöÑready_objÁ≠â‰∫és read_l.append(conn) else: try: data=ready_obj.recv(1024) #Ê≠§Êó∂ÁöÑready_objÁ≠â‰∫éconn if not data: ready_obj.close() read_l.remove(ready_obj) raise Exception('ËøûÊé•Êñ≠ÂºÄ') ready_obj.send(data.upper()) except ConnectionResetError: ready_obj.close() read_l.remove(ready_obj) ÂÆ¢Êà∑Á´Ø12345678910from socket import *c=socket(AF_INET,SOCK_STREAM)c.connect(('127.0.0.1',8888))while True: msg=input('&gt;&gt;&gt;: ') if not msg:continue c.send(msg.encode('utf-8')) data=c.recv(1024) print(data.decode('utf-8')) AIOÔºàasynchronous ioÔºâÁúüÊ≠£ÁöÑÂºÇÊ≠•I/OÂæàÁâõÈÄºÔºåÊµÅÁ®ãÂ§ßÊ¶ÇÂ¶Ç‰∏ãÔºö Ôºà1ÔºâÁî®Êà∑ËøõÁ®ãÂèëËµ∑readÊìç‰Ωú‰πãÂêéÔºåÁ´ãÂàªÂ∞±ÂèØ‰ª•ÂºÄÂßãÂéªÂÅöÂÖ∂ÂÆÉÁöÑ‰∫ã„ÄÇ Ôºà2ÔºâËÄåÂè¶‰∏ÄÊñπÈù¢Ôºå‰ªékernelÁöÑËßíÂ∫¶ÔºåÂΩìÂÆÉÂèóÂà∞‰∏Ä‰∏™asynchronous read‰πãÂêéÔºåÈ¶ñÂÖàÂÆÉ‰ºöÁ´ãÂàªËøîÂõûÔºåÊâÄ‰ª•‰∏ç‰ºöÂØπÁî®Êà∑ËøõÁ®ã‰∫ßÁîü‰ªª‰Ωïblock„ÄÇ Ôºà3ÔºâÁÑ∂ÂêéÔºåkernel‰ºöÁ≠âÂæÖÊï∞ÊçÆÂáÜÂ§áÂÆåÊàêÔºåÁÑ∂ÂêéÂ∞ÜÊï∞ÊçÆÊã∑Ë¥ùÂà∞Áî®Êà∑ÂÜÖÂ≠òÔºåÂΩìËøô‰∏ÄÂàáÈÉΩÂÆåÊàê‰πãÂêéÔºåkernel‰ºöÁªôÁî®Êà∑ËøõÁ®ãÂèëÈÄÅ‰∏Ä‰∏™signalÔºåÂëäËØâÂÆÉreadÊìç‰ΩúÂÆåÊàê‰∫Ü„ÄÇ JavaJava‰∏≠‰ΩøÁî®AIOÈúÄË¶ÅÁî®Âà∞java.nio.channels.AsynchronousChannelGroupÂíåjava.nio.channels.AsynchronousServerSocketChannelÁöÑÂåÖÔºåÁî±‰∫éÂÆûÈôÖÈ°πÁõÆÈ≤úÊúâ‰∫∫Áî®ÔºåÂ∞±‰∏çÊºîÁ§∫‰∫Ü ÊÄªÁªì ÂõûÈ°æ‰∏Ä‰∏ãÂêÑ‰∏™IO ModelÁöÑÊØîËæÉÔºåÂ¶ÇÂõæÊâÄÁ§∫Ôºö blocking io ÔºöÈòªÂ°ûÂûãioÔºåÂÜçÁÜüÊÇâ‰∏çËøáÔºåÂ§ÑÁêÜaccept„ÄÅread„ÄÅwriteÈÉΩ‰ºöÈòªÂ°ûÁî®Êà∑ËøõÁ®ã non blocking ioÔºöÂΩìÈÄöËøáÁ≥ªÁªüË∞ÉÁî®ÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûúÊ≤°ÊúâËøûÊé•ÊàñËÄÖÊï∞ÊçÆÂà∞ËææÂ∞±Áõ¥Êé•ËøîÂõû‰∏Ä‰∏™ÈîôËØØÔºåÁî®Êà∑ËøõÁ®ã‰∏çÈòªÂ°û‰ΩÜÊòØ‰∏çÊñ≠ÁöÑËΩÆËØ¢„ÄÇÊ≥®ÊÑèËøô‰∏™‰∏çÊòØjava nioÊ°ÜÊû∂‰∏≠ÂØπÂ∫îÁöÑÁΩëÁªúÊ®°Âûã io multiplexingÔºöioÂ§öË∑ØÂ§çÁî®ÊâçÊòØnioÂØπÂ∫îÁöÑÁΩëÁªúioÊ®°Âûã„ÄÇËØ•Ê®°ÂûãÂØπ‰∫éÁî®Êà∑ËøõÁ®ã‰πüÊòØÈòªÂ°ûÁöÑÔºå‰ºòÁÇπÊòØÂèØ‰ª•ÂêåÊó∂ÊîØÊåÅÂ§ö‰∏™connetciotn„ÄÇÂâç‰∏âÁßçÈÉΩÂ±û‰∫éÂêåÊ≠•Ê®°ÂºèÔºåÊó¢ÁÑ∂ÈÉΩÊòØÂêåÊ≠•ÁöÑÔºåÂ¶ÇÊûúË¶ÅÂÅöÂà∞Áúã‰ººÈùûÈòªÂ°ûÔºåÈÇ£‰πàÂ∞±ÈúÄË¶ÅËΩÆËØ¢Êú∫Âà∂„ÄÇÁõ∏ÂØπ‰∫é‰∏ä‰∏ÄÁßçÊ®°ÂûãÔºåËøôÁßçÂè™ÊòØÂ∞ÜËΩÆËØ¢‰ªéÁî®Êà∑ËøõÁ®ãËΩ¨ÁßªÂà∞‰∫ÜÊìç‰ΩúÁ≥ªÁªüÂÜÖÊ†∏ÔºåÈÄöËøáË∞ÉÁî®selectÂáΩÊï∞Ôºå‰∏çÊñ≠ËΩÆËØ¢Â§ö‰∏™connectionÊòØÂê¶readyÔºåÂ¶ÇÊûúÊúâ‰∏ÄÁßçreadyÂ•ΩÁöÑÔºåÂ∞±ÈÄöËøá‰∫ã‰ª∂ÈÄöÁü•Áî®Êà∑ËøõÁ®ãÔºåÁî®Êà∑ËøõÁ®ãÂÜçÈÄöËøá‰∫ã‰ª∂Êù•Â§ÑÁêÜ„ÄÇÊâÄ‰ª•Âú®javaÁöÑnio‰∏≠‰ºöÁúãÂà∞‰∏ÄÂ§ßÂ†Ü‰∫ã‰ª∂Â§ÑÁêÜ„ÄÇËøôÁßçÊ®°ÂûãÁöÑÈòªÂ°û‰∏çÊòØÂú®socketÂ±ÇÈù¢ÁöÑÈòªÂ°ûÔºåËÄåÊòØÂú®Ë∞ÉÂä®selectÂáΩÊï∞ÁöÑÈòªÂ°û„ÄÇËÄå‰∏îÁõ∏ÂØπ‰∫éblocking ioÔºåËøòÂ§ö‰∫Ü‰∏ÄÊ¨°selectÁöÑÁ≥ªÁªüË∞ÉÁî®ÔºåÂÖ∂ÂÆûÊÄßËÉΩ‰ºöÊõ¥‰ΩéÔºåÊâÄ‰ª•Âú®‰ΩéÂêûÂêêÈáè‰∏ãÔºåËøôÁßçio‰∏çËßÅÂæóÊØîbio+Á∫øÁ®ãÊ±†ÁöÑÊ®°Âûã‰ºòË∂ä„ÄÇ sign drivenÔºöÊûÅÂ∞ë‰ΩøÁî®Ôºå‰∏çÁü•ÈÅì async io Ôºöjava7Êó∂ÂÄôÂºÄÂßãÂçáÁ∫ßÔºå‰πüÊàê‰∏∫nio2„ÄÇÂÆûÁé∞‰∫ÜÂºÇÊ≠•ÁöÑio„ÄÇÂâç‰∏âÁßçÈÉΩÊòØÈÄöËøáÁî®Êà∑ËøõÁ®ãÂú®‰∏ªÂä®Ëé∑ÂèñÔºàbioÁöÑÈòªÂ°ûÔºånbioÁöÑËΩÆËØ¢ÂíåiomultÁöÑÊåâ‰∫ã‰ª∂Ëé∑ÂèñÔºâÔºåËÄåaio‰∫§‰∫íÂæàÁÆÄÂçïÔºåÁî®Êà∑ËøõÁ®ãË∞ÉÁî®ÂêéÁ´ãÂç≥ËøîÂõûÔºåÁî®Êà∑ËøõÁ®ã‰∏çÈòªÂ°ûÔºåÂÜÖÊ†∏ÂΩìÂÆåÊàêÁΩëÁªúioÂíåÊï∞ÊçÆÂ§çÂà∂ÂêéÔºå‰∏ªÂä®ÈÄöÁü•Áî®Êà∑ËøõÁ®ã„ÄÇÂâçÈù¢ËØ¥Âà∞ÁöÑÁ≥ªÁªüÂÜÖÊ†∏ÂÅöÁöÑÊìç‰ΩúÔºåÈô§‰∫ÜÁ≠âÂæÖÁΩëÁªúioÂ∞±Áª™Êï∞ÊçÆÂà∞ËææÂÜÖÊ†∏ÔºåËøòÊúâ‰ªéÁ≥ªÁªüÂÜÖÊ†∏Â§çÂà∂Áî®Êà∑Á©∫Èó¥ÂéªÁöÑËøáÁ®ãÔºåÂºÇÊ≠•ioËøô‰∏§ËÄÖÂØπ‰∫éÁî®Êà∑ËøõÁ®ãËÄåË®ÄÈÉΩÊòØÈùûÈòªÂ°ûÁöÑÔºåËÄåÂâç‰∏âÁßçÔºåÂú®Êï∞ÊçÆ‰ªéÂÜÖÊ†∏Â§çÂà∂Âà∞Áî®Êà∑Á©∫Èó¥Ëøô‰∏™ËøáÁ®ãÔºåÈÉΩÊòØÈòªÂ°ûÁöÑ„ÄÇ ÂèÇËÄÉËµÑÊñôÂâçË®ÄËØ¥ÁöÑÈÇ£Êú¨‰π¶ Ron Hitchens‰∫é2002Âπ¥ ËëóÁöÑ„Ääjava nio„Äã findumars ÂÜ¨ÁìúËî° ÂΩºÂ≤∏ËàπÂ§´ NIOÁöÑ/ÂàÜÊï£ËØªÂèñÂíåËÅöÈõÜÂÜôÂÖ• Âπ∂ÂèëÁºñÁ®ãÁΩë ÊÑüË∞¢ Áª≠1sÊó∂Èó¥ÂÖ®ÁâáÁªìÊùüÔºåËßâÂæóÊàëÂÜôÁöÑ‰∏çÈîôÔºüÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËµ∂Âø´ÊâìÂºÄÊàëÁöÑüëâ‰∏™‰∫∫ÂçöÂÆ¢ üëàÂêßÔºÅ Êú¨ÊñáÂú∞ÂùÄhttps://blog.tengshe789.tech/2018/08/25/IO%E6%A8%A1%E5%9E%8B/#moreÔºåÈÉ®ÂàÜËßâÂæóÊØîËæÉÁî®ÂøÉÁöÑ‰ºöÂêåÊ≠•Âà∞ÊéòÈáëÔºåÁÆÄ‰π¶ÔºåË∞¢Ë∞¢‰Ω†ÈÇ£‰πàÂèØÁà±ÔºåËøò‰∏ÄÁõ¥ÂÖ≥Ê≥®ÁùÄÊàë~‚ù§üòù]]></content>
      <tags>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>python</tag>
        <tag>Êìç‰ΩúÁ≥ªÁªü</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ëß£ÈáäÊÄßËØ≠Ë®Ä&ÁºñËØëÊÄßËØ≠Ë®ÄÔºåÂä®ÊÄÅ&ÈùôÊÄÅËØ≠Ë®Ä?]]></title>
    <url>%2F2018%2F08%2F21%2F%E8%A7%A3%E9%87%8A%E6%80%A7%E8%AF%AD%E8%A8%80-%E7%BC%96%E8%AF%91%E6%80%A7%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%8A%A8%E6%80%81-%E9%9D%99%E6%80%81%E8%AF%AD%E8%A8%80%2F</url>
    <content type="text"><![CDATA[‰Ω†ÊòØ‰∏çÊòØÊØè‰∏ÄÊ¨°ÂÜôÂÆåjavaÔºåÂÜôÂÆåpythonÔºåÈÉΩÊúâËÆ∏‰∫õÁñëÊÉë~ ‰∏∫‰ªÄ‰πàÊØèÊ¨°Êñ∞Âª∫‰∏Ä‰∏™pythonÈ°πÁõÆÔºåJetBrains PyCharm ÈÉΩ‰ºöËÆ©‰Ω†ÈÄâ‰∏Ä‰∏™Ëß£ÈáäÂô®Ôºå‰ªÄ‰πàÊòØËß£ÈáäÂô®Âë¢Ôºü ‰∏∫‰ªÄ‰πàÁºñÂÜôJava‰∏çÈúÄË¶ÅËß£ÈáäÂô®Âë¢Ôºü‰ªäÂ§©Â∞±Áªô‰Ω†‰ª¨Â∏¶Êù•Á≠îÊ°à~ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆhttps://blog.tengshe789.tech/ ÁºñËØëÂûãÂíåËß£ÈáäÂûãÁöÑÂå∫Âà´ÁºñËØëÂûãËØ≠Ë®ÄÂÖàÊù•ÁúãÁúãÁºñËØëÂûãËØ≠Ë®ÄÂÆö‰πâÔºö ÁºñËØëÂûãËØ≠Ë®ÄÈ¶ñÂÖàÊòØÂ∞ÜÊ∫ê‰ª£Á†ÅÁºñËØëÁîüÊàêÊú∫Âô®Êåá‰ª§ÔºåÂÜçÁî±Êú∫Âô®ËøêË°åÊú∫Âô®Á†Å(‰∫åËøõÂà∂)„ÄÇ ÂèØ‰ª•Ëøô‰πàÁêÜËß£ÔºåÁºñËØëÂûãÁõ∏ÂΩì‰∫éÁî®‰∏≠Ëã±ÊñáËØçÂÖ∏ÔºàÁøªËØëÂô®ÔºâÂ∞Ü‰∏ÄÊú¨Ëã±Êñá‰π¶‰∏ÄÊ¨°ÊÄßÁøªËØëÔºàÁºñËØëÔºâÊàê‰∏ÄÊú¨‰∏≠Êñá‰π¶„ÄÇ‰ª•ÂêéÊü•ÁúãÁõ¥Êé•Â∞±ÊòØ‰∏≠Êñá‰∫Ü„ÄÇÂèØÊÉ≥ËÄåÁü•Ôºå‰ª•ÂêéËØª‰π¶ÔºàÊâßË°åÔºâ‰ºöÈùûÂ∏∏ÈùûÂ∏∏Êñπ‰æø„ÄÇ ÊâÄ‰ª•ÔºåÁî±‰∫éÁ®ãÂ∫èÊâßË°åÈÄüÂ∫¶Âø´ÔºåÂêåÁ≠âÊù°‰ª∂‰∏ãÂØπÁ≥ªÁªüË¶ÅÊ±ÇËæÉ‰ΩéÔºåÂõ†Ê≠§ÂÉèÂºÄÂèëÊìç‰ΩúÁ≥ªÁªü„ÄÅÂ§ßÂûãÂ∫îÁî®Á®ãÂ∫è„ÄÅÊï∞ÊçÆÂ∫ìÁ≥ªÁªüÁ≠âÊó∂ÈÉΩÈááÁî®ÂÆÉÔºåÂÉèC/C++„ÄÅPascal/Object PascalÔºàDelphiÔºâÁ≠âÈÉΩÊòØÁºñËØëËØ≠Ë®Ä Áî®cËØ≠Ë®ÄÂºÄÂèë‰∫ÜÁ®ãÂ∫èÂêéÔºåÈúÄË¶ÅÈÄöËøáÁºñËØëÂô®ÊääÁ®ãÂ∫èÁºñËØëÊàêÊú∫Âô®ËØ≠Ë®ÄÔºàÂç≥ËÆ°ÁÆóÊú∫ËØÜÂà´ÁöÑ‰∫åËøõÂà∂Êñá‰ª∂ÔºåÂõ†‰∏∫‰∏çÂêåÁöÑÊìç‰ΩúÁ≥ªÁªüËÆ°ÁÆóÊú∫ËØÜÂà´ÁöÑ‰∫åËøõÂà∂Êñá‰ª∂ÊòØ‰∏çÂêåÁöÑÔºâÔºåÊâÄ‰ª•cËØ≠Ë®ÄÁ®ãÂ∫èËøõË°åÁßªÊ§çÂêéÔºåË¶ÅÈáçÊñ∞ÁºñËØë„ÄÇÔºàÂ¶ÇwindowsÁºñËØëÊàêextÊñá‰ª∂ÔºålinuxÁºñËØëÊàêerpÊñá‰ª∂Ôºâ Ëß£ÈáäÂûãËØ≠Ë®ÄÂÜçÊù•ÁúãÁúãËß£ÈáäÂûãËØ≠Ë®ÄÁöÑÂÆö‰πâÔºö Ëß£ÈáäÂûãËØ≠Ë®ÄÁöÑÊ∫ê‰ª£Á†Å‰∏çÊòØÁõ¥Êé•ÁøªËØëÊàêÊú∫Âô®Êåá‰ª§ÔºåËÄåÊòØÂÖàÁøªËØëÊàê‰∏≠Èó¥‰ª£Á†ÅÔºåÂÜçÁî±Ëß£ÈáäÂô®ÂØπ‰∏≠Èó¥‰ª£Á†ÅËøõË°åËß£ÈáäËøêË°å„ÄÇ ËÄåËß£ÈáäÂûãÁõ∏ÂΩì‰∫éÁî®‰∏≠Ëã±ÊñáËØçÂÖ∏ÔºàÁøªËØëÂô®ÔºâÂ∞Ü‰∏ÄÊú¨Ëã±Êñá‰π¶ËØª‰∏ÄÊÆµÁøªËØë‰∏ÄÊÆµÔºàËß£ÈáäÔºâ‰∏≠Êñá„ÄÇ‰ª•ÂêéÊü•ÁúãÊó∂ËøòÊòØÈúÄË¶ÅÈáçÊñ∞ÁøªËØë„ÄÇËøôÊ†∑ÊïàÁéá‰ºö‰Ωé‰∏Ä‰∫õÔºåÂøÖÈ°ª‰æùËµñËß£ÈáäÂô®Ôºå‰ΩÜÊòØË∑®Âπ≥Âè∞ÊÄßÂ•Ω„ÄÇ ÊâÄ‰ª•Ôºå‰∏Ä‰∫õÁΩëÈ°µËÑöÊú¨„ÄÅÊúçÂä°Âô®ËÑöÊú¨ÂèäËæÖÂä©ÂºÄÂèëÊé•Âè£ËøôÊ†∑ÁöÑÂØπÈÄüÂ∫¶Ë¶ÅÊ±Ç‰∏çÈ´ò„ÄÅÂØπ‰∏çÂêåÁ≥ªÁªüÂπ≥Âè∞Èó¥ÁöÑÂÖºÂÆπÊÄßÊúâ‰∏ÄÂÆöË¶ÅÊ±ÇÁöÑÁ®ãÂ∫èÂàôÈÄöÂ∏∏‰ΩøÁî®Ëß£ÈáäÊÄßËØ≠Ë®ÄÔºåÂ¶ÇJavaScript„ÄÅVBScript„ÄÅPerl„ÄÅPython„ÄÅRuby„ÄÅMATLAB Á≠âÁ≠â JavaÁºñËØëÂûãÂíåËß£ÈáäÂûãÁöÑÂÆö‰πâÊòØÂØπÁ´ãÂ≠òÂú®ÁöÑÔºå‰ΩÜ‰πüÂèØ‰ª•Âú®‰∏Ä‰∏™ËØ≠Ë®Ä‰∏≠ÂêåÊó∂Â≠òÂú®„ÄÇ ‰∏∫‰ªÄ‰πàÊàëÊää java ËØ≠Ë®ÄÂçïÁã¨ÊîæÂá∫Êù•Âë¢ÔºüÂõ†‰∏∫ÂÆÉÂêåÊó∂ÂÖºÊúâÁºñËØëÂûãÂíåËß£ÈáäÂûãÁâπÁÇπ„ÄÇ Êï¥‰∏™ÊµÅÁ®ãÂ¶Ç‰∏ãÔºö Êàë‰ª¨ÁºñÂ•ΩÊ∫ê‰ª£Á†ÅÔºà.java Êñá‰ª∂ÔºâÔºåÁºñËØëÁîüÊàêÂ≠óËäÇÁ†ÅÔºà.class Êñá‰ª∂ÔºâÔºåÂÜçÈÄöËøá JVMÔºàjava ËôöÊãüÊú∫ÔºâËøêË°åÁîüÊàêÊú∫Âô®Êåá‰ª§ÔºåÁî±Êú∫Âô®ËøêË°åÊú∫Âô®Á†Å„ÄÇÊ≥®ÊÑèÔºåÊ≠§Â§ÑÁîüÊàêÊú∫Âô®ËØ≠Ë®ÄÂâçÁöÑÊìç‰ΩúÊòØËß£ÈáäÂûãÔºåÊØèÊ¨°ËøêË°åÈÉΩË¶ÅÈáçÊñ∞Ëß£Èáä„ÄÇÂõ†Ê≠§ÔºåÊ≠§Â§ÑË°®Êòé java ÊòØËß£ÈáäÂûã„ÄÇ ‰ΩÜÊòØÔºåÈÉ®ÂàÜ JVMÔºàjava ËôöÊãüÊú∫ÔºâÊúâ‰∏ÄÁßç JITÔºàJust in timeÔºâÊú∫Âà∂ÔºåËÉΩÂ§üÂ∞ÜÈÉ®ÂàÜÂ∑≤ÁªèËß£ÈáäÁøªËØëÁöÑÂ∏∏Áî®Êú∫Âô®Êåá‰ª§‰øùÂ≠ò„ÄÇ‰∏ãÊ¨°‰∏çÈúÄË¶ÅËß£ÈáäÔºåÁõ¥Êé•ËøêË°åÂç≥ÂèØ„ÄÇÊ≠§Êó∂ java ÊòØÁºñËØëÂûã„ÄÇ Âä®ÊÄÅËØ≠Ë®ÄÂíåÈùôÊÄÅËØ≠Ë®ÄÊàë‰ª¨Â∏∏ËØ¥ÁöÑÂä®ÊÄÅËØ≠Ë®ÄÂíåÈùôÊÄÅËØ≠Ë®ÄÔºåÂÖ∂ÂÆûÊòØÊåáÂä®ÊÄÅÁ±ªÂûãËØ≠Ë®ÄÂíåÈùôÊÄÅÁ±ªÂûãËØ≠Ë®Ä„ÄÇÂÖàÊù•ÁúãÁúãÂä®ÊÄÅÁ±ªÂûãËØ≠Ë®ÄÔºö Âä®ÊÄÅÁ±ªÂûãËØ≠Ë®ÄÔºåÊòØÊåáÊï∞ÊçÆÁ±ªÂûãÁöÑÊ£ÄÊü•ÊòØÂú®ËøêË°åÊó∂ÂÅöÁöÑ„ÄÇÁî®Âä®ÊÄÅÁ±ªÂûãËØ≠Ë®ÄÁºñÁ®ãÊó∂Ôºå‰∏çÁî®ÁªôÂèòÈáèÊåáÂÆöÊï∞ÊçÆÁ±ªÂûãÔºåËØ•ËØ≠Ë®Ä‰ºöÂú®‰Ω†Á¨¨‰∏ÄÊ¨°ËµãÂÄºÁªôÂèòÈáèÊó∂ÔºåÂú®ÂÜÖÈÉ®ËÆ∞ÂΩïÊï∞ÊçÆÁ±ªÂûã„ÄÇ Âä®ÊÄÅÁ±ªÂûãËØ≠Ë®ÄÁöÑ‰ºòÁÇπÊòØ‰∏çÈúÄË¶ÅÂÜôÂ§öÁßçÊï∞ÊçÆÁ±ªÂûãÁöÑ‰ª£Á†ÅÔºå‰ª£Á†ÅÁõ∏ÂØπÁÆÄÊ¥Å‰∏Ä‰∫õÔºåÊñπ‰æø‰ª£Á†ÅÈòÖËØª„ÄÇÁº∫ÁÇπÊòØ‰∏çÊñπ‰æøË∞ÉËØïÔºå‰ª£Á†ÅÂëΩÂêç‰πüÂÆπÊòìÊ∑∑Ê∑ÜÔºõ ÂÜçÊù•ÁúãÁúãÈùôÊÄÅÁ±ªÂûãËØ≠Ë®ÄÁöÑÂÆö‰πâÔºö ÈùôÊÄÅÁ±ªÂûãËØ≠Ë®ÄÔºåÊòØÊåáÊï∞ÊçÆÁ±ªÂûãÁöÑÊ£ÄÊü•ÊòØÂú®ËøêË°åÂâçÔºàÂ¶ÇÁºñËØëÈò∂ÊÆµÔºâÂÅöÁöÑ„ÄÇ ÈùôÊÄÅÁ±ªÂûãËØ≠Ë®ÄÁöÑ‰ºòÁÇπÊòØÊñπ‰æøË∞ÉËØïÔºå‰ª£Á†ÅÁõ∏ÂØπËßÑËåÉ„ÄÇÁº∫ÁÇπÊòØÈúÄË¶ÅÂÜôÂæàÂ§öÊï∞ÊçÆÁ±ªÂûãÁõ∏ÂÖ≥ÁöÑ‰ª£Á†ÅÔºå‰ª£Á†Å‰∏çÂ§üÁÆÄÊ¥Å„ÄÇ ÂÆåÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèã~]]></content>
      <tags>
        <tag>ÊäÄÊúØ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∏ÄÊàò‰∏≠ÁöÑÂà∂ÂºèÊ≠•Êû™]]></title>
    <url>%2F2018%2F08%2F19%2F%E4%B8%80%E6%88%98%E4%B8%AD%E7%9A%84%E5%88%B6%E5%BC%8F%E6%AD%A5%E6%9E%AA%2F</url>
    <content type="text"><![CDATA[‰ªäÂ§©Êàë‰ª¨‰∏çËÅäÊäÄÊúØ‰∫ÜÔºåËÅä‰∏ÄËÅäÊû™ÊîØ„ÄÇÊàëÊú¨‰∫∫ÊòØ‰∏™ÁãÇÁÉ≠ÁöÑÂÜõ‰∫ãËø∑ÔºåËÄåÊÅ∞Â•ΩÊúÄËøëÊâæÂà∞‰∏ÄÊ¨æÊ∏∏ÊàèÔºåÊòØ‰∏ÄÊàòÈ¢òÊùêÁöÑÔºåÂè´‚ÄòÊàòÂú∞1‚ÄôÔºåÂéüÊ±ÅÂéüÂë≥ÁöÑ‰∏ÄÊàòÊ≠¶Âô®ÁöÑÂä†ÂÖ•ÔºåËÆ©Ëøô‰∏™Êú¨Êù•Â∞±ÂæàÂº∫ÂäøÁöÑÁ¨¨‰∏Ä‰∫∫Áß∞Â∞ÑÂáªÊ∏∏ÊàèÂ¢ûÊ∑ª‰∫ÜÁã¨ÁâπÈ≠ÖÂäõ„ÄÇÂ∫üËØù‰∏çÂ§öËØ¥Ôºå‰ªäÂ§©Êàë‰ª•Ëøô‰∏™Ê∏∏Êàè‰∏≠ÁöÑ‰∏ÄÊàòËßÜËßíÔºåÊù•‰ªãÁªç‰ª•‰∏ã‰∏ÄÊàò‰∏≠ÁöÑÂà∂ÂºèÊ≠¶Âô®„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ Á¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàòÁ¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàòÔºàËã±ËØ≠ÔºöWorld War I„ÄÅFirst World WarÊàñGreat WarÔºåÁÆÄÁß∞WWIÊàñWW1ÔºâÔºåÁÆÄÁß∞‰∏ÄÊàòÔºåÊòØÂú®19‰∏ñÁ∫™Êú´20‰∏ñÁ∫™ÂàùÔºåËµÑÊú¨‰∏ª‰πâÂõΩÂÆ∂ÂêëÂÖ∂ÁªàÊûÅÈò∂ÊÆµÔºåÂç≥Â∏ùÂõΩ‰∏ª‰πâËøáÊ∏°Êó∂‰∫ßÁîüÁöÑÂπøÊ≥õÁöÑ‰∏çÂèØË∞ÉÂíåÁüõÁõæ„ÄÅ‰∫öÊ¥≤ÔºåÈùûÊ¥≤ÔºåÊãâ‰∏ÅÁæéÊ¥≤ÊÆñÊ∞ëÂú∞ÂíåÂçäÊÆñÊ∞ëÂú∞Âü∫Êú¨‰∏äË¢´ÂàóÂº∫ÁìúÂàÜÂÆåÊØïÔºåÊñ∞ÊóßÊÆñÊ∞ë‰∏ª‰πâÁüõÁõæÊøÄÂåñ„ÄÅÂêÑÂ∏ùÂõΩ‰∏ª‰πâÁªèÊµéÂèëÂ±ï‰∏çÂπ≥Ë°°ÔºåÁß©Â∫èÂàíÂàÜ‰∏çÂØπÁ≠âÁöÑËÉåÊôØ‰∏ãÔºå‰∏∫ÈáçÊñ∞ÁìúÂàÜ‰∏ñÁïåÂíå‰∫âÂ§∫ÂÖ®ÁêÉÈú∏ÊùÉËÄåÁàÜÂèëÁöÑ‰∏ÄÂú∫‰∏ñÁïåÁ∫ßÂ∏ùÂõΩ‰∏ª‰πâÊàò‰∫â„ÄÇÊàò‰∫âËøáÁ®ã‰∏ªË¶ÅÊòØÂêåÁõüÂõΩÂíåÂçèÁ∫¶ÂõΩ‰πãÈó¥ÁöÑÊàòÊñó„ÄÇ Âæ∑ÊÑèÂøóÂ∏ùÂõΩ„ÄÅÂ••ÂåàÂ∏ùÂõΩ„ÄÅÂ••ÊñØÊõºÂ∏ùÂõΩ„ÄÅ‰øùÂä†Âà©‰∫öÁéãÂõΩÂ±ûÂêåÁõüÂõΩÈòµËê• Â§ßËã±Â∏ùÂõΩ„ÄÅÊ≥ïÂÖ∞Ë•øÁ¨¨‰∏âÂÖ±ÂíåÂõΩ„ÄÅ‰øÑÁΩóÊñØÂ∏ùÂõΩ„ÄÅÊÑèÂ§ßÂà©ÁéãÂõΩÂíåÁæéÂà©ÂùöÂêà‰ºóÂõΩÂàôÂ±ûÂçèÁ∫¶ÂõΩÈòµËê•„ÄÇ ËøôÂú∫Êàò‰∫âÊòØÊ¨ßÊ¥≤ÂéÜÂè≤‰∏äÁ†¥ÂùèÊÄßÊúÄÂº∫ÁöÑÊàò‰∫â‰πã‰∏Ä„ÄÇÂ§ßÁ∫¶Êúâ6500‰∏á‰∫∫ÂèÇÊàòÔºå1000Â§ö‰∏á‰∫∫‰∏ßÁîüÔºå2000‰∏á‰∫∫Âèó‰º§„ÄÇÊàò‰∫âÈÄ†Êàê‰∫Ü‰∏•ÈáçÁöÑÁªèÊµéÊçüÂ§±„ÄÇ ‰ªÄ‰πàÊòØÂà∂ÂºèÊ≠¶Âô®È¶ñÂÖàÊàëËøô‰∏™È¢òÁõÆÂè´‚Äò‰∏ÄÊàò‰∏≠ÁöÑÂà∂ÂºèÊ≠•Êû™‚ÄôÔºå‰ªÄ‰πàÊòØÂà∂ÂºèÊ≠•Êû™ÔºàÊ≠¶Âô®ÔºâÂë¢ÔºüÂà∂ÂºèÊ≠¶Âô®Âç≥Âêå‰∏ÄÁßçÂÖµÂô®ÁöÑÂêÑÁßçÊäÄÊúØÂèÇÊï∞Áõ∏ÂêåÁöÑÊ≠¶Âô®Ë£ÖÂ§áÔºåÂπ∂‰∏îÁªèÈÉ®ÈòüÊ≠¶Âô®Ë£ÖÂ§áÈÉ®Èó®ÊâπÂáÜÂ§áÊ°àÔºåÊúâÊ≠£ÂºèÂûãÂè∑ÁºñÂè∑ÔºåÊ≠£ÂºèÊâπÈáèÂàóË£ÖÈÉ®Èòü‰ΩøÁî®ÁöÑÊ≠£ËßÑÁöÑÊ†áÂáÜÊ≠¶Âô®„ÄÇÂ∞±ÂÉèÂí±‰ª¨‰∏≠ÂõΩPLAÔºåÊ≠•ÂÖµÊ†áÈÖçÁöÑ95ÂºèÁ™ÅÂáªÊ≠•Êû™ÔºàType 95ÔºâÔºåËøô‰∏™95ÂºèÂ∞±ÊòØÂà∂ÂºèÊ≠•Êû™„ÄÇÂÆÉÁöÑÂá∫Áé∞‰ΩøÂæóÂÜõË≠¶ÈÉ®ÈòüÁöÑÊ≠¶Âô®ÁÆ°ÁêÜÔºå‰ΩøÁî®Âæó‰ª•Ê†áÂáÜÂåñÔºåÁªü‰∏ÄÂåñ„ÄÇÂä†Âº∫‰∫ÜÊ≠¶Ë£ÖÈÉ®Èó®ÁöÑÊ≠£ËßÑÂåñ„ÄÇ WWIÂà∂ÂºèÊ≠•Êû™Winchester 1895 (Russian)Ê∏©ÂΩªÊñØÁâπM1894Êù†ÊùÜÊ≠•Êû™Áî±‰º†Â•áÊÄß‰∫∫Áâ©Á∫¶Áø∞¬∑Êë©Ë•ø¬∑ÂãÉÊúóÂÆÅËÆæËÆ°ÁöÑM1894Êù†ÊùÜÊ≠•Êû™ÔºåÊòØÁæéÂõΩÂéÜÂè≤‰∏äÁ¨¨‰∏ÄÊîØ‰ΩøÁî®Êó†ÁÉüÂèëÂ∞ÑËçØÊû™ÂºπÔºåÂπ∂‰∏î‰∏∫Áã©ÁåéËÄå‰∏ìÈó®ËÆæËÆ°ÁöÑÊù†ÊùÜÊ≠•Êû™„ÄÇ M1895Ê≠•Êû™ÈááÁî®Êù†ÊùÜÊû™Êú∫ÂºèÁªìÊûÑÔºåÂÖ∂Êù†ÊùÜÂºèÊû™Êú∫ÁöÑÂü∫Êú¨ÂéüÁêÜ‰∏éM1873Ê≠•Êû™ÁöÑÁõ∏ÂêåÔºåÂè™ÊòØÁªìÊûÑÊúâÊâÄ‰∏çÂêåËÄåÂ∑≤„ÄÇM1873Ê≠•Êû™ÈÄöËøáÊâ≥Êú∫Êä§ÂúàÊù†ÊùÜÁöÑÂâçÂêéÊóãËΩ¨ÔºåÂ∏¶Âä®ËÇòËäÇÊëÜÂä®Ôºå‰ªéËÄåÂ∏¶Âä®Êû™Êú∫ÂâçÂêéËøêÂä®„ÄÇËÄåÂú®M1895Ê≠•Êû™‰∏äÔºåÊâ≥Êú∫Êä§ÂúàÊù†ÊùÜ‰∏éÊâ≥Êú∫Â∫ßÁõ¥Êé•ÁªÑÊàê‰∫ÜËÇòËäÇÁªìÊûÑÔºåÂÖ∂ÁªìÊûÑÊõ¥‰∏∫ÁÆÄÂçï„ÄÇM1895Ê≠•Êû™ÁöÑÊâ≥Êú∫Â∫ßÂ∞æÁ´ØÂõ∫ÂÆöÂú®Êú∫Âå£‰∏äÔºåÂÖ∂ÂâçÁ´Ø‰∏éÊâ≥Êú∫Êä§ÂúàÊù†ÊùÜ‰∏≠ÈÉ®ÁªûÊé•Âú®‰∏ÄËµ∑ÔºåËÄåÊâ≥Êú∫Êä§ÂúàÊù†ÊùÜ‰∏äÈÉ®‰∏éÊû™Êú∫ÂâçÁ´ØÁªûÊé•Âú®‰∏ÄËµ∑ÔºåÂΩìÊâ≥Êú∫Êä§ÂúàÊù†ÊùÜÊëÜÂä®Êó∂ÔºåÈÄöËøáÂÖ∂‰∏äÈÉ®Â∏¶Âä®Êû™Êú∫ÂâçÂêéËøêÂä®„ÄÇÂè¶Â§ñÔºåM1873Ê≠•Êû™Êâ≥Êú∫Êä§ÂúàÊù†ÊùÜÁöÑÊóãËΩ¨ËΩ¥Âõ∫ÂÆöÂú®Êú∫Âå£‰∏äÔºåËÄåM1895Ê≠•Êû™ÁöÑÊâ≥Êú∫Êä§ÂúàÊù†ÊùÜÂàôÊ≤°ÊúâÂõ∫ÂÆöÁöÑÊóãËΩ¨ËΩ¥ÔºåÂÆÉÁöÑËøêÂä®ËΩ®ËøπÊØîËæÉÂ§çÊùÇÔºå‰∏çÊòØÁÆÄÂçïÁöÑÊóãËΩ¨ËøêÂä®„ÄÇÂâçÊé®Êâ≥Êú∫Êä§ÂúàÊù†ÊùÜÊó∂ÔºåÂÖ∂Â∞æÁ´ØÂÖàÂêëÂâç‰∏ãÊñπÊëÜÂä®ÔºåÊãâÊâ≥Êú∫Â∫ßÂâçÁ´ØÂêë‰∏ãÔºå‰ΩøËÇòËäÇÁªìÊûÑÂºØÊõ≤„ÄÇÂΩìÊâ≥Êú∫Â∫ßÂâçÁ´ØÂêë‰∏ãÊëÜÂä®Âà∞‰∏ÄÂÆö‰ΩçÁΩÆÊó∂ÔºåÊâ≥Êú∫Êä§ÂúàÊù†ÊùÜÂâçÁ´Ø‰æøÂ∏¶Âä®Êû™Êú∫ÂêëÂêé„ÄÇÁªßÁª≠Âêë‰∏ãÊé®Êâ≥Êú∫Êä§ÂúàÊù†ÊùÜÔºå‰æø‰ΩøËÇòËäÇÁªìÊûÑËøõ‰∏ÄÊ≠•ÂºØÊõ≤ÔºåÊâ≥Êú∫Êä§ÂúàÊù†ÊùÜ‰∏äÁ´ØÂ∏¶Âä®Êû™Êú∫Ëøõ‰∏ÄÊ≠•ÂêëÂêéÔºåÁõ¥Ëá≥Â∞ÜÂÖ∂ÂêëÂêéÊé®Âà∞‰Ωç„ÄÇÂõ†Ê≠§ÔºåÊâ≥Êú∫Êä§ÂúàÊù†ÊùÜÊó¢ÊúâÊóãËΩ¨ËøêÂä®ÔºåÂèàÊúâ‰∏ä‰∏ãÊñπÂêëÁöÑÁõ¥Á∫øËøêÂä®„ÄÇ M1895Ê≠•Êû™ÁöÑÁâπËâ≤Ë°®Áé∞Âú®‰∏â‰∏™ÊñπÈù¢„ÄÇ ‰∏ÄÊòØÈááÁî®‰∫ÜÁõíÂºèÂºπ‰ªì„ÄÇËøôÁßçÂºπ‰ªìÊØîÁé∞Âú®Êû™Ê¢∞‰∏äÈááÁî®ÁöÑÂõ∫ÂÆöÂºèÂºπ‰ªìÂ§çÊùÇÂæóÂ§ö„ÄÇÁõÆÂâçÁöÑÂõ∫ÂÆöÂºèÂºπ‰ªìÂ§öÈááÁî®Ëû∫ÊóãÂºπÁ∞ß ÂÅöÊâòÂºπÊùøÁ∞ßÔºåÂπ∂Áõ¥Êé•ÁΩÆ‰∫éÊâòÂºπÊùø‰πã‰∏ãÔºåÈù†Á∞ßÂäõÂ∞ÜÂºπÂêë‰∏äÊä¨Ëµ∑„ÄÇËÄåM1895Ê≠•Êû™Èáá Áî®‰∫ÜÂΩìÊó∂Â∏∏Áî®ÁöÑÁâáÁ∞ßÂÅöÊâòÂºπÊùøÁ∞ßÔºåÂÖ∂ÊâòÂºπÊùøÂëà‚ÄúV‚ÄùÂΩ¢Ôºå‰∏äÁ´ØÂç°Âú®Êû™ÁÆ°‰∏ãÊñπÁöÑÂõ∫ÂÆöÊßΩÂÜÖÔºå‰∏ãÊñπÂç°Âú®ÊâòÂºπÊùÜÂ∞æÁ´ØÁöÑÂáπÊßΩÂÜÖÔºåÈù†Á∞ßÂäõÈ©±Âä®ÊâòÂºπÊùÜÈÄÜÊó∂ÈíàÊóãËΩ¨ÔºåÂ∏¶Âä®ÊâòÂºπÊùøÂêë‰∏äËøêÂä®Ôºå‰ΩøÂºπ‰ªìÂÜÖÁöÑÊû™ÂºπËøõÂÖ•ÂæÖËøõËÜõ‰ΩçÁΩÆ„ÄÇ ÂÖ∂‰∫åÔºåÈááÁî®‰∫ÜÈó≠ÈîÅÊ•îÈìÅ„ÄÇÂâçÊé®Êâ≥Êú∫Êä§ÂúàÊù†ÊùÜÔºåÂÖ∂ÂêëÂâç‰∏ãÊñπËΩ¨Âä®Ôºå‰ΩøÊâ≥Êú∫Â∫ßÂêë‰∏ãÊñπÊëÜÂä®ÔºåÊâ≥Êú∫Â∫ßÂâçÁ´ØÈí©‰ΩèÈó≠ÈîÅÊ•îÈìÅ‰∏ãÁ´Ø‰Ωø‰πã‰∏ÄËµ∑Âêë‰∏ãËøêÂä®ÔºåÈó≠ÈîÅÊ•îÈìÅ‰∏äÁ´ØÁ¶ªÂºÄÊû™Êú∫Â∞æÈÉ®ÁöÑÂáπÊßΩËÄå‰ΩøÊû™Êú∫ÂºÄÈîÅ„ÄÇÁªßÁª≠ÂâçÊé®Êâ≥Êú∫Êä§ÂúàÊù†ÊùÜÔºåÂàôÂ∏¶Âä®Êû™Êú∫ÂêéÈÄÄÔºåÂπ∂ÂéãÂÄíÂáªÈî§ÔºõÂêéÊãâÊâ≥Êú∫Êä§ÂúàÊù†ÊùÜÊó∂ÔºåÂàôÂÖàÂ∏¶Âä®Êû™Êú∫Â§çËøõ„ÄÇÊû™Êú∫Â§çËøõÂà∞‰ΩçÊó∂ÔºåÁªßÁª≠ÂêéÊãâÊâ≥Êú∫Êä§ÂúàÊù†ÊùÜÔºåÂÖ∂ÂêëÂêé‰∏äÊñπËΩ¨Âä®ÔºåÂ∏¶Âä®Êâ≥Êú∫Â∫ßÂêë‰∏äÊëÜÂä®ÔºåÊé®Âä®Èó≠ÈîÅÊ•îÈìÅÂêë‰∏äÔºåÂÖ∂‰∏äÁ´ØËøõÂÖ•Êû™Êú∫Â∞æÈÉ®ÁöÑÂáπÊßΩËÄå‰ΩøÊû™Êú∫Èó≠ÈîÅ„ÄÇËøô‰∏™Èó≠ÈîÅÊ•îÈìÅÁöÑËÆæËÆ°‰ΩøÊû™Êú∫Èó≠ÈîÅÊõ¥Âä†Á°ÆÂÆûÔºå‰øùËØÅ‰∫ÜÂ∞ÑÂáªÊó∂ÁöÑÂÆâÂÖ®ÊÄß„ÄÇÂÖ∂‰∏âÔºåÊäõÂ£≥Êå∫ÂÖº‰ΩúÊé®ÂºπÈΩø„ÄÇÊ∏©ÂΩªÊñØÁâπM1873ÂèäM1890Ê≠•Êû™Âùá‰æùÈù†ÂèñÂºπÂô®Â∞ÜÂºπÂ£≥ÊäõÂá∫Ôºå‰ΩÜÁî±‰∫éÈÖçÂêàÂä®‰ΩúÊúâÊó∂‰∏çÂ§™‰∏ÄËá¥Ôºå‰ΩøÂæóÊäõÂ£≥ÂäõÂ∫¶‰∏çÂêåÔºåÂõ†ËÄåÊòìÂá∫Áé∞ÈóÆÈ¢ò„ÄÇM1895Ê≠•Êû™Âàô‰∏ìÈó®ËÆæËÆ°‰∫ÜÊäõÂ£≥Êå∫Ôºå‰ªéËÄåËß£ÂÜ≥‰∫ÜËøô‰∏ÄÈóÆÈ¢ò„ÄÇÂú®Êû™Êú∫ÂâçÁ´ØÈù¢ÔºåÊäΩÂ£≥Èí©Âú®‰∏äÔºåÊäõÂ£≥Êå∫Âú®‰∏ãÔºåÁî±‰∫éÊäõÂ£≥Êå∫Á™ÅÂá∫‰∫éÊû™ Êú∫‰∏ãÁºòÔºåÊïÖÂÖ∂ÂÖºÂÖ∑Êé®ÂºπÈΩøÁöÑÂäüËÉΩ„ÄÇ ‰∏ÄÊàò‰∏≠W 1895‰∏∫‰ªÄ‰πàÊ†áÊ≥®ÁöÑÂõΩÁ±çÊòØRussianÂë¢Ôºü Âõ†‰∏∫Ê®°ÂûãÁâàÁöÑW 1895 ‰∏≠Ôºå.35 WCFÔºå.405 WCFÔºå.30-03Âíå.30-06Âè£ÂæÑÁöÑÁî®‰∫éÁæéÂõΩ‰ΩìËÇ≤Â∏ÇÂú∫Ôºå ÈîÄÂîÆÈ¢ùÂú®30%-40%„ÄÇ ÂÖ∂‰ªñÂ§ßÈÉ®ÂàÜÊòØ‰∏é‰øÑÁΩóÊñØÂ∏ùÂõΩÂÜõÊñπÁ≠æËÆ¢ÁöÑÂêàÂêå‰∏≠ÂçñÁöÑ„ÄÇ 1915Âπ¥Ôºå‰øÑÁΩóÊñØÊÄ•ÈúÄÂ∞èÂûãÊ≠¶Âô®ÔºåÂπ∂‰∏éËÆ∏Â§öÁæéÂõΩ‰∏ªË¶ÅÂ∑•ÂéÇÊé•Ê¥Ω„ÄÇ Èõ∑ÊòéÈ°øÂíåÊñ∞Ëã±Ê†ºÂÖ∞Ë•øÂ±ãÂÖ¨Âè∏ÈÉΩÁ≠æËÆ¢‰∫ÜÂà∂ÈÄ†Mosin-NagantÊ≠•Êû™ÁöÑÂêàÂêåÔºåÊ∏©ÂΩªÊñØÁâπËææÊàêÂçèËÆÆÔºåÁî®Ê†áÂáÜÁöÑ‰øÑÁΩóÊñØÂÜõÁî®7.62x54RÂºπËçØÁ≠íÁîü‰∫ß30‰∏áÂè™1895ÂûãÊ≠•Êû™„ÄÇ ‰∏éMosin-NagantÂëΩ‰ª§‰∏çÂêåÔºåÊâÄÊúâÊ∏©ÂΩªÊñØÁâπÊ≠•Êû™ÈÉΩÊòØÂú®‰øÑÂõΩÈù©ÂëΩ‰πãÂâç‰∫§‰ªòÁöÑ„ÄÇ Gewehr M.95Gewehr M1895 ÊòØÊ†áÂáÜÂêéÊãâÂºèÊû™Êú∫Ê≠•Êû™ÔºåÊúçÂä°Â••ÂåàÂÜõÈòüÂú®Á¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàò„ÄÇÈô§‰∫ÜÂÖ∂‰ªñ‰∏Ä‰∫õ‰∏úÊ¨ßÂíåÂ∑¥Â∞îÂπ≤ÂõΩÂÆ∂‰πãÂ§ñÔºåËøôÁßçÊ≠¶Âô®Â§ßÈáèÂà∂ÈÄ†ÔºåÂú®ÂÅúÊàòÂêéËøò‰∏éÂ••Âú∞Âà©ÂíåÂåàÁâôÂà©ÁöÑÁªßÊâøÂõΩ‰∏ÄËµ∑ÊúçÂΩπ„ÄÇ ËØ•Ê≠¶Âô®ÈááÁî®Èù©ÂëΩÊÄßÁöÑÁõ¥ÊãâÂä®‰ΩúËû∫Ê†ìÔºå‰ΩøÁã¨ÁâπÁöÑÊ≠¶Âô®ÂÖ∑ÊúâËæÉÈ´òÁöÑÂ∞ÑÈÄüÔºåË°•ÂÖÖ‰∫ÜÂÖ∂ËâØÂ•ΩÁöÑÂèØÈù†ÊÄß„ÄÇÈÄöËøá‰∏Ä‰∏™5ËΩÆÊï¥‰ΩìÂ§πÂ≠êÔºà‰∏éÂæ∑ÂõΩGewehr 98‰ΩøÁî®ÁöÑÂâ•Á¶ªÂ§πÂ≠êÁõ∏ÂèçÔºâÔºåM1895ÊúÄÂàùÁî®‰∫éÂúÜÂ§¥8x50mmR MannlicherÔºåÂπ∂Âú®Á¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàòÊúüÈó¥‰ΩøÁî®ËØ•ÂºπËçØÁ≠í„ÄÇÁ¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàòÔºåÊ≠•Êû™Ë¢´ËΩ¨Êç¢ÊàêÊõ¥Âº∫Â§ßÁöÑÂ∞ñÂ§¥‚ÄúÊñØÁöÆÁ≠ñ‚ÄùÂ≠êÂºπÔºåÂ¶Ç8x56mmR„ÄÇ Gew.98Âºè98Ê≠•Êû™ÔºåÂæ∑ÂõΩÊúâ‰∏§‰∏™98ÂºèÔºå‰∏Ä‰∏™ÊòØGew.98‰∏Ä‰∏™ÊòØKar98Ôºå G98Ë£ÖÂ§áÂà∞35Âπ¥Ôºå‰πãÂêéÊòØK98„ÄÇÊØõÁëü98kÂç°ÂÆæÊû™ÊòØ‰∫åÊàò‰∏≠Âæ∑ÂõΩÁãôÂáªÊâãÁöÑÂà∂ÂºèÊ≠¶Âô®„ÄÇ‰∏∫‰∫ÜÈÅøÂÖçÂú®Âèñ‰∏ãÁûÑÂáÜÈïúÂêé‰∏çËá¥Â§±ÂéªÊäµÊäóËÉΩÂäõÔºåÊû™‰∏äËøòÂ§áÊúâÊú∫Ê¢∞ÁûÑÂÖ∑„ÄÇÂú®Áîü‰∫ß‰∏≠ÔºåÊåëÈÄâÊúÄÂ•ΩÁöÑÊû™ÁÆ°Áî®‰∫éË£ÖÁûÑÂáÜÈïúÁöÑÊ≠•Êû™„ÄÇËøô‰∫õÊ≠•Êû™ÁöÑÊâ≥Êú∫ÊòØÁªèËøá‰øÆÊîπÁöÑÔºåÂÖ∂Êâ≥Êú∫ÂäõËææ1.8kg„ÄÇ Gew.98ÂºèÊ≠•Êû™‰∏∫ÊØõÁëüÊ≠•Êû™ÁöÑÊîπËøõÂûãÂè∑Ôºå‰∏ç‰ªÖÂê∏Êî∂‰∫ÜÊó©ÊúüÊØõÁëüÂûãÂè∑‰∏äÁöÑÊâÄÊúâÊîπËøõÔºå‰∏ªË¶ÅÁâπÂæÅÊòØÂõ∫ÂÆöÂºèÂèåÊéíÂºπ‰ªìÂíåÊóãËΩ¨ÂêéÊãâÂºèÊû™Êú∫„ÄÇÂºπ‰ªì‰∏∫ÂèåÊéí„ÄÅÂõ∫ÂÆöÂºèÔºåÂÖ∂Â∫ïÊùøÂèØ‰ª•ÊãÜÂç∏Âá∫Êù•„ÄÇË£ÖÂ°´Êó∂ÂèØ‰ª•‰ªéÈ°∂ÈÉ®ÁöÑÊäõÂ£≥Âè£‰∏ÄÂèë‰∏ÄÂèëÂú∞Ë£ÖÂÖ•Ôºå‰πüÂèØ‰ª•ÈÄöËøáÂºπÂ§π‰∏ÄÊ¨°Ë£ÖÂ°´Êª°5Âèë„ÄÇÊØè‰∏™Ê°•Â§πË£Ö5ÂèëÂºπÔºåË∂≥Â§üË£ÖÊª°‰∏Ä‰∏™Âºπ‰ªìÔºåÂú®Êú∫Âå£ÂêéÊ°•‰∏äÊúâÊú∫Âô®Âä†Â∑•Âá∫Êù•ÁöÑÊ°•Â§πÂØºÊßΩ„ÄÇÂú®Ë£ÖÂ°´ÂêéÔºåÂΩìÊû™Êú∫ÂÖ≥Èó≠Êó∂ÔºåÁ©∫ÁöÑÊ°•Â§π‰ºöË¢´Ëá™Âä®ÊäõÂá∫„ÄÇÂºπ‰ªìÂèØ‰ª•ÊâìÂºÄÊû™Êú∫Ê∏ÖÁ©∫ÊàñÈÄöËøáÊãÜÂç∏Âºπ‰ªìÂ∫ïÊùøËøõË°åÔºå‰ΩÜ‰∏ÄËà¨‰∏çÊé®ËçêÈááÁî®Âêé‰∏ÄÁßçÊñπÊ≥ï„ÄÇ SMLE MKIIIThe Short Magazine Lee-Enfield Mk IIIÔºåÊàñÁÆÄÁß∞‰∏∫SMLE MkIIIÔºåÊòØ‰∏ÄÁßçËã±ÂºèËû∫Ê†ìÂºèÊ≠•Êû™„ÄÇMark IIIÊòØLee-EnfieldÁöÑÊºîÂèòÔºåÈ°æÂêçÊÄù‰πâÂÆÉÁº©Áü≠‰∫ÜÂ§ßÁ∫¶5Ëã±ÂØ∏Êàñ13ÂéòÁ±≥ÔºåÂπ∂‰∫é1907Âπ¥Êé®Âá∫„ÄÇÂà∂ÈÄ†ÁöÑÂ§çÊùÇÊÄßÊÑèÂë≥ÁùÄ‰∏Ä‰∏™ÁÆÄÂåñÁöÑÂèò‰ΩìÔºåSMLE MkIII ‰∫é1915Âπ¥Êé®Âá∫„ÄÇ‰∏Ä‰∏™ÂºπÂå£‰∏≠Êúâ10Âèë.303 BritishÔºåÂÆÉÁöÑÂÆπÈáèÊòØÂÖ∂‰ªñÂ§ßÂ§öÊï∞ÂõΩÂÆ∂Ê≠•Êû™ÁöÑ‰∏§ÂÄç„ÄÇÊå•ËàûÁùÄÊ≠•Êû™ÁöÑËã±ÂõΩÊ≠•ÂÖµ‰πüÂõ†‚Äúmad minute‚ÄùËÄåÈóªÂêçÔºåÂú®Ê≠§ÊúüÈó¥‰ªñ‰ª¨ÂèØ‰ª•ËææÂà∞ÊØèÂàÜÈíü30Âèë‰ª•‰∏äÁöÑÈÄüÂ∫¶„ÄÇ ËøôÁßçÊ≠¶Âô®Âú®Ëã±ËÅîÈÇ¶ÂõΩÂÆ∂ÈùûÂ∏∏ÊôÆÈÅçÔºåË¢´Âä†ÊãøÂ§ßÔºåÊãâÂêâÂíåÊæ≥Êñ∞ÂÜõÂõ¢‰ª•ÂèäËã±ÂõΩÊú¨Ë∫´‰ΩøÁî®; ÂºÄÂèë‰∫ÜËÆ∏Â§öÂèò‰ΩìÔºåÂåÖÊã¨ÊàòÂú∞1942Âπ¥Âá∫Áé∞ÁöÑÁ¨¨4Âè∑„ÄÇ Êò•Áî∞M1903M1903Êò•Áî∞Ê≠•Êû™ (M1903 Springfield rifle)ÊòØ‰∏ÄÁßçÊóãËΩ¨ÂêéÊãâÂºèÊû™Êú∫Ê≠•Êû™ÔºåÁî±Êò•Áî∞ÂÖµÂ∑•ÂéÇÁîü‰∫ßÔºåÊòØÁæéÂÜõÂú®‰∏ÄÊàòÂèä‰∫åÊàòÁöÑÂà∂ÂºèÊ≠•Êû™ÔºåÊòØÊò•Áî∞ÂÖµÂ∑•ÂéÇÂú®ÊØõÁëüÂÖµÂ∑•ÂéÇÁöÑÁâπËÆ∏‰∏ãÁ†îÂà∂ÁöÑÔºåÊóãËΩ¨ÂêéÊãâÂºèÊû™Êú∫‰ªøËá™Âæ∑ÂõΩm1898ÔºåÂèØ‰ª•ÁÆóÊòØ‰ª•ÊØõÁëüÊ≠•Êû™‰∏∫Âü∫Á°ÄÁöÑÂèòÂûãÊû™„ÄÇ M1903Âõ†‰∏∫Áº©Áü≠‰∫ÜÊû™ÁÆ°ÔºåÊâÄ‰ª•ÈïøÂ∫¶ÊØîÊØõÁëüÊ≠•Êû™Áü≠ÔºåÊãâÊú∫ÊüÑÊîπ‰∏∫Âêë‰∏ãÂºØÊõ≤‰æø‰∫éÊê∫Ë°å„ÄÇÁî±ÂÆπÈáè5ÂèëÂ≠êÂºπÁöÑÂºπ‰ªì‰æõÂºπÔºåÁî®5ÂèëÂàÜÁ¶ªÂºèÂºπÂ§πË£ÖÂºπ„ÄÇM1903Ê≠•Êû™ÈÖçÁî®ÁöÑM1906Ê≠•Êû™ÂºπÔºà.30-06Ê≠•Êû™ÂºπÔºâÊòØÂú®ÊØõÁëüÂºèÊó†Â∫ïÁºòÂºπÁöÑÂü∫Á°Ä‰∏äÊîπËøõËÄåÊàêÁöÑÔºåÊó©ÊúüÁöÑM1903Ê≠•Êû™ËøòÈÖçÊúâÊùÜÂºèÂà∫ÂàÄÔºåÂêéÊîπÁî®‰∫ÜÂåïÈ¶ñÂûãÂà∫ÂàÄ„ÄÇ Á¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàòÊúüÈó¥ÔºåÂΩìÁæéÂõΩÂèÇÊàòÊó∂ÔºåM1903Ê≠•Êû™Êï∞Èáè‰∏çË∂≥ÔºåÁæéÂõΩÂ∞ÜÂêåÊ†∑‰ªøËá™Âæ∑ÂõΩÊØõÁëüÊ≠•Êû™Êû™Êú∫ÁöÑ‰∏ÄÁßçÊÅ©Ëè≤Â∞îÂæ∑M1917ÂëΩÂêç‰∏∫‚ÄúM1917Ê≠•Êû™‚Äù‰ΩúË°•ÂÖÖË£ÖÂ§áÔºåÁîöËá≥‰∏ÄÂ∫¶Âú®ÂâçÁ∫øÁæéÂõΩÂÜõÈòü‰ΩøÁî®ÁöÑM1917ÊØîM1903ËøòÂ§ö„ÄÇ‰∏ÄÊàòÁªìÊùüÂêéÔºåÁæéÂõΩÂÜõÈòüÂè™‰øùÁïôM1903‰Ωú‰∏∫Âà∂ÂºèÊ≠•Êû™ÔºåM1917ÂÖ®ÈÉ®Êí§Ë£Ö‰ΩúÂÇ®Â§á„ÄÇ1938Âπ¥ÔºåÂèñ‰ª£M1903Ê≠•Êû™ÁöÑÂçäËá™Âä®M1Âä†ÂÖ∞Âæ∑Ê≠•Êû™‰∫ßÈáè‰∏çË∂≥ÔºåÂõ†Ê≠§M1903Ê≠•Êû™‰ªçÁÑ∂ÊòØÁæéÂõΩÂÜõÈòüË£ÖÂ§áÁöÑ‰∏ªË¶ÅÊ≠•Êû™ÔºåÂú®Á¨¨‰∫åÊ¨°‰∏ñÁïåÂ§ßÊàò‰∏≠ÔºåÁæéÂõΩÂÜõÈòü‰ªçÁÑ∂Â§ßÈáèË£ÖÂ§á„ÄÇÂâ©‰ΩôÁöÑM1903Êò•Áî∞Ê≠•Êû™Ë¢´Ëµã‰∫à‰∫ÜÊñ∞ÁöÑ‰ΩøÂëΩÔºåÂåÖÊã¨ÊîπË£ÖÊàêÁãôÂáªÊ≠•Êû™ÔºåÁãôÂáªÊ≠•Êû™ÁâàÊú¨Âä†Ë£ÖÂÖâÂ≠¶ÁûÑÂáÜÈïúÔºåÂÖ∑ÊúâÁ≤æÂ∫¶‰∏äÁöÑ‰ºòÂäøÔºåËÄå‰∏∫‰∏çÂ¶®Á¢çÁûÑÂáÜÈïúÁöÑ‰ΩøÁî®ÔºåÊâÄ‰ª•ÊãÜÈô§‰∫ÜÊú∫Ê¢∞ÁûÑÂÖ∑„ÄÇÁ¨¨‰∫åÊ¨°‰∏ñÁïåÂ§ßÊàòÊúüÈó¥ÔºåÊ†πÊçÆÊè¥Âä©Ê≥ïÊ°àÂ§ßÈáèÁöÑM1903Ê≠•Êû™Ë£ÖÂ§á‰∏≠ÂõΩÂÜõÈòüÔºåÂú®‰∏≠ÂõΩÊäóÊàòÊó∂Êúü‰ª•ÂèäËß£ÊîæÊàò‰∫âÊó∂ÊúüÂπøÊ≥õ‰ΩøÁî®„ÄÇÁî±‰∫éËØ•Êû™Â§ñÂΩ¢„ÄÅÈïøÁü≠Âùá‰∏éÂΩìÊó∂‰∏≠ÂõΩÂÜõÈòüË£ÖÂ§áÁöÑ‰∏≠Ê≠£ÂºèÊ≠•Êû™Ôºà‰ªøÊØõÁëü1924ÔºâÁõ∏‰ººÔºåË¢´‰∏≠ÂõΩÂ£´ÂÖµÁß∞‰∏∫‚ÄúËä±Êóó‰∏≠Ê≠£Âºè‚Äù„ÄÇM1903Ê≠•Êû™Êàê‰∏∫ÁæéÂÜõÂà∂ÂºèË£ÖÂ§á100Âπ¥ÂêéÔºå‰ªçÁÑ∂Âú®ÁæéÂõΩÂÜõÈòü‰∏≠Â∞ëÈáèÂá∫Áé∞„ÄÇÂπ∂Â∞ÜÊû™Ë∫´ÈáëÂ±ûÈÉ®‰ª∂ÈïÄÈì¨Â§ÑÁêÜÔºåÈÖçÁôΩËâ≤ËÉåÂ∏¶Ôºå‰æõËÆ≠ÁªÉ‰∏éÊ£ÄÈòÖ‰ΩøÁî®„ÄÇ Martini Henry È©¨ËíÇÂ∞º-‰∫®Âà©Ê≠•Êû™Á∫µËßÇ19‰∏ñÁ∫™ÂêéÊúüÁöÑÂÜõÁî®Ê≠¶Âô®ÔºåËã±ÂõΩÁöÑÈ©¨ËíÇÂ∞º-‰∫®Âà©Ê≠•Êû™ÊòØ‰∏çÂèØ‰∏çÊèêÁöÑ„ÄÇÂÆÉ‰∏∫Ëã±ÂõΩÂêëÂÖ®‰∏ñÁïåÊâ©Âº†ÂÖ∂Â∏ùÂõΩÈ¢ÜÂúüÔºåÂèëÊå•‰∫ÜÈùûÂá°ÁöÑ‰ΩúÁî®„ÄÇ‰ªéÂÜ∞Èõ™Ë¶ÜÁõñÁöÑÂä†ÊãøÂ§ßÂà∞‰Ωç‰∫éÊííÂìàÊãâÊ≤ôÊº†ËæπÁºòÁöÑËãè‰∏πÔºåÂÜçÂà∞Áæ§Â±±‰πã‰∏≠ÁöÑÈòøÂØåÊ±óÔºåÂà∞Â§ÑÈÉΩÁïô‰∏ã‰∫ÜÂÆÉÁöÑË∂≥Ëøπ„ÄÇÂéÜÂè≤‰∏äËÆ∏Â§öÂãáÁåõÁöÑÂ∞öÊ≠¶Ê∞ëÊóèÈÉΩË¢´ÊâãÊåÅÂ∞ÑÁ®ãËøú„ÄÅÂ∞ÑÈÄüÈ´òÁöÑÈ©¨ËíÇÂ∞º-‰∫®Âà©Ê≠•Êû™ÁöÑËã±ÂõΩÂ£´ÂÖµÈïáÂéã‰∫Ü„ÄÇ È©¨ËíÇÂ∞º-‰∫®Âà©Ê≠•Êû™ÁöÑ‰º†Â•áÂéÜÂè≤Âßã‰∫éÁæéÂõΩÈ©¨Ëê®ËØ∏Â°ûÂ∑ûÁöÑÊû™ÁÇÆÂïÜ‰∫®Âà©¬∑ÁöÆÂçöËø™„ÄÇ 1862Âπ¥ÔºåÁöÆÂçöËø™Ëé∑Âæó‰∫ÜÂêéËÜõË£ÖÂ°´Ê≠•Êû™ÁöÑ‰∏ìÂà©ÊùÉÔºåËøôÁßçÊ≠•Êû™ÈááÁî®Ëµ∑ËêΩÂºèÊû™Êú∫ÔºåÊû™Êú∫‰∏ãÈôçÊó∂ÂºπÂ£≥ÂèØ‰ª•Ëá™Âä®ÊäõÂá∫ÔºåÂπ∂‰∏îËÉΩÂ§ü‰Ωø‰∏ã‰∏ÄÂèëÊû™ÂºπÂø´ÈÄüÂÖ•ËÜõ„ÄÇËØ•Êû™ÈááÁî®ÁÆÄÂçïÁöÑÁÅ´Êû™ÂºèÂáªÈî§ÂáªÂèëÊñπÂºèËÄå‰∏îÂøÖÈ°ªÊâãÂä®ÂæÖÂáª„ÄÇ1860Âπ¥‰ª£Êú´Ëá≥1870Âπ¥‰ª£ÂàùÔºåËøôÁßçÂêéËÜõË£ÖÂ°´Ê≠•Êû™ÂèóÂà∞‰∫ÜË•øÁè≠Áâô„ÄÅÂä†ÊãøÂ§ß„ÄÅÂúüËÄ≥ÂÖ∂„ÄÅÁΩóÈ©¨Â∞º‰∫ö„ÄÅÊñ∞Ë•øÂÖ∞ÂíåÂ¢®Ë•øÂì•Á≠âÂõΩÁöÑÈùíÁùêÔºåÂπ∂Ë¥≠‰π∞‰∫ÜÊï∞‰∏áÊîØ„ÄÇ1866Âπ¥Ôºå‰∏Ä‰ΩçÂ±Ö‰ΩèÂú®ÁëûÂ£´ÁöÑÂ••Âú∞Âà©Á±çËÆæËÆ°Â∏àÂºóÈõ∑Âæ∑ÈáåÂÖã¬∑ÂÜØ¬∑È©¨ËíÇÂ∞º‰øÆÊîπ‰∫ÜÁöÆÂçöËø™ÁöÑËÆæËÆ°ÔºåÁî®ÂÆâË£ÖÂú®Êû™Êú∫ÂÜÖÈÉ®„ÄÅÁî±ÂºπÁ∞ßÊéßÂà∂ÁöÑÂáªÈíà‰ª£Êõø‰∫ÜÁ¨®ÈáçÁöÑÂ§ñÁΩÆÂáªÈî§ÔºåÂπ∂‰∏îËøòÈáçÊñ∞ËÆæËÆ°‰∫ÜÊú∫Âå£„ÄÅÂä†Âõ∫‰∫ÜÊäΩÂ£≥Èí©„ÄÇËøô‰∫õÊîπËøõ‰ΩøÂæóËØ•Êû™ÁöÑÂáªÂèëÊó∂Èó¥ÂèòÂæóÊõ¥Áü≠ (ÂáªÂèëÊó∂Èó¥Âç≥‰∏∫Êâ£Âä®Êâ≥Êú∫ÂÆåÊàêÁû¨Èó¥Ëá≥Â∫ïÁÅ´ÂèëÁÅ´ÁöÑÊó∂Èó¥Èó¥Èöî)„ÄÇÊîπËøõÂêéÁöÑÊ≠•Êû™‰∏ç‰ΩÜÊØîÁöÆÂçöËø™ÁöÑÂéüÂûãÊû™Êõ¥ÂùöÂõ∫ÔºåËÄå‰∏îÂú®Â∞ÑÈÄü‰∏ä‰πüÊúâÂæàÂ§ßÊèêÈ´ò„ÄÇ‰ΩÜÁëûÂ£´ÈôÜÂÜõËøòÊòØÂÜ≥ÂÆöÈááÁî®ÊóãËΩ¨ÂêéÊãâÂºèÊû™Êú∫ÁöÑÂçïÂèëÊ≠•Êû™ÔºåÈ©¨ËíÇÂ∞ºÂè™ÂæóÊää‰ªñÁöÑËÆæËÆ°Êèê‰æõÁªô‰∫ÜÂÖ∂‰ªñÂõΩÂÆ∂„ÄÇ1867Âπ¥ÔºåËã±ÂõΩÈôÜÂÜõÂØπÂ§ñÂÆ£Â∏ÉË¶ÅÂØªÊâæ‰∏ÄÁßçÊ≠•Êû™Êù•Êõø‰ª£ÂÖ∂0.577Ëã±ÂØ∏Ôºà14. 66mmÔºâÂè£ÂæÑÁöÑÊñØÂ•àÂæ∑Ê≠•Êû™„ÄÇÈ©¨ËíÇÂ∞ºÊê∫Â∏¶‰ªñÁöÑÊ≠•Êû™ÂèÇÂä†‰∫ÜËã±ÂÜõÁöÑËØïÈ™åÔºåÂ∞ΩÁÆ°ÊúâÂæàÂ§öÂÉè‰∫®Âà©ËøôÊ†∑ÁöÑÁü•ÂêçÊû™ÁÇÆÂïÜÂèÇ‰∏éÁ´û‰∫âÔºå‰ΩÜ‰ªñÁöÑÊ≠•Êû™Âç¥ÊäÄÂéãÁæ§ÈõÑ„ÄÇ1868Âπ¥ÔºåÂùêËêΩÂú®ÊÅ©Ëè≤Â∞îÂæ∑ÁöÑËã±ÂõΩÁöáÂÆ∂ËΩªÊ≠¶Âô®Âà∂ÈÄ†ÂéÇÊé•Âà∞Áîü‰∫ßÂá†ÊîØÈ©¨ËíÇÂ∞ºÊ≠•Êû™Áî®‰∫éËøõË°åËøõ‰∏ÄÊ≠•ÈáéÂ§ñËØïÈ™åÁöÑÂëΩ‰ª§„ÄÇÁªèËøáÂ§ßÈáèÁöÑÈáéÂ§ñËØïÈ™åÔºå1871Âπ¥7Êúà3Êó•ÔºåÈ©¨ËíÇÂ∞ºÊ≠•Êû™Ë¢´Ëã±ÂÜõÊ≠£ÂºèÈááÁî®„ÄÇÁî±‰∫éËØ•Êû™ÈááÁî®‰∫Ü‰∫®Âà©ËÆæËÆ°ÁöÑÂ∏¶ÊúâËÜõÁ∫øÁöÑÊû™ÁÆ°ÔºåÂõ†Ê≠§Ëã±ÂõΩÈôÜÂÜõÂÆòÊñπÂ∞ÜÂÖ∂ÂëΩÂêç‰∏∫È©¨ËíÇÂ∞º-‰∫®Âà©MK‚Ö†Ê≠•Êû™„ÄÇËØ•Êû™ÊòØ‰∏ÄÁßçÂæàÂÆûÁî®ÁöÑÊ≠¶Âô®ÔºåÁõíÂ≠êÁä∂ÁöÑÊú∫Âå£‰ΩøÂæóÊâ≥Êú∫Êä§Âúà‰ΩçÁΩÆÂêëÂâç‰∫ÜÔºåÂπ∂‰∏îÊù†ÊùÜ‰∏ÄÁõ¥Âª∂‰º∏Âà∞Êû™Êâò‰∏ä„ÄÇÈááÁî®ËÉ°Ê°ÉÊú®Êû™ÊâòÂíåÊä§Êú®ÔºåÊä§Êú®Áî®‰∏§‰∏™Â•óÁÆçÂõ∫ÂÆöÂú®Êû™Ë∫´‰∏äÔºåÂπ∂‰∏îÊúâ‰∏ÄÂúÜÊùÜÈÄöËøáÊ≤üÊßΩÈï∂ÂµåÂú®‰∏ãÊä§Êú®ÁöÑÂ∫ïÈÉ®ÔºåÊû™ÁÆ°Âè≥‰æßÂÆâË£Ö‰∫Ü‰∏ÄÊääÈ™ëÂÖµÂà∫ÂàÄ„ÄÇ È©¨ËíÇÂ∞º-‰∫®Âà©MK‚Ö†Ê≠•Êû™Êìç‰ΩúËµ∑Êù•ÈùûÂ∏∏ÁÆÄ‰æøÔºåÂ∞ÑÊâãÂè™ÈúÄÂêë‰∏ãÊãâÂä®Êù†ÊùÜÔºåÂ∞±‰ºöÂÆåÊàêÂ¶Ç‰∏ãÁöÑÂä®‰ΩúÔºöÂáªÈíàÁº©ËøõÊû™Êú∫ÁöÑÂâçÈÉ®ÔºõÊû™Êú∫ÂõûËΩ¨ÔºåÈú≤Âá∫ÂºπËÜõÔºõÊâ≥Êú∫ÂµåÂÖ•ÈòªÈìÅÊßΩÔºõËØ•Êû™‰ªÖÊúâÁöÑ‰øùÈô©Ë£ÖÁΩÆÊòØ‰Ωç‰∫éÊú∫Âå£Âè≥‰æßÁöÑÊ∞¥Êª¥Áä∂ÂæÖÂáªÊåáÁ§∫Âô®ÔºåÂæÖÂáªÊó∂ÂÖ∂ÊåáÂú®ÂçÅÁÇπÈíüÁöÑ‰ΩçÁΩÆ‰∏äÔºåÂáªÂèëÂêéÊåáÂú®ÂçÅ‰∫åÁÇπÈíüÁöÑ‰ΩçÁΩÆ„ÄÇÊú∫Âå£Âè≥‰æßÈ°∂ÈÉ®ÂàªÊúâV.RÂ≠óÊ†∑ÔºåÂç≥Áª¥Â§öÂà©‰∫öÁéãÂÜ†Ê†áÂøóÔºåÂÖ∂Âè≥‰∏ã‰æß‰∏∫ÂÜõÈòüÂà∂ÂºèÊ†áÂøó„ÄÇÁΩóÈ©¨Êï∞Â≠ó‚Ö†ÂàªÂú®Êú∫Âå£Âè≥‰æßÈù†ËøëÂà∂ÈÄ†ÂïÜÊ†áÂøóÂ§Ñ„ÄÇ È©¨ËíÇÂ∞º-‰∫®Âà©Ê≠•Êû™ÊúÄÂàù‰ΩøÁî®ÁöÑÊû™ÂºπÂè£ÂæÑ‰∏∫0.450Ëã±ÂØ∏ÔºåÈááÁî®ÂçöÂÖãËµõÂºèÂ∫ïÁÅ´ÔºåÂç∑Âà∂ÈªÑÈìúÂºπÂ£≥„ÄÇÂêéÊù•ÔºåËØ•Êû™ÂºπÊîπ‰∏∫ÈááÁî®Âá†Â±ÇÂ∏¶Á∫∏Âû´ÁöÑÂç∑Âà∂ËñÑÈìúÁöÆÂºπÂ£≥Ë∫´Âπ∂ÈÖç‰ª•ÈìÅÂà∂ÂºπÂ£≥Â∫ïÈÉ®ÁöÑÂºπÂ£≥„ÄÇ ‰ΩøÁî®Âç∑Âà∂ÈªÑÈìúÁöÆÂºπÂ£≥ÁöÑÊû™ÂºπÁúãËµ∑Êù•ÂæàÈÄÇÁî®Ôºå‰ΩÜÂú®ÂÆûÊàò‰∏≠Áî®ËñÑÊùêÊñôÂà∂ÊàêÁöÑÂºπÂ£≥Êòì‰∫éÂèòÂΩ¢„ÄÅÊíïË£Ç„ÄÅÂèóÊΩÆÔºåËÄå‰∏îÂΩìÊ≠¶Âô®ËøûÁª≠ÂèëÂ∞ÑÊ∏©Â∫¶ËæÉÈ´òÊó∂ÔºåËñÑÈìúÁöÆÊòìÁ≤òÁùÄÂú®ÂºπËÜõ‰∏äÔºåÈòªÁ¢çÊäΩÂ£≥„ÄÇËøôÊ†∑Â£´ÂÖµ‰ª¨Âè™Â•ΩÂº∫Ë°å‰ªéÂºπËÜõÈáåÊí¨Âá∫Á©∫ÂºπÂ£≥ÔºåÂØºËá¥ÈìÅÂà∂ÂºπÂ£≥Â∫ïÈÉ®ÊíïË£ÇÔºåËÄåÂç∑Âà∂ÈªÑÈìúÁöÆÂºπÂ£≥ÁïôÂú®ÂºπËÜõÂÜÖÔºå‰ΩøÂæó‰∏ÄÊîØÂæàÂ•ΩÁöÑÊ≠•Êû™‰πüÊó†Áî®Ê≠¶‰πãÂú∞‰∫Ü„ÄÇ1885Âπ¥Ôºå‰∏∫‰∫ÜÂØπ‰ªòÁæ§‰ΩìÁäØÁΩ™ÔºåËã±ÂõΩÈôÜÂÜõÂèëÊòé‰∫ÜË£ÖÂ°´ÈπøÂºπÁöÑÊû™ÂºπÈÖçÂ§áÈ©¨ËíÇÂ∞º-‰∫®Âà©Ê≠•Êû™‰ΩøÁî®„ÄÇÂÆÉÊòØ‰∏ÄÁßçË£ÖÊúâ11‰∏™Â∞èÁêÉÁöÑÂ∏¶ÊúâÂçöÂÖãËµõÂºèÂ∫ïÁÅ´ÁöÑÊû™ÂºπÔºåÁõ¥ÂæÑ‰∏∫7mmÔºåÂÜÖË£ÖÈªëÁÅ´ËçØ„ÄÇÊ≠§Â§ñÔºå‰∏∫‰∫ÜÈò≤Ê≠¢ÂºπÂÜÖÂ∞èÁêÉÁõ∏‰∫íÁ¢∞ÊíûÂèëÂá∫ÂìçÂ£∞ÔºåÊçüÂùèÈáëÂ±ûËñÑÁâáÁöÑÂºπÂ£≥ÔºåÂºπÂ£≥‰∏≠ÁöÑÁ©∫ÈöôÁî®È™®Á≤âÂ°´ÂÖÖ„ÄÇ FusilMod√®le1886 ÂãíË¥ùÂ∞îM1886ÂãíË¥ùÂ∞îM1886ÔºàÊ≥ïËØ≠ÔºöFusilMod√®le1886ÔºâÊàñÂãíË¥ùÂ∞îÊ≠•Êû™ÔºàÊ≥ïËØ≠ÔºöFusilLebelÔºâÊòØÊ≥ïÂõΩ‰∫é1886Âπ¥Êé®Âá∫ÁöÑÊâãÂä®Êû™Êú∫ÂºèÊ≠•Êû™ÔºåÁî±Â∞ºÂè§ÊãâÊñØ.ÂãíË¥ùÂ∞î‰∏äÊ†°Á†îÂà∂„ÄÇËØ•Êû™ËøêÁî®‰∫ÜÁî±‰øùÁΩó.Áª¥ÂüÉÈÇ£ÂºÄÂèëÁöÑÁÅ´ËçØBÔºå‰∫¶ÊòØÂè≤‰∏äÁ¨¨‰∏ÄÁßçÊúÄÊàêÂäüÁöÑÊó†ÁÉüÁÅ´ËçØÊû™Ê¢∞„ÄÇÂãíË¥ùÂ∞îÊ≠•Êû™ÁöÑÂá∫Áé∞ÊÑèÂë≥ÁùÄÈÇ£‰∫õ‰ΩøÁî®ÈªëÁÅ´ËçØÁöÑÊû™Ê¢∞Â∑≤ËøáÊó∂ÔºåÂêÑÂõΩ‰∫¶ÂºÄÂßãÊîπ‰∏∫‰∏ìÊ≥®‰∫éÁ†îÂà∂ÂíåÈááË¥≠ÂèëÂ∞ÑÊó†ÁÉüÁÅ´ËçØÁöÑÊû™Ê¢∞„ÄÇ ÂãíË¥ùÂ∞îÊ≠•Êû™ÂèëÂ∞Ñ8√ó50ÊØ´Á±≥ÁöÑÂÖ®ÂÖ®Â±ûÂ§ñÂ£≥Ê≠•Êû™Â≠êÂºπÔºåËΩΩÂºπÈáè‰∏∫8ÂèëÔºåÂπ∂‰ª•ÂÜÖÁΩÆÂºπ‰ªì‰æõÂºπ„ÄÇÈô§Ê≠§‰πãÂ§ñÔºåÂÆÉËøòÂèØÈÖçÂ§á‰∏ÄÁßçÈïøÈíàÂûãÁöÑÈáçÂâëÂºèÂà∫ÂàÄ‰ª•Â∫î‰ªòÁôΩÂàÉÊàò„ÄÇÂú®1887Âπ¥ÔºåÂãíË¥ùÂ∞îÊ≠•Êû™Ë¢´Ê≥ïÂõΩÂÜõÈòüÂàóË£Ö‰∏∫Âà∂ÂºèÊ≠•Êû™ÔºåÂπ∂ÂèÇ‰∏é‰∫ÜÂ§öÊ¨°ÂØπÂ§ñÊàò‰∫âÔºåÂΩì‰∏≠Êõ¥ÂåÖÊã¨Á¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàòÂèäÁ¨¨‰∫åÊ¨°‰∏ñÁïåÂ§ßÊàò„ÄÇÂú®‰∏ÄÊàòÊúüÈó¥ÔºåÊ≥ïÂÜõÊõæÊâìÁÆó‰ª•Mle1917ÂçäËá™Âä®Ê≠•Êû™Â§ßÈáèÂèñ‰ª£ÂãíË¥ùÂ∞îÊ≠•Êû™„ÄÇÁÑ∂ËÄåÔºåÂ£´ÂÖµ‰ª¨Âç¥ÊôÆÈÅçËÆ§‰∏∫Ê≠§Êû™Ëøá‰∫éÁ¨®ÈáçÂíåÂ§™ÈïøÔºåÂõ†Ê≠§Âπ∂‰∏çÂÆπÊòìÂú®ÊàòÂ£ïÂÜÖÊìç‰ΩúÂíå‰øùÂÖª„ÄÇÂü∫‰∫éËøô‰∫õÈóÆÈ¢òÔºåÊ≥ïÂÜõ‰∏ÄÁõ¥ÈÉΩÊú™ËÉΩÊâæÂà∞ÂêàÈÄÇÁöÑÊõø‰ª£ÂìÅ‰ª•Âèñ‰ª£ÂãíË¥ùÂ∞îÊ≠•Êû™„ÄÇËÄåÂú®1936Âπ¥Êé®Âá∫ÁöÑMAS36Ê≠•Êû™‰∫¶Âõ†Áîü‰∫ßËøõÂ∫¶Â§™ÊÖ¢Âπ∂‰∏çËÉΩÊª°Ë∂≥ÂÜõÈòüÔºåÊâÄ‰ª•Áõ¥Ëá≥Ê≥ïÂõΩË¢´Á∫≥Á≤πÂæ∑ÂõΩÂç†È¢Ü‰πãÂâçÔºåÂãíË¥ùÂ∞îÊ≠•Êû™‰ªçÊóß‰∏∫Ê≥ïÂÜõÁöÑ‰∏ªÂäõÊ≠•Êû™„ÄÇÂΩì‰∏≠ÊúâÂ∞ëÈáèÁöÑÊ≠•Êû™Êõ¥Ë¢´Á∫≥Á≤πÂæ∑ÂÜõÁº¥Ëé∑‰ΩøÁî®ÔºåÂπ∂‰ª•Gewehr301(f)ÁöÑÂêç‰πâÂú®ÂÜõ‰∏≠ÊúçÂΩπ„ÄÇÁõ¥Ëá≥1920Âπ¥ÂÅú‰∫ßÂâçÔºåÂãíË¥ùÂ∞îÊ≠•Êû™‰∏ÄÂÖ±Ë¢´Ê≥ïÂõΩÁöÑÂõΩËê•ÂÖµÂ∑•ÂéÇÁîü‰∫ß‰∫ÜÁ∫¶2,880,000ÊîØ„ÄÇËÄåÂú®‰∫åÊàòËøáÂêéÁöÑ‰∏Ä‰∫õÂÜ≤Á™Å‰∏≠‰ªçËÉΩÊâæÂà∞ÂãíË¥ùÂ∞îÊ≠•Êû™ÁöÑË∫´ÂΩ±„ÄÇ Ëé´Ëæõ-Á∫≥ÁîòÊ≠•Êû™Ëé´Ëæõ-Á∫≥ÁîòÊ≠•Êû™ÔºàËé´ËæõÁ∫≥Âπ≤Á≥ªÂàó‰øÑÊñá–í–∏–Ω—Ç–æ–≤–∫–∞ –ú–æ—Å–∏–Ω–∞ÔºåËã±ÊñáMosin-Nagant,ÂèàÁß∞Ëé´Ëæõ-Á∫≥Âπ≤ÔºâÔºåÂç≥M1891Ëé´Ëæõ-Á∫≥ÁîòÊ≠•Êû™ÔºåÂú®‰øÑÂõΩË¢´Áß∞‰∏∫‚ÄúVintovka Mosina‚ÄùÔºàËé´ËæõÊ≠•Êû™ÔºâÔºåÊòØÂú®‰øÑÂõΩÊîøÂ∫úÂßîÊâò‰∏ãÂú®1880Âπ¥‰ª£ÂêéÊúüËá≥1890Âπ¥‰ª£Êó©ÊúüÁ†îÂà∂ÁöÑÊ≠•Êû™„ÄÇËØ•Êû™Áî±‰øÑÂõΩÂÜõÈòüÂú®1891Âπ¥Ê≠£ÂºèÈááÁî®ÔºåÂÆöÂûã‰∏∫1891Âûã3Á∫øÂè£ÂæÑ(7.62x54mmR)Ê≠•Êû™„ÄÇM1891Ê≠•Êû™Âú®ÊãõÊ†áËøáÁ®ã‰∏≠Âá∫Áé∞‰∫Ü‰∫âËÆÆÔºåÊúâ‰∏§‰∏™ËÆæËÆ°ËÉΩÂ§üËøõÂÖ•ÂÆòÊñπËØÑÂÆ°ÁöÑÊúÄÂêéÈò∂ÊÆµÔºå‰∏Ä‰∏™ÊòØ‰øÑÂõΩÈôÜÂÜõ‰∏äÂ∞âË∞¢Â∞îÁõñ¬∑‰ºäÂá°ËØ∫Áª¥Â•á¬∑Ëé´ËæõÔºàSergei Ivanovich MosinÔºâÁöÑÊ†∑Êû™ÔºåÂè¶‰∏Ä‰∏™ÊòØÊØîÂà©Êó∂ÁöÑËâæÁ±≥Â∞î¬∑Á∫≥ÁîòÂíåÊùéÊòÇ¬∑Á∫≥Áîò‰∏§ÂÖÑÂºüÔºàEmil NagantÂíåLeon NagantÔºâËÆæËÆ°ÁöÑÊ†∑Êû™„ÄÇ ÂéÜÂè≤Ëé´ËæõÂá∫Áîü‰∫é1849Âπ¥5Êúà5Êó•Ôºå12Â≤ÅÊó∂ËøõÂÖ•‰∏ÄÂÆ∂ÂÜõ‰∫ãÂ≠¶Èô¢Âπ∂Âú®ÈÇ£ÈáåÂèÇ‰∫ÜÂÜõÔºåÂú®1867Âπ¥‰ªñËøõÂÖ•Ëé´ÊñØÁßëAlexandrovskoyeÂÜõ‰∫ã‰∏≠Â≠¶ÔºàAlexandrovskoye Military High SchoolÔºâÔºåÂú®1870Âπ¥Á¶ªÂºÄÂÜõ‰∫ã‰∏≠Â≠¶Êó∂Ôºå‰ªñ‰∏∫‰∫ÜËÉΩÂ§üË∞ÉÂéªÁÇÆÂÖµÈÉ®Èó®ËÄåËΩ¨ÂÖ•ÂºÄ‰æùÊ¥õÂ§´ÊñØÁßë‰ºäÁÇÆÂÖµÂ≠¶Èô¢ÔºàMikhailovskoye Artillery AcademyÔºâ„ÄÇ‰ªñÂú®1875Âπ¥ÊØï‰∏öÂêéË¢´Ë∞ÉÂà∞ÂõæÊãâÂÖµÂ∑•ÂéÇ„ÄÇËé´ËæõÂΩì‰∏äÊ≠¶Âô®ËÆæËÆ°Â∏àÂêéÁöÑÁ¨¨‰∏Ä‰∏™Â∑•‰ΩúÂ∞±ÊòØÂØπ‰ºØ‰∏πIIÊ≠•Êû™ÁöÑÊîπËøõÔºåËé´Ëæõ-Á∫≥ÁîòÊ≠•Êû™ÁÆóÊòØ‰ªñÁöÑÁ¨¨‰∫å‰∏™ËÆæËÆ°ÔºåËôΩÁÑ∂ÂÆöÂûãÁöÑËé´Ëæõ-Á∫≥ÁîòÊ≠•Êû™Âπ∂Ê≤°ÊúâÂÆåÂÖ®ÈááÁî®‰ªñÁöÑËÆæËÆ°„ÄÇËé´ËæõÊòØÂú®1883Âπ¥ÂºÄÂßãËÆæËÆ°ËøûÂèëÊ≠•Êû™ÁöÑËÆæËÆ°Â∑•‰ΩúÔºå‰ªñÂú®1884Âπ¥Âíå1885Âπ¥ÂàÜÂà´Êèê‰æõ‰∫ÜÂá†ÁßçÂÜÖÁΩÆÂºπ‰ªì‰æõÂºπÁöÑÊ≠•Êû™ËÆæËÆ°ÁªôË¥üË¥£ÊãõÊ†áÁöÑÂßîÂëò‰ºöÔºåÊúÄÂàùÁöÑËÆæËÆ°ÊòØ10.6mmÂè£ÂæÑ„ÄÇ‰ΩÜËé´ËæõÁöÑÂä™ÂäõÊàêÊûúÊ≤°ÊúâÂèóÂà∞‰øÑÁΩóÊñØÂÜõÈòüÁöÑÈáçËßÜ„ÄÇÂú®1886Âπ¥Ê≥ïÂõΩÈááÁî®8mmÂè£ÂæÑM1886ÂãíË¥ùÂ∞îÊ≠•Êû™ÂêéÔºàËøôÊòØÁ¨¨‰∏ÄÁßçÈááÁî®Êó†ÁÉüÁÅ´ËçØÁöÑÂ∞èÂè£ÂæÑÊû™ÂºπÁöÑÂÜõÁî®Ê≠¶Âô®ÔºâÔºåÊ≠§‰∏æÂú®‰∏ñÁïåÂêÑÂõΩÂºïËµ∑‰∫Ü‰∏ÄÂú∫‰ΩøÁî®Êó†ÁÉüÂèëÂ∞ÑËçØÂ∞èÂè£ÂæÑÊû™ÂºπÔºàÁõ∏ÂØπ‰πãÂâçÁöÑÂºπËçØÔºâÁöÑËΩªÊ≠¶Âô®ÂÜõÂ§áÂèòÈù©ÔºåÂú®1887Âπ¥Ëá≥1889Âπ¥Èó¥ÔºåÂ§ßÂ§öÊï∞Ê¨ßÊ¥≤ÂõΩÂÆ∂ÁöÑÂÜõÈòüÈÉΩÈááÁî®‰∫ÜÁ±ª‰ººÁöÑÊ≠¶Âô®Ôºå‰øÑÂõΩÊîøÂ∫ú‰πüÂÜ≥ÂÆöÈááÁî®‰∏ÄÁßçÁ±ª‰ººÁöÑÊñ∞ÂûãËøûÂèëÊ≠•Êû™Ôºå‰ª£ÊõøÁé∞ÂΩπÁöÑ‰ºØ‰∏πÊ≠•Êû™ÔºàÁ±ª‰ºº‰∫éËã±ÂõΩÈ©¨ËíÇÂ∞º-‰∫®Âà©Ê≠•Êû™ÁöÑÈªëÁÅ´ËçØÊû™ÂºπÂçïÂèëÂêéË£ÖÊû™Ôºâ„ÄÇ‰∏∫Ê≠§‰øÑÁΩóÊñØÊîøÂ∫úÁªÑÁªá‰∫Ü‰∏Ä‰∏™ÂßîÂëò‰ºöÔºå‰ªéÁé∞ÊúâÁöÑÊØõÁëü„ÄÅÂãíË¥ùÂ∞î„ÄÅÊùé-Ê¢ÖÁâπÁ¶è„ÄÅÊõºÂà©Â§è„ÄÅÊñΩÂØÜÁâπ-È≤ÅÂÆæÂíåÂÖãÊãâÊ†º-Á∫¶Ê†πÊ£ÆÁ≠âËÆæËÆ°‰∏≠ËøõË°åÈÄâÊã©„ÄÇËé´Ëæõ‰πüÊé•ÂèóÂßîÊâòËÆæËÆ°‰∫Ü‰∏ÄÁßç5ÂèëÂçïÊéíÂºπ‰ªìÁöÑ7.62mmÂè£ÂæÑÊ≠•Êû™ÂèÇ‰∏éÊãõÊ†á„ÄÇÊ†πÊçÆÂè§ËÄÅÁöÑ‰øÑÁΩóÊñØÂ∫¶ÈáèË°°Áß∞‰∏∫3Á∫øÂè£ÂæÑ„ÄêÊ≥®ÔºöliniyaÔºåËã±Êñá‰∏∫lineÔºåÊóß‰øÑÁΩóÊñØÂ∫¶ÈáèË°°Ôºå1Á∫øÁ≠â‰∫é0.1Ëã±ÂØ∏Êàñ2.54mmÔºåÂõ†Ê≠§Ôºå3Á∫øÁ≠â‰∫é7.62mmÊàñ0.3Ëã±ÂØ∏„Äë„ÄÇËÄåÊØîÂà©Êó∂Ê≠¶Âô®ËÆæËÆ°Â∏àÊùéÊòÇ¬∑Á∫≥ÁîòÂàôÂêë‰øÑÁΩóÊñØÂÜõÈòüÊèê‰∫§‰∫Ü‰∏ÄÁßç3.5Á∫øÂè£ÂæÑÔºà8.89mmÔºâÊ≠•Êû™Âíå500ÂèëÊû™ÂºπËøõË°åÊµãËØï„ÄÇËé´ËæõÁ∫≥Âπ≤1891Ê≠•Êû™Êó©ÊúüÂûãËé´ËæõÁ∫≥Âπ≤1891Ê≠•Êû™Êó©ÊúüÂûãÊâÄÊúâÂèÇ‰∏éÊäïÊ†áÁöÑÊ≠¶Âô®ÈÉΩÂú®1890Âπ¥Ëá≥1891Âπ¥Èó¥Áî±‰øÑÁΩóÊñØÂÜõÈòüËøõË°åÊµãËØïÔºå‰øÑÁΩóÊñØÂÜõÈòüÂÅèÁà±Á∫≥ÁîòÁöÑËÆæËÆ°„ÄÇÂéüÊú¨ÂØπÁ∫≥ÁîòÁöÑËÆæËÆ°ÊúâÂà©Ôºå‰ΩÜÂá∫‰∫é‰øÑÁΩóÊñØÂõΩÂÆ∂Â∞ä‰∏•ÁöÑËÄÉËôëÔºåÊîøÂ∫úÂØπËé´ËæõÁöÑÊ≠•Êû™ÂæàÊÑüÂÖ¥Ë∂£„ÄÇÁî±‰∫éÊîøÂ∫úÂíåÂÜõÈòüÁöÑÊÑèËßÅÂàÜÊ≠ßÔºå‰∫í‰∏çÁõ∏ËÆ©ÔºåÊúÄÂêéÂßîÂëò‰ºöÁî®‰∫ÜÊäòË°∑ÁöÑÊñπÊ≥ïÔºöÊääËøô‰∏§ÁßçËÆæËÆ°ÂêàÂπ∂Âú®‰∏ÄÁßçÊ≠•Êû™‰∏äÔºåÁªìÊûúÊòØÊääÁ∫≥ÁîòÂÖÑÂºüËÆæËÆ°ÁöÑ‰æõÂºπÁ≥ªÁªüË£ÖÂú®Ëé´ËæõËÆæËÆ°ÁöÑÊ≠•Êû™‰∏äÔºåÂõ†Ê≠§ËøôÁßçÊ≠•Êû™Á≥ªÁªüË¢´Áß∞‰∏∫Ëé´Ëæõ-Á∫≥Âπ≤Ê≠•Êû™„ÄÇËÄåÂèÇ‰∏éÁ´û‰∫âÁöÑÂèåÊñπÈÉΩËé∑ÂæóË°•ÂÅøÔºöÁ∫≥ÁîòÂÖÑÂºüÂæóÂà∞ÈÖ¨ÈáëÔºàÂêéÊù•Á∫≥ÁîòÂÖÑÂºüËÆæËÆ°ÁöÑM1895ÊâãÊû™‰πüË¢´‰øÑÁΩóÊñØÂÜõÈòüÈááÁî®ÔºâÔºåËÄåËé´ËæõÂàôÊôãÂçáÊàê‰∏äÊ†°Âπ∂Ë¢´‰ªªÂëΩ‰∏∫Ë∞¢ÊñØÁâπÁΩóÂàóËå®ÂÖãÂÖµÂ∑•ÂéÇÁöÑ‰∏ªÁÆ°ÔºåÁªßÁª≠ÊîπËøõÂíåÁîü‰∫ßËøôÁßçÊ≠•Êû™ÔºåËé´Ëæõ‰∏äÊ†°‰∫é1902Âπ¥2Êúà8Êó•Âéª‰∏ñÔºåÂÆâËë¨Âú®ÂõæÊãâ„ÄÇÂú®1960Âπ¥ÔºåËãèËÅîËÆæÁ´ã‰∫Ü‰∏Ä‰∏™S.I.Ëé´ËæõÁâπÂà´Â•ñÔºåÂ•ñÂä±ÂêÑ‰∏™Èò≤Âä°‰ºÅ‰∏öÁ≥ªÁªüÂÜÖÁöÑ‰∏ìÂÆ∂„ÄÇËé´Ëæõ-Á∫≥ÁîòÊ≠•Êû™Ë¢´ÈááÁî®Êó∂‰øÑÂõΩÁöÑËΩªÊ≠¶Âô®‰ºÅ‰∏öËøòÊ≤°ÊúâÂÅöÂ•ΩÁîü‰∫ßÂáÜÂ§áÔºåÊâÄ‰ª•Á¨¨‰∏ÄÊâπM1891Ëé´Ëæõ-Á∫≥ÁîòÊ≠•Êû™ÊòØÊ≥ïÂõΩÁöÑÂ§èÁâπÁΩóËΩªÊ≠¶Âô®ÂéÇÁîü‰∫ßÁöÑ„ÄÇËé´Ëæõ-Á∫≥ÁîòÊ≠•Êû™ÊòØÁ¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàò‰∏≠‰øÑÂõΩÂÜõÈòüÁöÑ‰∏ªË¶ÅË£ÖÂ§á„ÄÇÂú®Á¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàòÊúüÈó¥ÔºåÂ§ñÂõΩÁöÑÊâøÂåÖÂïÜÂÜç‰∏ÄÊ¨°Ë¢´Áî®Êù•Áîü‰∫ßËøôÁßçÊ≠•Êû™ÔºåÂΩìÊó∂‰øÑÂõΩÈùûÂ∏∏Áº∫‰πèÊ≠•Êû™ÔºåÊâÄ‰ª•‰∏é‰∏§ÂÆ∂ÁæéÂõΩÂÖ¨Âè∏Á≠æËÆ¢Áîü‰∫ßÂêàÂêåÔºå‰ΩÜËøôÊâπÊ≠•Êû™Áî±‰∫é1917Âπ¥ÁöÑÂçÅÊúàÈù©ÂëΩËÄåÊ≤°Êúâ‰∫§ÁªôÂêéÊù•ÁöÑËãèÁª¥ÂüÉÊîøÊùÉÔºåÂú®ÁæéÂõΩÁî®‰∫éËÆ≠ÁªÉÂíåÊ∞ëÈó¥ÈîÄÂîÆ„ÄÇM1891Ê≠•Êû™ÊúÄÂàùÊúâ‰∏âÁßçÂûãÂè∑ÔºöÊ≠•ÂÖµÊ≠•Êû™„ÄÅÈæôÈ™ëÂÖµÊ≠•Êû™ÂíåÂì•Ëê®ÂÖãÊ≠•Êû™ÔºåÊ≠•ÂÖµÊ≠•Êû™Â∞±ÊòØÊ†áÂáÜÂûãÈïøÊ≠•Êû™ÔºåÂêé‰∏§ÁßçÊòØÈÖçÂèëÁªôÈ™ëÂÖµÈÉ®Èòü‰ΩøÁî®ÁöÑÈ™ëÊû™ÔºàÂç°ÂÆæÊû™Ôºâ„ÄÇ ÁªìÊûÑÁâπÁÇπËé´Ëæõ-Á∫≥ÁîòÊòØÊúÄÊó©ÁöÑÊó†ÁÉüÂèëÂ∞ÑËçØÂÜõÁî®Ê≠•Êû™‰πã‰∏ÄÔºåÊû™Â£∞Ê∏ÖËÑÜ, ÊúâÂ¶ÇÊ∞¥Áè†Ê∫ÖËêΩ, Âõ†Ê≠§Êàë‰ª¨‰∏≠ÂõΩ‰∫∫‰∏∫Ëé´Ëæõ-Á∫≥ÁîòËµ∑‰∫Ü‰∏Ä‰∏™È¢áÂÖ∑ËØóÊÑèÁöÑÁª∞Âè∑‚ÄùÊ∞¥ËøûÁè†‚Äù„ÄÇËé´Ëæõ-Á∫≥ÁîòÁ≥ªÂàóÊ≠•Êû™‰∏éÊØõÁëüÊ≠•Êû™Á≥ªÂàó„ÄÅÊùé-ÊÅ©Ëè≤Â∞îÂæ∑Ê≠•Êû™Á≥ªÂàóÁ≠âÂÖ∂‰ªñÂêåÊó∂‰ª£ÂêåÁ±ªÂÜõÁî®Ê≠•Êû™Áõ∏ÊØîÔºåÂÖ∂Êû™Êú∫ËÆæËÆ°ÊòæÂæóËæÉ‰∏∫Â§çÊùÇÔºåÂÆÉÁöÑËÆæËÆ°Á≤óÁ≥ôËÄå‰∏îËøáÊó∂ÔºåÊï¥‰ΩìÁöÑÊìç‰ΩúÊÑüËßâ‰πüÊØîËøô‰∫õÊ≠•Êû™Á¨®Êãô„ÄÇ‰ΩÜËé´Ëæõ-Á∫≥ÁîòÊ≠•Êû™ÁöÑ‰ºòÁÇπÊòØÊòì‰∫éÁîü‰∫ßÂíå‰ΩøÁî®ÁÆÄÂçïÂèØÈù†‚Äî‚ÄîËøôÁõ∏ÂØπ‰∫éÂ∑•‰∏öÂü∫Á°Ä‰Ωé„ÄÅÂ£´ÂÖµÊïôËÇ≤Á®ãÂ∫¶‰ΩéÁöÑËãè/‰øÑÂÜõÈòüÊù•ËØ¥ÊòØÊûÅÂÖ∂ÈáçË¶ÅÁöÑÔºåÂ∞§ÂÖ∂ÊòØÊÅ∂Âä£ÁöÑÊàò‰∫âÊó∂ÊúüÂåÖÈúÄÊèêÈ´òÊ≠¶Âô®‰∫ßÈáè‰ª•Êª°Ë∂≥ÂâçÁ∫øÈúÄË¶ÅÔºåËÄåÂ§ßÈáèË°•ÂÖÖÁöÑÊàòÊñó‰∫∫ÂëòÂæÄÂæÄËÆ≠ÁªÉÊó∂Èó¥‰∏çË∂≥„ÄÇ Ëé´Ëæõ-Á∫≥ÁîòÊ≠•Êû™ÊòØ‰∏ÄÁßçÊóãËΩ¨ÂêéÊãâÂºèÊû™Êú∫„ÄÅÂºπ‰ªìÂºè‰æõÂºπÁöÑÊâãÂä®Ê≠•Êû™ÔºåÊòØ‰øÑÁΩóÊñØÂÜõÈòüÈááÁî®ÁöÑÁ¨¨‰∏ÄÁßçÊó†ÁÉüÂèëÂ∞ÑËçØÊ≠•Êû™„ÄÇÂÆÉÈááÁî®Êï¥‰ΩìÂºèÁöÑÂºπ‰ªìÔºåÈÄöËøáÊú∫Âå£È°∂ÈÉ®ÁöÑÊäõÂ£≥Âè£ÂçïÂèëÊàñÁî®ÂºπÂ§πË£ÖÂ°´„ÄÇÂºπ‰ªì‰Ωç‰∫éÊû™Êâò‰∏ãÁöÑÊâ≥Êú∫Êä§ÂúàÂâçÊñπÔºåÂºπ‰ªìÂÆπÂºπÈáè5ÂèëÔºåÊúâÈì∞ÈìæÂºèÂ∫ïÁõñÔºåÂèØÊâìÂºÄÂ∫ïÁõñ‰ª•‰æøÊ∏ÖÁ©∫Âºπ‰ªìÊàñÊ∏ÖÊ¥ÅÁª¥Êä§„ÄÇÁî±‰∫éÊòØÂçïÊéíËÆæËÆ°ËÄåÊ≤°ÊúâÊä±ÂºπÂè£ÔºåÂõ†Ê≠§Âºπ‰ªìÂè£ÈÉ®Êúâ‰∏Ä‰∏™ÈöîÊñ≠Èù¢Âô®Ôºå‰∏äËÜõÊó∂ÈöîÂºÄÁ¨¨‰∫åÂèëÂºπÔºåÈÅøÂÖçÂá∫Áé∞‰∏äÂèåÂºπÁöÑÊïÖÈöú„ÄÇÂú®Êó©ÊúüÁöÑÊû™Âûã‰∏≠ÔºåËøô‰∏™Ë£ÖÁΩÆ‰πüÂÖºÂÖ∑ÊäõÂ£≥Êå∫ÁöÑ‰ΩúÁî®Ôºå‰ΩÜËá™M1891/30ÂûãÂºÄÂßãÔºå‰ª•ÂêéÁöÑÊû™ÂûãÈÉΩÂ¢ûÂä†‰∫Ü‰∏Ä‰∏™Áã¨Á´ãÁöÑÊäõÂ£≥Êå∫„ÄÇÊû™ËÜõÂÜÖÊúâ4Êù°Âè≥ÊóãËΩ¨ËÜõÁ∫ø„ÄÇÂΩìÊû™Êú∫Èó≠ÈîÅÊó∂ÔºåÂõûËΩ¨ÂºèÊû™Êú∫ÂâçÈù¢ÁöÑ‰∏§‰∏™Èó≠ÈîÅÂá∏Á¨ãÂëàÊ∞¥Âπ≥Áä∂ÊÄÅ„ÄÇÊ≠•Êû™ÊòØÂáªÈíàÂºèÂáªÂèëÔºåÂáªÈíàÂú®ÊâìÂºÄÊû™Êú∫ÁöÑËøáÁ®ã‰∏≠ËøõÂÖ•ÂæÖÂèëÁä∂ÊÄÅ„ÄÇÊâãÂä®‰øùÈô©Ë£ÖÁΩÆÊòØÂú®Êû™Êú∫Â∞æÈÉ®Âá∏Âá∫ÁöÑ‰∏Ä‰∏™‚ÄúÂ∞èÂ∏Ω‚ÄùÔºåÂêëÂêéÊãâÊó∂‰ºöÈîÅ‰ΩèÂáªÈíàÔºåËÄåÂêëÂâçÊé®Êó∂‰ºöËß£ËÑ±‰øùÈô©Áä∂ÊÄÅÔºåÊìç‰ΩúÊó∂‰∏çÂ§™Êñπ‰æøËÄå‰∏îË¥πÂäõ„ÄÇÊ∞¥Âπ≥‰º∏Âá∫ÁöÑÊãâÊú∫ÊüÑÂäõËáÇËæÉÁü≠ÔºåÂõ†Ê≠§Êìç‰ΩúÊó∂ÈúÄË¶ÅËä±ËæÉÂ§ßÁöÑÂäõÊ∞îÔºåËÄå‰∏îÊØîËµ∑‰∏ãÂºØÂºèÊãâÊú∫ÊüÑÂú®Êê∫Ë°åÊñπÈù¢Êó∂ËæÉ‰∏çÊñπ‰æøÔºåËÄå‰∏ãÂºØÂºèÊãâÊú∫ÊüÑÂè™ÊúâÁãôÂáªÂûãÊâçÊúâ„ÄÇ‰ªéÊ≠•Êû™‰∏äÂàÜËß£Âá∫Êû™Êú∫Êó∂‰∏çÈúÄË¶Å‰∏ìÈó®Â∑•ÂÖ∑ÔºåÂè™Ë¶ÅÊãâÂºÄÊû™Êú∫ÔºåÁÑ∂ÂêéÊâ£‰∏ãÊùøÊú∫Â∞±ËÉΩÂèñÂá∫Êû™Êú∫„ÄÇÂú®Ê≤°ÊúâÂ∑•ÂÖ∑ÁöÑÊù°‰ª∂‰∏ãËøòÂèØ‰ª•Ëøõ‰∏ÄÊ≠•ÂàÜËß£ÂÖ∂‰ªñÂá†‰∏™‰∏ªË¶ÅÈÉ®‰ª∂„ÄÇÊó©ÊúüÁöÑÊ£±ÂΩ¢Âà∫ÂàÄÁöÑÊà™Èù¢‰∏∫Áü©ÂΩ¢ÔºåÂêéÊîπ‰∏∫‰∏ÄÂ≠óËû∫‰∏ùËµ∑Â≠êÂΩ¢ÔºåÂπ∂Âú®ÂàÜËß£Ê≠•Êû™Êó∂ÂÖÖÂΩìÂàÜËß£Â∑•ÂÖ∑„ÄÇÊó©ÊúüÁöÑÂà∫ÂàÄÊòØÂèØÊãÜÂç∏ÁöÑÂõõÊ£±Âà∫ÂàÄÈÄöËøáÁî®ÁÆ°Áä∂ÊèíÂ∫ßÂ•óÂú®Êû™Âè£‰∏äÔºåÂêéÊúü‰∏∫‰∏çÂèØÂç∏ÁöÑÊäòÂè†ÂºèÔºåËÄå‰∏îÂà∫ÂàÄÂ∫ßÂÖº‰ΩúÂáÜÊòüÂ∫ß„ÄÇÊû™ÊâòÈÄöÂ∏∏Áî®Ê°¶Êú®„ÄÇ ÂºπËçØ‰∏éM1891Ê≠•Êû™‰∏ÄËµ∑ËøòÊúâ‰∏ÄÁßçÊñ∞ÁöÑÂ∞èÂè£ÂæÑÊû™ÂºπË¢´ÈááÁî®ÔºàÁ°ÆÂÆûÊòØÈÇ£‰∏™Âπ¥‰ª£ÈáåÁöÑÂ∞èÂè£ÂæÑÊû™ÂºπÔºâÔºåÁõ¥Âà∞‰ªäÂ§©Ôºå7.62√ó54mmRÊû™ÂºπÂú®‰øÑÂõΩÂÜõÈòüÊúçÂΩπÂ∑≤ÁªèË∂ÖËøá‰∫Ü‰∏Ä‰∏™‰∏ñÁ∫™„ÄÇËØ•Êû™ÂºπÈááÁî®Á™ÅÂ∫ïÁºòÈî•ÂΩ¢ÂºπÂ£≥ÔºåÁ™ÅÂ∫ïÁºòÂºπÂ£≥ÁöÑËÆæËÆ°Âú®19‰∏ñÁ∫™Êú´‰πüÂ∑≤ÁªèÂºÄÂßãÊòæÂæóÂºÄÂßãËøáÊó∂‰∫ÜÔºå‰ΩÜÂç¥ÈÄÇÂêàÂü∫Á°ÄËæÉ‰ΩéÁöÑ‰øÑÁΩóÊñØËΩªÊ≠¶Âô®Â∑•‰∏öÔºåÂõ†‰∏∫Á™ÅÂ∫ïÁºòÂºπÂ£≥ÂØπÂºπËÜõÂ∞∫ÂØ∏ÁöÑË¶ÅÊ±ÇÁõ∏ÂØπÂÆΩÊùæ‰∏ÄÁÇπÔºåËøôÊ†∑Âú®Êú∫Âô®Âä†Â∑•Êó∂ÂÖÅËÆ∏ÊúâËæÉÂ§ßÁöÑÁîü‰∫ßÂÖ¨Â∑ÆÔºåÊó¢ËäÇÁúÅ‰∫ÜÂ∑•Êó∂ÂèàËäÇÁ∫¶‰∫ÜÈí±„ÄÇM1891ÂºèÊû™ÂºπÁöÑÂºπÂ§¥ÊòØÈáç210Ê†º‰ª§„ÄÅÈìúÈïçÂêàÈáëË¢´Áî≤„ÄÅÈìÖËäØÁöÑÈíùÂúÜÂ§¥ÂΩ¢ÂºπÂ§¥ÔºåÂú®Âæ∑ÂõΩÈááÁî®‰∫ÜÂ∞ñÂ§¥ÂºπÂêéÔºå‰øÑÁΩóÊñØ‰πüÂºÄÂßãÁ†îÂà∂Â∞ñÂ§¥ÂºπÔºåÁªèËøáÂπøÊ≥õÊµãËØïÂêéÔºåÂú®1908Âπ¥ÈááÁî®‰∫Ü‰∏ÄÁßçÈáç148Ê†º‰ª§„ÄÅÈìúÈïçË¢´Áî≤ÁöÑÈìÖËäØÂ∞ñÂ§¥ÂºπÔºàÊàò‰∫âÊó∂ÊúüÈááÁî®Ë¶ÜÈìúÈí¢Ë¢´Áî≤Ôºâ„ÄÇÂú®‰∫åÊàòÁªìÊùüÂêéÔºåËãèËÅîÁöÑÂà∂ÂºèÊ≠•Êû™ÂÖàÂêéÈááÁî®‰∫Ü‰∏≠Èó¥Â®ÅÂäõÂûãÊû™ÂºπÂíå5.45mmÂ∞èÂè£ÂæÑÊ≠•Êû™ÂºπÔºå‰ΩÜÁõ¥Âà∞Áé∞Âú®M1908ÂºèÊû™ÂºπÁ≥ªÂàó‰ªçÁÑ∂Ë¢´Áî®‰ΩúÊú∫Êû™ÂíåÁãôÂáªÊ≠•Êû™ÁöÑÂºπËçØ„ÄÇ ‰∏âÂÖ´ÂºèÊ≠©ÂÖµÈì≥ÂÖ´ÂºèÊ≠•Êû™ÔºàÊó•ËØ≠Ôºö‰∏âÂÖ´ÂºèÊ≠©ÂÖµÈì≥Ôºõ„Åï„Çì„Å±„Å°„Åó„Åç„Åª„Å∏„ÅÑ„Åò„ÇÖ„ÅÜÔºåËã±ÊñáÔºöSanpachi-shiki hohei-juÔºâ‰∏∫ÊâãÂä®Ê≠•Êû™ÔºåÊó•Êú¨ÈôÜÂÜõ‰∫éÊó•‰øÑÊàò‰∫âÂêé1907Âπ¥Ê≠£ÂºèÈááÁî®‰∏∫Âà∂ÂºèÊ≠¶Âô®Ôºå‰∏âÂÖ´ÂºèÊ≠•Êû™ÊòØÁ¨¨‰∫åÊ¨°‰∏ñÁïåÂ§ßÊàò‰∏≠Êó•Êú¨Ê≥ïË•øÊñØÈôÜ„ÄÅÊµ∑ÂÜõÊúÄ‰∏ªË¶Å„ÄÅÊúÄÂü∫Êú¨ÁöÑÊ≠¶Âô®Ôºå‰∏ÄÁõ¥‰ΩøÁî®Âà∞‰∫åÊàòÁªìÊùüÔºàÊó•Êú¨ÊàòË¥•ÔºâÔºåÁî®‰∫ÜÊï¥Êï¥40Âπ¥„ÄÇ‰∏âÂÖ´ÂºèÊ≠•Êû™Âú®‰∏≠ÂõΩ‰∏ÄÂêë‰øóÁß∞‰∏∫‰∏âÂÖ´Â§ßÁõñÔºåÁî±‰∫éÂÖ∂Êû™Êú∫‰∏äÊúâ‰∏Ä‰∏™ÈöèÊû™Êú∫ËøûÂä®ÁöÑÈò≤Â∞òÁõñ‰ª•ÂèäÊú∫Âå£‰∏äÂàªÊúâ‚Äú‰∏âÂÖ´Âºè‚ÄùÂ≠óÊ†∑ËÄåÂæóÂêç„ÄÇ ÂéÜÂè≤‰∏âÂÖ´ÂºèÊ≠•Êû™ÁöÑÂéüÂûãÊòØ‰∏âÂçÅÂπ¥ÂºèÊ≠•Êû™Âíå‰∏â‰∫îÂºèÊµ∑ÂÜõÊ≠•Êû™„ÄÇ‰∏âÂçÅÂπ¥ÂºèÊ≠•Êû™‰ªøÈÄ†Ëá™Âæ∑ÂõΩÊØõÁëüÊ≠•Êû™ÔºåËÆæËÆ°Â∏àÊòØÊúâÂùÇÊàêÁ´†Â§ß‰ΩêÔºå‰ª•Âèñ‰ª£‰ªéÁî≤ÂçàÊàò‰∫â‰ª•Êù•Ôºå‰ª•Ê≥ïÂõΩM1874Ê≠•Êû™‰ªøÈÄ†‰ΩÜÊòØ‰∏çÂèØÈù†‰πüÊâì‰∏çÂáÜÁöÑÊùëÁî∞Êû™„ÄÇ Ëøô‰∏§ÁßçÊ≠•Êû™‰πüÂõ†ÂÖ∂ÂèëÊòéËÄÖÊúâÂùÇÊàêÁ´†ËÄåÂæóÂêçÊúâÂùÇÊ≠•Êû™„ÄÇÊúâÂùÇÂú®ËÆæËÆ°‰∏âÂçÅÂπ¥ÂºèÊ≠•Êû™Êó∂Ëµ∑ÂàùËÆæÂÆö‰∫Ü‰∏âÁßçÂè£ÂæÑ‰Ωú‰∏∫Á†îÂèëÊñπÂêëÔºö6ÊØ´Á±≥„ÄÅ6.5ÊØ´Á±≥‰ª•Âèä7ÊØ´Á±≥„ÄÇ‰∏âÂçÅÂπ¥ÂºèÊ≠•Êû™Ôºà‰∏âÂçÅÂπ¥ÂºèÊ≠©ÂÖµÈì≥Ôºâ‰∫é1897Âπ¥ËøõË°åÂà∂ÂºèÂåñÁîü‰∫ßÔºåÂπ∂‰∫é1903Âπ¥ÂÆåÊàêÊó•Êú¨ÂÖ®ÂÜõÊõ¥Êç¢Êï¥Ë£Ö„ÄÇÊó•Êú¨ÈôÜÂÜõÊç¢Âèë‰∏âÂçÅÂπ¥ÂºèÊ≠•Êû™ÂêéÔºåÊó•Êú¨Êµ∑ÂÜõÈôÜÊàòÈòü‰πüË∑üÁùÄÊç¢Êû™ÔºåÊúâÂùÇÊàêÁ´†Â∞ÜËÆæËÆ°Ê°àËΩ¨Â∞ÜÁªôÈÉ®Â±ûÂçóÈÉ®È∫íÊ¨°ÈÉé‰∏äÂ∞âË¥üË¥£ËøõË°åÊîπËøõ„ÄÇÂçóÈÉ®È∫íÊ¨°ÈÉéÂè™ËøõË°å‰∫ÜÂ∞èÊîπËâØÔºåÂ∞ÜË°®Â∞∫Êîπ‰∏∫Áõ¥Á´ãÂºèÔºåÂπ∂‰∏îÂä†‰∏äÊû™Êú∫ÁõñÔºåÂπ∂ÂëΩÂêç‰∏∫‰∏â‰∫îÂºèÊµ∑ÂÜõÊ≠•Êû™Ôºà‰∏âÂçÅ‰∫îÂπ¥ÂºèÊµ∑ÂÜõÈì≥Ôºâ„ÄÇ1904Âπ¥Ëá≥1905Âπ¥Êó•ÂÜõÂú®‰∏≠ÂõΩ‰∏úÂåóÊàòÂú∫‰∏ä‰ΩøÁî®ÁöÑ‰∏âÂçÅÂπ¥ÂºèÊ≠•Êû™Ë°®Èú≤Âá∫Êúâ‰∏ÄÁßçÁªÜÂ∞èÁöÑÊ≤ôÂ∞òËøõÂÖ•Êìç‰ΩúÊú∫ÂÖ≥ÂÜÖÔºåÂØºËá¥Êìç‰Ωú‰∏çËâØÔºå‰∏âÂçÅÂπ¥ÂºèÊ≠•Êû™Âè¶Â§ñÊúâÊ†πÂæàÂÆπÊòìÊäòÊñ≠ÁöÑÊíûÈíà„ÄÇ‰∏äËø∞ÁöÑÊÉÖÂΩ¢Âú®Êó•‰øÑÊàò‰∫âÂêéÊúâ‰∫∫ÊèêÂá∫ËÆ®ËÆ∫‰∏éËøõË°åÊîπÂñÑÔºåËøôÊó∂ÂÄôÂ∑≤ÁªèÂçá‰ªªÂ∞èÁü≥Â∑ùÁÇÆÂÖµÂ∑•ÂéÇÁ†îÁ©∂ÊâÄÊâÄÈïøÁöÑÂçóÈÉ®È∫íÊ¨°ÈÉéÂõ†Ê≠§Â∞ÜÊû™Êú∫ÈáçÊñ∞ËøõË°åÁÆÄÂåñÔºåÂêåÊó∂Âú®Êû™Êú∫Ë°®Èù¢Â¢ûÂä†‰∫Ü‰∏Ä‰∏™ÈöèÊû™Êú∫ËøûÂä®ÁöÑÈò≤Â∞òÁõñ„ÄÇÁÑ∂ËÄåÂ¢ûÂä†Èò≤Â∞òÁõñÁöÑÁ´ãÊÑèËôΩÁÑ∂ËâØÂ•ΩÔºå‰∏çËøáÂç¥Âèà‰∏∫Êìç‰ΩúÊó∂Â¢ûÂä†‰∫ÜÁã¨ÁâπÁöÑÈáëÂ±ûÂô™Èü≥„ÄÇÂÖ∂‰ªñÊîπËøõÂåÖÊã¨Âú®ÂáÜÊòü‰∏§‰æßÂ¢ûÂä†Êä§ÁøºÔºå‰∏âÂÖ´ÂºèÊ≠•Êû™Êú∫Ê¢∞ÁûÑÂáÜÂÖ∑Êó©ÊúüÈááÁî®VÂûãÁº∫Âè£ÁÖßÈó®ÔºåÂêéÊúüÈááÁî®ËßáÂ≠îÂºèÁÖßÈó®„ÄÇ ÂçóÈÉ®ÂæàÂø´Âú∞ÂÆåÊàê‰∏âÂçÅÂºèÊ≠•Êû™ÁöÑÊîπËâØÂêéÔºå‰∫éÊòéÊ≤ªÂõõÂçÅÂπ¥Ôºà1907Âπ¥Ôºâ5ÊúàÂºÄÂßãÂà∂ÂºèÂåñÂú®‰∏ú‰∫¨Â∞èÁü≥Â∑ùÁÇÆÂÖµÂ∑•ÂéÇËøõË°åÁîü‰∫ß„ÄÇËôΩÁÑ∂Ê≠£ÂºèÁöÑÂà∂ÂºèÂåñÈáè‰∫ß‰ªé1907Âπ¥ÂºÄÂßãÔºå‰∏çËøáÂçóÈÉ®È∫íÊ¨°ÈÉéÂ∞ÜÊñ∞ÊîπËâØÂºÄÂèëÁöÑÊ≠•Êû™‰ªçÁÑ∂‰ª•ÊòéÊ≤ªÂ§©ÁöáÂπ¥Âè∑Á¨¨‰∏âÂçÅÂÖ´Âπ¥Ôºà1905Âπ¥ÔºâÂëΩÂêçÔºõÊòéÊ≤ª41Âπ¥3ÊúàÂºÄÂßãÔºåÊñ∞ÂºèÁöÑ‰∏âÂÖ´ÂºèÊ≠©Êû™ÈÄêÊ∏êÊàê‰∏∫ÈÉ®ÈòüÁöÑÊ†áÂáÜÈÖçÂ§áÔºõÂà∞‰∫ÜÊòéÊ≤ª43Âπ¥Ôºà1910Âπ¥ÔºâÔºåÈÉ®Èòü‰∏≠ÁöÑ‰∏âÂçÅÂπ¥ÂºèÊ≠•Êû™Â∞±ÂÖ®Èù¢Ë¢´‰∏âÂÖ´ÂºèÊ≠•Êû™Âèñ‰ª£‰∫Ü„ÄÇ ÁªìÊûÑÁâπÁÇπ‰∏âÂÖ´ÂºèÊ≠•Êû™Èáç3.73ÂçÉÂÖãÔºåÂä†‰∏ä30Âπ¥ÂºèÂà∫ÂàÄ‰∏∫4.1ÂçÉÂÖã„ÄÇÊû™Ë∫´ÂÖ®Èïø127.6ÂéòÁ±≥ÔºåÂÜçÂä†‰∏ä30ÂºèÂçïÂàÉÂà∫ÂàÄÂêéÂ∞±ÂèØËææ166.3ÂéòÁ±≥ÔºåËØ•Êû™‰∏ÄÂ§ßÁâπÂæÅÂ∞±ÊòØÂÆÉÁöÑÈïøÂ∫¶„ÄÇ‰∏âÂÖ´ÂºèÊ≠•Êû™ÁöÑÊú∫Âå£Âà∂‰ΩúÂÖ¨Â∑ÆÂ∞èÔºåË°®Èù¢ÁªèËøáÈò≤ËÖêÂ§ÑÁêÜÔºåÊû™Êú∫Âú®Êú∫Âå£ÂÜÖËøêË°åÈ°∫ÁïÖÔºåÊú∫Âå£‰∏äÈù¢Êúâ‰∏§‰∏™ÊéíÊ∞îÂ∞èÂ≠îÔºå‰øùËØÅÂ∞ÑÂáªÊó∂ÁöÑÂÆâÂÖ®ÔºåÊû™Êú∫‰∏äÊñπÊòØÊà™Èù¢‰∏∫ÈöèÁùÄÊû™Êú∫ÂâçÂêéÊªëÂä®ÁöÑ‚Äún‚ÄùÂûãÁöÑÈò≤Â∞òÁõñÔºåÈò≤Â∞òÁõñ‰∏äÊúâÂºÄÂè£‰æõÁõ¥ÂºèÊãâÊú∫ÊüÑ‰º∏Âá∫ÔºåÊû™Êú∫Â∞æÈÉ®ÊúâÂúÜÂ∏ΩÂûãÁöÑËΩ¨Âä®‰øùÈô©Ë£ÖÁΩÆ„ÄÇÊû™Êú∫ÁªÑ‰ª∂ÁöÑËÆæËÆ°ÂÖ∂ÈÉ®‰ª∂Êï∞ÈáèÊØîÊØõÁëüÊû™ËøòÂ∞ë3‰∏™Èõ∂‰ª∂Ôºå‰ªÖÊúâ5‰∏™Èõ∂‰ª∂ÔºåÊòØÂΩìÂπ¥ÊóãËΩ¨ÂêéÊãâÂºèÊû™Êú∫Ê≠•Êû™‰∏≠ÁªìÊûÑÁÆÄÂçïÁöÑÔºåÊèêÈ´òÂèØÈù†ÊÄßÂíåÂáè‰ΩéÁª¥Êä§‰øùÈöúÈöæÂ∫¶Ôºå‰∏çËøáÈõ∂‰ª∂Â§ñÂΩ¢Â§çÊùÇÂ¢ûÂä†‰∫ÜÂä†Â∑•ÈöæÂ∫¶„ÄÇ‰∏âÂÖ´ÂºèÊ≠•Êû™ÁöÑÂºπ‰ªìÈï∂ÂµåÂú®Êû™Ë∫´ÂÜÖÔºåÂÆπÈáè5ÂèëÂ≠êÂºπÔºå‰∏âÂÖ´ÂºèÊ≠•Êû™ÁöÑÂºπ‰ªìËøòÊúâÁ©∫‰ªìÊèêÁ§∫ÂäüËÉΩÔºåÂΩìÂºπ‰ªìÂÜÖÊúÄÂêé‰∏ÄÂèëÊû™ÂºπÂ∞ÑÂá∫ÂêéÔºåÊû™Êú∫ÂêéÊãâÂà∞‰ΩçÊó∂ÊâòÂºπÊùøÂ∞±‰ºöÈ°∂‰ΩèÊû™Êú∫Â§¥Êó†Ê≥ïÂêëÂâçËøêÂä®ÊèêÈÜíÂ∞ÑÊâãË£ÖÂºπ„ÄÇ‰∏âÂÖ´ÂºèÊ≠•Êû™ÁöÑÊû™ÊâòÂä†Â∑•ÊñπÂºè‰∏éÁöÑ‰∏ÄËà¨ÂºèÊ≠•Êû™Êû™ÊâòÂä†Â∑•ÊñπÂºè‰∏çÂêåÔºå‰∏ÄËà¨ÂºèÊ≠•Êû™ÁöÑÊû™ÊâòÊòØÁî®‰∏ÄÊï¥ÂùóÊú®ÊñôÂàáÂâäËÄåÊàêÔºå‰∏âÂÖ´ÂºèÊ≠•Êû™ÁöÑÊû™ÊâòÊòØÁî®‰∏§ÂùóÊú®ÊñôÊãºÊé•ËÄåÊàêÁöÑÔºåÊ≠§ÁßçÊñπÂºèËôΩÁÑ∂Êó•‰πÖÂÆπÊòìÂºÄË£Ç‰ΩÜÂèØËäÇÁúÅÊú®Êùê„ÄÇ ‰∏âÂÖ´ÂºèÊ≠•Êû™ÂèÇËÄÉÊï∞ÊçÆ Á±ªÂà´ ÊóãËΩ¨ÂêéÊãâÂºèÊû™Êú∫ÔºåÂºπ‰ªì‰æõÂºπ Âè£ÂæÑ 6.5ÊØ´Á±≥ ÂÖ®Êû™Èïø 1275ÊØ´Á±≥ Êû™ÁÆ°ÈïøÂ∫¶ 797ÊØ´Á±≥ Âä†Ë£ÖÂà∫ÂàÄÊÄªÈïø Êé•Ëøë1700ÊØ´Á±≥ ÂÖ®Êû™Èáç 4.1ÂçÉÂÖã ÂºπÂå£ÂÆπÂºπÈáè 5Âèë Â∞ÑÁ®ã 460Á±≥ ÂºπËçØ 6.5√ó50mm Ê≠•Êû™Âºπ ÂàùÈÄü 765Á±≥/Áßí Âç°ÁàæÂç°Ë´æM91/38Âç°Â∞îÂç°ËØ∫ÊòØËøáÂéªÊÑèÂ§ßÂà©Â∏∏Áî®ÁöÑÊâãÂä®Êû™Êú∫Êìç‰ΩúÂºè‰∏ÄÁ≥ªÂàóÂÜõÁî®Ê≠•Êû™ÂíåÂç°ÂÆæÊû™ÔºåÊúÄÂàù‰∫é1891Âπ¥Êé®Âá∫Êó∂ÔºåÂèëÂ∞ÑÁöÑÊòØ6.5√ó52ÊØ´Á±≥ÊõºÂà©ÂΩª-Âç°Â∞îÂç°ËØ∫Âè£ÂæÑÊó†ÁºòÂºèÊ≠•Êû™Â≠êÂºπÔºàCartuccia Modello 1895Ôºâ„ÄÇËøôÊûùÊ≠•Êû™ÊòØÁî±È¶ñÂ∏≠ÊäÄÂ∏àËê®Â∞îÁì¶Â§ö¬∑Âç°Â∞îÂç°ËØ∫Âú®ÈÉΩÁÅµÂÜõÂÖµÂ∑•ÂéÇ‰∫é1890Âπ¥Á†îÂèëÔºåÂπ∂‰∏îÁß∞‰∏∫M91„ÄÇÂÆÉÂÖàÂêéÂèñ‰ª£‰∫Ü‰ª•ÂæÄÁöÑ10.35√ó47ÊØ´Á±≥RVetterli-Áª¥Â°îÂà©Ê≠•Êû™ÂíåÂç°ÂÆæÊû™‰ª•ÔºåÂú®1892Âπ¥Âà∞1945Âπ¥‰πãÈó¥Áîü‰∫ß„ÄÇÂú®Á¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàòÊúüÈó¥ÁöÑÂ§ßÂ§öÊï∞ÊÑèÂ§ßÂà©ÈÉ®ÈòüÂíåÁ¨¨‰∫åÊ¨°‰∏ñÁïåÂ§ßÊàò‰∏≠ÁöÑÊÑèÂ§ßÂà©‰ª•ÂèäÂæ∑ÂõΩÂÜõÈòü‰πã‰∏≠‰∏Ä‰∫õÈÉ®ÈòüÈáåÔºåÈááÁî®‰∫ÜM91ÁöÑÊ≠•Êû™Ôºàfucile, sing.Ôºõfucili, pl.ÔºâÂíåÂç°ÂÆæÊû™Ôºàmoschetto, sing.Ôºõmoschetti, pl.ÔºâÂêÑ‰∏§ÁßçÁöÑÂûãÂè∑„ÄÇÂú®ËøáÁ®ã‰∏≠ÔºåÊ≠•Êû™‰πüË¢´Ëä¨ÂÖ∞‰∫éÂÜ¨Â≠£Êàò‰∫â‰∏≠‰ΩøÁî®Ôºå‰ª•ÂêéÂèàÂú®ÂèôÂà©‰∫ö„ÄÅÂà©ÊØî‰∫ö„ÄÅÁ™ÅÂ∞ºÊñØÂíåÈòøÂ∞îÂèäÂà©‰∫öËøô‰∫õÂõΩÂÆ∂ÊàòÂêéÁöÑÂêÑÁßçÂÜ≤Á™Å‰∏≠Ë¢´Ê≠£ËßÑÂíåÈùûÊ≠£ËßÑÈÉ®Èòü‰ΩøÁî®„ÄÇ ËôΩÁÑ∂ËøôÁßçÊ≠•Êû™ÁªèÂ∏∏Ë¢´Áß∞‰∏∫‚ÄúÊõºÂà©ÂΩª-Âç°Â∞îÂç°ËØ∫‚ÄùÔºàÁâπÂà´ÊòØÂú®ÁæéÂõΩÁöÑËØ¥Ê≥ïÔºâÔºå‰ΩÜ‰∏çËÆ∫ÊòØËØ•ÂëΩÂêçËøòÊòØ‚ÄúÊØõÁëü-Â∏ïÊãâÁª¥Ë•øÂ∞º‚ÄùÔºàMauser-ParravicinoÔºâ‰πü‰∏çÊòØÊ≠£Á°ÆÁöÑ„ÄÇËØ•Êû™Âú®ÊÑèÂ§ßÂà©ÁöÑÊ≠£ÂºèÂêçÁß∞ÊòØModello 1891ÔºåÊàñÊòØM91Ôºà‚Äúil novantuno‚ÄùÔºâ„ÄÇËØ•Êû™ÁöÑÂºπÂå£Á≥ªÁªü‰ΩøÁî®Êï¥‰ΩìÊºèÂ§πÂºèÂºπÂ§πÊù°Êù•Ë£ÖÂ°´ÔºåËôΩÁÑ∂ÊúÄÂàùÊòØÁî±Ë¥πËø™ÂçóÂæ∑¬∑ÊõºÂà©ÂΩªÁ†îÂèëÂπ∂Ëé∑Âæó‰∫Ü‰∏ìÂà©Ôºå‰ΩÜ‰∫ãÂÆû‰∏äÂç°Â∞îÂç°ËØ∫Ê≠•Êû™ÁöÑÂºπÂ§πÊù°ÁöÑÂÆûÈôÖÂΩ¢Áä∂ÂíåËÆæËÆ°ÊòØÁî±Âæ∑ÂõΩ1888ÂºèÂßîÂëò‰ºöÊ≠•Êû™ÊâÄÂæóÂá∫ÁöÑ„ÄÇ Áõ¥Âà∞1938Âπ¥ÔºåÊâÄÊúâÁöÑM91Ê≠•Êû™ÂíåÂç°ÂÆæÊû™ÈÉΩÊîπ‰∏∫ÂèëÂ∞ÑÁöÑÊòØ6.5√ó52ÊØ´Á±≥ÊõºÂà©ÂΩª-Âç°Â∞îÂç°ËØ∫Âè£ÂæÑÊó†ÁºòÂºèModello 1895Ê≠•Êû™Â≠êÂºπÔºåÈááÁî®ÈáçÈáè‰∏∫160Ê†º‰ª§ÁöÑÂúÜÂ§¥ÈáëÂ±ûÂºπÂ£≥Â≠êÂºπÔºåËßÜ‰πéÊû™ÁÆ°ÈïøÂ∫¶ËÄå‰ª§Êû™Âè£ÂàùÈÄüÂú®609.6‚Äî755 Á±≥ÔºèÁßíÔºà2,000‚Äî2,477.03 Ëã±Â∞∫ÔºèÁßíÔºâ‰πãÈó¥„ÄÇÁî±‰∫éÈááÁî®Ê∏êËøõËÜõÁ∫øÔºàËÜõÁ∫øË∂äÊé•ËøëÊû™Âè£Áº†Ë∑ùË∂äÁü≠ÔºåÊïàÊûúÊòØÂºπÂ§¥ËΩ¨ÈÄüË∂äÊù•Ë∂äÂø´ÔºâÔºåËØ•Êû™Á≤æÂ∫¶ËâØÂ•Ω„ÄÇ‰∏çËøáÔºåËá≥Â∞ëÊúâ‰∏Ä‰∏™ËΩªÊ≠¶Âô®ÁöÑÊùÉÂ®ÅÊåáÂá∫Ôºå‰∏Ä‰∫õÊâπÂè∑ÁöÑ6.5√ó52 ÊØ´Á±≥ÂÜõÁî®ÂºπËçØË£ÖËΩΩÁöÑÊòØÂπ∂Èùû‰∏ÄËá¥ÁöÑÁÅ´ËçØÁ±ªÂûãÔºåÁªèÂ∏∏Â∞Ü‰∏çÂêåÁöÑÁÅ´ËçØÁ±ªÂûãÂíåÂºπËçØÊâπÂè∑Ê∑∑ÂêàÂπ∂‰∏îÂà∂‰ΩúÊàê‰∏∫Âçï‰∏ÄÁöÑÂºπËçØÔºàÂèØËÉΩÊòØÂá∫‰∫éÊàòÊó∂ÊàêÊú¨ÊéßÂà∂ÁöÑÂéüÂõ†Ôºå‰∫¶ÂèØËÉΩÊòØÁîü‰∫ßÊ∑∑‰π±ÊâÄÂØºËá¥Ôºâ„ÄÇ[1]Âú®ÁªèËøá‰øÆÊîπÁöÑÊ≠•Êû™ÂºπËçØ‰∏äÊ∑∑Áî®ÁÅ´ËçØÁ±ªÂûãÂíåÂºπËçØÊâπÂè∑ÁöÑÂÅöÊ≥ï‰∏∫ÊôÆÈÅçÂÖ∂‰ªñÂõΩÂÆ∂ÁöÑÂÖµÂ∑•ÂéÇÊâÄÊûÅÂäõÈÅøÂÖçÁöÑ‰∫ãÔºåÂõ†‰∏∫ËøôÁßçÁ≤óÂä£ÊâãÊ≥ïÈÄöÂ∏∏‰ºöÂØºËá¥Â≠êÂºπÂàùÈÄü‰∏çÂêåÂíåÂ≠êÂºπ‰∏éÁõÆÊ†áËøáÂ∫¶ÂàÜÊï£„ÄÇ Êàò‰∫âÊµ∑Êä•‰∏≠ÁöÑÂ¶áÂ•≥Êâã‰∏≠ÁöÑÂ∞±ÊòØ‰∏ÄÊääÂç°Â∞îÂç°ËØ∫m1938ÊäòÂè†Âà∫ÂàÄÂûãÔºö ÁΩóÊñØMk-3ÁΩóÊñØMk-3ÊòØÂä†ÊãøÂ§ßËøúÂæÅÂÜõÁöÑÊ≠¶Âô®ÔºåÁ¨¨‰∏ÄÊîØÁΩóÊñØÊ≠•Êû™Âá∫Áé∞‰∫é1896Âπ¥ÔºåÂÆÉÂú®È£éÂíåÊó•‰∏ΩÁöÑÂä†ÊãøÂ§ßË°®Áé∞ÂæàÂ•ΩÔºå‰ª•Á≤æÂ∫¶ËÄåÈóªÂêçÔºåÂÆÉÁöÑËÆæËÆ°ËÄÖÁΩóÊñØÁàµÂ£´ÊòØ‰∏Ä‰∏™Á•ûÂ∞ÑÊâãÔºåÂÆÉÂØπËá™Â∑±ÁöÑÊû™Ë¶ÅÊ±ÇÂæàÈ´òÔºåË¶ÅÊúâ‰ºòÁßÄÁöÑÁ≤æÂ∫¶ÂíåÂø´ÈÄüÁöÑÂ∞ÑÈÄüÔºåËÄå‰∏î‰∏•Ê†ºÊéßÂà∂ÂÖ¨Â∑ÆÔºå‰∫éÊòØËøôÊääÊû™ÈááÁî®‰∫ÜÁõ¥ÊãâÊüÑËÆæËÆ°Ôºå‰∏é‰º†ÁªüÁöÑÊâãÊãâÊóãËΩ¨ÂºèÊ≠•Êû™Ê≠•Êû™ÔºåËøôÊääÊû™‰ªÖ‰ªÖÈúÄË¶Å‰∏ÄÂâç‰∏ÄÂêéÂ∞±ÂèØ‰ª•ÂÆåÊàêÊäõÂ£≥ÔºåÈÄÄÂºπÔºåÈó≠ÈîÅÁöÑÊ≠•È™§ÔºåÂ∞ÑÈÄüËæÉÂΩìÊó∂ÁöÑÊ≠•Êû™Êõ¥Âø´ M1917 EnfieldÊÅ©Ëè≤Â∞îÂæ∑M1917ÔºàM1917 EnfieldÔºåÂèàÂêçP17„ÄÅP1917ÊàñPattern 1917ÔºâÊòØ‚ÄúÁæéÂõΩÊÅ©Ëè≤Â∞îÂæ∑‚ÄùÔºàAmerican EnfieldÔºâ‰∫é1917Ëá≥1918Âπ¥Èó¥Áîü‰∫ßÁöÑ.30-06Âè£ÂæÑÊâãÂä®Ê≠•Êû™ÔºåË£ÖÂ§á‰∏ÄÊàòÊó∂ÊúüÁöÑÁæéÂõΩÂÜõÈòüÔºåÁæéÂõΩÂΩìÊó∂ÂëΩÂêç‰∏∫United States Rifle, cal .30, Model of 1917„ÄÇ ÂéÜÂè≤ÂΩìËã±ÂõΩÂä†ÂÖ•‰∏ÄÊàòÊó∂ÔºåÂÖ∂ÁõüÂèãÁæéÂõΩÊÄ•ÈúÄÊú¨ÂúüÁîü‰∫ßÁöÑÊ≠•Êû™‰ΩúÂÜõÂ§áÔºåÂΩìÊó∂ÁöÑÊ∏©ÂΩªÊñØÁâπÂèäÈõ∑ÊòéÁôªËé∑ÈÄâÂπ∂Áîü‰∫ßM1914Ê≠•Êû™ÔºàP14Ôºâ„ÄÇÂÖ∂ÂêéÔºåÁæéÂõΩÂèÇÊàòÂêéÈúÄË¶ÅÊõ¥Â§öÊ≠•Êû™ÔºåÁæéÂõΩÂÜõÊ¢∞ÁΩ≤ÊèêÂá∫ÈááÁî®.30-06Âè£‰øìÂºπËçØÁöÑÊñ∞ÂûãÊ≠•Êû™M1917ÔºàP17ÔºâÔºåÂπ∂Áî±‰Ωç‰∫éÂ∫∑‰πÉÁãÑÂÖãÂ∑ûÁ∫ΩÈªëÊñáÁöÑÊ∏©ÂΩªÊñØÁâπÂ∑•ÂéÇÂèä‰Ωç‰∫éÂ∫∑‰πÉËø™ÂÖãÂ∑ûEddystoneÂíåÁ∫ΩÁ∫¶IlionÁöÑÈõ∑ÊòéÁôªÂ∑•ÂéÇÁîü‰∫ßÔºåËÄå‰∏ìÁî®ÁöÑM1917Âà∫ÂàÄÁî±ÂÖ∂‰ªñÂ§öÈó¥Â∞èÂéÇÁîü‰∫ß„ÄÇ M1917ÂèäM1903Êò•Áî∞Ê≠•Êû™‰Ωú‰∏∫‰∏ÄÊàòÊó∂ÁæéÂÜõÁöÑ‰∏ªË¶ÅÂà∂ÂºèÊ≠•Êû™ÊúçÂΩπ„ÄÇÂú®1918Âπ¥11Êúà11Êó•ÔºåÁ∫¶75%ÁöÑÁæéÂõΩËøúÂæÅÂÜõÔºàAmerican Expeditionary ForceÔºâÈÉΩË£ÖÂ§á‰∫ÜM1917„ÄÇÂÅúÊàòÂêéÔºåÁæéÂÜõÊääM1917‰ΩúÂÇ®Â§áÂÇ®Ëµ∑„ÄÇÂú®‰∫åÊàòÂºÄÂßãÂàùÊúüÔºåÁæéÂõΩÊääÂÇ®Â§áËµ∑Êù•ÁöÑM1917ÈáçÊñ∞ÊîπÈÄ†ÔºåÂπ∂‰ΩúËÆ≠ÁªÉÁî®ÈÄîÂèäÈÄöËøáÁßüÂÄüÊ≥ïÊ°àÂêëÂ§ö‰∏™ÂõΩÂÆ∂‰ΩúÂá∫Êè¥Âä©ÔºàÂåÖÊã¨Ëã±ÂõΩ„ÄÅËè≤ÂæãÂÆæ„ÄÅÊ≥ïÂõΩÂèä‰∏≠ÂõΩÔºâÔºåËøôÊâπM1917Ê≠•Êû™‰ΩúÂñ∑Ê≤ôÂèäÁÉòÁ£∑ÈÖ∏ÁõêÂ§ÑÁêÜÔºåÈÉ®‰ªΩÊõ¥ÊîπÁî®Ê°¶Êú®Âà∂ÁöÑÊä§Êú®ÔºåÂÖ∂‰∏≠ÈÄÅ‰∫§Ëã±ÂõΩÁöÑÂõΩÂúüÈò≤Âç´ÂÜõÔºàBritish Home GuardÔºâÁöÑM1917Âç∞ÊúâÁ∫¢Ëâ≤ËÆ∞Âè∑‰ª•ÈÅøÂÖçÂ£´ÂÖµË£Ö‰∏äP14ÁöÑÂºπËçØ„ÄÇ ÁªìÊûÑËÆæËÆ°M1917‰∏éÊùé-ÊÅ©Ëè≤Â∞îÂæ∑ÂêåÁî±‰Ωç‰∫éËã±ÂõΩÊÅ©Ëè≤Â∞îÂæ∑ÁöÑËã±ÂõΩÁöáÂÆ∂ËΩªÂÖµÂô®Â∑•ÂéÇÁîü‰∫ßÔºå‰ΩÜÊùé-ÊÅ©Ëè≤Â∞îÂæ∑ÔºàÂ¶ÇSMLEÔºâÈááÁî®.303 BritishÂè£‰øìÂºπËçØÔºåËÄåM1917ÈááÁî®ÊØõÁëü98Êû™Êú∫ÂèäÁæéÂõΩÁöÑ.30-06ÂºπËçØÔºåÁî±‰∫é.30-06ÂºπËçØÁöÑÁõ¥ÂæÑËæÉÁªÜÔºåÂõ†Ê≠§ÂÜÖÁΩÆÂºπ‰ªìÂèØÊîæ6ÂèëÂ≠êÂºπÔºå‰ΩÜÂºπÂ§π‰ªçÁÑ∂Âè™Êúâ5Âèë„ÄÇÁî±‰∫é‰∏§Êàò‰πãÈó¥ÂÇ®Â§áËøáÂâ©ÔºåÊúâ‰∫õÊû™Âå†‰ª•M1917ÁöÑÊû™Êú∫Ë£Ö‰∏äÈõ∑ÊòéÁôªM30Á≥ªÂàó‰∏ä‰ΩúËøêÂä®Ê≠•Êû™ÂèëÂîÆÔºåÁ∫¶3000Êää7ÊØ´Á±≥Âè£ÂæÑÁöÑM1917Âú®1930Âπ¥ÂçñÁªôÊ¥™ÈÉΩÊãâÊñØ„ÄÇ 1.59-inch Breech-Loading Vickers Q.F. Gun, Mk II1.59-inch Breech-Loading Vickers Q.F. Gun, Mk IIÊòØËã±ÂõΩËÆæËÆ°Âú®Á¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàòÁöÑËΩªÁÅ´ÁÇÆÔºàË∂ÖÈáçÂûãÁãôÂáªÊû™Ôºâ„ÄÇÊúÄÂàùÁöÑÁõÆÁöÑÊòØÁî®‰∫éÂ†ëÂ£ïÊàòÔºåËÄåÊòØÂØπÈ£ûÊú∫ÁöÑÁ©∫ÂØπÁ©∫ÂíåÁ©∫ÂØπÂú∞‰ΩøÁî®ËøõË°å‰∫ÜÊµãËØï„ÄÇËôΩÁÑ∂ÂÆÉÂèëÂ∞ÑÁÇÆÂºπÂπ∂‰∏îÊó†Ê≥ïÂèëÂ∞ÑÁÅ´ÁÆ≠ÂºπÔºå‰ΩÜÂÆÉË¢´ÂπøÊ≥õ‰ΩÜËØØÂØºÂú∞Áß∞‰∏∫‚Äú Áª¥ÂÖãÊñØ - ÂÖãÈõ∑Á¶èÂæ∑ÁÅ´ÁÆ≠ÁÇÆ ‚Äù„ÄÇ ÔºàÊ∏∏Êàè‰∏≠Êú™Âá∫Áé∞ÔºåÊó†ÂõæÔºâ Mauser 1918 T-GewehrÊØõÁëü13ÊØ´Á±≥ÂèçÂù¶ÂÖãÊ≠•Êû™ÔºàÂæ∑ËØ≠ÔºöTankgewehr M1918ÔºåÈÄöÂ∏∏ÁÆÄÂÜôT-Gewehr M1918ÔºâÊòØ‰∏ñÁïå‰∏äÁ¨¨‰∏Ä‰∏™ÂèçÂù¶ÂÖãÊ≠•Êû™ÔºåÂÆÉËÆæËÆ°Áî®‰∫éÁ†¥ÂùèË£ÖÁî≤ÁõÆÊ†á„ÄÇÁîü‰∫ß‰∫ÜÂ§ßÁ∫¶15,800‰∏™„ÄÇ M1918ÂíåÁúü‰∫∫ÊØî‰Ω†Â∞±‰ºöÂèëÁé∞ÂÆÉÈùûÂ∏∏ÈùûÂ∏∏Â§ßÔºÅ ËøôÊääÊù•Ëá™ÈªëÁßëÊäÄÂêàÈõÜ‰ΩìÁ¨¨‰∫åÂ∏ùÂõΩÁöÑT-Gewehr M1918 ÂèçÂù¶ÂÖãÊ≠•Êû™ÂΩìÊó∂ËÆ©Ëã±ÂÜõÂù¶ÂÖãÈÉ®ÈòüË∫≤Âú®ËßíËêΩÁëüÁëüÂèëÊäñÔºåÂú®Êù°‰ª∂ÂÖÅËÆ∏ÁöÑÊÉÖÂÜµ‰∏ãÁîöËá≥ÂèØ‰ª•ËΩªÊùæÁ©øÈÄè100mÂ§ñÁöÑMK-IVÂù¶ÂÖãÁöÑÈò≤Êä§Ë£ÖÁî≤ÔºåÂêåÊó∂ËøôÊääÊ≠¶Âô®Âè™ÊòØÊØîÊôÆÈÄöÁöÑÊØõÁëüÊ≠•Êû™Á®çÂæÆÂ§ß‰∏ÄÁÇπÔºåÊâÄ‰ª•‰∏Ä‰∏™‰∫∫‰πüÂèØ‰ª•ÊãøÁùÄÂà∞Â§ÑËµ∞ÔºåÂè™ÊòØÊØîÂÖ∂‰ªñ‰∫∫‰ºöÁºìÊÖ¢‰∏Ä‰∫õ„ÄÇ ÂéÜÂè≤Âú®Á¨¨‰∏ÄÊ¨°‰∏ñÁïåÂ§ßÊàòÊúüÈó¥ÔºåÈùôÊÄÅÂ†ëÂ£ïÊàòÁöÑÂºÄÂßãÂá∫Áé∞‰∫Ü‰ΩøÁî®Ë£ÖÁî≤ÊùøËøõË°å‰∫∫Ë∫´Èò≤Âæ°ÁöÑÂÖ¥Ëµ∑Ôºå‰ª•ÂèäÂºÄÂèëÂíå‰ΩøÁî®Á©øÁî≤ÂºπËçØÊù•ÂØπÊäóËøôÁßçÊÉÖÂÜµ„ÄÇ‰∏∫Ê≠§ÔºåËã±ÂõΩÂíåÂæ∑ÂõΩÈÉΩ‰ΩøÁî®È´òËÉΩÊ≠•Êû™Ôºå‰æãÂ¶ÇÊù•Ëá™ÈùûÊ¥≤ÊÆñÊ∞ëÂú∞ÁöÑÂ§ßË±°Êû™„ÄÇËã±ÂõΩ‰∫∫Âú®1916Âπ¥9ÊúàÁöÑFlers-CourceletteÊàòÂΩπ‰∏≠È¶ñÊ¨°‰ΩøÁî®Ë£ÖÁî≤ÊàòËΩ¶ÔºàÂù¶ÂÖãÔºâÔºåÈöèÂêéÊòØÊ≥ïÂõΩ‰∫∫„ÄÇÂà∞1917Âπ¥6ÊúàÔºåÂæ∑ÂõΩÈôÜÂÜõÈù¢ÂØπÈ©¨ÂÖãÂõõ‰∏ñÂù¶ÂÖãÔºåÂèëÁé∞Ê†áÂáÜÁ©øÁî≤7.92ÊØ´Á±≥KÂ≠êÂºπ‰∏çÂÜçÊúâÊïà„ÄÇËøô‰øÉ‰ΩøÂæ∑ÂõΩ‰∫∫ÂºÄÂèëÂá∫‰∏ÄÁßçÂ§ßÂè£ÂæÑÂíåÈ´òÈÄüÊ≠•Êû™‰Ωú‰∏∫ÂèçÂù¶ÂÖãÊ≠¶Âô®„ÄÇËØ•ÊØõÁëüÂÖ¨Âè∏ÂõûÂ∫î‰∏é13ÊØ´Á±≥T-Ê†ºÈü¶Â∞îÂπ∂ÂºÄÂßãÊâπÈáèÁîü‰∫ßÁöÑÂÜÖÂç°Ê≤≥ÁïîÂ••‰ºØÊÅ©Â§öÂ§´‰∫é1918Âπ¥‰∫îÊúàÂÖ≥Èó≠ËøõË°åÈ¢ÅÂèëÁöÑÁîü‰∫ßÁ∫ø‰∏ìÈó®ÊèêÂá∫ÂèçÂù¶ÂÖãÂàÜÈòüÁöÑÁ¨¨‰∏ÄÈ°π„ÄÇ Êìç‰ΩúËØ•Ê≠•Êû™ÊòØ‰∏ÄÁßçÂçïÂèëËû∫Ê†ìÂä®‰ΩúÊ≠•Êû™Ôºå‰ΩøÁî®ÊîπËøõÁöÑÊØõÁëüÂä®‰ΩúÔºåÊâãÂä®Â∞ÜÂúÜÂΩ¢Áâ©Ë£ÖÂÖ•ËÖîÂÆ§„ÄÇÊ≠¶Âô®Êúâ‰∏Ä‰∏™ÊâãÊû™ÂºèÊè°ÊääÂíå‰∏§ËÑöÊû∂Ôºå‰ΩÜÊ≤°ÊúâÂáèÂ∞ëÂêéÂùêÂäõÁöÑÊñπÊ≥ïÔºå‰æãÂ¶ÇÊüîËΩØÁöÑËáÄÈÉ®ÊàñÊû™Âè£Âà∂Âä®Âô®„ÄÇËøôÂèØËÉΩ‰ºöÂØºËá¥ÈáçÂ§çÂ∞ÑÂáªÂ∞ÑÊâãÁöÑÈóÆÈ¢ò„ÄÇÂú®ÈìÅÁöÑÊôØÁÇπÊòØÁî±ÂâçÁâáÂíåÂêéÂàáÁ∫øÁöÑÔºåÂú®100Á±≥ÁöÑÂ¢ûÈáè‰ªé100Á±≥Âà∞500Á±≥ÊØï‰∏ö„ÄÇËøôÊîØÊ≠•Êû™Áî±‰∏§ÂêçÊåÅÊû™ÊâãÂíåÂºπËçØÁöÑÊú∫ÁªÑ‰∫∫ÂëòÊìç‰ΩúÊåÅÁ•®‰∫∫Ôºå‰ªñ‰ª¨ÈÉΩÂèóËøáËÆ≠ÁªÉÔºåÂèØ‰ª•ÂºÄÁÅ´„ÄÇÁî±‰∫éÂèçÂÜ≤ÁöÑÂ∑®Â§ßÈíùÂäõÔºåÂÆÉË¢´ËÆæËÆ°ÊàêÂú®ÈùôÊ≠¢‰ΩçÁΩÆÊãçÊëÑÔºåÊó†ËÆ∫ÊòØ‰øØÂçßËøòÊòØ‰ªéÊ≤üÂÜÖ„ÄÇ ÂèÇËÄÉËµÑÊñôWinchester 1895 (Russian) Gewehr M.95 Âç°Â∞îÂç°ËØ∫ 1.59-inch Breech-Loading Vickers Q.F. Gun, Mk II Mauser 1918 T-Gewehr ÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢]]></content>
      <tags>
        <tag>ÂÜõ‰∫ã</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python-Â∏∏Áî®Ê®°Âùó]]></title>
    <url>%2F2018%2F08%2F19%2Fpython-%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97%2F</url>
    <content type="text"><![CDATA[ÊúÄËøëÂú®Â≠¶‰π†pythonÂÖ®Ê†àÁõ∏ÂÖ≥ÁöÑÂÜÖÂÆπÔºåÈÉ®ÂàÜÁü•ËØÜÁÇπÁùÄÂÆûÈúÄË¶ÅËÆ∞ÂøÜÔºåÁ¥¢ÊÄßÂÜô‰∏™blogËÆ∞ÂΩï‰∏Ä‰∏ã„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ ‰ªÄ‰πàÊòØÊ®°Âùó‰∏Ä‰∏™Ê®°ÂùóÂ∞±ÊòØ‰∏Ä‰∏™ÂåÖÂê´‰∫ÜpythonÂÆö‰πâÂíåÂ£∞ÊòéÁöÑÊñá‰ª∂ÔºåÊñá‰ª∂ÂêçÂ∞±ÊòØÊ®°ÂùóÂêçÂ≠óÂä†‰∏ä.pyÁöÑÂêéÁºÄ„ÄÇ Â∏∏Áî®Ê®°ÂùócollectionsÊ®°ÂùóÂú®ÂÜÖÁΩÆÊï∞ÊçÆÁ±ªÂûãÔºàdict„ÄÅlist„ÄÅset„ÄÅtupleÔºâÁöÑÂü∫Á°Ä‰∏äÔºåcollectionsÊ®°ÂùóËøòÊèê‰æõ‰∫ÜÂá†‰∏™È¢ùÂ§ñÁöÑÊï∞ÊçÆÁ±ªÂûãÔºöCounter„ÄÅdeque„ÄÅdefaultdict„ÄÅnamedtupleÂíåOrderedDictÁ≠â„ÄÇ namedtupleÁîüÊàêÂèØ‰ª•‰ΩøÁî®ÂêçÂ≠óÊù•ËÆøÈóÆÂÖÉÁ¥†ÂÜÖÂÆπÁöÑtuple ‰ΩøÁî®Ëøô‰∏™ÂèØ‰ª•ÂæàÊñπ‰æøÁöÑË°®Á§∫‰∏Ä‰∏™ÁÇπÁöÑ‰∫åÁª¥ÂùêÊ†á 12345from collections import namedtuplePoint = namedtuple('Point',['x','y']) #namedtuple('ÂêçÁß∞', [Â±ûÊÄßlist])p = Point(1,2)print(p.x)print(p.y) deque:dequeÊòØ‰∏∫‰∫ÜÈ´òÊïàÂÆûÁé∞ÊèíÂÖ•ÂíåÂà†Èô§Êìç‰ΩúÁöÑÂèåÂêëÂàóË°®ÔºåÈÄÇÂêàÁî®‰∫éÈòüÂàóÂíåÊ†à ÂÆÉÂèØ‰ª•ÂÆûÁé∞Ê∑ªÂä†Êìç‰Ωúappend() ÂíåÂà†Èô§Êìç‰Ωúpop()ÔºåÂæÄÂ§¥ÈÉ®Ê∑ªÂä†Êìç‰Ωúappendleft()ÂæÄÂ§¥ÈÉ®Âà†Èô§popleft() CounterCounterÁ±ªÁöÑÁõÆÁöÑÊòØÁî®Êù•Ë∑üË∏™ÂÄºÂá∫Áé∞ÁöÑÊ¨°Êï∞„ÄÇ ÂÆÉÊòØ‰∏Ä‰∏™Êó†Â∫èÁöÑÂÆπÂô®Á±ªÂûãÔºå‰ª•Â≠óÂÖ∏ÁöÑÈîÆÂÄºÂØπÂΩ¢ÂºèÂ≠òÂÇ®ÔºåÂÖ∂‰∏≠ÂÖÉÁ¥†‰Ωú‰∏∫keyÔºåÂÖ∂ËÆ°Êï∞‰Ωú‰∏∫value„ÄÇËÆ°Êï∞ÂÄºÂèØ‰ª•ÊòØ‰ªªÊÑèÁöÑIntergerÔºàÂåÖÊã¨0ÂíåË¥üÊï∞Ôºâ„ÄÇ 12345from collections import Counter# ÂàõÂª∫c = Counter(&#123;1:'p',2:'y'&#125;)# ËÆøÈóÆ ÂΩìÊâÄËÆøÈóÆÁöÑÈîÆ‰∏çÂ≠òÂú®Êó∂ÔºåËøîÂõû0ÔºåËÄå‰∏çÊòØKeyErrorÔºõÂê¶ÂàôËøîÂõûÂÆÉÁöÑËÆ°Êï∞„ÄÇc[1] # p OrderedDictÊúâÂ∫èÂ≠óÂÖ∏ defaultdictÂ∏¶ÊúâÈªòËÆ§ÂÄºÁöÑÂ≠óÂÖ∏ ÊúâÂ¶Ç‰∏ãÂÄºÈõÜÂêà [11,22,33,44,55,66,77,88,99,90‚Ä¶]ÔºåÂ∞ÜÊâÄÊúâÂ§ß‰∫é 66 ÁöÑÂÄº‰øùÂ≠òËá≥Â≠óÂÖ∏ÁöÑÁ¨¨‰∏Ä‰∏™key‰∏≠ÔºåÂ∞ÜÂ∞è‰∫é 66 ÁöÑÂÄº‰øùÂ≠òËá≥Á¨¨‰∫å‰∏™keyÁöÑÂÄº‰∏≠„ÄÇ 12345678from collections import defaultdictvalues = [11, 22, 33,44,55,66,77,88,99,90]defaultdict = defaultdict(list)for value in values: if value &gt; 66: defaultdict['k1'].append(value) else: defaultdict['k2'].append(value) timeÊ®°ÂùóÂú®Python‰∏≠ÔºåÈÄöÂ∏∏ÊúâËøô‰∏âÁßçÊñπÂºèÊù•Ë°®Á§∫Êó∂Èó¥ÔºöÊó∂Èó¥Êà≥„ÄÅÂÖÉÁªÑ(struct_time)„ÄÅÊ†ºÂºèÂåñÁöÑÊó∂Èó¥Â≠óÁ¨¶‰∏≤Ôºö (1)Êó∂Èó¥Êà≥(timestamp) ÔºöÈÄöÂ∏∏Êù•ËØ¥ÔºåÊó∂Èó¥Êà≥Ë°®Á§∫ÁöÑÊòØ‰ªé1970Âπ¥1Êúà1Êó•00:00:00ÂºÄÂßãÊåâÁßíËÆ°ÁÆóÁöÑÂÅèÁßªÈáè„ÄÇÊàë‰ª¨ËøêË°å‚Äútype(time.time())‚ÄùÔºåËøîÂõûÁöÑÊòØfloatÁ±ªÂûã„ÄÇ (2)Ê†ºÂºèÂåñÁöÑÊó∂Èó¥Â≠óÁ¨¶‰∏≤(Format String)Ôºö ‚Äò1999-12-06‚Äô python‰∏≠Êó∂Èó¥Êó•ÊúüÊ†ºÂºèÂåñÁ¨¶Âè∑Ôºö %y ‰∏§‰ΩçÊï∞ÁöÑÂπ¥‰ªΩË°®Á§∫Ôºà00-99Ôºâ%Y Âõõ‰ΩçÊï∞ÁöÑÂπ¥‰ªΩË°®Á§∫Ôºà000-9999Ôºâ%m Êúà‰ªΩÔºà01-12Ôºâ%d ÊúàÂÜÖ‰∏≠ÁöÑ‰∏ÄÂ§©Ôºà0-31Ôºâ%H 24Â∞èÊó∂Âà∂Â∞èÊó∂Êï∞Ôºà0-23Ôºâ%I 12Â∞èÊó∂Âà∂Â∞èÊó∂Êï∞Ôºà01-12Ôºâ%M ÂàÜÈíüÊï∞Ôºà00=59Ôºâ%S ÁßíÔºà00-59Ôºâ%a Êú¨Âú∞ÁÆÄÂåñÊòüÊúüÂêçÁß∞%A Êú¨Âú∞ÂÆåÊï¥ÊòüÊúüÂêçÁß∞%b Êú¨Âú∞ÁÆÄÂåñÁöÑÊúà‰ªΩÂêçÁß∞%B Êú¨Âú∞ÂÆåÊï¥ÁöÑÊúà‰ªΩÂêçÁß∞%c Êú¨Âú∞Áõ∏Â∫îÁöÑÊó•ÊúüË°®Á§∫ÂíåÊó∂Èó¥Ë°®Á§∫%j Âπ¥ÂÜÖÁöÑ‰∏ÄÂ§©Ôºà001-366Ôºâ%p Êú¨Âú∞A.M.ÊàñP.M.ÁöÑÁ≠â‰ª∑Á¨¶%U ‰∏ÄÂπ¥‰∏≠ÁöÑÊòüÊúüÊï∞Ôºà00-53ÔºâÊòüÊúüÂ§©‰∏∫ÊòüÊúüÁöÑÂºÄÂßã%w ÊòüÊúüÔºà0-6ÔºâÔºåÊòüÊúüÂ§©‰∏∫ÊòüÊúüÁöÑÂºÄÂßã%W ‰∏ÄÂπ¥‰∏≠ÁöÑÊòüÊúüÊï∞Ôºà00-53ÔºâÊòüÊúü‰∏Ä‰∏∫ÊòüÊúüÁöÑÂºÄÂßã%x Êú¨Âú∞Áõ∏Â∫îÁöÑÊó•ÊúüË°®Á§∫%X Êú¨Âú∞Áõ∏Â∫îÁöÑÊó∂Èó¥Ë°®Á§∫%Z ÂΩìÂâçÊó∂Âå∫ÁöÑÂêçÁß∞%% %Âè∑Êú¨Ë∫´ (3)ÂÖÉÁªÑ(struct_time) Ôºöstruct_timeÂÖÉÁªÑÂÖ±Êúâ9‰∏™ÂÖÉÁ¥†ÂÖ±‰πù‰∏™ÂÖÉÁ¥†:(Âπ¥ÔºåÊúàÔºåÊó•ÔºåÊó∂ÔºåÂàÜÔºåÁßíÔºå‰∏ÄÂπ¥‰∏≠Á¨¨Âá†Âë®Ôºå‰∏ÄÂπ¥‰∏≠Á¨¨Âá†Â§©Á≠âÔºâ Á¥¢ÂºïÔºàIndexÔºâ Â±ûÊÄßÔºàAttributeÔºâ ÂÄºÔºàValuesÔºâ 0 tm_yearÔºàÂπ¥Ôºâ ÊØîÂ¶Ç2011 1 tm_monÔºàÊúàÔºâ 1 - 12 2 tm_mdayÔºàÊó•Ôºâ 1 - 31 3 tm_hourÔºàÊó∂Ôºâ 0 - 23 4 tm_minÔºàÂàÜÔºâ 0 - 59 5 tm_secÔºàÁßíÔºâ 0 - 60 6 tm_wdayÔºàweekdayÔºâ 0 - 6Ôºà0Ë°®Á§∫Âë®‰∏ÄÔºâ 7 tm_ydayÔºà‰∏ÄÂπ¥‰∏≠ÁöÑÁ¨¨Âá†Â§©Ôºâ 1 - 366 8 tm_isdstÔºàÊòØÂê¶ÊòØÂ§è‰ª§Êó∂Ôºâ ÈªòËÆ§‰∏∫0 12345678910111213#ÂØºÂÖ•Êó∂Èó¥Ê®°Âùóimport time# (Á∫øÁ®ã)Êé®ËøüÊåáÂÆöÁöÑÊó∂Èó¥ËøêË°å„ÄÇÂçï‰Ωç‰∏∫Áßí„ÄÇsecs = 0.1time.sleep(secs)# Êó∂Èó¥Êà≥time.time()# Êó∂Èó¥Â≠óÁ¨¶‰∏≤time.strftime("%Y-%m-%d %X")&gt;&gt;&gt;time.strftime("%Y-%m-%d %H-%M-%S")# Êó∂Èó¥ÂÖÉÁªÑ:localtimeÂ∞Ü‰∏Ä‰∏™Êó∂Èó¥Êà≥ËΩ¨Êç¢‰∏∫ÂΩìÂâçÊó∂Âå∫ÁöÑstruct_timetime.localtime()time.struct_time(tm_year=2018, tm_mon=8, tm_mday=19,tm_hour=13, tm_min=59, tm_sec=37,tm_wday=0, tm_yday=205, tm_isdst=0) randomÊ®°ÂùóÂ∏∏Áî®ÊñπÊ≥ï 12345678910111213141516171819202122232425262728&gt;&gt;&gt; import random#ÈöèÊú∫Â∞èÊï∞&gt;&gt;&gt; random.random() # Â§ß‰∫é0‰∏îÂ∞è‰∫é1‰πãÈó¥ÁöÑÂ∞èÊï∞0.7664338663654585&gt;&gt;&gt; random.uniform(1,3) #Â§ß‰∫é1Â∞è‰∫é3ÁöÑÂ∞èÊï∞1.6270147180533838#ÈöèÊú∫Êï¥Êï∞&gt;&gt;&gt; random.randint(1,5) # Â§ß‰∫éÁ≠â‰∫é1‰∏îÂ∞è‰∫éÁ≠â‰∫é5‰πãÈó¥ÁöÑÊï¥Êï∞&gt;&gt;&gt; random.randrange(1,10,2) # Â§ß‰∫éÁ≠â‰∫é1‰∏îÂ∞è‰∫é10‰πãÈó¥ÁöÑÂ•áÊï∞#ÈöèÊú∫ÈÄâÊã©‰∏Ä‰∏™ËøîÂõû&gt;&gt;&gt; random.choice([1,'23',[4,5]]) # #1ÊàñËÄÖ23ÊàñËÄÖ[4,5]#ÈöèÊú∫ÈÄâÊã©Â§ö‰∏™ËøîÂõûÔºåËøîÂõûÁöÑ‰∏™Êï∞‰∏∫ÂáΩÊï∞ÁöÑÁ¨¨‰∫å‰∏™ÂèÇÊï∞&gt;&gt;&gt; random.sample([1,'23',[4,5]],2) # #ÂàóË°®ÂÖÉÁ¥†‰ªªÊÑè2‰∏™ÁªÑÂêà[[4, 5], '23']#Êâì‰π±ÂàóË°®È°∫Â∫è&gt;&gt;&gt; item=[1,3,5,7,9]&gt;&gt;&gt; random.shuffle(item) # Êâì‰π±Ê¨°Â∫è&gt;&gt;&gt; item[5, 1, 3, 7, 9]&gt;&gt;&gt; random.shuffle(item)&gt;&gt;&gt; item[5, 9, 7, 1, 3] ‰∏Ä‰∏™ÁÆÄÂçïÁöÑÁîüÊàêÈ™åËØÅÁ†ÅÂäüËÉΩ 12345678910import random# ÈöèÊú∫ÁîüÊàê6‰ΩçÈ™åËØÅÁ†Ådef Identifying_code(): code = '' for i in range(6): num=random.randint(0,9) # Â§ß‰∫éÁ≠â‰∫é0‰∏îÂ∞è‰∫éÁ≠â‰∫é9‰πãÈó¥ÁöÑÊï¥Êï∞ alf=chr(random.randint(65,90)) # ÈöèÊú∫Â§ßÂÜôÂ≠óÊØçÔºåÊï∞Â≠óÂØπÂ∫îÈòøÊñØÂÖãÁ†Å add=random.choice([num,alf]) #ÈöèÊú∫ÈÄâÊã©‰∏Ä‰∏™ËøîÂõû code="".join([code,str(add)]) return code osÊ®°ÂùóÂ∏∏Áî®Âíå‰∏çÂ∏∏Áî®ÁöÑÊñπÊ≥ïos.getcwd()Ëé∑ÂèñÂΩìÂâçÂ∑•‰ΩúÁõÆÂΩïÔºåÂç≥ÂΩìÂâçpythonËÑöÊú¨Â∑•‰ΩúÁöÑÁõÆÂΩïË∑ØÂæÑos.chdir(&quot;dirname&quot;) ÊîπÂèòÂΩìÂâçËÑöÊú¨Â∑•‰ΩúÁõÆÂΩïÔºõÁõ∏ÂΩì‰∫éshell‰∏ãcdos.curdirËøîÂõûÂΩìÂâçÁõÆÂΩï: (‚Äò.‚Äô)os.pardir Ëé∑ÂèñÂΩìÂâçÁõÆÂΩïÁöÑÁà∂ÁõÆÂΩïÂ≠óÁ¨¶‰∏≤ÂêçÔºö(‚Äò..‚Äô)os.makedirs(&#39;dirname1/dirname2&#39;)ÂèØÁîüÊàêÂ§öÂ±ÇÈÄíÂΩíÁõÆÂΩïos.removedirs(&#39;dirname1&#39;) Ëã•ÁõÆÂΩï‰∏∫Á©∫ÔºåÂàôÂà†Èô§ÔºåÂπ∂ÈÄíÂΩíÂà∞‰∏ä‰∏ÄÁ∫ßÁõÆÂΩïÔºåÂ¶ÇËã•‰πü‰∏∫Á©∫ÔºåÂàôÂà†Èô§Ôºå‰æùÊ≠§Á±ªÊé®os.mkdir(&#39;dirname&#39;) ÁîüÊàêÂçïÁ∫ßÁõÆÂΩïÔºõÁõ∏ÂΩì‰∫éshell‰∏≠mkdir dirnameos.rmdir(&#39;dirname&#39;) Âà†Èô§ÂçïÁ∫ßÁ©∫ÁõÆÂΩïÔºåËã•ÁõÆÂΩï‰∏ç‰∏∫Á©∫ÂàôÊó†Ê≥ïÂà†Èô§ÔºåÊä•ÈîôÔºõÁõ∏ÂΩì‰∫éshell‰∏≠rmdir dirnameos.listdir(&#39;dirname&#39;) ÂàóÂá∫ÊåáÂÆöÁõÆÂΩï‰∏ãÁöÑÊâÄÊúâÊñá‰ª∂ÂíåÂ≠êÁõÆÂΩïÔºåÂåÖÊã¨ÈöêËóèÊñá‰ª∂ÔºåÂπ∂‰ª•ÂàóË°®ÊñπÂºèÊâìÂç∞os.remove() Âà†Èô§‰∏Ä‰∏™Êñá‰ª∂os.rename(&quot;oldname&quot;,&quot;newname&quot;)ÈáçÂëΩÂêçÊñá‰ª∂/ÁõÆÂΩïos.stat(&#39;path/filename&#39;) Ëé∑ÂèñÊñá‰ª∂/ÁõÆÂΩï‰ø°ÊÅØos.sep ËæìÂá∫Êìç‰ΩúÁ≥ªÁªüÁâπÂÆöÁöÑË∑ØÂæÑÂàÜÈöîÁ¨¶Ôºåwin‰∏ã‰∏∫‚Äù\‚Äú,Linux‰∏ã‰∏∫‚Äù/‚Äúos.linesep ËæìÂá∫ÂΩìÂâçÂπ≥Âè∞‰ΩøÁî®ÁöÑË°åÁªàÊ≠¢Á¨¶Ôºåwin‰∏ã‰∏∫‚Äù\t\n‚Äù,Linux‰∏ã‰∏∫‚Äù\n‚Äùos.pathsep ËæìÂá∫Áî®‰∫éÂàÜÂâ≤Êñá‰ª∂Ë∑ØÂæÑÁöÑÂ≠óÁ¨¶‰∏≤ win‰∏ã‰∏∫;,Linux‰∏ã‰∏∫:os.name ËæìÂá∫Â≠óÁ¨¶‰∏≤ÊåáÁ§∫ÂΩìÂâç‰ΩøÁî®Âπ≥Âè∞„ÄÇwin-&gt;‚Äônt‚Äô; Linux-&gt;‚Äôposix‚Äôos.system(&quot;bash command&quot;) ËøêË°åshellÂëΩ‰ª§ÔºåÁõ¥Êé•ÊòæÁ§∫os.popen(&quot;bash command).read() ËøêË°åshellÂëΩ‰ª§ÔºåËé∑ÂèñÊâßË°åÁªìÊûúos.environ Ëé∑ÂèñÁ≥ªÁªüÁéØÂ¢ÉÂèòÈáè os.pathos.path.abspath(path) ËøîÂõûpathËßÑËåÉÂåñÁöÑÁªùÂØπË∑ØÂæÑ os.path.split(path) Â∞ÜpathÂàÜÂâ≤ÊàêÁõÆÂΩïÂíåÊñá‰ª∂Âêç‰∫åÂÖÉÁªÑËøîÂõû os.path.dirname(path)ËøîÂõûpathÁöÑÁõÆÂΩï„ÄÇÂÖ∂ÂÆûÂ∞±ÊòØos.path.split(path)ÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥† os.path.basename(path) ËøîÂõûpathÊúÄÂêéÁöÑÊñá‰ª∂Âêç„ÄÇÂ¶Ç‰Ωïpath‰ª•/Êàñ\ÁªìÂ∞æÔºåÈÇ£‰πàÂ∞±‰ºöËøîÂõûÁ©∫ÂÄº„ÄÇÂç≥os.path.split(path)ÁöÑÁ¨¨‰∫å‰∏™ÂÖÉÁ¥†os.path.exists(path) Â¶ÇÊûúpathÂ≠òÂú®ÔºåËøîÂõûTrueÔºõÂ¶ÇÊûúpath‰∏çÂ≠òÂú®ÔºåËøîÂõûFalseos.path.isabs(path) Â¶ÇÊûúpathÊòØÁªùÂØπË∑ØÂæÑÔºåËøîÂõûTrueos.path.isfile(path) Â¶ÇÊûúpathÊòØ‰∏Ä‰∏™Â≠òÂú®ÁöÑÊñá‰ª∂ÔºåËøîÂõûTrue„ÄÇÂê¶ÂàôËøîÂõûFalseos.path.isdir(path) Â¶ÇÊûúpathÊòØ‰∏Ä‰∏™Â≠òÂú®ÁöÑÁõÆÂΩïÔºåÂàôËøîÂõûTrue„ÄÇÂê¶ÂàôËøîÂõûFalseos.path.join(path1[, path2[, ...]]) Â∞ÜÂ§ö‰∏™Ë∑ØÂæÑÁªÑÂêàÂêéËøîÂõûÔºåÁ¨¨‰∏Ä‰∏™ÁªùÂØπË∑ØÂæÑ‰πãÂâçÁöÑÂèÇÊï∞Â∞ÜË¢´ÂøΩÁï•os.path.getatime(path) ËøîÂõûpathÊâÄÊåáÂêëÁöÑÊñá‰ª∂ÊàñËÄÖÁõÆÂΩïÁöÑÊúÄÂêéËÆøÈóÆÊó∂Èó¥os.path.getmtime(path) ËøîÂõûpathÊâÄÊåáÂêëÁöÑÊñá‰ª∂ÊàñËÄÖÁõÆÂΩïÁöÑÊúÄÂêé‰øÆÊîπÊó∂Èó¥os.path.getsize(path) ËøîÂõûpathÁöÑÂ§ßÂ∞è sysÊ®°ÂùósysÊ®°ÂùóÊòØ‰∏épythonËß£ÈáäÂô®‰∫§‰∫íÁöÑ‰∏Ä‰∏™Êé•Âè£ ÊñπÊ≥ï sys.argv ÂëΩ‰ª§Ë°åÂèÇÊï∞ListÔºåÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÊòØÁ®ãÂ∫èÊú¨Ë∫´Ë∑ØÂæÑ sys.exit(n) ÈÄÄÂá∫Á®ãÂ∫èÔºåÊ≠£Â∏∏ÈÄÄÂá∫Êó∂exit(0),ÈîôËØØÈÄÄÂá∫sys.exit(1) sys.version Ëé∑ÂèñPythonËß£ÈáäÁ®ãÂ∫èÁöÑÁâàÊú¨‰ø°ÊÅØ sys.path ËøîÂõûÊ®°ÂùóÁöÑÊêúÁ¥¢Ë∑ØÂæÑÔºåÂàùÂßãÂåñÊó∂‰ΩøÁî®PYTHONPATHÁéØÂ¢ÉÂèòÈáèÁöÑÂÄº sys.platform ËøîÂõûÊìç‰ΩúÁ≥ªÁªüÂπ≥Âè∞ÂêçÁß∞ Â∫èÂàóÂåñÊ®°ÂùóÁî®‰∫éÂ∫èÂàóÂåñÁöÑ‰∏§‰∏™Ê®°Âùó jsonÔºåÁî®‰∫éÂ≠óÁ¨¶‰∏≤ Âíå pythonÊï∞ÊçÆÁ±ªÂûãÈó¥ËøõË°åËΩ¨Êç¢ pickleÔºåÁî®‰∫épythonÁâπÊúâÁöÑÁ±ªÂûã Âíå pythonÁöÑÊï∞ÊçÆÁ±ªÂûãÈó¥ËøõË°åËΩ¨Êç¢ JsonloadsÂíådumps 12345678910111213141516import jsondic = &#123;'k1':'v1','k2':'v2','k3':'v3'&#125;str_dic = json.dumps(dic) #Â∫èÂàóÂåñÔºöÂ∞Ü‰∏Ä‰∏™Â≠óÂÖ∏ËΩ¨Êç¢Êàê‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤print(type(str_dic),str_dic) #&lt;class 'str'&gt; &#123;"k3": "v3", "k1": "v1", "k2": "v2"&#125;#Ê≥®ÊÑèÔºåjsonËΩ¨Êç¢ÂÆåÁöÑÂ≠óÁ¨¶‰∏≤Á±ªÂûãÁöÑÂ≠óÂÖ∏‰∏≠ÁöÑÂ≠óÁ¨¶‰∏≤ÊòØÁî±""Ë°®Á§∫ÁöÑdic2 = json.loads(str_dic) #ÂèçÂ∫èÂàóÂåñÔºöÂ∞Ü‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤Ê†ºÂºèÁöÑÂ≠óÂÖ∏ËΩ¨Êç¢Êàê‰∏Ä‰∏™Â≠óÂÖ∏#Ê≥®ÊÑèÔºåË¶ÅÁî®jsonÁöÑloadsÂäüËÉΩÂ§ÑÁêÜÁöÑÂ≠óÁ¨¶‰∏≤Á±ªÂûãÁöÑÂ≠óÂÖ∏‰∏≠ÁöÑÂ≠óÁ¨¶‰∏≤ÂøÖÈ°ªÁî±""Ë°®Á§∫print(type(dic2),dic2) #&lt;class 'dict'&gt; &#123;'k1': 'v1', 'k2': 'v2', 'k3': 'v3'&#125;list_dic = [1,['a','b','c'],3,&#123;'k1':'v1','k2':'v2'&#125;]str_dic = json.dumps(list_dic) #‰πüÂèØ‰ª•Â§ÑÁêÜÂµåÂ•óÁöÑÊï∞ÊçÆÁ±ªÂûã print(type(str_dic),str_dic) #&lt;class 'str'&gt; [1, ["a", "b", "c"], 3, &#123;"k1": "v1", "k2": "v2"&#125;]list_dic2 = json.loads(str_dic)print(type(list_dic2),list_dic2) #&lt;class 'list'&gt; [1, ['a', 'b', 'c'], 3, &#123;'k1': 'v1', 'k2': 'v2'&#125;] loadÂíådump 12345678910import jsonf = open('json_file','w')dic = &#123;'k1':'v1','k2':'v2','k3':'v3'&#125;json.dump(dic,f) #dumpÊñπÊ≥ïÊé•Êî∂‰∏Ä‰∏™Êñá‰ª∂Âè•ÊüÑÔºåÁõ¥Êé•Â∞ÜÂ≠óÂÖ∏ËΩ¨Êç¢ÊàêjsonÂ≠óÁ¨¶‰∏≤ÂÜôÂÖ•Êñá‰ª∂f.close()f = open('json_file')dic2 = json.load(f) #loadÊñπÊ≥ïÊé•Êî∂‰∏Ä‰∏™Êñá‰ª∂Âè•ÊüÑÔºåÁõ¥Êé•Â∞ÜÊñá‰ª∂‰∏≠ÁöÑjsonÂ≠óÁ¨¶‰∏≤ËΩ¨Êç¢ÊàêÊï∞ÊçÆÁªìÊûÑËøîÂõûf.close()print(type(dic2),dic2) shelveshelve‰πüÊòØpythonÊèê‰æõÁªôÊàë‰ª¨ÁöÑÂ∫èÂàóÂåñÂ∑•ÂÖ∑ÔºåÊØîpickleÁî®Ëµ∑Êù•Êõ¥ÁÆÄÂçï‰∏Ä‰∫õ„ÄÇ shelveÂè™Êèê‰æõÁªôÊàë‰ª¨‰∏Ä‰∏™openÊñπÊ≥ïÔºåÊòØÁî®keyÊù•ËÆøÈóÆÁöÑÔºå‰ΩøÁî®Ëµ∑Êù•ÂíåÂ≠óÂÖ∏Á±ª‰ºº„ÄÇ reÊ®°Âùó123456789101112131415161718192021222324252627282930313233import reret = re.findall('s', 'sadsadsa ssadsadsa sdadsadasd') # ËøîÂõûÊâÄÊúâÊª°Ë∂≥ÂåπÈÖçÊù°‰ª∂ÁöÑÁªìÊûú,ÊîæÂú®ÂàóË°®Èáåprint(ret) #ÁªìÊûú : ['s', 's', 's', 's', 's', 's', 's', 's', 's', 's']ret = re.search('s', 'sadsadsa ssadsadsa sdadsadasd').group()print(ret) # ÁªìÊûú : s# ÂáΩÊï∞‰ºöÂú®Â≠óÁ¨¶‰∏≤ÂÜÖÊü•ÊâæÊ®°ÂºèÂåπÈÖç,Âè™Âà∞ÊâæÂà∞Á¨¨‰∏Ä‰∏™ÂåπÈÖçÁÑ∂ÂêéËøîÂõû‰∏Ä‰∏™ÂåÖÂê´ÂåπÈÖç‰ø°ÊÅØÁöÑÂØπË±°,ËØ•ÂØπË±°ÂèØ‰ª•# ÈÄöËøáË∞ÉÁî®group()ÊñπÊ≥ïÂæóÂà∞ÂåπÈÖçÁöÑÂ≠óÁ¨¶‰∏≤,Â¶ÇÊûúÂ≠óÁ¨¶‰∏≤Ê≤°ÊúâÂåπÈÖçÔºåÂàôËøîÂõûNone„ÄÇret = re.match('a', 'abc').group() # Âêåsearch,‰∏çËøáÂ∞ΩÂú®Â≠óÁ¨¶‰∏≤ÂºÄÂßãÂ§ÑËøõË°åÂåπÈÖçprint(ret)#ÁªìÊûú : 'a'ret = re.split('[ab]', 'abcd') # ÂÖàÊåâ'a'ÂàÜÂâ≤ÂæóÂà∞''Âíå'bcd',Âú®ÂØπ''Âíå'bcd'ÂàÜÂà´Êåâ'b'ÂàÜÂâ≤print(ret) # ['', '', 'cd']ret = re.sub('\d', 'H', 'teng she 789', 1)#Â∞ÜÊï∞Â≠óÊõøÊç¢Êàê'H'ÔºåÂèÇÊï∞1Ë°®Á§∫Âè™ÊõøÊç¢1‰∏™print(ret) # teng she H89ret = re.subn('\d', 'H', 'teng she 789')#Â∞ÜÊï∞Â≠óÊõøÊç¢Êàê'H'ÔºåËøîÂõûÂÖÉÁªÑ(ÊõøÊç¢ÁöÑÁªìÊûú,ÊõøÊç¢‰∫ÜÂ§öÂ∞ëÊ¨°)print(ret) #('teng she HHH', 3)obj = re.compile('\d&#123;3&#125;') #Â∞ÜÊ≠£ÂàôË°®ËææÂºèÁºñËØëÊàê‰∏∫‰∏Ä‰∏™ Ê≠£ÂàôË°®ËææÂºèÂØπË±°ÔºåËßÑÂàôË¶ÅÂåπÈÖçÁöÑÊòØ3‰∏™Êï∞Â≠óret = obj.search('abc123eeee') #Ê≠£ÂàôË°®ËææÂºèÂØπË±°Ë∞ÉÁî®searchÔºåÂèÇÊï∞‰∏∫ÂæÖÂåπÈÖçÁöÑÂ≠óÁ¨¶‰∏≤print(ret.group()) #ÁªìÊûú Ôºö 123import reret = re.finditer('\d', 'ds3sy4784a') #finditerËøîÂõû‰∏Ä‰∏™Â≠òÊîæÂåπÈÖçÁªìÊûúÁöÑËø≠‰ª£Âô®print(ret) # &lt;callable_iterator object at 0x000001B84AADC7F0&gt;print(next(ret).group()) #Êü•ÁúãÁ¨¨‰∏Ä‰∏™ÁªìÊûú 3print(next(ret).group()) #Êü•ÁúãÁ¨¨‰∫å‰∏™ÁªìÊûú 4print([i.group() for i in ret]) #Êü•ÁúãÂâ©‰ΩôÁöÑÂ∑¶Âè≥ÁªìÊûú ['7', '8', '4'] hashlibÊ®°ÂùóPythonÁöÑhashlibÊèê‰æõ‰∫ÜÂ∏∏ËßÅÁöÑhashÁÆóÊ≥ï Êàë‰ª¨‰ª•Â∏∏ËßÅÁöÑÊëòË¶ÅÁÆóÊ≥ïMD5‰∏∫‰æãÔºåËÆ°ÁÆóÂá∫‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÁöÑMD5ÂÄºÔºö 1234import hashlibmd5 = hashlib.md5()md5.update('how to use md5 in python hashlib?'.encode("gb2312"))print(md5.hexdigest()) ËÆ°ÁÆóÁªìÊûúÂ¶Ç‰∏ãÔºöd26a53750bc40b38b65a520292f69306 configparserÊ®°ÂùóËØ•Ê®°ÂùóÈÄÇÁî®‰∫éÈÖçÁΩÆÊñá‰ª∂ÁöÑÊ†ºÂºè‰∏éwindows iniÊñá‰ª∂Á±ª‰ººÔºåÂèØ‰ª•ÂåÖÂê´‰∏Ä‰∏™ÊàñÂ§ö‰∏™ËäÇÔºàsectionÔºâÔºåÊØè‰∏™ËäÇÂèØ‰ª•ÊúâÂ§ö‰∏™ÂèÇÊï∞ÔºàÈîÆ=ÂÄºÔºâ„ÄÇ loggingÊ®°ÂùóÈªòËÆ§ÊÉÖÂÜµ‰∏ãPythonÁöÑloggingÊ®°ÂùóÂ∞ÜÊó•ÂøóÊâìÂç∞Âà∞‰∫ÜÊ†áÂáÜËæìÂá∫‰∏≠Ôºå‰∏îÂè™ÊòæÁ§∫‰∫ÜÂ§ß‰∫éÁ≠â‰∫éWARNINGÁ∫ßÂà´ÁöÑÊó•ÂøóÔºåËøôËØ¥ÊòéÈªòËÆ§ÁöÑÊó•ÂøóÁ∫ßÂà´ËÆæÁΩÆ‰∏∫WARNINGÔºàÊó•ÂøóÁ∫ßÂà´Á≠âÁ∫ßCRITICAL &gt; ERROR &gt; WARNING &gt; INFO &gt; DEBUGÔºâÔºåÈªòËÆ§ÁöÑÊó•ÂøóÊ†ºÂºè‰∏∫Êó•ÂøóÁ∫ßÂà´ÔºöLoggerÂêçÁß∞ÔºöÁî®Êà∑ËæìÂá∫Ê∂àÊÅØ„ÄÇ 123456import logging logging.debug('debug message') logging.info('info message') logging.warning('warning message') logging.error('error message') logging.critical('critical message')]]></content>
      <tags>
        <tag>ÊäÄÊúØ</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â∫îÁî®ËΩØ‰ª∂Ë£ÖÂú®CÁõòÈáå‰ºöËÆ©Á≥ªÁªüÂèòÊÖ¢‰πàÔºü]]></title>
    <url>%2F2018%2F08%2F16%2F%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6%E8%A3%85%E5%9C%A8C%E7%9B%98%E9%87%8C%E4%BC%9A%E8%AE%A9%E7%B3%BB%E7%BB%9F%E5%8F%98%E6%85%A2%E4%B9%88%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[8012Âπ¥‰∫ÜÔºåüåèËøòÂú®ËΩ¨Ôºå‰ΩÜÊòØÂ•ΩÂ§öÈ°ΩÂõ∫ÁöÑ‰∫∫üß†‰∏çËΩ¨‰∫ÜÔºåÊâÄ‰ª•‰ªäÂ§©Â∞±Êúâ‰∫Ü‚ÄúÂ∫îÁî®ËΩØ‰ª∂Ë£ÖÂú®CÁõòÈáå‰ºöËÆ©Á≥ªÁªüÂèòÊÖ¢‰πà‚ÄùËøô‰∏™ËØùÈ¢ò„ÄÇ ‰∏∫Âï•‰∫∫‰ª¨ÊúâÊääËΩØ‰ª∂Ë£ÖÂú®CÁõò‰πãÂ§ñÁöÑ‰π†ÊÉØÔºüËøôÁúüÁöÑÊòØ‰∏Ä‰∏™ËøúÂè§Êó∂‰ª£ÈÅóÁïô‰∏ãÊù•ÁöÑ‰π†ÊÉØ„ÄÇ ËøáÂéªÁöÑÁîµËÑëÁöÑÁ°¨‰ª∂ÈÖçÁΩÆÂèØ‰∏çÂ¶ÇÁé∞Âú®ÁöÑËøô‰πàÂ•ΩÔºåÂΩìÊó∂ÁöÑÁ°¨ÁõòÂèØËÉΩÂè™Êúâ10GÔºåÂÜÖÂ≠òÂàôÂèØËÉΩÂè™Êúâ128MÔºåÊää10GÁöÑÁ°¨ÁõòÂàí‰∏∫CÁõòÔºåË£ÖËøõÂéª‰∏Ä‰∏™Á≥ªÁªüÔºåÂâ©‰∏ãÁöÑÁ©∫Èó¥Â∞±‰∏çÂ§™Â§ö‰∫ÜÔºåÊâÄ‰ª•Â∞±Êúâ‰∫ÜÊääËΩØ‰ª∂ÊîæÂú®Âà´ÁöÑÁ£ÅÁõòÈáåÈù¢ÁöÑ‰π†ÊÉØ ÂÜçÂä†‰∏äËøáÂéªÁöÑÁîµËÑëÊÄßËÉΩÊØîËæÉÂ∑ÆÔºåÊäÄÊúØËêΩÂêéÔºåÊÖ¢ÊÖ¢Â∞±ÊúâÊääËΩØ‰ª∂Ë£ÖÂú®cÁõò‰ºöÂç°ËøôÁßçËØØÂå∫ Â∫îÁî®ËΩØ‰ª∂Ë£ÖÂú®CÁõòÈáå‰ºöËÆ©Á≥ªÁªüÂèòÊÖ¢‰πàÔºü‰∏ç‰ºöÁöÑÔºåÂÖÑÂºüÔºåÂ§ßÊõº„ÄÇ Áé∞Âú®Â§ßÈÉ®ÂàÜ‰∫∫Áî®ÁöÑÊú∫Ê¢∞Á°¨ÁõòHDDÊòØËøôÊ†∑ÁöÑüëá Á°¨ÁõòÊúÄÊ†∏ÂøÉÁöÑÈÉ®‰ª∂ÊòØÂÉèÂÖâÁõòÈÇ£Ê†∑ÁöÑÁ£ÅÁõòÂíåËøûÁùÄÂÖâÁõòÁöÑÁ£ÅÂ§¥ ÂÖ∂‰∏≠ÔºåÁ£ÅÁõòÊòØÁî®Êù•Â≠òÊîæÊï∞ÊçÆÁöÑÔºåÁ£ÅÂ§¥ÊòØÁî®Êù•ËØªÂèñÊï∞ÊçÆÁöÑ„ÄÇ ÂÜçËØ¥ËØ¥Á≥ªÁªüÂàÜÂå∫ÔºåÊ≠£Â∏∏ÁöÑÊñπÊ≥ïÂàÜÂå∫ÁöÑËØùÔºåCÁõòÂú®Á£ÅÁõòÁõòÁâá‰∏äÁöÑ‰ΩçÁΩÆÂ∫îËØ•ÊòØÈù†ËøëÂ§ñÂúàÁöÑÔºåÂ§ñÂúàÂõ†‰∏∫Âë®ÈïøÊØîËæÉÂ§ßÔºåËøôÂ∞±ÂØºËá¥‰∫ÜÁ£ÅÂ§¥Âú®Áõ∏ÂêåÊó∂Èó¥ÂÜÖÔºåËØªÂèñÁöÑÊï∞ÊçÆÁöÑÊÄßËÉΩ‰πüÂæàÈ´ò„ÄÇ ÊâÄ‰ª•ÔºåÂØπÊú∫Ê¢∞Á°¨ÁõòÊù•ËØ¥ÔºåÊääÂ∫îÁî®ËΩØ‰ª∂Ë£ÖÂú®CÁõòÔºåÈùû‰ΩÜ‰∏ç‰ºöËÆ©Á≥ªÁªüÂèòÂç°ÔºåÂèçËÄå‰ºöËÆ©Â∫îÁî®ËΩØ‰ª∂ËøêË°åÂæóÊõ¥Âø´„ÄÇ ËøòÊúâÂæàÂ§öÂ∞è‰ºô‰º¥Áî®Âõ∫ÊÄÅÁ°¨ÁõòSSDÔºåÊääÂ∫îÁî®ËΩØ‰ª∂Ë£ÖÂú®Âì™‰∏™ÂàÜÂå∫ËøêË°åÈÄüÂ∫¶ÈÉΩÂ∑Æ‰∏çÂ§ö„ÄÇ Â¶Ç‰ΩïËÆ©Á¨îËÆ∞Êú¨ÂºÄÊú∫‰∏çÂÜçÂç°È°øËØ∑ÁúãËøôÈáåhttps://blog.tengshe789.tech/2018/08/16/%E5%A6%82%E4%BD%95%E8%AE%A9%E5%BC%80%E6%9C%BA%E4%B8%8D%E5%9C%A8%E5%8D%A1%E9%A1%BF/#more ÁªìÊùüÊ≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢]]></content>
      <tags>
        <tag>ÊäÄÊúØ</tag>
        <tag>Á°¨‰ª∂</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â¶Ç‰ΩïËÆ©Á¨îËÆ∞Êú¨ÂºÄÊú∫‰∏çÂÜçÂç°È°ø]]></title>
    <url>%2F2018%2F08%2F16%2F%E5%A6%82%E4%BD%95%E8%AE%A9%E5%BC%80%E6%9C%BA%E4%B8%8D%E5%9C%A8%E5%8D%A1%E9%A1%BF%2F</url>
    <content type="text"><![CDATA[ÊúÄËøëËÄÅÊúâÂ∞è‰ºô‰º¥QQÁßÅËÅäÊàëÔºö‚ÄúÁÑ∂Âì•ÁÑ∂Âì•ÔºåÊàëÁîµËÑëÂç°ÔºåÊÄé‰πàÂäûÔºü‚Äù ÊàëÂ∞±ÂõûÂ§çÔºåËøòËÉΩÊÄé‰πàÂäûÂïäÔºåÁôæÂ∫¶Âéª ÁÑ∂ÂêéÂØπÈù¢ÂèàÊù•ËØù‰∫ÜÔºå‚ÄúÁÑ∂Âì•ÁÑ∂Âì•ÔºåÊàë‰∏ç‰ºöÊêúÔºåÂíãÂäûÂïäÔºü‚Äù ÊàëÔºö ÈÇ£‰πàÂá†Â§©ÊàëÂ∞±ÂàÜ‰∫´‰∏Ä‰∏ãÔºåÊàëËÆæÁΩÆwin10 PCÁöÑÂ∞èÁ™çÈó® ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ Èôç‰ΩéÊòæÁ§∫ÊïàÊûúÈ¶ñÂÖàÔºåÂè≥ÈîÆÂçïÂáªÊàëÁöÑÁîµËÑëÔºåÈÄâÊã©Â±ûÊÄßÔºåÊâæÂà∞È´òÁ∫ßÁ≥ªÁªüËÆæÁΩÆÔºåËøõÂÖ•ÂêéÂàáÊç¢ÈÄâÈ°πÂç°Âà∞È´òÁ∫ßÔºåÂú®ËßÜËßâÊïàÊûú‰∏≠ÔºåÈÄâ‰∏≠‚ÄúË∞ÉÊï¥‰∏∫ÊúÄ‰Ω≥ÊÄßËÉΩ‚ÄùÔºåÁÑ∂ÂêéÁÇπÂáªÂ∫îÁî®„ÄÇ Âà†Èô§Á≥ªÁªüÈÅóÁïôÁöÑÊó†Áî®Êñá‰ª∂ÁÑ∂ÂêéÔºåÂú®ÂºÄÂßãËèúÂçïËæìÂÖ•cmdÔºåÈÄâÊã©ÂëΩ‰ª§ÊèêÁ§∫Á¨¶ÔºåËøõÂÖ•ÂêéËæìÂÖ•ÂëΩ‰ª§rd C:windows.old /sÔºåÂà†Èô§Á≥ªÁªüÈÅóÁïôÁöÑÊó†Áî®Êñá‰ª∂ÔºåÂ¢ûÂä†CÁõòÁ©∫Èó¥„ÄÇÂÖ≥‰∫éCÁõòÁöÑÁ©∫Èó¥ÔºåÊàëÂª∫ËÆÆËá≥Â∞ëË¶Å‰øùÁïô20%ÁöÑÂÆπÈáèÔºàÂπ∂‰∏î‰∏çÂ∞è‰∫é10GBÔºâÔºåÁî®Êù•ÁªôÁ≥ªÁªü‰∫§Êç¢Êñá‰ª∂‰ΩøÁî®„ÄÇ ÂèñÊ∂àWin10ÁöÑÂêØÂä®ÁîªÈù¢ Âú®ÂºÄÂßãËèúÂçïËæìÂÖ•msconfigÔºå ÁÑ∂ÂêéÂàáÊç¢ÈÄâÈ°πÂç°Âà∞ÂºïÂØºÔºåÂãæÈÄâ‚ÄúÊó†GUIÂºïÂØº‚ÄùÂ∞±ÂèØ‰ª•‰∫Ü Á¶ÅÁî®ÈöèÁ≥ªÁªüÂêØÂä®Êó∂Âä†ËΩΩÁöÑÊúçÂä°ËøòÊòØÂú®ÂàöÊâçÁöÑmsconfigÁ≥ªÁªüÈÖçÁΩÆ‰∏≠ÔºåÂàáÊç¢Âà∞ÊúçÂä°ÈÄâÈ°πÂç°ÔºåËøôÊó∂ÊâÄÊúâÈöèÁ≥ªÁªüÂêØÂä®ÁöÑÂä†ËΩΩÊúçÂä°ÈÉΩ‰ºöÂàóË°®ÊòæÁ§∫ÔºåÂÖàÂãæÈÄâ‚ÄúÈöêËóèÊâÄÊúâMicrosoftÊúçÂä°‚ÄùÔºåÁÑ∂ÂêéÊü•ÁúãÂàóË°®‰∏≠Ââ©‰ΩôÁöÑÂä†ËΩΩÊúçÂä°È°πÔºåÊää‰Ω†ËÆ§‰∏∫‰∏çÈúÄË¶ÅÁöÑÂ∫îÁî®ÊúçÂä°ÂèñÊ∂àÂãæÈÄâÂç≥ÂèØ ÊúÄÊúâÊïàÁöÑÂäûÊ≥ïÈ™öÂπ¥ÔºåÊç¢‰∏™SSDÂêß ÁªìÊùüÊ≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Áé∞Âú®ÁôæÂ∫¶win10‰ºòÂåñÔºåËøòÊúâÂæàÂ§öÂ∞èÊäÄÂ∑ßÔºåÊàëÂ∞±‰∏ç‰∏Ä‰∏ÄÂàó‰∏æ‰∫ÜÔºåËØ¶ÊÉÖËØ∑ÁúãÁúãÁôæÂ∫¶Á¨¨‰∏ÄÊù°https://jingyan.baidu.com/article/c843ea0ba3d01377931e4a3d.html]]></content>
      <tags>
        <tag>Windows10</tag>
        <tag>Á™çÈó®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ∫Ëá™Âä®‰∏ãËΩΩBingËÉåÊôØÁöÑÂ∞èÊäÄÂ∑ß]]></title>
    <url>%2F2018%2F08%2F16%2F%E8%87%AA%E5%8A%A8%E4%B8%8B%E8%BD%BDBing%E8%83%8C%E6%99%AF%2F</url>
    <content type="text"><![CDATA[BingÔºåÂÖÑÂºü‰ª¨ÊáÇÂêßü§†ËôΩÁÑ∂BingÁöÑÊêúÁ¥¢ÂºïÊìéËøòÂ∑ÆÁÇπÊÑèÊÄùÔºå‰∏çËøáÊØèÊ¨°ÂêØÂä®ÂÆÉÁöÑÊó∂ÂÄôÔºåÊÄªÊòØË¢´ÂÆÉÁöÑËÉåÊôØÈúáÊíºÂà∞ÔºåÁîöËá≥ÂæàÂ§ö‰∫∫ÈÉΩÊääÂÆÉÂΩì‰ΩúÁæéÂõæÁΩë ËØ∫ÔºåÂ∞±ÊòØËøôÁßçËÉåÊôØÔºåÊØèÂ§©ÈÉΩ‰ºöÊç¢1Âº†ÔºåËøò‰∏çÈáçÂ§ç ÊòØ‰∏çÊòØÊÉ≥Ë¶ÅÊääÂÆÉËÆæÁΩÆÊàêÂ£ÅÁ∫∏ÔºüÊØèÊ¨°ÈÉΩË¶ÅËá™Â∑±ÊâãÂä®Êìç‰ΩúÂØπÊáíÁôåÊÇ£ËÄÖÂÆûÂú®ÊòØ‰∏çÂ§üÂèãÂ•ΩÔºåÊó¢ÁÑ∂Áé∞Âú®‰ªÄ‰πàÈÉΩËÆ≤Á©∂AIÔºåÂí±‰ª¨‰πüÂ∞±Êù•ÁÇπÊô∫ËÉΩÂåñÁöÑBingÂ£ÅÁ∫∏‰∏ãËΩΩÊìç‰ΩúÂêß„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢„ÄÇ Á¨¨‰∏ÄÊ≠•‚ÄìcodingÂÖàÂáÜÂ§á‰∏Ä‰∏™txtÔºåÂ∞Ü‰∏ãÂàó‰ª£Á†ÅÁ≤òË¥¥ËøõÂéª 123456789101112131415161718192021222324252627282930313233343536373839404142434445$x = Split-Path -Parent $MyInvocation.MyCommand.Definitioncd $xmkdir imagescd imagesmkdir jsonscd jsons$url = "http://www.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=10"$time = Get-Date$data = Invoke-WebRequest $url$data.Content | Out-File $time.DayOfYear$decode = ConvertFrom-Json($data)cd ..$range = 1..8$count = $range.Countfor($i=0; $i -lt $count; $i++)&#123;$temp = $decode.images.Get($i)$urlsplit = -Join("http://www.bing.com",$temp.url)echo $urlsplitInvoke-WebRequest $urlsplit -OutFile ($temp.hsh + ".jpg")&#125;echo ok!pause ÁÑ∂ÂêéÂ∞ÜÊñá‰ª∂ÂêéÁºÄÂêçÊîπÊàê.ps1ÔºåÂ≠òÊîæÂà∞È¢ÑÂÖàÊâæÂà∞ÁöÑÂ£ÅÁ∫∏Êñá‰ª∂Â§π‰∏≠„ÄÇ Á¨¨‰∫åÊ≠•‚ÄìrunningÁî®Èº†Ê†áÂè≥ÈîÆÈÄâÊã©‚Äú‰ΩøÁî®PowerShellËøêË°å‚ÄùÔºåÂÆÉÂ∞±‰ºöËá™Âä®ÁîüÊàê‰∏™Âêç‰∏∫‚Äúimages‚ÄùÁöÑÊñá‰ª∂Â§πÔºå‰∏ãËΩΩÊúÄËøëÂá†Â§©ÊòæÁ§∫ÁöÑ8Âº†BingÂ£ÅÁ∫∏„ÄÇ ÊïàÊûúÂ∞±ÊòØËøôÊ†∑Ôºö Âá∫ÈîôÊÄé‰πàÂäûÔºü‚ÄìexceptionÊ≥®ÊÑè‰∫ÜÔºåÈÇ£‰∫õÂ∑≤Áªè‰∏çÁî®IEÊµèËßàÂô®ÁöÑÂ∞è‰ºô‰º¥ÔºåÂú®‰ΩøÁî®‰ª£Á†ÅÂâç‰∏ÄÂÆöË¶ÅÊääIEÁöÑÂêØÂä®ËÆæÁΩÆÈÄâÈ°π‰ºòÂÖàÂÆåÊàê‰∫ÜÔºå‰∏çÁÑ∂ÈìÅÂÆö‰ºöÊä•ÈîôÁöÑ„ÄÇ Á¨¨‰∏âÊ≠•‚ÄìËá™Âä®ÂåñË¶ÅÊòØËßâÂæóÊØèÂ§©ÈÉΩË¶ÅÊâãÂä®‰∏Ä‰∏ã‰∏ãÈùûÂ∏∏È∫ªÁÉ¶ÔºåËøòÊúâ‰∏™ÂÖ®Â•óËá™Âä®Âåñ‰∏ãËΩΩÁöÑÊñπÂºèÔºåÊåâÁÖß‰∏äÈù¢ÁöÑÊñπÊ≥ïÊää‰∏ãÈù¢ÂÅöÊàê.ps1Êñá‰ª∂„ÄÇ 123456789101112131415161718192021222324252627282930313233$x = Split-Path -Parent $MyInvocation.MyCommand.Definitioncd $xmkdir imagescd imagesmkdir jsonscd jsons$url = "http://www.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=10"$time = Get-Date$data = Invoke-WebRequest $url$data.Content | Out-File $time.DayOfYear$decode = ConvertFrom-Json($data)cd ..$temp = $decode.images.Get(0)$urlsplit = -Join("http://www.bing.com",$temp.url)echo $urlsplitInvoke-WebRequest $urlsplit -OutFile ($temp.hsh + ".jpg")echo ok! ÁÑ∂ÂêéËøõÂÖ•‚ÄúÊéßÂà∂Èù¢Êùø-ÁÆ°ÁêÜÂ∑•ÂÖ∑-‰ªªÂä°ËÆ°ÂàíÁ®ãÂ∫è‚ÄùÔºåÈÄâÊã©Âè≥‰æßÁöÑ‚ÄúÂàõÂª∫‰ªªÂä°‚Äù„ÄÇ ÂàáÊç¢Âà∞‚ÄúÊìç‰Ωú‚ÄùÈÄâÈ°πÂç°‰∏ãÔºåÁÇπÂáª‚ÄúÊñ∞Âª∫‚ÄùÔºå Âú®‚ÄúÁ®ãÂ∫èÊàñËÑöÊú¨‚Äù‰∏ÄÊ†è‰∏≠ÔºåÂ°´ÂÖ•‰∏ãÈù¢ËøôË°åÂÜÖÂÆπ 12%SystemRoot%\system32\WindowsPowerShell\v1.0\powershell.exe ‚ÄúÊ∑ªÂä†ÂèÇÊï∞ÔºàÂèØÈÄâÔºâ‚ÄùÂÜÖÔºåÂ§ßÂÆ∂ÂàôÈúÄË¶ÅÊääËÑöÊú¨ÁöÑ‰øùÂ≠òË∑ØÂæÑÂ°´ËøõÂéª„ÄÇ ÁÇπÂáªÁ°ÆÂÆöÂêéÔºåÂàáÊç¢Âà∞‚ÄúËß¶ÂèëÂô®‚ÄùÈÄâÈ°πÂç°ÔºåÂêåÊ†∑ÁÇπÂáªÊñ∞Âª∫ÔºåÈÄâÊã©‚ÄúÊØèÂ§©‚ÄùÔºåÁÇπÂáªÁ°ÆÂÆöÔºå‰øùÂ≠ò‰ªªÂä°„ÄÇ ËøôÊ†∑ÊØèÂ§©Âõ∫ÂÆöÁöÑÊó∂Èó¥ÁÇπÂ∞±‰ºöËá™Âä®‰∏ãËΩΩ‰∏ÄÂº†ÂøÖÂ∫îÂ£ÅÁ∫∏‰∫ÜÔºå‰πÖËÄå‰πÖ‰πãÔºåÂ£ÅÁ∫∏Â∫ì‰∏çÂ∞±Êúâ‰∫Ü‰πàÔºü ÂÆåÁªìÊ≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèãÔºåÂí±‰ª¨‰∏§‰∏™ÊÉ≥‰∏™Âè∑Á†ÅÔºå ‰π∞‰∏™ÂΩ©Á•®ÔºåÂÖàÊå£‰ªñ‰∏™Âá†Áôæ‰∏áüòù]]></content>
      <tags>
        <tag>Windows10</tag>
        <tag>Á™çÈó®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ=2=-ÈÄö‰ø°ÂçèËÆÆHTTP]]></title>
    <url>%2F2018%2F08%2F16%2F%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%8B%E6%88%91%E5%AF%B9%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AEHTTP%E7%9A%84%E7%90%86%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[Êàë‰∏∫‰ªÄ‰πà‰∏çÊñ≠ÁöÑÊõ¥Êñ∞ÂçöÂÆ¢Âë¢ÔºüËøôÊòØ‰∏ÄÊ¨°ÂæàÂ•ΩÁöÑÊèêÂçáÊú∫‰ºö„ÄÇ Âπ≥Êó∂Ëß£ÂÜ≥ÈóÆÈ¢òÁöÑÊó∂ÂÄôÂèØËÉΩËÄÉËôëËøõÂ∫¶ÈóÆÈ¢òÊ≤°ÊúâÊõ¥Ê∑±ÂàªÂú∞ÂéªÁêÜËß£Ôºå‰ΩÜÊòØÂú®ÂÜôÂçöÂÆ¢ÁöÑÊó∂ÂÄôÔºå‰Ω†‰ºö‰∏çÁü•‰∏çËßâ‰∏≠ÂØπ‰∏Ä‰∫õÂÜÖÂÆπËøõË°åÊÄùËÄÉÔºåÂπ∂ÊúâÂèØËÉΩÂíåËØÑËÆ∫ËÄÖ‰∏ÄËµ∑Ê∑±ÂÖ•ÔºåËøô‰∫õÈÉΩÊòØÈöæÂæóÁöÑÊú∫‰ºö„ÄÇ ÂèØËÉΩÊúâ‰∫∫‰ºöÈóÆÊàëÔºåÊàë‰∏∫‰ªÄ‰πà‰∏çÊñ≠ÁöÑÊõ¥Êñ∞ÂçöÂÆ¢Âë¢Ôºü ÊàëËßâÂæóÂêßÔºåËøôÊòØ‰∏ÄÊ¨°ÂæàÂ•ΩÁöÑÊèêÂçáÊú∫‰ºö„ÄÇ Âπ≥Êó∂Ëß£ÂÜ≥ÈóÆÈ¢òÁöÑÊó∂ÂÄôÂèØËÉΩËÄÉËôëËøõÂ∫¶ÈóÆÈ¢òÊ≤°ÊúâÊõ¥Ê∑±ÂàªÂú∞ÂéªÁêÜËß£Ôºå‰ΩÜÊòØÂú®ÂÜôÂçöÂÆ¢ÁöÑÊó∂ÂÄôÔºåÊàë‰ºö‰∏çÁü•‰∏çËßâ‰∏≠ÂØπ‰∏Ä‰∫õÂÜÖÂÆπËøõË°åÊÄùËÄÉÔºåÂèØ‰ª•Êõ¥Ê∑±ÂÖ•ÁöÑÁêÜËß£ÈóÆÈ¢ò„ÄÇÂú®Â≠¶‰π†ÁöÑËøáÁ®ã‰∏≠Ôºå‰∏çÊñ≠ÁöÑÊÄªÁªìÔºå‰∏çÊñ≠ÁöÑÊÄùËÄÉÔºå‰∏çÊñ≠ËÆ∞ÂøÜÔºåÊÖ¢ÊÖ¢Áü•ËØÜÂ∞±Â∑©Âõ∫‰∫Ü„ÄÇ ÊàëÊòØ‰∏Ä‰∏™ÊØîËæÉÊÖ¢ÁÉ≠ÁöÑ‰∫∫ÔºåÂ∏åÊúõÊàëÂèØ‰ª•Áî®Ëøô‰∏™ÊñπÂºè‰∏çÊñ≠ÊèêÈ´òËá™Â∑±~ ÂÖ±ÂêåÂä†Ê≤πÔºÅ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ HTTPÂçèËÆÆÊòØ‰ªÄ‰πàÔºüHTTPÂçèËÆÆÔºàHyperText Transfer ProtocolÔºåË∂ÖÊñáÊú¨‰º†ËæìÂçèËÆÆÔºâ:ÊòØÂÆ¢Êà∑Á´ØÊµèËßàÂô®ÊàñÂÖ∂‰ªñÁ®ãÂ∫è‰∏éWebÊúçÂä°Âô®‰πãÈó¥ÁöÑÂ∫îÁî®Â±ÇÈÄö‰ø°ÂçèËÆÆ ÔºåÊòØÂü∫‰∫éËØ∑Ê±Ç/ÂìçÂ∫îËåÉÂºèÁöÑ„ÄÇ ‰∏Ä‰∏™ÂÆ¢Êà∑Êú∫‰∏éÊúçÂä°Âô®Âª∫Á´ãËøûÊé•ÂêéÔºåÂèëÈÄÅ‰∏Ä‰∏™ËØ∑Ê±ÇÁªôÊúçÂä°Âô®ÔºåËØ∑Ê±ÇÊñπÂºèÁöÑÊ†ºÂºè‰∏∫ÔºåÁªü‰∏ÄËµÑÊ∫êÊ†áËØÜÁ¨¶„ÄÅÂçèËÆÆÁâàÊú¨Âè∑ÔºåÂêéËæπÊòØMIME‰ø°ÊÅØÂåÖÊã¨ËØ∑Ê±Ç‰øÆÈ•∞Á¨¶„ÄÅÂÆ¢Êà∑Êú∫‰ø°ÊÅØÂíåÂèØËÉΩÁöÑÂÜÖÂÆπ„ÄÇ ÊúçÂä°Âô®Êé•Âà∞ËØ∑Ê±ÇÂêéÔºåÁªô‰∫àÁõ∏Â∫îÁöÑÂìçÂ∫î‰ø°ÊÅØÔºåÂÖ∂Ê†ºÂºè‰∏∫‰∏Ä‰∏™Áä∂ÊÄÅË°åÂåÖÊã¨‰ø°ÊÅØÁöÑÂçèËÆÆÁâàÊú¨Âè∑„ÄÅ‰∏Ä‰∏™ÊàêÂäüÊàñÈîôËØØÁöÑ‰ª£Á†ÅÔºåÂêéËæπÊòØMIME‰ø°ÊÅØÂåÖÊã¨ÊúçÂä°Âô®‰ø°ÊÅØ„ÄÅÂÆû‰Ωì‰ø°ÊÅØÂíåÂèØËÉΩÁöÑÂÜÖÂÆπ„ÄÇ ÂÆÉÂú®ÂÆ¢Êà∑Á´ØÂíåÊúçÂä°Âô®Á´ØËØ∑Ê±ÇÂíåÁõ∏Â∫î RT ‰º†ËæìËµÑÊ∫ê ÈÄöËøáhtml‰º†Ëæì ÔºöÊñáÊú¨„ÄÅword„ÄÅaviÁîµÂΩ±„ÄÅÂÖ∂‰ªñËµÑÊ∫ê ‰º†ËæìÁöÑÂ™í‰ΩìÁ±ªÂûã ÊúçÂä°Á´ØÂêëÊµèËßàÂô®‰º†ËæìMIMEÁ±ªÂûãÁöÑÊñá‰ª∂ÔºåÊµèËßàÂô®ÊãøÂà∞MIMEÁ±ªÂûãÁöÑÊñá‰ª∂ÔºåÂ∞±ÂèØ‰ª•Ëß£Êûê‰∫Ü „ÄÇ Ë≠¨Â¶Çtext/html„ÄÅ image/jpeg „ÄÅapplication/xmlÔºåjsonÊ†ºÂºèÔºåÈÉΩÂ±û‰∫éMIMEÁ±ªÂûã URIÂíåURL Ë¶Å‰∫ÜËß£httpÁöÑ‰º†ËæìÔºåÈ¶ñÂÖàË¶ÅÁü•ÈÅì‰º†ËæìÁöÑÂØπË±°ÊòØ‰ªÄ‰πà„ÄÇ URI:webÊúçÂä°Âô®‰∏≠Êüê‰∏™ËµÑÊ∫êÁöÑÂêçÂ≠ó„ÄÇ Ë≠¨Â¶Çindex.html URL:ÁΩëÁªúËµÑÊ∫êÊèèËø∞ ‰∏æ‰∏™Ê†óÂ≠êÔºö ( http://)[resume.tengshe789.tech][:80]/java/index.html[?query-string] #location ËøôÊó∂‰∏™ÂÖ∏ÂûãÁöÑurlÔºåurlÈáåÈù¢ÊòØ‰ªÄ‰πàÊÑèÊÄùÂë¢Ôºü schema(ÂçèËÆÆ): http/https/ftp. host: webÊúçÂä°Âô®ÁöÑipÂú∞ÂùÄÊàñËÄÖÂüüÂêç port: ÊúçÂä°Á´ØÁ´ØÂè£Ôºå httpÈªòËÆ§ËÆøÈóÆÁöÑÁ´ØÂè£ÊòØ80 path: ËµÑÊ∫êËÆøÈóÆË∑ØÂæÑ#location query-string: Êü•ËØ¢ÂèÇÊï∞[?query-string] ÊñπÊ≥ï ÊØè‰∏™ËØ∑Ê±ÇÈÉΩ‰ºöÊê∫Â∏¶GET/PUT/DELETE/POST/HEADËøôÊ†∑ÁöÑ‰∏Ä‰∏™ÊñπÊ≥ïÔºåÊúçÂä°Âô®ÊãøÂà∞ÊñπÊ≥ïÂ∞±Áü•ÈÅìËá™Â∑±ËØ•ÂÅö‰ªÄ‰πà‰∫Ü„ÄÇ ÈÇ£java‰∏≠ÊúâdoGet()doPost()ÊñπÊ≥ïÔºåÊúâ‰ªÄ‰πàÂå∫Âà´Âë¢Ôºü doGetÔºöGETÊñπÊ≥ï‰ºöÊääÂêçÂÄºÂØπËøΩÂä†Âú®ËØ∑Ê±ÇÁöÑURLÂêéÈù¢„ÄÇÂõ†‰∏∫URLÂØπÂ≠óÁ¨¶Êï∞ÁõÆÊúâÈôêÂà∂ÔºåËøõËÄåÈôêÂà∂‰∫ÜÁî®Âú®ÂÆ¢Êà∑Á´ØËØ∑Ê±ÇÁöÑÂèÇÊï∞ÂÄºÁöÑÊï∞ÁõÆ„ÄÇÂπ∂‰∏îËØ∑Ê±Ç‰∏≠ÁöÑÂèÇÊï∞ÂÄºÊòØÂèØËßÅÁöÑÔºåÂõ†Ê≠§ÔºåÊïèÊÑü‰ø°ÊÅØ‰∏çËÉΩÁî®ËøôÁßçÊñπÂºè‰º†ÈÄí„ÄÇ doPOSTÔºöPOSTÊñπÊ≥ïÈÄöËøáÊääËØ∑Ê±ÇÂèÇÊï∞ÂÄºÊîæÂú®ËØ∑Ê±Ç‰Ωì‰∏≠Êù•ÂÖãÊúçGETÊñπÊ≥ïÁöÑÈôêÂà∂ÔºåÂõ†Ê≠§ÔºåÂèØ‰ª•ÂèëÈÄÅÁöÑÂèÇÊï∞ÁöÑÊï∞ÁõÆÊòØÊ≤°ÊúâÈôêÂà∂ÁöÑ„ÄÇÊúÄÂêéÔºåÈÄöËøáPOSTËØ∑Ê±Ç‰º†ÈÄíÁöÑÊïèÊÑü‰ø°ÊÅØÂØπÂ§ñÈÉ®ÂÆ¢Êà∑Á´ØÊòØ‰∏çÂèØËßÅÁöÑ„ÄÇ ÊñπÊ≥ï GET POST ÁºìÂ≠ò ËÉΩË¢´ÁºìÂ≠ò ‰∏çËÉΩÁºìÂ≠ò ÁºñÁ†ÅÁ±ªÂûã application/x-www-form-urlencoded application/x-www-form-urlencoded Êàñ multipart/form-data„ÄÇ‰∏∫‰∫åËøõÂà∂Êï∞ÊçÆ‰ΩøÁî®Â§öÈáçÁºñÁ†Å„ÄÇ ÂØπÊï∞ÊçÆÈïøÂ∫¶ÁöÑÈôêÂà∂ ÊòØÁöÑ„ÄÇÂΩìÂèëÈÄÅÊï∞ÊçÆÊó∂ÔºåGET ÊñπÊ≥ïÂêë URL Ê∑ªÂä†Êï∞ÊçÆÔºõURL ÁöÑÈïøÂ∫¶ÊòØÂèóÈôêÂà∂ÁöÑÔºàURL ÁöÑÊúÄÂ§ßÈïøÂ∫¶ÊòØ 2048 ‰∏™Â≠óÁ¨¶Ôºâ Êó†ÈôêÂà∂„ÄÇ ÂØπÊï∞ÊçÆÁ±ªÂûãÁöÑÈôêÂà∂ Âè™ÂÖÅËÆ∏ ASCII Â≠óÁ¨¶ Ê≤°ÊúâÈôêÂà∂„ÄÇ‰πüÂÖÅËÆ∏‰∫åËøõÂà∂Êï∞ÊçÆ„ÄÇ ÂÆâÂÖ®ÊÄß ‰∏é POST Áõ∏ÊØîÔºåGET ÁöÑÂÆâÂÖ®ÊÄßËæÉÂ∑ÆÔºåÂõ†‰∏∫ÊâÄÂèëÈÄÅÁöÑÊï∞ÊçÆÊòØ URL ÁöÑ‰∏ÄÈÉ®ÂàÜ„ÄÇÂú®ÂèëÈÄÅÂØÜÁ†ÅÊàñÂÖ∂‰ªñÊïèÊÑü‰ø°ÊÅØÊó∂Áªù‰∏çË¶Å‰ΩøÁî® GET POST ÊØî GET Êõ¥ÂÆâÂÖ®ÔºåÂõ†‰∏∫ÂèÇÊï∞‰∏ç‰ºöË¢´‰øùÂ≠òÂú®ÊµèËßàÂô®ÂéÜÂè≤Êàñ web ÊúçÂä°Âô®Êó•Âøó‰∏≠„ÄÇ ÂèØËßÅÊÄß Êï∞ÊçÆÂú® URL ‰∏≠ÂØπÊâÄÊúâ‰∫∫ÈÉΩÊòØÂèØËßÅÁöÑ„ÄÇ Êï∞ÊçÆ‰∏ç‰ºöÊòæÁ§∫Âú® URL ‰∏≠„ÄÇ Êä•Êñáhttp‰∫§Êç¢‰∏é‰º†ËæìÁöÑÊï∞ÊçÆÂçïÂÖÉÊòØÊä•Êñá„ÄÇÊä•ÊñáÁî±‰ªéÂÆ¢Êà∑Êú∫Âà∞ÊúçÂä°Âô®ÁöÑËØ∑Ê±ÇÂíå‰ªéÊúçÂä°Âô®Âà∞ÂÆ¢Êà∑Êú∫ÁöÑÂìçÂ∫îÊûÑÊàê„ÄÇ Â∫îÁ≠îÊä•ÊñáÊ†ºÂºèÂ¶Ç‰∏ãÔºö Áä∂ÊÄÅË°å Ôºç ÈÄöÁî®‰ø°ÊÅØÂ§¥ Ôºç ÂìçÂ∫îÂ§¥ Ôºç ÂÆû‰ΩìÂ§¥ Ôºç Êä•Êñá‰∏ª‰Ωì Áä∂ÊÄÅÁ†ÅÂÖÉÁî±3‰ΩçÊï∞Â≠óÁªÑÊàêÔºåË°®Á§∫ËØ∑Ê±ÇÊòØÂê¶Ë¢´ÁêÜËß£ÊàñË¢´Êª°Ë∂≥„ÄÇÂéüÂõ†ÂàÜÊûêÊòØÂØπÂéüÊñáÁöÑÁä∂ÊÄÅÁ†Å‰ΩúÁÆÄÁü≠ÁöÑÊèèËø∞ÔºåÁä∂ÊÄÅÁ†ÅÁî®Êù•ÊîØÊåÅËá™Âä®Êìç‰ΩúÔºåËÄåÂéüÂõ†ÂàÜÊûêÁî®Êù•‰æõÁî®Êà∑‰ΩøÁî®„ÄÇÂÆ¢Êà∑Êú∫Êó†ÈúÄÁî®Êù•Ê£ÄÊü•ÊàñÊòæÁ§∫ËØ≠Ê≥ï„ÄÇÊúâÂÖ≥ÈÄöÁî®‰ø°ÊÅØÂ§¥ÔºåÂìçÂ∫îÂ§¥ÂíåÂÆû‰ΩìÂ§¥ÊñπÈù¢ÁöÑÂÖ∑‰ΩìÂÜÖÂÆπÂèØ‰ª•ÂèÇÁÖßÁõ∏ÂÖ≥Êñá‰ª∂„ÄÇ requestrequestÊä•ÊñáÊ†ºÂºèÂ¶Ç‰∏ãÔºö ËØ∑Ê±ÇË°å Ôºç ÈÄöÁî®‰ø°ÊÅØÂ§¥ Ôºç ËØ∑Ê±ÇÂ§¥ Ôºç ÂÆû‰ΩìÂ§¥ Ôºç Êä•Êñá‰∏ª‰Ωì requestÊ∂àÊÅØÁªìÊûÑÂåÖÂê´‰∏âÈÉ®ÂàÜÔºö ÔºàËµ∑ÂßãË°å„ÄÅÈ¶ñÈÉ®Â≠óÊÆµ„ÄÅ‰∏ª‰ΩìÔºâ ‰∏ãÈù¢ÊäìÂåÖÈ™åËØÅÔºåÊäìÂåÖ‰ΩøÁî®ÁöÑÊòØCharlesËøô‰∏™ËΩØ‰ª∂„ÄÇ Â¶ÇÂõæÊâÄÁ§∫ÔºåËµ∑ÂßãË°åÔºö METHOD /path / http/version-number È¶ñÈÉ®Â≠óÊÆµÔºö Â§¥‰ø°ÊÅØHeader-Name:value ‰∏ª‰Ωì ËøîÂõûÂÜÖÂÆπoptional request body ËØ∑Ê±ÇË°å‰ª•ÊñπÊ≥ïÂ≠óÊÆµÂºÄÂßãÔºåÂêéÈù¢ÂàÜÂà´ÊòØ URL Â≠óÊÆµÂíå HTTP ÂçèËÆÆÁâàÊú¨Â≠óÊÆµÔºåÂπ∂‰ª• CRLF ÁªìÂ∞æ„ÄÇSP ÊòØÂàÜÈöîÁ¨¶„ÄÇÈô§‰∫ÜÂú®ÊúÄÂêéÁöÑ CRLF Â∫èÂàó‰∏≠ CF Âíå LF ÊòØÂøÖÈúÄÁöÑ‰πãÂ§ñÔºåÂÖ∂‰ªñÈÉΩÂèØ‰ª•‰∏çË¶Å„ÄÇÊúâÂÖ≥ÈÄöÁî®‰ø°ÊÅØÂ§¥ÔºåËØ∑Ê±ÇÂ§¥ÂíåÂÆû‰ΩìÂ§¥ÊñπÈù¢ÁöÑÂÖ∑‰ΩìÂÜÖÂÆπÂèØ‰ª•ÂèÇÁÖßÁõ∏ÂÖ≥Êñá‰ª∂„ÄÇ responseresponseÊä•ÊñáÊ†ºÂºèÂ¶Ç‰∏ãÔºö Áä∂ÊÄÅË°å Ôºç ÈÄöÁî®‰ø°ÊÅØÂ§¥ Ôºç ÂìçÂ∫îÂ§¥ Ôºç ÂÆû‰ΩìÂ§¥ Ôºç Êä•Êñá‰∏ª‰Ωì Á¨¨‰∏ÄÈÉ®ÂàÜ ÂåÖÊã¨ ÂçèËÆÆÁâàÊú¨http/version-number Áä∂ÊÄÅstatus code message Á¨¨‰∫åÈÉ®ÂàÜ Â§¥‰ø°ÊÅØheader-name:value Á¨¨‰∏âÈÉ®ÂàÜ body Áä∂ÊÄÅÁ†ÅÂÖÉÁî±3‰ΩçÊï∞Â≠óÁªÑÊàêÔºåË°®Á§∫ËØ∑Ê±ÇÊòØÂê¶Ë¢´ÁêÜËß£ÊàñË¢´Êª°Ë∂≥„ÄÇÂéüÂõ†ÂàÜÊûêÊòØÂØπÂéüÊñáÁöÑÁä∂ÊÄÅÁ†Å‰ΩúÁÆÄÁü≠ÁöÑÊèèËø∞ÔºåÁä∂ÊÄÅÁ†ÅÁî®Êù•ÊîØÊåÅËá™Âä®Êìç‰ΩúÔºåËÄåÂéüÂõ†ÂàÜÊûêÁî®Êù•‰æõÁî®Êà∑‰ΩøÁî®„ÄÇÂÆ¢Êà∑Êú∫Êó†ÈúÄÁî®Êù•Ê£ÄÊü•ÊàñÊòæÁ§∫ËØ≠Ê≥ï„ÄÇÊúâÂÖ≥ÈÄöÁî®‰ø°ÊÅØÂ§¥ÔºåÂìçÂ∫îÂ§¥ÂíåÂÆû‰ΩìÂ§¥ÊñπÈù¢ÁöÑÂÖ∑‰ΩìÂÜÖÂÆπÂèØ‰ª•ÂèÇÁÖßÁõ∏ÂÖ≥Êñá‰ª∂„ÄÇ Â∏∏ËßÅÁä∂ÊÄÅÁ†Åhttp/1.1ÁâàÊú¨ÁöÑÂçèËÆÆÈáåÈù¢ÂÆö‰πâ‰∫Ü‰∫îÁßçÁ±ªÂûãÁöÑÁä∂ÊÄÅÁ†ÅÔºö 1XX ÊèêÁ§∫‰ø°ÊÅØ 2XX ÊàêÂäü 3XX ÈáçÂÆöÂêë 4XX ÂÆ¢Êà∑Á´ØÈîôËØØ 5XX ÊúçÂä°Âô®Á´ØÁöÑÈîôËØØ Ê∂àÊÅØ ÊèèËø∞ 100 Continue ÊúçÂä°Âô®‰ªÖÊé•Êî∂Âà∞ÈÉ®ÂàÜËØ∑Ê±ÇÔºå‰ΩÜÊòØ‰∏ÄÊó¶ÊúçÂä°Âô®Âπ∂Ê≤°ÊúâÊãíÁªùËØ•ËØ∑Ê±ÇÔºåÂÆ¢Êà∑Á´ØÂ∫îËØ•ÁªßÁª≠ÂèëÈÄÅÂÖ∂‰ΩôÁöÑËØ∑Ê±Ç„ÄÇ 101 Switching Protocols ÊúçÂä°Âô®ËΩ¨Êç¢ÂçèËÆÆÔºöÊúçÂä°Âô®Â∞ÜÈÅµ‰ªéÂÆ¢Êà∑ÁöÑËØ∑Ê±ÇËΩ¨Êç¢Âà∞Âè¶Â§ñ‰∏ÄÁßçÂçèËÆÆ„ÄÇ Ê∂àÊÅØ ÊèèËø∞ 200 OK ËØ∑Ê±ÇÊàêÂäüÔºàÂÖ∂ÂêéÊòØÂØπGETÂíåPOSTËØ∑Ê±ÇÁöÑÂ∫îÁ≠îÊñáÊ°£„ÄÇÔºâ 201 Created ËØ∑Ê±ÇË¢´ÂàõÂª∫ÂÆåÊàêÔºåÂêåÊó∂Êñ∞ÁöÑËµÑÊ∫êË¢´ÂàõÂª∫„ÄÇ 202 Accepted ‰æõÂ§ÑÁêÜÁöÑËØ∑Ê±ÇÂ∑≤Ë¢´Êé•ÂèóÔºå‰ΩÜÊòØÂ§ÑÁêÜÊú™ÂÆåÊàê„ÄÇ 203 Non-authoritative Information ÊñáÊ°£Â∑≤ÁªèÊ≠£Â∏∏Âú∞ËøîÂõûÔºå‰ΩÜ‰∏Ä‰∫õÂ∫îÁ≠îÂ§¥ÂèØËÉΩ‰∏çÊ≠£Á°ÆÔºåÂõ†‰∏∫‰ΩøÁî®ÁöÑÊòØÊñáÊ°£ÁöÑÊã∑Ë¥ù„ÄÇ 204 No Content Ê≤°ÊúâÊñ∞ÊñáÊ°£„ÄÇÊµèËßàÂô®Â∫îËØ•ÁªßÁª≠ÊòæÁ§∫ÂéüÊù•ÁöÑÊñáÊ°£„ÄÇÂ¶ÇÊûúÁî®Êà∑ÂÆöÊúüÂú∞Âà∑Êñ∞È°µÈù¢ÔºåËÄåServletÂèØ‰ª•Á°ÆÂÆöÁî®Êà∑ÊñáÊ°£Ë∂≥Â§üÊñ∞ÔºåËøô‰∏™Áä∂ÊÄÅ‰ª£Á†ÅÊòØÂæàÊúâÁî®ÁöÑ„ÄÇ 205 Reset Content Ê≤°ÊúâÊñ∞ÊñáÊ°£„ÄÇ‰ΩÜÊµèËßàÂô®Â∫îËØ•ÈáçÁΩÆÂÆÉÊâÄÊòæÁ§∫ÁöÑÂÜÖÂÆπ„ÄÇÁî®Êù•Âº∫Âà∂ÊµèËßàÂô®Ê∏ÖÈô§Ë°®ÂçïËæìÂÖ•ÂÜÖÂÆπ„ÄÇ 206 Partial Content ÂÆ¢Êà∑ÂèëÈÄÅ‰∫Ü‰∏Ä‰∏™Â∏¶ÊúâRangeÂ§¥ÁöÑGETËØ∑Ê±ÇÔºåÊúçÂä°Âô®ÂÆåÊàê‰∫ÜÂÆÉ„ÄÇ Ê∂àÊÅØ ÊèèËø∞ 300 Multiple Choices Â§öÈáçÈÄâÊã©„ÄÇÈìæÊé•ÂàóË°®„ÄÇÁî®Êà∑ÂèØ‰ª•ÈÄâÊã©ÊüêÈìæÊé•Âà∞ËææÁõÆÁöÑÂú∞„ÄÇÊúÄÂ§öÂÖÅËÆ∏‰∫î‰∏™Âú∞ÂùÄ„ÄÇ 301 Moved Permanently ÊâÄËØ∑Ê±ÇÁöÑÈ°µÈù¢Â∑≤ÁªèËΩ¨ÁßªËá≥Êñ∞ÁöÑurl„ÄÇ 302 Found ÊâÄËØ∑Ê±ÇÁöÑÈ°µÈù¢Â∑≤Áªè‰∏¥Êó∂ËΩ¨ÁßªËá≥Êñ∞ÁöÑurl„ÄÇ 303 See Other ÊâÄËØ∑Ê±ÇÁöÑÈ°µÈù¢ÂèØÂú®Âà´ÁöÑurl‰∏ãË¢´ÊâæÂà∞„ÄÇ 304 Not Modified Êú™ÊåâÈ¢ÑÊúü‰øÆÊîπÊñáÊ°£„ÄÇÂÆ¢Êà∑Á´ØÊúâÁºìÂÜ≤ÁöÑÊñáÊ°£Âπ∂ÂèëÂá∫‰∫Ü‰∏Ä‰∏™Êù°‰ª∂ÊÄßÁöÑËØ∑Ê±ÇÔºà‰∏ÄËà¨ÊòØÊèê‰æõIf-Modified-SinceÂ§¥Ë°®Á§∫ÂÆ¢Êà∑Âè™ÊÉ≥ÊØîÊåáÂÆöÊó•ÊúüÊõ¥Êñ∞ÁöÑÊñáÊ°£Ôºâ„ÄÇÊúçÂä°Âô®ÂëäËØâÂÆ¢Êà∑ÔºåÂéüÊù•ÁºìÂÜ≤ÁöÑÊñáÊ°£ËøòÂèØ‰ª•ÁªßÁª≠‰ΩøÁî®„ÄÇ 305 Use Proxy ÂÆ¢Êà∑ËØ∑Ê±ÇÁöÑÊñáÊ°£Â∫îËØ•ÈÄöËøáLocationÂ§¥ÊâÄÊåáÊòéÁöÑ‰ª£ÁêÜÊúçÂä°Âô®ÊèêÂèñ„ÄÇ 306 Unused Ê≠§‰ª£Á†ÅË¢´Áî®‰∫éÂâç‰∏ÄÁâàÊú¨„ÄÇÁõÆÂâçÂ∑≤‰∏çÂÜç‰ΩøÁî®Ôºå‰ΩÜÊòØ‰ª£Á†Å‰æùÁÑ∂Ë¢´‰øùÁïô„ÄÇ 307 Temporary Redirect Ë¢´ËØ∑Ê±ÇÁöÑÈ°µÈù¢Â∑≤Áªè‰∏¥Êó∂ÁßªËá≥Êñ∞ÁöÑurl„ÄÇ Ê∂àÊÅØ ÊèèËø∞ 400 Bad Request ÊúçÂä°Âô®Êú™ËÉΩÁêÜËß£ËØ∑Ê±Ç„ÄÇ 401 Unauthorized Ë¢´ËØ∑Ê±ÇÁöÑÈ°µÈù¢ÈúÄË¶ÅÁî®Êà∑ÂêçÂíåÂØÜÁ†Å„ÄÇ 401.1 ÁôªÂΩïÂ§±Ë¥•„ÄÇ 401.2 ÊúçÂä°Âô®ÈÖçÁΩÆÂØºËá¥ÁôªÂΩïÂ§±Ë¥•„ÄÇ 401.3 Áî±‰∫é ACL ÂØπËµÑÊ∫êÁöÑÈôêÂà∂ËÄåÊú™Ëé∑ÂæóÊéàÊùÉ„ÄÇ 401.4 Á≠õÈÄâÂô®ÊéàÊùÉÂ§±Ë¥•„ÄÇ 401.5 ISAPI/CGI Â∫îÁî®Á®ãÂ∫èÊéàÊùÉÂ§±Ë¥•„ÄÇ 401.7 ËÆøÈóÆË¢´ Web ÊúçÂä°Âô®‰∏äÁöÑ URL ÊéàÊùÉÁ≠ñÁï•ÊãíÁªù„ÄÇËøô‰∏™ÈîôËØØ‰ª£Á†Å‰∏∫ IIS 6.0 ÊâÄ‰∏ìÁî®„ÄÇ 402 Payment Required Ê≠§‰ª£Á†ÅÂ∞öÊó†Ê≥ï‰ΩøÁî®„ÄÇ 403 Forbidden ÂØπË¢´ËØ∑Ê±ÇÈ°µÈù¢ÁöÑËÆøÈóÆË¢´Á¶ÅÊ≠¢„ÄÇ 403.1 ÊâßË°åËÆøÈóÆË¢´Á¶ÅÊ≠¢„ÄÇ 403.2 ËØªËÆøÈóÆË¢´Á¶ÅÊ≠¢„ÄÇ 403.3 ÂÜôËÆøÈóÆË¢´Á¶ÅÊ≠¢„ÄÇ 403.4 Ë¶ÅÊ±Ç SSL„ÄÇ 403.5 Ë¶ÅÊ±Ç SSL 128„ÄÇ 403.6 IP Âú∞ÂùÄË¢´ÊãíÁªù„ÄÇ 403.7 Ë¶ÅÊ±ÇÂÆ¢Êà∑Á´ØËØÅ‰π¶„ÄÇ 403.8 Á´ôÁÇπËÆøÈóÆË¢´ÊãíÁªù„ÄÇ 403.9 Áî®Êà∑Êï∞ËøáÂ§ö„ÄÇ 403.10 ÈÖçÁΩÆÊó†Êïà„ÄÇ 403.11 ÂØÜÁ†ÅÊõ¥Êîπ„ÄÇ 403.12 ÊãíÁªùËÆøÈóÆÊò†Â∞ÑË°®„ÄÇ 403.13 ÂÆ¢Êà∑Á´ØËØÅ‰π¶Ë¢´ÂêäÈîÄ„ÄÇ 403.14 ÊãíÁªùÁõÆÂΩïÂàóË°®„ÄÇ 403.15 Ë∂ÖÂá∫ÂÆ¢Êà∑Á´ØËÆøÈóÆËÆ∏ÂèØ„ÄÇ 403.16 ÂÆ¢Êà∑Á´ØËØÅ‰π¶‰∏çÂèó‰ø°‰ªªÊàñÊó†Êïà„ÄÇ 403.17 ÂÆ¢Êà∑Á´ØËØÅ‰π¶Â∑≤ËøáÊúüÊàñÂ∞öÊú™ÁîüÊïà„ÄÇ 403.18 Âú®ÂΩìÂâçÁöÑÂ∫îÁî®Á®ãÂ∫èÊ±†‰∏≠‰∏çËÉΩÊâßË°åÊâÄËØ∑Ê±ÇÁöÑ URL„ÄÇËøô‰∏™ÈîôËØØ‰ª£Á†Å‰∏∫ IIS 6.0 ÊâÄ‰∏ìÁî®„ÄÇ 403.19 ‰∏çËÉΩ‰∏∫Ëøô‰∏™Â∫îÁî®Á®ãÂ∫èÊ±†‰∏≠ÁöÑÂÆ¢Êà∑Á´ØÊâßË°å CGI„ÄÇËøô‰∏™ÈîôËØØ‰ª£Á†Å‰∏∫ IIS 6.0 ÊâÄ‰∏ìÁî®„ÄÇ 403.20 Passport ÁôªÂΩïÂ§±Ë¥•„ÄÇËøô‰∏™ÈîôËØØ‰ª£Á†Å‰∏∫ IIS 6.0 ÊâÄ‰∏ìÁî®„ÄÇ 404 Not Found ÊúçÂä°Âô®Êó†Ê≥ïÊâæÂà∞Ë¢´ËØ∑Ê±ÇÁöÑÈ°µÈù¢„ÄÇ 404.0 ÔºàÊó†Ôºâ‚ÄìÊ≤°ÊúâÊâæÂà∞Êñá‰ª∂ÊàñÁõÆÂΩï„ÄÇ 404.1 Êó†Ê≥ïÂú®ÊâÄËØ∑Ê±ÇÁöÑÁ´ØÂè£‰∏äËÆøÈóÆ Web Á´ôÁÇπ„ÄÇ 404.2 Web ÊúçÂä°Êâ©Â±ïÈîÅÂÆöÁ≠ñÁï•ÈòªÊ≠¢Êú¨ËØ∑Ê±Ç„ÄÇ 404.3 MIME Êò†Â∞ÑÁ≠ñÁï•ÈòªÊ≠¢Êú¨ËØ∑Ê±Ç„ÄÇ 405 Method Not Allowed ËØ∑Ê±Ç‰∏≠ÊåáÂÆöÁöÑÊñπÊ≥ï‰∏çË¢´ÂÖÅËÆ∏„ÄÇ 406 Not Acceptable ÊúçÂä°Âô®ÁîüÊàêÁöÑÂìçÂ∫îÊó†Ê≥ïË¢´ÂÆ¢Êà∑Á´ØÊâÄÊé•Âèó„ÄÇ 407 Proxy Authentication Required Áî®Êà∑ÂøÖÈ°ªÈ¶ñÂÖà‰ΩøÁî®‰ª£ÁêÜÊúçÂä°Âô®ËøõË°åÈ™åËØÅÔºåËøôÊ†∑ËØ∑Ê±ÇÊâç‰ºöË¢´Â§ÑÁêÜ„ÄÇ 408 Request Timeout ËØ∑Ê±ÇË∂ÖÂá∫‰∫ÜÊúçÂä°Âô®ÁöÑÁ≠âÂæÖÊó∂Èó¥„ÄÇ 409 Conflict Áî±‰∫éÂÜ≤Á™ÅÔºåËØ∑Ê±ÇÊó†Ê≥ïË¢´ÂÆåÊàê„ÄÇ 410 Gone Ë¢´ËØ∑Ê±ÇÁöÑÈ°µÈù¢‰∏çÂèØÁî®„ÄÇ 411 Length Required ‚ÄúContent-Length‚Äù Êú™Ë¢´ÂÆö‰πâ„ÄÇÂ¶ÇÊûúÊó†Ê≠§ÂÜÖÂÆπÔºåÊúçÂä°Âô®‰∏ç‰ºöÊé•ÂèóËØ∑Ê±Ç„ÄÇ 412 Precondition Failed ËØ∑Ê±Ç‰∏≠ÁöÑÂâçÊèêÊù°‰ª∂Ë¢´ÊúçÂä°Âô®ËØÑ‰º∞‰∏∫Â§±Ë¥•„ÄÇ 413 Request Entity Too Large Áî±‰∫éÊâÄËØ∑Ê±ÇÁöÑÂÆû‰ΩìÁöÑÂ§™Â§ßÔºåÊúçÂä°Âô®‰∏ç‰ºöÊé•ÂèóËØ∑Ê±Ç„ÄÇ 414 Request-url Too Long Áî±‰∫éurlÂ§™ÈïøÔºåÊúçÂä°Âô®‰∏ç‰ºöÊé•ÂèóËØ∑Ê±Ç„ÄÇÂΩìpostËØ∑Ê±ÇË¢´ËΩ¨Êç¢‰∏∫Â∏¶ÊúâÂæàÈïøÁöÑÊü•ËØ¢‰ø°ÊÅØÁöÑgetËØ∑Ê±ÇÊó∂ÔºåÂ∞±‰ºöÂèëÁîüËøôÁßçÊÉÖÂÜµ„ÄÇ 415 Unsupported Media Type Áî±‰∫éÂ™í‰ªãÁ±ªÂûã‰∏çË¢´ÊîØÊåÅÔºåÊúçÂä°Âô®‰∏ç‰ºöÊé•ÂèóËØ∑Ê±Ç„ÄÇ 416 Requested Range Not Satisfiable ÊúçÂä°Âô®‰∏çËÉΩÊª°Ë∂≥ÂÆ¢Êà∑Âú®ËØ∑Ê±Ç‰∏≠ÊåáÂÆöÁöÑRangeÂ§¥„ÄÇ 417 Expectation Failed ÊâßË°åÂ§±Ë¥•„ÄÇ 423 ÈîÅÂÆöÁöÑÈîôËØØ„ÄÇ Ê∂àÊÅØ ÊèèËø∞ 500 Internal Server Error ËØ∑Ê±ÇÊú™ÂÆåÊàê„ÄÇÊúçÂä°Âô®ÈÅáÂà∞‰∏çÂèØÈ¢ÑÁü•ÁöÑÊÉÖÂÜµ„ÄÇ 500.12 Â∫îÁî®Á®ãÂ∫èÊ≠£Âøô‰∫éÂú® Web ÊúçÂä°Âô®‰∏äÈáçÊñ∞ÂêØÂä®„ÄÇ 500.13 Web ÊúçÂä°Âô®Â§™Âøô„ÄÇ 500.15 ‰∏çÂÖÅËÆ∏Áõ¥Êé•ËØ∑Ê±Ç Global.asa„ÄÇ 500.16 UNC ÊéàÊùÉÂá≠ÊçÆ‰∏çÊ≠£Á°Æ„ÄÇËøô‰∏™ÈîôËØØ‰ª£Á†Å‰∏∫ IIS 6.0 ÊâÄ‰∏ìÁî®„ÄÇ 500.18 URL ÊéàÊùÉÂ≠òÂÇ®‰∏çËÉΩÊâìÂºÄ„ÄÇËøô‰∏™ÈîôËØØ‰ª£Á†Å‰∏∫ IIS 6.0 ÊâÄ‰∏ìÁî®„ÄÇ 500.100 ÂÜÖÈÉ® ASP ÈîôËØØ„ÄÇ 501 Not Implemented ËØ∑Ê±ÇÊú™ÂÆåÊàê„ÄÇÊúçÂä°Âô®‰∏çÊîØÊåÅÊâÄËØ∑Ê±ÇÁöÑÂäüËÉΩ„ÄÇ 502 Bad Gateway ËØ∑Ê±ÇÊú™ÂÆåÊàê„ÄÇÊúçÂä°Âô®‰ªé‰∏äÊ∏∏ÊúçÂä°Âô®Êî∂Âà∞‰∏Ä‰∏™Êó†ÊïàÁöÑÂìçÂ∫î„ÄÇ 502.1 CGI Â∫îÁî®Á®ãÂ∫èË∂ÖÊó∂„ÄÇ ¬∑ 502.2 CGI Â∫îÁî®Á®ãÂ∫èÂá∫Èîô„ÄÇ 503 Service Unavailable ËØ∑Ê±ÇÊú™ÂÆåÊàê„ÄÇÊúçÂä°Âô®‰∏¥Êó∂ËøáËΩΩÊàñÂΩìÊú∫„ÄÇ 504 Gateway Timeout ÁΩëÂÖ≥Ë∂ÖÊó∂„ÄÇ 505 HTTP Version Not Supported ÊúçÂä°Âô®‰∏çÊîØÊåÅËØ∑Ê±Ç‰∏≠ÊåáÊòéÁöÑHTTPÂçèËÆÆÁâàÊú¨„ÄÇ ÁºìÂ≠ò‰ΩúÁî®Êúâ‰∏âÔºåÂáèÂ∞ëÂÆ¢Êà∑Á´ØËØ∑Ê±ÇÈ¢ëÁéáÔºåÂ¢ûÂä†ÂÆ¢Êà∑Á´ØÂìçÂ∫îÈÄüÂ∫¶ÔºåÂáèÂ∞ëÂÜó‰ΩôÊï∞ÊçÆÁöÑ‰º†Ëæì ‰∏ãÂõæÊòØË∞∑Ê≠åÊµèËßàÂô®Ë∞ÉËØïÊ®°ÂºèÁïåÈù¢ÔºåÂú®headerÊ†è‰∏≠Ê∏ÖÊô∞ÁöÑÊòæÁ§∫‰∫ÜÁºìÂ≠òÁöÑÊúÄÂ§ß‰øùÊåÅÊó∂Èó¥ HTTPÂçèËÆÆÁöÑÁâπÁÇπ Êó†Áä∂ÊÄÅÔºàÊØèÊ¨°ËØ∑Ê±ÇÈÉΩÊòØÁã¨Á´ãÁöÑÔºâ ÈÄöËøácookie+sessionÁöÑÊú∫Âà∂ÔºåÂÆåÊàêÂÆÉÁöÑÊó†Áä∂ÊÄÅÁâπÁÇπ Â§öÊ¨°ËØ∑Ê±Ç Âü∫‰∫éTCPÂçèËÆÆ ÂçèËÆÆÁâàÊú¨Âè∑Http1.1ÂíåHttp1.0ÁöÑÂå∫Âà´ HTTP/1.0ÂçèËÆÆ‰ΩøÁî®ÈùûÊåÅ‰πÖËøûÊé•,Âç≥Âú®ÈùûÊåÅ‰πÖËøûÊé•‰∏ã,‰∏Ä‰∏™tcpËøûÊé•Âè™‰º†Ëæì‰∏Ä‰∏™WebÂØπË±°Ôºõ HTTP/1.1ÈªòËÆ§‰ΩøÁî®ÊåÅ‰πÖËøûÊé•(ÁÑ∂ËÄå,HTTP/1.1ÂçèËÆÆÁöÑÂÆ¢Êà∑Êú∫ÂíåÊúçÂä°Âô®ÂèØ‰ª•ÈÖçÁΩÆÊàê‰ΩøÁî®ÈùûÊåÅ‰πÖËøûÊé•)„ÄÇ HTTP2.0‰∏éHTTP1.0ÁöÑÂå∫Âà´ HTTP2.0ÁöÑÂ§öË∑ØÂ§çÁî® ÊµèËßàÂô®ÂØπÂêå‰∏ÄÂüüÂêç‰∏ãÁöÑÂπ∂ÂèëËøûÊé•Êï∞ÈáèÊúâÈôêÂà∂Ôºå‰∏ÄËà¨‰∏∫6‰∏™ÔºåHTTP1‰∏≠ÁöÑKeep-AliveÁî®‰∫éÈïøËøûÊé•ËÄå‰∏çÂøÖÈáçÊñ∞Âª∫Á´ãËøûÊé•ÔºåÁÑ∂ËÄåkeep-aliveÂøÖÈ°ªÁ≠âÊú¨Ê¨°ËØ∑Ê±ÇÂΩªÂ∫ïÂÆåÊàêÂêéÊâçËÉΩÂèëÈÄÅ‰∏ã‰∏Ä‰∏™ËØ∑Ê±ÇÔºåËÄåHTTP2ÁöÑËØ∑Ê±Ç‰∏éÂìçÂ∫î‰ª•‰∫åËøõÂà∂Â∏ßÁöÑÂΩ¢Âºè‰∫§ÈîôËøõË°åÔºåÂè™ÈúÄÂª∫Á´ã‰∏ÄÊ¨°ËøûÊé•ÔºåÂç≥‰∏ÄËΩÆ‰∏âÊ¨°Êè°ÊâãÔºåÂÆûÁé∞Â§öË∑ØÂ§çÁî®„ÄÇ HTTP2.0ÂéãÁº©Ê∂àÊÅØÂ§¥ HTTP1ÁöÑÊ∂àÊÅØÂ§¥ÂæàÂ§ßÂÜó‰ΩôÔºåËÄåHTTP2.0Âà©Áî®HPACKÂØπÊ∂àÊÅØÂ§¥ËøõË°åÂéãÁº©‰º†ËæìÔºåÂÅáËÆæÂ∞ÜÂ∏∏Áî®ÁöÑËØ∑Ê±ÇGET/index.htmlÁî®1Ë°®Á§∫ÔºåPOST/index.htmlÁî®2Ë°®Á§∫ÔºåÂç≥ÊòØÂ∞ÜÊ∂àÊÅØÂ§¥‰∏≠ÁöÑ‰∏çÂêåÁöÑÈÉ®ÂàÜÂàÜÂà´Áî®‰∏çÁî®ÁöÑÁ¥¢ÂºïËøõË°åË°®Á§∫Ôºå‰∏î‰ºöÁî®ÂìàÂ§´ÊõºÁºñÁ†ÅÂéãÁº©Â≠óÁ¨¶‰∏≤ÔºåÊúÄÂêéÂ∞ÅË£ÖÊàêframe„ÄÇÁ¥¢ÂºïË°®ÂàÜ‰∏∫Âä®ÊÄÅÁ¥¢ÂºïÂíåÈùôÊÄÅÁ¥¢ÂºïÔºåÂä®ÊÄÅÁ¥¢ÂºïË°®Âú®ÂÆ¢Êà∑Á´ØÂíåÊúçÂä°Âô®Á´ØÂÖ±ÂêåÁª¥Êä§ÔºåÈùôÊÄÅÁ¥¢ÂºïÈááÁî®Á°¨ÁºñÁ†ÅÂΩ¢Âºè„ÄÇ HTTP2.0ÊúçÂä°Á´ØÊé®ÈÄÅ HTTP2.0‰∏≠ÊúçÂä°Âô®‰ºö‰∏ªÂä®Â∞ÜËµÑÊ∫êÊé®ÈÄÅÁªôÂÆ¢Êà∑Á´ØÔºå‰æãÂ¶ÇÊääjsÂíåcssÊñá‰ª∂‰∏ªÂä®Êé®ÈÄÅÁªôÂÆ¢Êà∑Á´ØËÄå‰∏çÁî®ÂÆ¢Êà∑Á´ØËß£ÊûêHTMLÂêéËØ∑Ê±ÇÂÜçÂìçÂ∫î„ÄÇ HTTPSHTTPËØ∑Ê±ÇËøáÁ®ã‰∏≠ÔºåÂÆ¢Êà∑Á´Ø‰∏éÊúçÂä°Âô®‰πãÈó¥Ê≤°Êúâ‰ªª‰ΩïË∫´‰ªΩÁ°ÆËÆ§ÁöÑËøáÁ®ãÔºåÊï∞ÊçÆÂÖ®ÈÉ®ÊòéÊñá‰º†ËæìÔºå‚ÄúË£∏Â•î‚ÄùÂú®‰∫íËÅîÁΩë‰∏äÔºåÊâÄ‰ª•ÂæàÂÆπÊòìÈÅ≠Âà∞ÈªëÂÆ¢ÁöÑÊîªÂáªÂä´ÊåÅËÆ©Á≥ªÁªüÁò´Áó™ÔºåÂΩìÂÆ¢Êà∑Á´ØÂèëÈÄÅËØ∑Ê±ÇÂæàÂÆπÊòìË¢´ÈªëÂÆ¢Êà™Ëé∑ÔºåÂ¶ÇÊûúÈªëÂÆ¢ÂÜíÂÖÖÁõÆÊ†áÊúçÂä°Âô®ÔºåÂàôÂèØËøîÂõû‰ªªÊÑè‰ø°ÊÅØÁªôÂÆ¢Êà∑Á´ØÔºå‰∏çË¢´ÂÆ¢Êà∑Á´ØÊâÄÂØüËßâÔºåÊàë‰ª¨ÁªèÂ∏∏‰ºöÂê¨Âà∞‚ÄúÂä´ÊåÅ‚Äù‰∏ÄËØçÔºåÊâÄ‰ª•‰ΩøÁî®Áõ¥Êé•‰ΩøÁî®HTTP‰º†ËæìÊòØÊúâÈ£éÈô©ÁöÑ„ÄÇ HTTPSÂçèËÆÆÔºàHyperText Transfer Protocol over Secure Socket LayerÔºâÔºöÂèØ‰ª•ÁêÜËß£‰∏∫HTTP+SSL/TLSÔºåÂç≥HTTP‰∏ãÂä†ÂÖ•SSLÂ±ÇÔºåHTTPSÁöÑÂÆâÂÖ®Âü∫Á°ÄÊòØ SSLÔºåÂõ†Ê≠§Âä†ÂØÜÁöÑËØ¶ÁªÜÂÜÖÂÆπÂ∞±ÈúÄË¶ÅSSLÔºåÁî®‰∫éÂÆâÂÖ®ÁöÑHTTPÊï∞ÊçÆ‰º†Ëæì„ÄÇ ÂéÜÂè≤ ÁΩëË≠¶ÂÖ¨Âè∏ÁöÑSSL3.0 SSLÔºàSecure Socket LayerÔºåÂÆâÂÖ®Â•óÊé•Â≠óÂ±ÇÔºâÔºö1994Âπ¥‰∏∫ÁΩëÊôØÊâÄÁ†îÂèëÔºåSSLÂçèËÆÆ‰Ωç‰∫éTCP/IPÂçèËÆÆ‰∏éÂêÑÁßçÂ∫îÁî®Â±ÇÂçèËÆÆ‰πãÈó¥Ôºå‰∏∫Êï∞ÊçÆÈÄöËÆØÊèê‰æõÂÆâÂÖ®ÊîØÊåÅ„ÄÇ ISOCËøô‰∏™ÁªÑÁªá Âú®SSLÁöÑÂü∫Á°Ä‰∏äÂèëÂ∏É‰∫ÜÂçáÁ∫ßÁâàÊú¨ TLS1.2 TLSÔºàTransport Layer SecurityÔºå‰º†ËæìÂ±ÇÂÆâÂÖ®ÔºâÔºöÂÖ∂ÂâçË∫´ÊòØSSLÔºåÂÆÉÊúÄÂàùÁöÑÂá†‰∏™ÁâàÊú¨ÔºàSSL 1.0„ÄÅSSL 2.0„ÄÅSSL 3.0ÔºâÁî±ÁΩëÊôØÂÖ¨Âè∏ÂºÄÂèëÔºå1999Âπ¥‰ªé3.1 ÂºÄÂßãË¢´IETFÊ†áÂáÜÂåñÂπ∂ÊîπÂêçÔºåÂèëÂ±ïËá≥‰ªäÂ∑≤ÁªèÊúâ TLS 1.0„ÄÅTLS 1.1„ÄÅTLS 1.2 ‰∏â‰∏™ÁâàÊú¨„ÄÇSSL3.0ÂíåTLS1.0Áî±‰∫éÂ≠òÂú®ÂÆâÂÖ®ÊºèÊ¥ûÔºåÂ∑≤ÁªèÂæàÂ∞ëË¢´‰ΩøÁî®Âà∞„ÄÇÁõÆÂâç‰ΩøÁî®ÊúÄÂπøÊ≥õÁöÑÊòØTLS 1.1„ÄÅTLS 1.2„ÄÇ HTTPSÁöÑÂ∑•‰ΩúÂéüÁêÜÂÅáËÆæAË¶ÅÁªôBÂèë‚ÄúÊàëÁà±‰Ω†‚Äù ÂØπÁß∞Âä†Ëß£ÂØÜÂ¶ÇÊûú‰ΩøÁî®ÂØπÁß∞Âä†Ëß£ÂØÜ BÊúâÂØÜÈí•ÔºåÂèØ‰ª•ËøõË°åÁõ∏Â∫îÁöÑËß£ÂØÜ„ÄÇÁî±‰∫éÂØÜÈí•ÊòØÂÖ¨ÂºÄÁöÑÔºåÊâÄÊúâÁöÑÂÆ¢Êà∑Á´ØÈÉΩÂèØ‰ª•ÊãøÂà∞ÔºåÂ¶ÇÂõæÔºö Ëã•ÔºåÈíàÂØπ‰∏çÂêåÁöÑÂÆ¢Êà∑Á´Ø‰ΩøÁî®‰∏çÂêåÁöÑÂØÜÈí• Âèà‰ºöÂá∫Áé∞ÂçèÂïÜÈóÆÈ¢òÔºöÁî±‰∫éÊ≤°ÊúâÂÖ¨ÂÖ±ÁöÑÂØÜÈí•‰∫ÜÔºåÊúçÂä°Á´ØË¶ÅÁªôÊØè‰∏™ÂÆ¢Êà∑Á´ØÂèëÂØÜÈí•Ôºå‰ΩÜÂçèÂïÜËøáÁ®ãÊòØÊ≤°ÊúâÂä†ÂØÜÁöÑÔºåÊâÄ‰ª•Ëøò‰ºöÂá∫Áé∞Ë¢´Êà™Êñ≠ÁöÑÈóÆÈ¢ò ÈùûÂØπÁß∞Âä†Ëß£ÂØÜÈùûÂØπÁß∞ÔºöÂÖ¨Èí•ÂíåÁßÅÈí•ÁöÑÊ¶ÇÂøµ ÈÇ£‰πàÈóÆÈ¢òÂ∞±Êù•‰∫ÜÔºö ÂÆ¢Êà∑Á´ØÂ¶Ç‰ΩïÊãøÂà∞ÂÖ¨Èí•Ôºü ÊñπÊ°àÔºö ÊúçÂä°Âô®Á´ØÊääÂÖ¨Èí•ÂèëÈÄÅÁªôÊØè‰∏Ä‰∏™ÂÆ¢Êà∑Á´Ø ÊúçÂä°Âô®Á´ØÊääÂÖ¨Èí•ÊîæÂà∞ËøúÁ®ãÊúçÂä°Âô®ÔºåÂÆ¢Êà∑Á´ØÂèØ‰ª•ËØ∑Ê±ÇÂà∞ ËÆ©ÊµèËßàÂô®‰øùÂ≠òÊâÄÊúâÁöÑÂÖ¨Èí•Ôºà‰∏çÁé∞ÂÆûÔºâ ÁªìËÆ∫Ôºö ÂÖ¨Èí•Ë¢´Ë∞ÉÂåÖÁöÑÈóÆÈ¢òÊåâÁÖß‰∏äÈù¢ÁöÑÊñπÊ°àÔºåÊ∞∏ËøúÂ≠òÂú®„ÄÇ Á¨¨‰∏âÊñπÊú∫ÊûÑ‰∏éÊï∞Â≠óËØÅ‰π¶ËøôÊó∂ÂÄôÂá∫Áé∞‰∫ÜÈÄöËøáÁ¨¨‰∏âÊñπÊú∫ÊûÑÔºå‰ΩøÁî®Á¨¨‰∏âÊñπÊú∫ÊûÑÁöÑÁßÅÈí•ÂØπÊàë‰ª¨ÈúÄË¶Å‰º†ËæìÁöÑÂÖ¨Èí•ËøõË°åÂä†ÂØÜ„ÄÇ Êï∞Â≠óËØÅ‰π¶ÊòØ‰∏Ä‰∏™ÁªèËØÅ‰π¶ÊéàÊùÉ‰∏≠ÂøÉÊï∞Â≠óÁ≠æÂêçÁöÑÂåÖÂê´ÂÖ¨ÂºÄÂØÜÈí•Êã•ÊúâËÄÖ‰ø°ÊÅØ‰ª•ÂèäÂÖ¨ÂºÄÂØÜÈí•ÁöÑÊñá‰ª∂„ÄÇ Êï∞Â≠óËØÅ‰π¶ÈáåÈù¢ÂåÖÂê´ÁöÑÂÜÖÂÆπÔºö ÂÖ¨Âè∏‰ø°ÊÅØ„ÄÅÁΩëÁ´ô‰ø°ÊÅØ„ÄÅÊï∞Â≠óËØÅ‰π¶ÁöÑÁÆóÊ≥ï„ÄÅÂÖ¨Èí• ËøûÊé•ËøáÁ®ã Â¶Ç‰ΩïÊü•ÁúãÂÖ¨Èí•ÔºüÊµèËßàÂô®ÊúâÂÖ•Âè£Áõ¥Êé•ÊâìÂºÄ„ÄÇ Charles‰πüÂèØ‰ª•Êõ¥ÊîπÊ∑ªÂä†SSL ÊÄª‰ΩìÊµÅÁ®ã ÂÆ¢Êà∑Á´ØÂèëËµ∑‰∏Ä‰∏™httpsËØ∑Ê±Ç a) ÂÆ¢Êà∑Á´ØÊîØÊåÅÁöÑÂä†ÂØÜÊñπÂºè b) ÂÆ¢Êà∑Á´ØÁîüÊàêÁöÑÈöèÊú∫Êï∞ÔºàÁ¨¨‰∏Ä‰∏™ÈöèÊú∫Êï∞Ôºâ ÊúçÂä°Á´ØÊî∂Âà∞ËØ∑Ê±ÇÂêéÔºåÊãøÂà∞ÈöèÊú∫Êï∞ÔºåËøîÂõû a) ËØÅ‰π¶ÔºàÈ¢ÅÂèëÊú∫ÊûÑÔºàCAÔºâ„ÄÅËØÅ‰π¶ÂÜÖÂÆπÊú¨Ë∫´ÁöÑÊï∞Â≠óÁ≠æÂêçÔºà‰ΩøÁî®Á¨¨‰∏âÊñπÊú∫ÊûÑÁöÑÁßÅÈí•Âä†ÂØÜÔºâ„ÄÅËØÅ‰π¶ÊåÅÊúâËÄÖÁöÑÂÖ¨Èí•„ÄÅËØÅ‰π¶Á≠æÂêçÁî®Âà∞ÁöÑhashÁÆóÊ≥ïÔºâ b) ÁîüÊàê‰∏Ä‰∏™ÈöèÊú∫Êï∞ÔºåËøîÂõûÁªôÂÆ¢Êà∑Á´ØÔºàÁ¨¨‰∫å‰∏™ÈöèÊú∫Êï∞Ôºâ ÂÆ¢Êà∑Á´ØÊãøÂà∞ËØÅ‰π¶‰ª•ÂêéÂÅöÈ™åËØÅ a) Ê†πÊçÆÈ¢ÅÂèëÊú∫ÊûÑÊâæÂà∞Êú¨Âú∞ÁöÑË∑üËØÅ‰π¶ b) Ê†πÊçÆCAÂæóÂà∞Ê†πËØÅ‰π¶ÁöÑÂÖ¨Èí•ÔºåÈÄöËøáÂÖ¨Èí•ÂØπÊï∞Â≠óÁ≠æÂêçËß£ÂØÜÔºåÂæóÂà∞ËØÅ‰π¶ÁöÑÂÜÖÂÆπÊëòË¶Å A c) Áî®ËØÅ‰π¶Êèê‰æõÁöÑÁÆóÊ≥ïÂØπËØÅ‰π¶ÂÜÖÂÆπËøõË°åÊëòË¶ÅÔºåÂæóÂà∞ÊëòË¶Å B d) ÈÄöËøáAÂíåBÁöÑÂØπÊØîÔºå‰πüÂ∞±ÊòØÈ™åËØÅÊï∞Â≠óÁ≠æÂêç È™åËØÅÈÄöËøá‰ª•ÂêéÔºåÁîüÊàê‰∏Ä‰∏™ÈöèÊú∫Êï∞ÔºàÁ¨¨‰∏â‰∏™ÈöèÊú∫Êï∞ÔºâÔºåÈÄöËøáËØÅ‰π¶ÂÜÖÁöÑÂÖ¨Èí•ÂØπËøô‰∏™ÈöèÊú∫Êï∞Âä†ÂØÜÔºåÂèëÈÄÅÁªôÊúçÂä°Âô®Á´Ø ÔºàÈöèÊú∫Êï∞1+2+3ÔºâÈÄöËøáÂØπÁß∞Âä†ÂØÜÂæóÂà∞‰∏Ä‰∏™ÂØÜÈí•„ÄÇÔºà‰ºöËØùÂØÜÈí•Ôºâ ÈÄöËøá‰ºöËØùÂØÜÈí•ÂØπÂÜÖÂÆπËøõË°åÂØπÁß∞Âä†ÂØÜ‰º†Ëæì HTTPSÁöÑ‰ºòÁÇπ1„ÄÅSEOÊñπÈù¢ Ë∞∑Ê≠åÊõæÂú®2014Âπ¥8Êúà‰ªΩË∞ÉÊï¥ÊêúÁ¥¢ÂºïÊìéÁÆóÊ≥ïÔºåÂπ∂Áß∞‚ÄúÊØîËµ∑ÂêåÁ≠âHTTPÁΩëÁ´ôÔºåÈááÁî®HTTPSÂä†ÂØÜÁöÑÁΩëÁ´ôÂú®ÊêúÁ¥¢ÁªìÊûú‰∏≠ÁöÑÊéíÂêçÂ∞Ü‰ºöÊõ¥È´ò‚Äù„ÄÇ 2„ÄÅÂÆâÂÖ®ÊÄß Â∞ΩÁÆ°HTTPSÂπ∂ÈùûÁªùÂØπÂÆâÂÖ®ÔºåÊéåÊè°Ê†πËØÅ‰π¶ÁöÑÊú∫ÊûÑ„ÄÅÊéåÊè°Âä†ÂØÜÁÆóÊ≥ïÁöÑÁªÑÁªáÂêåÊ†∑ÂèØ‰ª•ËøõË°å‰∏≠Èó¥‰∫∫ÂΩ¢ÂºèÁöÑÊîªÂáªÔºå‰ΩÜHTTPS‰ªçÊòØÁé∞Ë°åÊû∂ÊûÑ‰∏ãÊúÄÂÆâÂÖ®ÁöÑËß£ÂÜ≥ÊñπÊ°àÔºå‰∏ªË¶ÅÊúâ‰ª•‰∏ãÂá†‰∏™Â•ΩÂ§ÑÔºö Ôºà1Ôºâ‰ΩøÁî®HTTPSÂçèËÆÆÂèØËÆ§ËØÅÁî®Êà∑ÂíåÊúçÂä°Âô®ÔºåÁ°Æ‰øùÊï∞ÊçÆÂèëÈÄÅÂà∞Ê≠£Á°ÆÁöÑÂÆ¢Êà∑Êú∫ÂíåÊúçÂä°Âô®Ôºõ Ôºà2ÔºâHTTPSÂçèËÆÆÊòØÁî±SSL+HTTPÂçèËÆÆÊûÑÂª∫ÁöÑÂèØËøõË°åÂä†ÂØÜ‰º†Ëæì„ÄÅË∫´‰ªΩËÆ§ËØÅÁöÑÁΩëÁªúÂçèËÆÆÔºåË¶ÅÊØîhttpÂçèËÆÆÂÆâÂÖ®ÔºåÂèØÈò≤Ê≠¢Êï∞ÊçÆÂú®‰º†ËæìËøáÁ®ã‰∏≠‰∏çË¢´Á™ÉÂèñ„ÄÅÊîπÂèòÔºåÁ°Æ‰øùÊï∞ÊçÆÁöÑÂÆåÊï¥ÊÄß„ÄÇ Ôºà3ÔºâHTTPSÊòØÁé∞Ë°åÊû∂ÊûÑ‰∏ãÊúÄÂÆâÂÖ®ÁöÑËß£ÂÜ≥ÊñπÊ°àÔºåËôΩÁÑ∂‰∏çÊòØÁªùÂØπÂÆâÂÖ®Ôºå‰ΩÜÂÆÉÂ§ßÂπÖÂ¢ûÂä†‰∫Ü‰∏≠Èó¥‰∫∫ÊîªÂáªÁöÑÊàêÊú¨„ÄÇ HTTPSÁöÑÁº∫ÁÇπÔºà1ÔºâSSLËØÅ‰π¶Ë¥πÁî®ÂæàÈ´òÔºå‰ª•ÂèäÂÖ∂Âú®ÊúçÂä°Âô®‰∏äÁöÑÈÉ®ÁΩ≤„ÄÅÊõ¥Êñ∞Áª¥Êä§ÈùûÂ∏∏ÁπÅÁêê Ôºà2ÔºâHTTPSÈôç‰ΩéÁî®Êà∑ËÆøÈóÆÈÄüÂ∫¶ÔºàÂ§öÊ¨°Êè°ÊâãÔºâ Ôºà3ÔºâÁΩëÁ´ôÊîπÁî®HTTPS‰ª•ÂêéÔºåÁî±HTTPË∑≥ËΩ¨Âà∞HTTPSÁöÑÊñπÂºèÂ¢ûÂä†‰∫ÜÁî®Êà∑ËÆøÈóÆËÄóÊó∂ÔºàÂ§öÊï∞ÁΩëÁ´ôÈááÁî®302Ë∑≥ËΩ¨Ôºâ Ôºà4ÔºâHTTPSÊ∂âÂèäÂà∞ÁöÑÂÆâÂÖ®ÁÆóÊ≥ï‰ºöÊ∂àËÄóCPUËµÑÊ∫êÔºåÈúÄË¶ÅÂ¢ûÂä†Â§ßÈáèÊú∫Âô®ÔºàhttpsËÆøÈóÆ) Ôºà5ÔºâHTTPSÂçèËÆÆÁöÑÂä†ÂØÜËåÉÂõ¥‰πüÊØîËæÉÊúâÈôêÔºåÂú®ÈªëÂÆ¢ÊîªÂáª„ÄÅÊãíÁªùÊúçÂä°ÊîªÂáª„ÄÅÊúçÂä°Âô®Âä´ÊåÅÁ≠âÊñπÈù¢Âá†‰πéËµ∑‰∏çÂà∞‰ªÄ‰πà‰ΩúÁî®„ÄÇ http‰∏éhttpsÁöÑÂå∫Âà´HTTPÁöÑURL‰ª• http://ÂºÄÂ§¥ÔºåËÄåHTTPSÁöÑURL‰ª•https://ÂºÄÂ§¥„ÄÇ HTTPÊòØ‰∏çÂÆâÂÖ®ÁöÑÔºåËÄåHTTPSÊòØÂÆâÂÖ®ÁöÑ„ÄÇ HTTPÊ†áÂáÜÁ´ØÂè£ÊòØ80 ÔºåËÄåHTTPSÁöÑÊ†áÂáÜÁ´ØÂè£ÊòØ443„ÄÇ Âú®OSIÁΩëÁªúÊ®°Âûã‰∏≠ÔºåHTTPÂ∑•‰Ωú‰∫éÂ∫îÁî®Â±ÇÔºåËÄåHTTPSÂ∑•‰ΩúÂú®‰º†ËæìÂ±Ç„ÄÇ HTTPÊó†ÈúÄÂä†ÂØÜÔºåËÄåHTTPSÂØπ‰º†ËæìÁöÑÊï∞ÊçÆËøõË°åÂä†ÂØÜ„ÄÇ HTTPÊó†ÈúÄËØÅ‰π¶ÔºåËÄåHTTPSÈúÄË¶ÅËÆ§ËØÅËØÅ‰π¶„ÄÇ RESTfulREST ÔºöË°®Ëø∞ÊÄßÁä∂ÊÄÅËΩ¨Áßª RESTfulÊòØ‰ΩøÁî®WEBÊ†áÂáÜÊù•ÂÅö‰∏Ä‰∫õÂáÜÂàôÂíåÁ∫¶Êùü„ÄÇ RESTfulÁöÑÂü∫Êú¨Ê¶ÇÂøµÔºö Âú®REST‰∏≠Ôºå‰∏ÄÂàáÁöÑÂÜÖÂÆπÈÉΩË¢´ËÆ§‰∏∫ÊòØ‰∏ÄÁßçËµÑÊ∫ê ÊØè‰∏™ËµÑÊ∫êÈÉΩÁî±URIÂîØ‰∏ÄÊ†áËØÜ ‰ΩøÁî®Áªü‰∏ÄÁöÑÊé•Âè£Â§ÑÁêÜËµÑÊ∫êËØ∑Ê±ÇÔºàPOST/GET/PUT/DELETE/HEADÔºâ Êó†Áä∂ÊÄÅ ËµÑÊ∫êÂíåURI [/]Ë°®Á§∫ËµÑÊ∫êÁöÑÂ±ÇÁ∫ßÂÖ≥Á≥ª ÔºüËøáÊª§ËµÑÊ∫ê ‰ΩøÁî®_ÊàñËÄÖ-ËÆ©URIÁöÑÂèØËØªÊÄßÊõ¥Â•Ω Áªü‰∏ÄÊé•Âè£ GET Ëé∑ÂèñÊüê‰∏™ËµÑÊ∫ê„ÄÇ ÂπÇÁ≠â POST ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑËµÑÊ∫ê PUT ÊõøÊç¢Êüê‰∏™Â∑≤ÊúâÁöÑËµÑÊ∫êÔºàÊõ¥Êñ∞Êìç‰ΩúÔºâ Ôºå ÂπÇÁ≠â DELETE Âà†Èô§Êüê‰∏™ËµÑÊ∫ê PATCH/HEAD Êõ¥Êñ∞ÈÉ®ÂàÜËµÑÊ∫ê ËµÑÊ∫êË°®Ëø∞ÂÆ¢Êà∑Á´ØÈÄöËøáHTTPËé∑ÂèñËµÑÊ∫ê MIME Á±ªÂûãÔºàÔºâ accept: text/xml htmlÊñá‰ª∂ Content-TypeÂëäËØâÂÆ¢Êà∑Á´ØËµÑÊ∫êÁöÑË°®Ëø∞ÂΩ¢Âºè ËµÑÊ∫êÈìæÊé• Ë∂ÖÂ™í‰ΩìÂç≥Â∫îÁî®Áä∂ÊÄÅÂºïÊìé Áä∂ÊÄÅËΩ¨ÁßªÊúçÂä°Âô®Á´Ø‰∏çÂ∫îËØ•‰øùÂ≠òÂÆ¢Êà∑Á´ØÁä∂ÊÄÅ„ÄÇ Â∫îÁî®Áä∂ÊÄÅ- &gt;ÊúçÂä°Âô®Á´Ø‰∏ç‰øùÂ≠òÂ∫îÁî®Áä∂ÊÄÅ ÂèÇËÄÉÊñáÁåÆÁôæÂ∫¶ÁôæÁßë ÊÑüË∞¢ÔºÅ ÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèã~]]></content>
      <tags>
        <tag>ÊäÄÊúØ</tag>
        <tag>Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ</tag>
        <tag>ÁΩëÁªú</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ=3=-ÂàÜÂ∏ÉÂºè‰∫ãÂä°]]></title>
    <url>%2F2018%2F08%2F16%2F%E5%AD%A6%E5%A5%BD%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84-%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[ËøôÊòØÁ¨¨‰∫îÊúüÊñáÁ´†„ÄÇËøô‰∏ÄÊúüÊàë‰ª¨ËÅäËÅäÂàÜÂ∏ÉÂºè‰∫ãÂä° ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ Êï∞ÊçÆÂ∫ìÂçïÊú∫‰∫ãÂä°Ë¶Å‰∫ÜËß£ÂàÜÂ∏ÉÂºè‰∫ãÂä°ÔºåÈ¶ñÂÖàË¶ÅÊòéÁôΩ‰ªÄ‰πàÊòØ‚Äú‰∫ãÂä°‚Äù„ÄÇ„ÄÇ ÂèØ‰ª•ÂèÇËÄÉ‰∫ãÂä°ÁöÑÂÆö‰πâÔºö ‰∫ãÂä°Êó∂Êï∞ÊçÆÂ∫ìËøêË°å‰∏≠ÁöÑ‰∏Ä‰∏™ÈÄªËæëÂ∑•‰ΩúÂçïÂÖÉÔºåÂ∑•‰ΩúÂçïÂÖÉÂÜÖÁöÑ‰∏ÄÁ≥ªÂàóSQLÂëΩ‰ª§ÂÖ∑ÊúâÂéüÂ≠êÊÄßÊìç‰ΩúÁöÑÁâπÁÇπÔºåËøô‰∫õÂëΩ‰ª§Ë¶Å‰πàÂÆåÂÖ®ÊàêÂäüËøêË°åÔºåË¶Å‰πàÂÆåÂÖ®Êí§ÈîÄÊàñËÄÖ‰∏çÊâßË°åÔºåÂ¶ÇÊûúÊó∂ÂêéËÄÖÔºåÂàôË°®Áé∞‰∏∫Êï∞ÊçÆÂ∫ìÂÜÖÁöÑÊúÄÁªàÊï∞ÊçÆÊ≤°ÊúâÂèëÁîüÊîπÂèò„ÄÇ Êï∞ÊçÆÂ∫ì‰∫ãÂä°Êª°Ë∂≥4‰∏™Ë¶ÅÊ±ÇÔºö ÂéüÂ≠êÊÄßÔºö‰∫ãÂä°ÂøÖÈ°ªÊó∂ÂéüÂ≠êÂ∑•‰ΩúÂçïÂÖÉÔºåÂØπÂÖ∂ËøõË°åÊï∞ÊçÆ‰øÆÊîπÔºåË¶Å‰πàÂÖ®ÈÉΩÊâßË°åÔºåË¶Å‰πàÈÉΩ‰∏çÊâßË°å ‰∏ÄËá¥ÊÄßÔºö‰∫ãÂä°Âú®ÂÆåÊàêÊó∂ÔºåÂøÖÈ°ª‰ΩøÊâÄÊúâÊï∞ÊçÆÈÉΩ‰øùÊåÅ‰∏ÄËá¥ÁöÑÁä∂ÊÄÅÔºå‰∫ãÂä°ÁªìÊùüÊó∂ÔºåÊâÄÊúâÂÜÖÈÉ®Êï∞ÊçÆÁªìÊûÑÈÉΩÂøÖÈ°ªÊó∂Ê≠£Á°ÆÁöÑ ÈöîÁ¶ªÊÄßÔºöÁî±Âπ∂Âèë‰∫ãÂä°ÂÅöÂá∫ÁöÑ‰øÆÊîπÂøÖÈ°ªÂíåÂÖ∂‰ªñÂπ∂Âèë‰∫ãÂä°ÊâÄÂÅöÁöÑ‰øÆÊîπÈöîÁ¶ª ÊåÅ‰πÖÊÄßÔºö‰∫ãÂä°ÂÆåÊàêÂêéÔºåÂØπÁ≥ªÁªüÁöÑÂΩ±ÂìçÊó∂Ê∞∏‰πÖÁöÑ ËøôÂÖ∂‰∏≠ÂéüÂ≠êÊÄßÔºåÈúÄË¶ÅËÆ∞ÂΩïÊìç‰ΩúËøáÁ®ãÂíåÂØπÂ∫îÁªìÊûúÔºå‰ª•‰æø‰∫éÂõûÈÄÄÔºõËÄåÈöîÁ¶ªÊÄßÔºåÈúÄË¶Å‰∫ßÁîüÈîÅÔºõËøô‰∏§ÁßçË¶ÅÊ±ÇÔºåÂØºËá¥Êï∞ÊçÆÂ∫ì‰∫ãÂä°ÊâßË°å‰ª£‰ª∑Ë¶ÅËøúÈ´ò‰∫éÈùû‰∫ãÂä°ÊÄßÊìç‰Ωú MySQLÊâßË°å‰∫ãÂä°Âú®MySQLÈáåÔºå‰∫ãÂä°Áõ∏ÂÖ≥ÁöÑÊó•Âøó‰∏∫redoÂíåundo‰∏§‰∏™Êñá‰ª∂Ôºåredo logËÆ∞ÂΩï‰∫ãÂä°‰øÆÊîπÂêéÁöÑÊï∞ÊçÆÔºåundo logËÆ∞ÂΩï‰∫ãÂä°ÂâçÁöÑÊï∞ÊçÆ ‰∏ãÈù¢Êó∂MySQLÊâßË°å‰∫ãÂä°ÁöÑÁÆÄÂåñÊµÅÁ®ãÔºö ÂÖàËÆ∞ÂΩïundo/redo log ÔºåÁ°Æ‰øùÊó•ÂøóÂÜôÂÖ•Á°¨Áõò Êõ¥Êñ∞Êï∞ÊçÆËÆ∞ÂΩïÔºåÁºìÂ≠òÊìç‰ΩúÂπ∂ÂºÇÊ≠•Âà∑Êñ∞Á°¨Áõò commit‰∫ãÂä°Êìç‰Ωú„ÄÇÂÖàÊ∏ÖÁêÜundo‰ø°ÊÅØÔºåÁÑ∂ÂêéÈáäÊîæÈîÅËµÑÊ∫êÔºåÂú®redo‰∏≠ÂÜôÂÖ•commitÊìç‰ΩúÔºåÂà∑Êñ∞ÂêéÁ°Æ‰øùredoÂÆåÊàêÂπ∂Â≠òÂú®Á°¨Áõò‰∏≠ÔºåËøôÊ†∑ÂèØ‰ª•‰øùËØÅÊï∞ÊçÆÂ∫ìÁöÑÂÆåÊï¥ÊÄßÂíå‰∏ÄËá¥ÊÄß„ÄÇ ÂèØ‰ª•ÁúãÂà∞ÔºåÂæàÂ§öÊìç‰ΩúÔºåË≠¨Â¶ÇÂÜôÊó•Âøó‰ª•Èò≤ÂõûÊªöÔºåÈÉΩÊòØÂú®ÂÜôcommit‰πãÂâçÂÆåÊàêÁöÑ„ÄÇcommitÊåá‰ª§Âú®‰∫ãÂä°‰∏≠ÊâÄÂç†Êó∂Èó¥ÈùûÂ∏∏Â∞ëÔºåËøôÂ∞±Êó∂‰∫ãÂä°ÁöÑ‰∏Ä‰∏™ÈáçË¶ÅÁâπÁÇπ„ÄÇ X/OpenDTP‰∫ãÂä°Ê®°ÂûãÂàÜÂ∏ÉÂºè‰∫ãÂä°‰∏≠Ôºå‰∏Ä‰∏™‰∫ãÂä°ÂÜÖÁöÑSQLÂæÄÂæÄÊìç‰ΩúÂæàÂ§öÊï∞ÊçÆÂ∫ìÔºå‰πüË¶Å‰øùËØÅ‰∫ãÂä°ÁöÑ4‰∏™Ë¶ÅÊ±Ç„ÄÇÊâÄ‰ª•Â∞±ÊúâX/OpenDTPËøô‰∏™ËßÑËåÉ‰∫Ü X/Open DTP ÂÆö‰πâ‰∫Ü‰∏â‰∏™ËßíËâ≤Ôºö APÔºåTMÔºåRM AP(Application Program)Ôºö‰πüÂ∞±ÊòØÂ∫îÁî®Á®ãÂ∫èÔºåÂèØ‰ª•ÁêÜËß£‰∏∫‰ΩøÁî®DTPÁöÑÁ®ãÂ∫èÔºåÊàë‰ª¨crudÁöÑ‰ª£Á†ÅÂ∞±ÊòØËøô‰∏™ RM(Resource Manager)ÔºöËµÑÊ∫êÁÆ°ÁêÜÂô®ÔºåËøôÈáåÂèØ‰ª•ÁêÜËß£‰∏∫‰∏Ä‰∏™DBMSÁ≥ªÁªüÔºåÊàñËÄÖÊ∂àÊÅØÊúçÂä°Âô®ÁÆ°ÁêÜÁ≥ªÁªüÔºåÂ∫îÁî®Á®ãÂ∫èÈÄöËøáËµÑÊ∫êÁÆ°ÁêÜÂô®ÂØπËµÑÊ∫êËøõË°åÊéßÂà∂„ÄÇËµÑÊ∫êÂøÖÈ°ªÂÆûÁé∞XAÂÆö‰πâÁöÑÊé•Âè£ TM(Transaction Manager)Ôºö‰∫ãÂä°ÁÆ°ÁêÜÂô®ÔºåË¥üË¥£ÂçèË∞ÉÂíåÁÆ°ÁêÜ‰∫ãÂä°ÔºåÊèê‰æõÁªôAPÂ∫îÁî®Á®ãÂ∫èÁºñÁ®ãÊé•Âè£‰ª•ÂèäÁÆ°ÁêÜËµÑÊ∫êÁÆ°ÁêÜÂô® ÂÖ∂‰∏≠ÔºåAP ÂèØ‰ª•ÂíåTM ‰ª•Âèä RM ÈÄö‰ø°ÔºåTM Âíå RM ‰∫íÁõ∏‰πãÈó¥ÂèØ‰ª•ÈÄö‰ø°ÔºåDTPÊ®°ÂûãÈáåÈù¢ÂÆö‰πâ‰∫ÜXAÊé•Âè£ÔºåTM Âíå RM ÈÄöËøáXAÊé•Âè£ËøõË°åÂèåÂêëÈÄö‰ø°Ôºå‰æãÂ¶Ç:TMÈÄöÁü•RMÊèê‰∫§‰∫ãÂä°ÊàñËÄÖÂõûÊªö‰∫ãÂä°ÔºåRMÊääÊèê‰∫§ÁªìÊûúÈÄöÁü•ÁªôTM„ÄÇAPÂíåRM‰πãÈó¥ÂàôÈÄöËøáRMÊèê‰æõÁöÑNative API ËøõË°åËµÑÊ∫êÊéßÂà∂ÔºåËøô‰∏™Ê≤°ÊúâËøõË°åÁ∫¶APIÂíåËßÑËåÉÔºåÂêÑ‰∏™ÂéÇÂïÜËá™Â∑±ÂÆûÁé∞Ëá™Â∑±ÁöÑËµÑÊ∫êÊéßÂà∂ÔºåÊØîÂ¶ÇOracleËá™Â∑±ÁöÑÊï∞ÊçÆÂ∫ìÈ©±Âä®Á®ãÂ∫è„ÄÇ ÂÖ∂‰∏≠Âú®DTPÂÆö‰∫Ü‰ª•‰∏ãÂá†‰∏™Ê¶ÇÂøµÔºö ‰∫ãÂä°Ôºö‰∏Ä‰∏™‰∫ãÂä°ÊòØ‰∏Ä‰∏™ÂÆåÊï¥ÁöÑÂ∑•‰ΩúÂçïÂÖÉÔºåÁî±Â§ö‰∏™Áã¨Á´ãÁöÑËÆ°ÁÆó‰ªªÂä°ÁªÑÊàêÔºåËøôÂ§ö‰∏™‰ªªÂä°Âú®ÈÄªËæë‰∏äÊòØÂéüÂ≠êÁöÑ„ÄÇ ÂÖ®Â±Ä‰∫ãÂä°ÔºöÂØπ‰∫é‰∏ÄÊ¨°ÊÄßÊìç‰ΩúÂ§ö‰∏™ËµÑÊ∫êÁÆ°ÁêÜÂô®ÁöÑ‰∫ãÂä°ÔºåÂ∞±ÊòØÂÖ®Â±Ä‰∫ãÂä° ÂàÜÊîØ‰∫ãÂä°ÔºöÂú®ÂÖ®Â±Ä‰∫ãÂä°‰∏≠ÔºåÊüê‰∏Ä‰∏™ËµÑÊ∫êÁÆ°ÁêÜÂô®ÊúâËá™Â∑±Áã¨Á´ãÁöÑ‰ªªÂä°ÔºåËøô‰∫õ‰ªªÂä°ÁöÑÈõÜÂêà‰Ωú‰∏∫Ëøô‰∏™ËµÑÊ∫êÁÆ°ÁêÜÂô®ÁöÑÂàÜÊîØ‰ªªÂä° ÊéßÂà∂Á∫øÁ®ãÔºöÁî®Êù•Ë°®Á§∫‰∏Ä‰∏™Â∑•‰ΩúÁ∫øÁ®ãÔºå‰∏ªË¶ÅÊòØÂÖ≥ËÅîAP,TM,RM‰∏âËÄÖÁöÑ‰∏Ä‰∏™Á∫øÁ®ãÔºå‰πüÂ∞±ÊòØ‰∫ãÂä°‰∏ä‰∏ãÊñáÁéØÂ¢É„ÄÇÁÆÄÂçïÁöÑËØ¥ÔºåÂ∞±ÊòØÈúÄË¶ÅÊ†áËØÜ‰∏Ä‰∏™ÂÖ®Â±Ä‰∫ãÂä°‰ª•ÂèäÂàÜÊîØ‰∫ãÂä°ÁöÑÂÖ≥Á≥ª„ÄÇ ‰∏§Èò∂ÊÆµÊèê‰∫§ÂçèËÆÆ‰∏ãÈù¢ËØ¥ËØ¥Ëøô‰∏™Ê®°Âûã‰∏≠ÊúÄËëóÂêçÁöÑ‰∫åÈò∂ÊÆµÊèê‰∫§ÂçèËÆÆ ÂΩì‰∏Ä‰∏™ÂàÜÂ∏ÉÂºè‰∫ãÂä°ÊâÄËÆæËÆ°ÁöÑSQLÈÉΩÊâßË°åÂÆåÊàêÔºåÊâì‰∫ÜRMÊúÄÂêéÊèê‰∫§‰∫ãÂä°ÁöÑÊó∂ÂÄôÔºå‰∏∫‰∫ÜÈÅøÂÖçÂàÜÂ∏ÉÂºèÁ≥ªÁªüÊâÄÂõ∫ÊúâÁöÑ‰∏çÂèØÈù†ÊÄßÂØºËá¥Êèê‰∫§‰∫ãÂä°Â§±Ë¥•ÔºåTMËøôÊó∂ÂÄô‰ºöËµ∞‰∫åÈò∂ÊÆµÊèê‰∫§ÂçèËÆÆ ‰∏§Èò∂ÊÆµÊèê‰∫§ÂçèËÆÆÔºöÂ¶ÇÊûú‰∏Ä‰∏™‰∫ãÂä°ÁÆ°ÁêÜÂô®ÁÆ°ÁêÜÁùÄÂ§ö‰∏™ËµÑÊ∫êÁÆ°ÁêÜÂô®ÔºåÂ¶ÇÊûúÊéßÂà∂ÂÖ®Â±Ä‰∫ãÂä°ÂíåÂàÜÊîØ‰∫ãÂä°ÔºåÂú®DTPÈáåÈù¢ËØ¥Êòé‰∏§Èò∂ÊÆµÊèê‰∫§ÁöÑÂçèËÆÆ Á¨¨‰∏ÄÈò∂ÊÆµÔºöÂèëËµ∑ÊäïÁ•®Ë°®ÂÜ≥ ÈÄöÁü•ÊâÄÊúâRMÂÖàÂÆåÊàê‰∫ãÂä°Êèê‰∫§Ê∂âÂèäÁöÑÂ§çÊùÇÂáÜÂ§áÂ∑•‰ΩúÔºåË≠¨Â¶Ç‰∏äÊñáÊèêÂà∞ÁöÑredoÊó•ÂøóÔºåÂ∞ΩÈáèÊääÊèê‰∫§ËøáÁ®ã‰∏≠ÊâÄÊúâÊ∂àËÄóÊó∂Èó¥ÁöÑÂ∑•‰ΩúÊèêÂâçÂÆåÊàêÔºåÁ°Æ‰øùÂêéÈù¢‰∫ãÂä°100%ÊàêÂäü Á¨¨‰∫åÈò∂ÊÆµÔºöÊ≠£ÂºèÊèê‰∫§ TMÂ∞ÜÁ¨¨‰∏ÄÈò∂ÊÆµÁöÑÁªìÊûúËøõË°åÂÜ≥Á≠ñÔºåÂç≥Êèê‰∫§ÊàñÂèñÊ∂à‰∫ãÂä°„ÄÇÂΩì‰∏î‰ªÖÂΩìÊâÄÊúâÂèÇ‰∏éÁöÑRMÂêåÊÑèÊèê‰∫§Êó∂ÔºåTMÊâçÈÄöÁü•ÊâÄÊúâRMÊ≠£ÂºèÊèê‰∫§‰∫ãÂä°ÔºåÂê¶ÂàôÂàôÂèñÊ∂à‰∫ãÂä°„ÄÇ ‰∏ãÈù¢ÂºïÁî®ÂèÇËÄÉÊñáÁåÆÁöÑ‰∏ÄÂπÖÂõæÔºåËØ¶ÁªÜÊºîÁ§∫‰∫ÜÊ≠£Â∏∏ÊÉÖÂÜµ‰∏ãÁöÑ‰∏§Èò∂ÊÆµÊèê‰∫§Ôºå Â¶ÇÊûúÁ¨¨‰∏ÄÈò∂ÊÆµÊüê‰∏Ä‰∏™ËµÑÊ∫êÈ¢ÑÊèê‰∫§Â§±Ë¥•ÔºåÁ¨¨‰∫åÈò∂ÊÆµÂ∞±ÂõûÊªöÁ¨¨‰∏ÄÈò∂ÊÆµÂ∑≤ÁªèÈ¢ÑÊèê‰∫§ÊàêÂäüÁöÑËµÑÊ∫ê ‰ª•‰∏äÊòØÊØîËæÉÊ≠£Â∏∏ÁöÑÊÉÖÂÜµÔºå‰ΩÜÊòØÁî±‰∫éRMÊúâÊùÉÂà©Ëá™Â∑±Ê†πÊçÆÊÉÖÂÜµÊèê‰∫§ÊàñËÄÖÂõûÊªöËá™Â∑±ÁöÑÂàÜÊîØ‰∫ãÂä°ÔºàÂÆòÊñπËØ¥Ê≥ïÊòØÔºöHeuristic DecisionÔºâÈÇ£‰∏â‰πàÂ∞±ÂèØËÉΩÂá∫Áé∞‰ª•‰∏ãÁßçÊÉÖÂÜµÔºö 1 Âú®TMÈÄöÁü•RMÊèê‰∫§‰∫ãÂä°‰πãÂâçÔºåRMÂàÜÊîØ‰∫ãÂä°Â∑≤ÁªèÊèê‰∫§ 2 Âú®TMÈÄöÁü•RMÊèê‰∫§‰∫ãÂä°‰πãÂâçÔºåRMÂàÜÊîØ‰∫ãÂä°ÂÖ®ÈÉ®ÂõûÊªö 3 Âú®TMÈÄöÁü•RMÊèê‰∫§‰∫ãÂä°‰πãÂâçÔºåRMÂàÜÊîØ‰∫ãÂä°ÈÉ®ÂàÜÂõûÊªö ‰∫íËÅîÁΩë‰∏≠ÁöÑÂàÜÂ∏ÉÂºè‰∫ãÂä°Ëß£ÂÜ≥ÊñπÊ°à‰∏ãÈù¢‰ªãÁªç‰∏âÁßç‰∫íËÅîÁΩë‰∏≠ÁöÑÂàÜÂ∏ÉÂºè‰∫ãÂä°Ëß£ÂÜ≥ÊñπÊ°à Á¨¨‰∏ÄÁßçÔºö‰∏çÁî®ÂàÜÂ∏ÉÂºèËøô‰∏™ÊñπÊ°àÊó∂Â∞Ü‰∏Ä‰∏™‰∏öÂä°ÊµÅÁ®ã‰∏≠ÈúÄË¶ÅÂú®‰∏Ä‰∏™‰∫ãÂä°‰∏≠ÊâßË°åÂ§ö‰∏™Áõ∏ÂÖ≥‰∏öÂä°Êé•Âè£ÂåÖË£ÖÂà∞‰∏Ä‰∏™‰∫ãÂä°‰∏≠Ôºå‰ªéËÄåÈÅøÂÖçÂàÜÂ∏ÉÂºè‰∫ãÂä°„ÄÇ Á¨¨‰∫åÁßçÔºöeBayÊñπÊ°àÁ¨¨‰∏âÁßçÔºö ÊîØ‰ªòÂÆùDTSÊ°ÜÊû∂ÂèÇËÄÉËµÑÊñôX/Open DTP(X/Open Distributed Transaction Processing Reference Model) ÊÑüË∞¢ ÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèãÔºåÂí±‰ª¨‰∏§‰∏™ÊÉ≥‰∏™Âè∑Á†ÅÔºå ‰π∞‰∏™ÂΩ©Á•®ÔºåÂÖàÊå£‰ªñ‰∏™Âá†Áôæ‰∏áüòù]]></content>
      <tags>
        <tag>ÊäÄÊúØ</tag>
        <tag>Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ=1=-TCP/IP]]></title>
    <url>%2F2018%2F08%2F16%2F%E6%88%91%E8%A6%81%E5%AD%A6%E5%A5%BD%E5%88%86%E5%B8%83%E5%BC%8F-TCP-IP%2F</url>
    <content type="text"><![CDATA[ÂàÜÂ∏ÉÂºè‰∏éÁΩëÁªú‰∫íËÅîÂ∞§‰∏∫ÂØÜÂàáÔºåËÄåTCP/IPÔºà‰º†ËæìÊéßÂà∂ÂçèËÆÆ/‰∫íËÅîÁΩëÁªúÂçèËÆÆÔºâÊòØÁΩëÁªú‰∏≠ÊúÄÂü∫Êú¨ÁöÑÂçèËÆÆ„ÄÇTCP/IPÁªìÂêàDNS„ÄÅË∑ØÁî±Áõ∏ÂÖ≥ÁöÑÂçèËÆÆÊúÄÁªàÂÆûÁé∞ÁöÑ‰∫ÜÁΩëÁªúÁöÑ‰ªªÊÑè‰∏§ÁÇπÁöÑÊï∞ÊçÆÈÄö‰ø°ÈóÆÈ¢ò„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢„ÄÇ ÂçèËÆÆÊÄé‰πàÂàÜÂ±ÇÁöÑÂë¢ÔºüÊèêÂà∞ÂçèËÆÆÂàÜÂ±ÇÔºåÊàë‰ª¨ÂæàÂÆπÊòìËÅîÊÉ≥Âà∞ISO-OSIÁöÑ‰∏ÉÂ±ÇÂçèËÆÆÁªèÂÖ∏Êû∂ÊûÑÔºå‰ΩÜÊòØTCP/IPÂçèËÆÆÊóèÁöÑÁªìÊûÑÂàôÁ®çÊúâ‰∏çÂêå„ÄÇ OSI‰∏ÉÂ±ÇÁΩëÁªúÊ®°Âûã TCP/IPÂõõÂ±ÇÊ¶ÇÂøµÊ®°Âûã ÂØπÂ∫îÁΩëÁªúÂçèËÆÆ Â∫îÁî®Â±ÇÔºàApplicationÔºâ Â∫îÁî®Â±Ç HTTP„ÄÅTFTP, FTP, NFS, WAIS„ÄÅSMTP Ë°®Á§∫Â±ÇÔºàPresentationÔºâ Telnet, Rlogin, SNMP, Gopher ‰ºöËØùÂ±ÇÔºàSessionÔºâ SMTP, DNS ‰º†ËæìÂ±ÇÔºàTransportÔºâ ‰º†ËæìÂ±Ç TCP, UDP ÁΩëÁªúÂ±ÇÔºàNetworkÔºâ ÁΩëÁªúÂ±Ç IP, ICMP, ARP, RARP, AKP, UUCP Êï∞ÊçÆÈìæË∑ØÂ±ÇÔºàData LinkÔºâ Êï∞ÊçÆÈìæË∑ØÂ±Ç FDDI, Ethernet, Arpanet, PDN, SLIP, PPP Áâ©ÁêÜÂ±ÇÔºàPhysicalÔºâ IEEE 802.1A, IEEE 802.2Âà∞IEEE 802.11 TCP/IPÂçèËÆÆÊóèÊåâÁÖßÂ±ÇÊ¨°Áî±‰∏äÂà∞‰∏ãÔºåÂ±ÇÂ±ÇÂåÖË£Ö„ÄÇ ÊúÄ‰∏äÈù¢ÁöÑÂ∞±ÊòØÂ∫îÁî®Â±Ç‰∫ÜÔºåËøôÈáåÈù¢ÊúâhttpÔºåftp,Á≠âÁ≠âÊàë‰ª¨ÁÜüÊÇâÁöÑÂçèËÆÆ„ÄÇ Á¨¨‰∫åÂ±ÇÂàôÊòØ‰º†ËæìÂ±ÇÔºåËëóÂêçÁöÑTCPÂíåUDPÂçèËÆÆÂ∞±Âú®Ëøô‰∏™Â±ÇÊ¨°ÔºåÊàë‰ª¨ÁÜüÁü•ÁöÑÁΩëÈ°µÂ§ßÈÉ®ÂàÜÊòØÁî±TCP‰º†ËæìÁöÑÔºåËÄåÁé©ÁöÑÊ∏∏ÊàèÂ§ßÈÉ®ÂàÜÊòØÁî±UDP‰º†ËæìÁöÑ„ÄÇ Á¨¨‰∏âÂ±ÇÊòØÁΩëÁªúÂ±ÇÔºåIPÂçèËÆÆÂ∞±Âú®ËøôÈáåÔºåÂÆÉË¥üË¥£ÂØπÊï∞ÊçÆÂä†‰∏äIPÂú∞ÂùÄÂíåÂÖ∂‰ªñÁöÑÊï∞ÊçÆ‰ª•Á°ÆÂÆö‰º†ËæìÁöÑÁõÆÊ†á„ÄÇ Á¨¨ÂõõÂ±ÇÊòØÂè´Êï∞ÊçÆÈìæË∑ØÂ±ÇÔºåËøô‰∏™Â±ÇÊ¨°‰∏∫ÂæÖ‰º†ÈÄÅÁöÑÊï∞ÊçÆÂä†ÂÖ•‰∏Ä‰∏™‰ª•Â§™ÁΩëÂçèËÆÆÂ§¥ÔºåÂπ∂ËøõË°åCRCÁºñÁ†ÅÔºå‰∏∫ÊúÄÂêéÁöÑÊï∞ÊçÆ‰º†ËæìÂÅöÂáÜÂ§á„ÄÇ TCP/IPÂõõÂ±ÇÂçèËÆÆ‰∏éOSI‰∏ÉÂ±ÇÁΩëÁªúÊ®°ÂûãÂ±ÇÂ±ÇÁõ∏ÂØπÔºåÁªìÊûÑÂàÜÊòé„ÄÇ ÂçèËÆÆÊòØ‰ªÄ‰πàÊ†∑Â≠êÁöÑÂë¢ÔºüÊâìÂºÄcmdÔºàÊú¨‰∫∫windowsÂπ≥Âè∞ÔºâÔºåËæìÂÖ•ËøêË°åipconfig/all ËøôÈáåÂ∞±ÂèØ‰ª•Ê∏ÖÊ•öÁöÑÊòæÁ§∫Âá∫Êù•ÊàëPCÁöÑÂêÑÁßçÁΩëË∑Ø‰ø°ÊÅØÔºåÁîöËá≥ÊàëPCÂá†‰∏™ÁΩëÂç°ÈÉΩËÉΩÁúãÁöÑ‰∏ÄÊ∏Ö‰∫åÊ•ö„ÄÇ ‰º†ËæìËøáÁ®ãÊú¨Âú∞‰º†ËæìÂ¶ÇÊûúÊàë‰ª¨ÊµèËßàÁΩëÈ°µÔºåÈÄöÂ∏∏‰ºöÂú®ÊµèËßàÂô®Âú∞ÂùÄÊ†è‰∏≠Êâì‰∏ä3‰∏™wÂíåÁΩëÁ´ôÁöÑÂêçÂ≠óÔºåÂ∞±Ë≠¨Â¶ÇÊâìÂºÄÁôæÂ∫¶ÈúÄË¶ÅËæìÂÖ•WWW.BAIDU.COMÔºåËøô‰∏™ÂêçÂ≠óÂ∞±Âè´ÂüüÂêç„ÄÇÊàë‰ª¨ÁöÑÊµèËßàÂô®‰ºöÂèëÁé∞url‰∏≠ÁΩëÁ´ôÁöÑÂüüÂêçÔºåÁÑ∂ÂêéÊü•ÊâæÊú¨Âú∞ÁöÑhostÊñá‰ª∂ÔºåÊ†πÊçÆhostÊñá‰ª∂Êü•ÊâæÂìçÂ∫îÁöÑdnsÊúçÂä°Âô®ipÂú∞ÂùÄÔºåÁî®UDPÂçèËÆÆÂêëdnsÊúçÂä°Âô®ÂèëÈÄÅdnsÊü•ËØ¢ÂëΩ‰ª§ÔºådnsÊúçÂä°Âô®Ëé∑ÂèñÂà∞Êü•ËØ¢ÂëΩ‰ª§Âπ∂‰ªéÁºìÂ≠òÊàñËÄÖÊï∞ÊçÆÂ∫ì‰∏≠Êü•ËØ¢ÊîπÂüüÂêçÂØπÂ∫î‰∏ªÊú∫ÁöÑipÂú∞ÂùÄÔºåÂÜçÂ∞ÜËøô‰∏™ipÂú∞ÂùÄÂèëÂà∞‰Ω†ÊµèËßàÂô®‰∏ä„ÄÇ ÊúâÁÇπÁªïÂè£ÔºåÂÆûÈôÖ‰Ω†ÂèØ‰ª•‰ΩøÁî®cmdÁöÑnslookupÊù•Ë∑üË∏™Ëøô‰∏™ËøáÁ®ã„ÄÇ Êàë‰ª¨ÁúãÂà∞Ôºå‰ΩøÁî®Â§öÊ¨°ÂëΩ‰ª§Êü•ËØ¢ÔºåÂæóÂà∞ÁöÑipÁªìÊûúÊÄªÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑ„ÄÇËøôÊòØÂõ†‰∏∫dnsÊúâË¥üËΩΩÂùáË°°Êú∫Âà∂ÔºåÊúçÂä°Âô®‰ºöÊü•ËØ¢Âπ∂ËøîÂõûÂ§ö‰∏™ipÂú∞ÂùÄÔºåÊØèÊ¨°Êü•ËØ¢ËøîÂõûÁöÑipÂú∞ÂùÄÂèØËÉΩÊúâÊâÄ‰∏çÂêå„ÄÇ Êé•ÁùÄÂæÄ‰∏ãËØ¥ÔºåÂΩìÊàë‰ª¨ÊµèËßàÂô®Ëé∑Áü•Ëøô‰∏™ipÂú∞ÂùÄÁöÑÊó∂ÂÄôÔºåÂ∞±ÂêëËøô‰∏™ipÂú∞ÂùÄÁöÑ80Á´ØÂè£ÔºàHTTPÊ†áÂáÜÁ´ØÂè£ÊòØ80 ÔºåËÄåHTTPSÁöÑÊ†áÂáÜÁ´ØÂè£ÊòØ443ÔºâÂèëËµ∑TCPËøûÊé•Ôºå‰ΩÜÂÖ∂ÂÆûËøô‰∏™ipÂú∞ÂùÄÂπ∂‰∏çÊòØËÆ°ÁÆóÊú∫ÊâÄÂú®ÁöÑÂ±ÄÂüüÁΩëÔºåËÄåÊòØ‰∏Ä‰∏™ÂπøÂüüÁΩëÂú∞ÂùÄÔºåÊâÄ‰ª•Â≠êÁΩëÁöÑÁΩëÂÖ≥Â∞±ÈúÄË¶ÅÈÄöËøáË∑ØÁî±ËΩ¨Âèë‰∫Ü Ë∑ØÁî±‰∫íËÅîÁΩëÊòØÁî±ÂæàÂ§öÁõ∏‰∫íÈöîÁ¶ªÁöÑÂ∞èÁΩëÁªúÊó†ÈôêÂª∂‰º∏ËÄåÊàêÁöÑ‰∏Ä‰∏™Â§ßÁΩëÁªúÔºåË∑ØÁî±Âô®Ë¥üË¥£Â∞ÜÂ§ö‰∏™ÁΩëÁªúËøûÊé•ÔºåÂπ∂‰∫§Êç¢Ë∑ØÁî±Ë°®‰ø°ÊÅØÊù•Á°ÆÂÆö‰∏Ä‰∏™IPÊä•ÊñáË¶ÅÁªèËøáÂì™‰∏™Ë∑ØÁî±Âô®ÁöÑÂì™‰∏™Á´ØÂè£ÂèëÁªôÂì™‰∏™‰∫íËÅîÁöÑÂ≠êÁΩë„ÄÇ ‰∏∫‰∫ÜÈò≤Ê≠¢‰∏Ä‰∏™Êï∞ÊçÆÂåÖÂú®ÂèëÈÄÅËøáÁ®ã‰∏≠ÂΩ¢ÊàêÊ≠ªÂæ™ÁéØÔºåipÂåÖ‰∏≠ÁöÑTTLÂ≠óÊÆµÊØèÁªèËøáË∑ØÁî±Âô®ËΩ¨Âèë‰∏ÄÊ¨°ÔºåÂ∞±‰ºö-1„ÄÇÂΩìTTL‰∏∫0Êó∂ÂàôË¢´‰∏¢ÂºÉÔºåËÆ§‰∏∫ÁΩëÁªú‰∏çÂèØËææÔºå‰∏ÄËà¨ÈªòËÆ§ÁöÑÊúÄÂ§ßTTLÊòØ30 ÂêåÊ†∑Êàë‰ª¨ÂèØ‰ª•‰ΩøÁî®tracertÊù•Ë∑üË∏™Ëøô‰∏™ËøáÁ®ã„ÄÇtacertÊòØÊ†πÊçÆICMPÂçèËÆÆÊù•Á°ÆÂÆö‰∏Ä‰∏™ipÊä•ÊñáÂà∞ËææÁõÆÊ†áÂú∞ÂùÄÊâÄÁªèËøáÁöÑË∑ØÁî±Âô®ËäÇÁÇπ SocketsocketÊó∂‰∏Ä‰∏™ipÂú∞ÂùÄ‰∏éÁ´ØÂè£ÁöÑÁªÑÂêàÔºåÊòØËÆ°ÁÆóÊú∫ÁöÑËøúÁ®ãÈÄö‰ø°Êé•Âè£ÔºåÊú¨Âú∞‰∏Ä‰∏™socket‰∏éËøúÁ®ãsocketËøûÊé•ÁöÑËøáÁ®ãÔºåÂ∞±ÊòØ‰∏âÊ¨°Êè°ÊâãÁöÑËøáÁ®ã„ÄÇ ‰∏âÊ¨°Êè°Êâã Á¨¨‰∏ÄÊ¨°Êè°ÊâãÔºöÂÆ¢Êà∑Á´ØÂèëÈÄÅsynÂåÖ(SYN = 1ÔºåÂ∫èÂàóÂè∑seq = xÔºåSYNÊä•ÊñáÊÆµ‰∏çËÉΩÊê∫Â∏¶Êï∞ÊçÆÔºå‰ΩÜË¶ÅÊ∂àËÄó‰∏Ä‰∏™ÂàùÂßãÂ∫èÂè∑)Âà∞ÊúçÂä°Âô®ÔºåÂπ∂ËøõÂÖ•SYN_SENDÁä∂ÊÄÅÔºåÁ≠âÂæÖÊúçÂä°Âô®Á°ÆËÆ§„ÄÇ Á¨¨‰∫åÊ¨°Êè°ÊâãÔºöÊúçÂä°Âô®Êî∂Âà∞synÂåÖÔºåÂøÖÈ°ªÁ°ÆËÆ§ÂÆ¢Êà∑ÁöÑSYNÔºàack=x+1ÔºâÔºåÂêåÊó∂Ëá™Â∑±‰πüÂèëÈÄÅ‰∏Ä‰∏™SYNÂåÖÔºàSYN=1 ACK=1 seq=yÔºåÂêåÊ†∑Ê∂àËÄó‰∏Ä‰∏™Â∫èÂè∑ÔºâÔºåÂç≥SYN+ACKÂåÖÔºåÊ≠§Êó∂ÊúçÂä°Âô®ËøõÂÖ•SYN_RECVÁä∂ÊÄÅ„ÄÇ Á¨¨‰∏âÊ¨°Êè°ÊâãÔºöÂÆ¢Êà∑Á´ØÊî∂Âà∞ÊúçÂä°Âô®ÁöÑSYNÔºãACKÂåÖ ÔºåÂêëÊúçÂä°Âô®ÂèëÈÄÅÁ°ÆËÆ§ÂåÖACK(ACK = 1 seq = x + 1 ack = y + 1ÔºåACKÊä•ÊñáÊÆµÂèØ‰ª•Êê∫Â∏¶Êï∞ÊçÆÔºå‰ΩÜÂ¶ÇÊûú‰∏çÊê∫Â∏¶Êï∞ÊçÆÂàô‰∏çÊ∂àËÄóÂ∫èÂè∑ÔºåËøôÁßçÊÉÖÂÜµ‰∏ãÔºå‰∏ã‰∏Ä‰∏™Êï∞ÊçÆÊä•ÊñáÊÆµÁöÑÂ∫èÂè∑‰ªçÊòØseq=x+1)ÔºåÊ≠§ÂåÖÂèëÈÄÅÂÆåÊØïÔºåÂÆ¢Êà∑Á´ØÂíåÊúçÂä°Âô®ËøõÂÖ•ESTABLISHEDÁä∂ÊÄÅÔºåÂÆåÊàê‰∏âÊ¨°Êè°Êâã„ÄÇ ÂêÑ‰∏™Áä∂ÊÄÅÂêçÁß∞‰∏éÂê´‰πâCLOSED: Ë°®Á§∫ÂàùÂßãÁä∂ÊÄÅ„ÄÇLISTEN: ÊúçÂä°Âô®Á´ØÂ§Ñ‰∫éÁõëÂê¨Áä∂ÊÄÅÔºåÂèØ‰ª•Êé•ÂèóËøûÊé•„ÄÇSYN_RECV: ÂΩìÊî∂Âà∞ÂÆ¢Êà∑Á´ØÁöÑACKÊä•ÊñáÂêéÔºåÊúçÂä°Âô®‰ºöËøõÂÖ•Âà∞ESTABLISHEDÁä∂ÊÄÅ„ÄÇSYN_SENT: ÂΩìÂÆ¢Êà∑Á´ØÂèëÈÄÅSYNÊä•ÊñáÔºåÈöèÂç≥ÂÆÉ‰ºöËøõÂÖ•Âà∞‰∫ÜSYN_SENTÁä∂ÊÄÅÔºåÂπ∂Á≠âÂæÖÊúçÂä°Á´ØÁöÑÂèëÈÄÅ‰∏âÊ¨°Êè°Êâã‰∏≠ÁöÑÁ¨¨2‰∏™Êä•Êñá„ÄÇESTABLISHEDÔºöË°®Á§∫ËøûÊé•Â∑≤ÁªèÂª∫Á´ã‰∫Ü„ÄÇ ÂõõÊ¨°Êå•Êâã Á¨¨‰∏ÄÊ¨°Êå•ÊâãÔºö‰∏ªÂä®ÂÖ≥Èó≠ÊñπÂèëÈÄÅ‰∏Ä‰∏™FINÔºåÁî®Êù•ÂÖ≥Èó≠‰∏ªÂä®ÊñπÂà∞Ë¢´Âä®ÂÖ≥Èó≠ÊñπÁöÑÊï∞ÊçÆ‰º†ÈÄÅÔºå‰πüÂ∞±ÊòØ‰∏ªÂä®ÂÖ≥Èó≠ÊñπÂëäËØâË¢´Âä®ÂÖ≥Èó≠ÊñπÔºöÊàëÂ∑≤Áªè‰∏ç‰ºöÂÜçÁªô‰Ω†ÂèëÊï∞ÊçÆ‰∫Ü(ÂΩìÁÑ∂ÔºåÂú®finÂåÖ‰πãÂâçÂèëÈÄÅÂá∫ÂéªÁöÑÊï∞ÊçÆÔºåÂ¶ÇÊûúÊ≤°ÊúâÊî∂Âà∞ÂØπÂ∫îÁöÑackÁ°ÆËÆ§Êä•ÊñáÔºå‰∏ªÂä®ÂÖ≥Èó≠Êñπ‰æùÁÑ∂‰ºöÈáçÂèëËøô‰∫õÊï∞ÊçÆ)Ôºå‰ΩÜÊòØÔºåÊ≠§Êó∂‰∏ªÂä®ÂÖ≥Èó≠ÊñπËøòÂèØ‰ª•Êé•ÂèóÊï∞ÊçÆ„ÄÇ Á¨¨‰∫åÊ¨°Êå•ÊâãÔºöË¢´Âä®ÂÖ≥Èó≠ÊñπÊî∂Âà∞FINÂåÖÂêéÔºåÂèëÈÄÅ‰∏Ä‰∏™ACKÁªôÂØπÊñπÔºåÁ°ÆËÆ§Â∫èÂè∑‰∏∫Êî∂Âà∞Â∫èÂè∑+1Ôºà‰∏éSYNÁõ∏ÂêåÔºå‰∏Ä‰∏™FINÂç†Áî®‰∏Ä‰∏™Â∫èÂè∑Ôºâ„ÄÇ Á¨¨‰∏âÊ¨°Êå•ÊâãÔºöË¢´Âä®ÂÖ≥Èó≠ÊñπÂèëÈÄÅ‰∏Ä‰∏™FINÔºåÁî®Êù•ÂÖ≥Èó≠Ë¢´Âä®ÂÖ≥Èó≠ÊñπÂà∞‰∏ªÂä®ÂÖ≥Èó≠ÊñπÁöÑÊï∞ÊçÆ‰º†ÈÄÅÔºå‰πüÂ∞±ÊòØÂëäËØâ‰∏ªÂä®ÂÖ≥Èó≠ÊñπÔºåÊàëÁöÑÊï∞ÊçÆ‰πüÂèëÈÄÅÂÆå‰∫ÜÔºå‰∏ç‰ºöÂÜçÁªô‰Ω†ÂèëÊï∞ÊçÆ‰∫Ü„ÄÇ Á¨¨ÂõõÊ¨°Êå•ÊâãÔºö‰∏ªÂä®ÂÖ≥Èó≠ÊñπÊî∂Âà∞FINÂêéÔºåÂèëÈÄÅ‰∏Ä‰∏™ACKÁªôË¢´Âä®ÂÖ≥Èó≠ÊñπÔºåÁ°ÆËÆ§Â∫èÂè∑‰∏∫Êî∂Âà∞Â∫èÂè∑+1ÔºåËá≥Ê≠§ÔºåÂÆåÊàêÂõõÊ¨°Êå•Êâã„ÄÇ ÂêÑ‰∏™Áä∂ÊÄÅÂêçÁß∞‰∏éÂê´‰πâ FIN-WAIT-1ÔºöÁ≠âÂæÖËøúÁ®ãTCPÁöÑËøûÊé•‰∏≠Êñ≠ËØ∑Ê±Ç„ÄÇ FIN-WAIT-2Ôºö‰ªéËøúÁ®ãTCPÁ≠âÂæÖËøûÊé•‰∏≠Êñ≠ËØ∑Ê±Ç„ÄÇ CLOSE-WAITÔºöÁ≠âÂæÖ‰ªéÊú¨Âú∞Áî®Êà∑ÂèëÊù•ÁöÑËøûÊé•‰∏≠Êñ≠ËØ∑Ê±Ç„ÄÇ CLOSINGÔºöÁ≠âÂæÖËøúÁ®ãTCPÂØπËøûÊé•‰∏≠Êñ≠ÁöÑÁ°ÆËÆ§„ÄÇ LAST-ACKÔºöÁ≠âÂæÖÂéüÊù•ÂèëÂêëËøúÁ®ãTCPÁöÑËøûÊé•‰∏≠Êñ≠ËØ∑Ê±ÇÁöÑÁ°ÆËÆ§Ôºõ TIME-WAITÔºöÁ≠âÂæÖË∂≥Â§üÁöÑÊó∂Èó¥‰ª•Á°Æ‰øùËøúÁ®ãTCPÊé•Êî∂Âà∞ËøûÊé•‰∏≠Êñ≠ËØ∑Ê±ÇÁöÑÁ°ÆËÆ§ ÈôÑÂΩïÂ∏∏ËßÅÁ´ØÂè£ FTP 21 telnet 23 ÂüüÂêçÊúçÂä°Âô® 53 POP3 110 MySQL 3306 POP-2 109 SNMP 161 SSH 22 SMTP 25 HTTP 80 NTP 123 shellÊàñËÄÖcmd 514 SQL Server 1433 ÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèãÔºåÂí±‰ª¨‰∏§‰∏™ÊÉ≥‰∏™Âè∑Á†ÅÔºå ‰π∞‰∏™ÂΩ©Á•®ÔºåÂÖàÊå£‰ªñ‰∏™Âá†Áôæ‰∏áüòù]]></content>
      <tags>
        <tag>ÊäÄÊúØ</tag>
        <tag>Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ</tag>
        <tag>ÁΩëÁªú</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êî∂Âà∞‰∏Ä‰∏™‰ª§ÊàëÊÇ≤‰º§ÁöÑÊ∂àÊÅØ]]></title>
    <url>%2F2018%2F08%2F06%2F%E6%94%B6%E5%88%B0%E4%B8%80%E4%B8%AA%E4%BB%A4%E6%88%91%E6%82%B2%E4%BC%A4%E7%9A%84%E6%B6%88%E6%81%AF%2F</url>
    <content type="text"><![CDATA[ÊàëÁöÑËØ•Ê≠ªÁöÑVPSÊèê‰æõÂïÜÂèàË¶ÅÁ†¥pao‰∫ßlu‰∫ÜÔºåÊ∞îÊ≠ªÊàë‰πü„ÄÇÊúÄËøëÁöÑvpsÊúçÂä°ÈÉΩ‰∏çËÉΩÁî®‰∫ÜÔºåMySQL‰∏ÄËøû‰∏Ä‰∏™Â§±Ë¥•„ÄÇÂêéÊù•‰ªñ‰ª¨ÁªôÊàëÂèë‰∫Ü‰∏ÄÂ∞ÅÈÇÆ‰ª∂ üëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá üëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜüëÜ Â§ßÊ¶ÇÊÑèÊÄùÊòØ‰ªñ‰ª¨ÂÆå‰∫ÜÔºåË¶ÅÊääÊú∫Âô®ÊúçÂä°ËΩ¨ÁªôÊàëÁöÑÂè¶‰∏Ä‰∏™ËÄÅ‰∏úÂÆ∂NFHostingÔºåÂØπÔºåÊ≤°Èîô„ÄÇÂ∞±ÊòØÁªôÊàëÊèê‰æõ‰∏ä‰∏Ä‰∏™ÂçöÂÆ¢ÊúçÂä°ÁöÑÊï∞ÊçÆ‰∏≠ÂøÉ„ÄÇ ËØ•Ê≠ªÁöÑÔºåÊàë‰∏ä‰∏Ä‰∏™ÂçöÂÆ¢ÁöÑÊï∞ÊçÆËá≥‰ªäÊ≤°ÊâæÂõûÊù•ÔºÅ Ë°åÂêßÔºåÊàëÂ∑≤ÁªèÊó†ÊâÄË∞ì‰∫Ü„ÄÇÂ∞±ÂΩìËÄÉÈ™åÊàëÁöÑËøêÁª¥Ê∞¥Âπ≥‰∫ÜÔºåÊê≠Âª∫‰∏™RabbitMQÔºåMySQLÔºåredisÔºåÈòøÂ∏ïÂ•áÔºåÂØπËøôÁßçÂçïÊ†∏VPSÔºå‰∏çÂ∞±‰∏Ä‰∏äÂçà‰πàÔºüÊàëÂπ≤Ëøò‰∏çË°å‰πàÔºü ‰∫éÊòØ‰πéÔºåÊàëÊåâÁÖß‰ªñ‰ª¨ÁöÑÊµÅÁ®ãÂõûÂ§ç‰∫ÜÈÇÆ‰ª∂„ÄÇ ÁÑ∂ÂêéÔºåÂ∞±Ê≤°ÊúâÁÑ∂Âêé‰∫Ü„ÄÇËøôÂÆ∂ÂÖ¨Âè∏ÁöÑÂ∑•Á®ãÂ∏àÊ≤°‰∏Ä‰∏™ÁêÜÊàëÁöÑüôÉ ‰∏çËÉΩËá™ÁîòÂ†ïËêΩÂïäÔºÅÊàëÂøÉ‰∏≠ÁáÉÊ∞î‰∫ÜÈõÑÂá∂Â§ßÁÅ´ÔºÅ ‰∫éÊòØ‰πéÔºåÁªùÊúõÁöÑÂèë‰∫Ü‰∏™repost Â∏åÊúõÁ•û‰∏éÊàëÂêåÂú®Âêß„ÄÇ„ÄÇ„ÄÇ]]></content>
      <tags>
        <tag>Êó•Â∏∏</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∏çË¶ÅÊáíÊÉ∞ÔºåÂä†Ê≤π]]></title>
    <url>%2F2018%2F08%2F04%2F%E5%8A%A0%E6%B2%B9%2F</url>
    <content type="text"><![CDATA[ÊúÄËøëÊØç‰∫≤Ë¶ÅÂéªÊúùÈ≤úÊóÖÊ∏∏ÔºåÂøÉÁ≥ªÊØç‰∫≤ÔºåÊúâÁÇπÁï•ÂæÆÊµÆË∫Å„ÄÇÂ•Ω‰πÖÊ≤°ÊåÅÁª≠Â≠¶‰π†‰∫ÜÔºåÁΩ™ËøáÁΩ™Ëøá„ÄÇ Áî®Â±±Êú¨ËÄÄÂè∏ÁöÑËØùÁªôËá™Â∑±ÊâìÈ∏°Ë°ÄÔºö Êàë‰ªé‰∏çÁõ∏‰ø°‰ªÄ‰πàÊáíÊ¥ãÊ¥ãÁöÑËá™Áî±ÔºåÊàëÂêëÂæÄÁöÑËá™Áî±ÊòØÈÄöËøáÂã§Â•ãÂíåÂä™ÂäõÂÆûÁé∞Êõ¥ÂπøÈòîÁöÑ‰∫∫ÁîüÔºåÈÇ£Ê†∑ÁöÑËá™Áî±ÊâçÊòØÁèçË¥µÁöÑ„ÄÅÊúâ‰ª∑ÂÄºÁöÑ„ÄÇÊàëÁõ∏‰ø°‰∏Ä‰∏áÂ∞èÊó∂ÂÆöÂæãÔºåÊàë‰ªéÊù•‰∏çÁõ∏‰ø°Â§©‰∏äÊéâÈ¶ÖÈ•ºÁöÑÁÅµÊÑüÂíåÂùêÁ≠âÁöÑÊàêÂ∞±„ÄÇÂÅö‰∏Ä‰∏™Ëá™Áî±ÂèàËá™ÂæãÁöÑ‰∫∫ÔºåÈù†ÂäøÂøÖÂÆûÁé∞ÁöÑÂÜ≥ÂøÉËÆ§ÁúüÂú∞Ê¥ªÁùÄ„ÄÇ Ê≤°ÊúâÁªùÂØπÊ≠£Á°ÆÁöÑ‰∫ãÊÉÖÔºå‰Ω†ËÉΩÂÅöÁöÑÂ∞±ÊòØÊõ¥Âä†Âä™ÂäõÔºåËøôÊ†∑ÊâçËÉΩËÆ©‰∏ÄÂàáÂèòÂæóÈÉΩÊòØÊúÄÂ•ΩÁöÑÂÆâÊéíÔºÅËá™Â∑±ÂïäÔºå‰∏ÄÂÆöË¶ÅÂä†Ê≤πÔºÅ]]></content>
      <tags>
        <tag>Êó•Â∏∏</tag>
        <tag>ÁîüÊ¥ª</tag>
        <tag>ÂêêÊßΩ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËøôÊòØ‰∏ÄÁØá‰ºòÈõÖÁöÑSpringboot2.0‰ΩøÁî®ÊâãÂÜå]]></title>
    <url>%2F2018%2F08%2F04%2Fspringboot%2F</url>
    <content type="text"><![CDATA[ÊúÄËøëÂÜçÁ†îÁ©∂springbootÁöÑÂéüÁêÜüòãÈ¢áÊúâÊî∂Ëé∑ÔºåÁé∞Âú®ËÆ©ÊàëÂàÜ‰∫´‰∏Ä‰∏ãspringbootÂ¶Ç‰Ωï‰ΩøÁî®Âêß~ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ Âï•ÊòØSpringbootÂíå‰π¶‰∏äÁêÜËß£ÁöÑ‰∏çÂêåÔºåÊàëËÆ§‰∏∫SpringbootÊòØ‰∏Ä‰∏™‰ºòÁßÄÁöÑÂø´ÈÄüÊê≠Âª∫Ê°ÜÊû∂Ôºå‰ªñÈÄöËøámavenÁªßÊâøÊñπÂºèÊ∑ªÂä†‰æùËµñÊù•Êï¥ÂêàÂæàÂ§öÁ¨¨‰∏âÊñπÂ∑•ÂÖ∑ÔºåÂèØ‰ª•ÈÅøÂÖçÂêÑÁßçÈ∫ªÁÉ¶ÁöÑÈÖçÁΩÆÔºåÊúâÂêÑÁßçÂÜÖÂµåÂÆπÂô®ÁÆÄÂåñWebÈ°πÁõÆÔºåËøòËÉΩÈÅøÂÖç‰æùËµñÁöÑÂπ≤Êâ∞ÔºåÂÆÉÂÜÖÁΩÆtomcatÔºåjettyÂÆπÂô®Ôºå‰ΩøÁî®ÁöÑÊòØjava appËøêË°åÁ®ãÂ∫èÔºåËÄå‰∏çÊòØ‰º†ÁªüÁöÑÁî®ÊääwarÊîæÂú®tomcatÁ≠âÂÆπÂô®‰∏≠ËøêË°å ÂíåJFinalÁöÑÂå∫Âà´JFinalÊòØÂõΩ‰∫∫Âá∫ÂìÅÁöÑ‰∏Ä‰∏™web + orm Ê°ÜÊû∂ ÔºåJFinalÔºå‰ºòÁÇπÊòØÂºÄÂèëËøÖÈÄü„ÄÅ‰ª£Á†ÅÈáèÂ∞ë„ÄÅÂ≠¶‰π†ÁÆÄÂçï„ÄÅÂäüËÉΩÂº∫Â§ß„ÄÅËΩªÈáèÁ∫ß„ÄÅÊòìÊâ©Â±ï„ÄÇÊ†∏ÂøÉÂ∞±ÊòØÊûÅËá¥ÁÆÄÊ¥Å„ÄÇ‰ªñÊ≤°ÊúâÂïÜ‰∏öÊú∫ÊûÑÁöÑÊîØÊåÅÔºåÊâÄ‰ª•ÂÆ£‰º†‰∏çÂà∞‰ΩçÔºåÂ∞ëÊúâ‰∫∫Áü•„ÄÇ SpringbootÁõ∏ÊØî‰∏éJFinalÊúÄÂ§ßÁöÑ‰ºòÁÇπÂ∞±ÊòØÊîØÊåÅÁöÑÂäüËÉΩÈùûÂ∏∏Â§öÔºåÂèØ‰ª•ÈùûÂ∏∏Êñπ‰æøÁöÑÂ∞ÜspringÁöÑÂêÑÁßçÊ°ÜÊû∂Â¶Çspringframework , spring-mvc, spring-security, spring-data-jpa, spring-cacheÁ≠âÁ≠âÈõÜÊàêËµ∑Êù•ËøõË°åËá™Âä®ÂåñÈÖçÁΩÆ ÔºåËÄå‰∏îÁîüÊÄÅ ÊØîËæÉÂ•ΩÔºåÂæàÂ§ö‰∫ßÂìÅÈÉΩÂØπSpringbootÂÅöÂá∫‰∏ÄÂÆöÊîØÊåÅ„ÄÇ ‰∏éSpringcloudÁöÑÂå∫Âà´ÂèØ‰ª•Ëøô‰πàÁêÜËß£ÔºåSpringbootÈáåÈù¢ÂåÖÂê´‰∫ÜSpringcloudÔºåSpringcloudÂè™ÊòØSpringbootÈáåÈù¢ÁöÑ‰∏Ä‰∏™ÁªÑ‰ª∂ËÄåÂ∑≤„ÄÇ SpringcloudÊèê‰æõ‰∫ÜÁõ∏ÂΩìÂÆåÊï¥ÁöÑÂæÆÊúçÂä°Êû∂ÊûÑ„ÄÇËÄåÂæÆÊúçÂä°Êû∂ÊûÑÔºåÊú¨Ë¥®Êù•ËØ¥Â∞±ÊòØÂàÜÂ∏ÉÂºèÊû∂ÊûÑÔºåÊÑèÂë≥ÁùÄ‰Ω†Ë¶ÅÂ∞ÜÂéüÊù•ÊòØ‰∏Ä‰∏™Êï¥‰ΩìÁöÑÈ°πÁõÆÊãÜÂàÜÊàê‰∏Ä‰∏™‰∏™ÁöÑÂ∞èÂûãÈ°πÁõÆÔºåÁÑ∂ÂêéÂà©Áî®ÊüêÁßçÊú∫Âà∂Â∞ÜÂÖ∂ËÅîÂêàËµ∑Êù•Ôºå‰æãÂ¶ÇÊúçÂä°Ê≤ªÁêÜ„ÄÅÈÄö‰ø°Ê°ÜÊû∂Á≠âÂü∫Á°ÄËÆæÊñΩ„ÄÇ SpringBootÂíåSpringMVCÂå∫Âà´SpringBootÁöÑWebÁªÑ‰ª∂ÔºåÈªòËÆ§ÈõÜÊàêÁöÑÊòØSpringMVCÊ°ÜÊû∂„ÄÇ Âø´ÈÄü‰ΩøÁî®Ë¶ÅÂæÄ‰∏ãÁúãÁöÑËØùÔºåÊ≥®ÊÑè‰∫Üüëá Springboot 2.x Ë¶ÅÊ±Ç JDK 1.8 ÁéØÂ¢ÉÂèä‰ª•‰∏äÁâàÊú¨„ÄÇÂè¶Â§ñÔºåSpringboot 2.x Âè™ÂÖºÂÆπ Spring Framework 5.0 Âèä‰ª•‰∏äÁâàÊú¨„ÄÇ ‰∏∫ Springboot 2.x Êèê‰æõ‰∫ÜÁõ∏ÂÖ≥‰æùËµñÊûÑÂª∫Â∑•ÂÖ∑ÊòØ MavenÔºåÁâàÊú¨ÈúÄË¶Å 3.2 Âèä‰ª•‰∏äÁâàÊú¨„ÄÇ‰ΩøÁî® Gradle ÂàôÈúÄË¶Å 1.12 Âèä‰ª•‰∏äÁâàÊú¨„ÄÇ Âª∫ËÆÆÁî®IntelliJ IDEA IntelliJ IDEA ÔºàÁÆÄÁß∞ IDEAÔºâ Âª∫Á´ãÈ°πÁõÆÊàëÂ∑≤ÁªèÂ•Ω‰πÖÊ≤°Áî®Eclipse‰∫ÜÔºåË¶ÅÁü•ÈÅìEclipseÊòØÂàõÂª∫‰∏Ä‰∏™mavenÈ°πÁõÆÂú®ÂºïÂÖ•Springboot‰æùËµñÂàõÂª∫ÁöÑ„ÄÇ ‰∏ãÈù¢ÊàëÂàÜ‰∫´‰∏Ä‰∏ãÁî®IDEAÂàõÂª∫SpringbootÁöÑÊñπÊ≥ï„ÄÇ ÂæàÁÆÄÂçïÔºåÂú®Ëøô‰∏™ÁïåÈù¢ÈáåÈù¢Â∞±ÂèØ‰ª•ÂàõÂª∫Springboot‰∫Ü„ÄÇÊé•‰∏ãÊù•Âú®Ê∑ªÂä†‰∏Ä‰∫õÁªÑ‰ª∂„ÄÇ Â§ßÂäüÂëäÊàêÔºÅ ÂÜô‰∏Ä‰∏™DEMOËøôÈáåÁî®ÊàëÂÜôÁöÑ‰∏Ä‰∏™ÁßíÊùÄÈ°πÁõÆ‰Ωú‰∏∫ÂèÇËÄÉÊ†óÂ≠ê„ÄÇÁßíÊùÄÂïÜÂüé ÂàõÂª∫‰∏Ä‰∏™conntrollerÂåÖÔºåÁºñÂÜô‰∏Ä‰∏™Ê†∑Âàó„ÄÇ 123456789101112131415package cn.tengshe789.controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@RestController@RequestMapping("/demo")public class SampleController &#123; @RequestMapping("/hello") public String index() &#123; return "Hello World"; &#125;&#125; Êé•‰∏ãÊù•Âú®‰ªñÂêåÁ∫ßÂåÖÊàñËÄÖ‰∏ä‰∏ÄÁ∫ßÁöÑÂåÖÂÜÖÔºåÂàõÂª∫‰∏Ä‰∏™‰∏ªÊñπÊ≥ïMainApplication„ÄÇÊñπÊ≥ïÂÜÖÂÆπ; 123456789@SpringBootApplication@EnableAsync//@ComponentScan("cn.tengshe789.controller")//@EnableAutoConfigurationpublic class MainApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(MainApplication.class, args); &#125;&#125; Âú®ÊµèËßàÂô®ËæìÂÖ•http://127.0.0.1:8080/demo/hello/ÔºåÂ∞±ÂèØ‰ª•ÂêØÂä®‰∫ÜÔºÅ SpringApplication.runSpringbootÂ∞Ü‰ªñÊ†áËØÜ‰∏∫ÂêØÂä®Á±ªÔºåÁî®ÂÆÉÂêØÂä®SpringbootÈ°πÁõÆ Âü∫Á°ÄÊ≥®Ëß£Ëß£Èáä@RestControllerÂú®‰∏äÂä†‰∏äRestController Ë°®Á§∫‰øÆÈ•∞ËØ•ControllerÊâÄÊúâÁöÑÊñπÊ≥ïËøîÂõûJSONÊ†ºÂºè,Áõ¥Êé•ÂèØ‰ª•ÁºñÂÜôRestfulÊé•Âè£„ÄÇÂ∞±Áõ∏ÂΩì‰∫é@Controller+@ResponseBodyËøôÁßçÂÆûÁé∞ @SpringBootApplicationÁî®Âú®ÂêØÂä®Springboot‰∏≠ÔºåÁõ∏ÂΩì‰∫é@ComponentScan+@EnableAutoConfiguration+@Configuration @ComponentScan(‚Äúcn.tengshe789.controller‚Äù)ÊéßÂà∂Âô®Êâ´ÂåÖËåÉÂõ¥„ÄÇ @EnableAutoConfiguration‰ªñËÆ© Spring Boot Ê†πÊçÆÂí±Â∫îÁî®ÊâÄÂ£∞ÊòéÁöÑ‰æùËµñÊù•ÂØπ Spring Ê°ÜÊû∂ËøõË°åËá™Âä®ÈÖçÁΩÆ„ÄÇÊÑèÊÄùÊòØÔºåÂàõÂª∫È°πÁõÆÊó∂Ê∑ªÂä†ÁöÑspring-boot-starter-webÊ∑ªÂä†‰∫ÜTomcatÂíåSpring MVCÔºåÊâÄ‰ª•auto-configurationÂ∞ÜÂÅáÂÆö‰Ω†Ê≠£Âú®ÂºÄÂèë‰∏Ä‰∏™webÂ∫îÁî®Âπ∂Áõ∏Â∫îÂú∞ÂØπSpringËøõË°åËÆæÁΩÆ„ÄÇ ÈÖçÁΩÆÊñá‰ª∂propertiesËßÑÂàôÔºö 1„ÄÅÂêçÁî®Â§ßÂÜôÊØîËæÉËßÑËåÉ 2„ÄÅ=‰∏§ËæπÂà´ÊâìÁ©∫Ê†º 3„ÄÅÂêçÂÄºÂØπÂÜôÂÆåÂêéÂà´ÊâìÂàÜÂè∑ Ëá™ÂÆö‰πâÂèÇÊï∞1name=tengshe789 Â§öÁéØÂ¢ÉÈÖçÁΩÆ12345spring.profiles.active=preapplication-dev.propertiesÔºöÂºÄÂèëÁéØÂ¢Éapplication-test.propertiesÔºöÊµãËØïÁéØÂ¢Éapplication-prod.propertiesÔºöÁîü‰∫ßÁéØÂ¢É ‰øÆÊîπÁ´ØÂè£Âè∑12server.port=8888 server.context-path=/tengshe789 yamlËßÑÂàôÔºö ‰ΩøÁî®Á©∫Ê†º Space Áº©ËøõË°®Á§∫ÂàÜÂ±ÇÔºå‰∏çÂêåÂ±ÇÊ¨°‰πãÈó¥ÁöÑÁº©ËøõÂèØ‰ª•‰ΩøÁî®‰∏çÂêåÁöÑÁ©∫Ê†ºÊï∞ÁõÆÔºå‰ΩÜÊòØÂêåÂ±ÇÂÖÉÁ¥†‰∏ÄÂÆöÂ∑¶ÂØπÈΩêÔºåÂç≥ÂâçÈù¢Á©∫Ê†ºÊï∞ÁõÆÁõ∏ÂêåÔºà‰∏çËÉΩ‰ΩøÁî® TabÔºåÂêÑ‰∏™Á≥ªÁªü TabÂØπÂ∫îÁöÑ Space Êï∞ÁõÆÂèØËÉΩ‰∏çÂêåÔºåÂØºËá¥Â±ÇÊ¨°Ê∑∑‰π±Ôºâ ‚Äò#‚ÄôË°®Á§∫Ê≥®ÈáäÔºåÂè™ËÉΩÂçïË°åÊ≥®ÈáäÔºå‰ªé#ÂºÄÂßãÂ§ÑÂà∞Ë°åÂ∞æ Á†¥ÊäòÂè∑ÂêéÈù¢Ë∑ü‰∏Ä‰∏™Á©∫Ê†ºÔºàa dash and spaceÔºâË°®Á§∫ÂàóË°® Áî®ÂÜíÂè∑ÂíåÁ©∫Ê†ºË°®Á§∫ÈîÆÂÄºÂØπ key: value ÁÆÄÂçïÊï∞ÊçÆÔºàscalarsÔºåÊ†áÈáèÊï∞ÊçÆÔºâÂèØ‰ª•‰∏ç‰ΩøÁî®ÂºïÂè∑Êã¨Ëµ∑Êù•ÔºåÂåÖÊã¨Â≠óÁ¨¶‰∏≤Êï∞ÊçÆ„ÄÇÁî®ÂçïÂºïÂè∑ÊàñËÄÖÂèåÂºïÂè∑Êã¨Ëµ∑Êù•ÁöÑË¢´ÂΩì‰ΩúÂ≠óÁ¨¶‰∏≤Êï∞ÊçÆÔºåÂú®ÂçïÂºïÂè∑ÊàñÂèåÂºïÂè∑‰∏≠‰ΩøÁî®CÈ£éÊ†ºÁöÑËΩ¨‰πâÂ≠óÁ¨¶ 123server: port: 8080 context-path: /springboot xmlSpringbootÂÆòÊñπ‰∏çÊé®ËçêxmlÔºåÁï• WebÂºÄÂèë‰∏Ä‰∏™È°πÁõÆÁî®SpringbootÔºåÂçÅÊúâÂÖ´‰πùÂ∞±ÊòØÁî®‰∫éWebÂºÄÂèë„ÄÇÈ¶ñÂÖàËÆ©Êàë‰ª¨ÁúãÁúãSpringbootÊÄé‰πàÂø´ÈÄüÂºÄÂèëWebÊää Â¶Ç‰ΩïËÆøÈóÆÈùôÊÄÅËµÑÊ∫êËØ∑Âú®resourcesÁõÆÂΩï‰∏ãÂàõÂª∫staticÊñá‰ª∂Â§πÔºåÂú®ËØ•‰ΩçÁΩÆÊîæÁΩÆ‰∏Ä‰∏™ÈùôÊÄÅËµÑÊ∫ê„ÄÇ ÁõÆÂΩïÔºösrc/main/resources/static ÂêØÂä®Á®ãÂ∫èÂêéÔºåÂ∞ùËØïËÆøÈóÆhttp://localhost:8080/img.xxx/„ÄÇÂ∞±ÂèØ‰ª•ËÆøÈóÆ‰∫Ü„ÄÇ ÂÖ≥‰∫éÊ∏≤ÊüìWebÈ°µÈù¢Âú®‰πãÂâçÁöÑÂø´ÈÄü‰ΩøÁî®ÁöÑÁ§∫‰æã‰∏≠ÔºåÊàë‰ª¨ÈÉΩÊòØÈÄöËøáÊ∑ªÂä†@RestControllerÊù•Â§ÑÁêÜËØ∑Ê±ÇÔºåÊâÄ‰ª•ËøîÂõûÁöÑÂÜÖÂÆπ‰∏∫jsonÂØπË±°„ÄÇÈÇ£‰πàÂ¶ÇÊûúÈúÄË¶ÅÊ∏≤ÊüìhtmlÈ°µÈù¢ÁöÑÊó∂ÂÄôÔºåË¶ÅÂ¶Ç‰ΩïÂÆûÁé∞Âë¢Ôºü Ê®°ÊùøÂºïÊìéÊñπÊ≥ïSpringboot‰æùÁÑ∂ÂèØ‰ª•ÂÆûÁé∞Âä®ÊÄÅHTMLÔºåÂπ∂‰∏îÊèê‰æõ‰∫ÜÂ§öÁßçÊ®°ÊùøÂºïÊìéÁöÑÈªòËÆ§ÈÖçÁΩÆÊîØÊåÅÔºåSpringbootÂÆòÊñπÊñáÊ°£ÊúâÂ¶Ç‰∏ãÊé®ËçêÁöÑÊ®°ÊùøÂºïÊìéÔºö ¬∑ Thymeleaf ¬∑ FreeMarker ¬∑ Velocity ¬∑ Groovy ¬∑ Mustache SpringbootÂÆòÊñπÂª∫ËÆÆÈÅøÂÖç‰ΩøÁî®JSPÔºåËã•‰∏ÄÂÆöË¶Å‰ΩøÁî®JSPÂ∞ÜÊó†Ê≥ïÂÆûÁé∞Spring BootÁöÑÂ§öÁßçÁâπÊÄß„ÄÇ Âú®Springboot‰∏≠ÔºåÈªòËÆ§ÁöÑÊ®°ÊùøÈÖçÁΩÆË∑ØÂæÑÈÉΩÊó∂Ôºösrc/main/resources/templates„ÄÇÂΩìÁÑ∂‰πüÂèØ‰ª•‰øÆÊîπËøô‰∏™Ë∑ØÂæÑÔºåÂÖ∑‰ΩìÂ¶Ç‰Ωï‰øÆÊîπÔºåÂèØÂú®ÂêÑÊ®°ÊùøÂºïÊìéÁöÑÈÖçÁΩÆÂ±ûÊÄß‰∏≠Êü•ËØ¢Âπ∂‰øÆÊîπ„ÄÇ ThymeleafÔºàËÉ∏ËÖ∫ÔºâËøôÈáåËøòÊòØÁî®ÊàëÂÜôÁöÑ‰∏Ä‰∏™ÁßíÊùÄÈ°πÁõÆ‰Ωú‰∏∫ÂèÇËÄÉÊ†óÂ≠ê„ÄÇÁßíÊùÄÂïÜÂüé POM1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt; &lt;/dependency&gt; ÈÖçÁΩÆÊñá‰ª∂Âú®application.properties‰∏≠Ê∑ªÂä†Ôºö 123456789#thymeleafspring.thymeleaf.prefix=classpath:/templates/spring.thymeleaf.suffix=.htmlspring.thymeleaf.cache=falsespring.thymeleaf.servlet.content-type=text/htmlspring.thymeleaf.enabled=truespring.thymeleaf.encoding=UTF-8# ‰∏Ä‰ª£Â°´ spring.thymeleaf.mode=HTML5spring.thymeleaf.mode=HTML ÂêéÂè∞Âú®src/main/resources/ÂàõÂª∫‰∏Ä‰∏™templatesÊñá‰ª∂Â§π,Êñ∞ÁΩëÈ°µÂêéÁºÄ‰∏∫*.html 12345678@RequestMapping("/to_list") public String list(Model model,MiaoshaUser user) &#123; model.addAttribute("user", user); //Êü•ËØ¢ÂïÜÂìÅÂàóË°® List&lt;GoodsVo&gt; goodsList = goodsService.listGoodsVo(); model.addAttribute("goodsList", goodsList); return "goods_list"; &#125; ÂâçÂè∞ËøôÈáåÊ≥®ÊÑèThymeleafËØ≠Ê≥ïÔºåThymeleafÂæàÂÉèHTMLÔºå‰∏çÂêå‰πãÂ§ÑÂú®Ê†áÁ≠æÂä†‰∫Ü‰∏Ä‰∏™thÂâçÁºÄ 1234567891011121314151617181920212223242526&lt;!DOCTYPE HTML&gt;&lt;html xmlns:th="http://www.thymeleaf.org"&gt;&lt;head&gt; &lt;title&gt;ÂïÜÂìÅÂàóË°®&lt;/title&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt; &lt;!-- jquery --&gt; &lt;script type="text/javascript" th:src="@&#123;/js/jquery.min.js&#125;"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="panel panel-default" &gt; &lt;div class="panel-heading"&gt;ÁßíÊùÄÂïÜÂìÅÂàóË°®&lt;/div&gt; &lt;table class="table" id="goodslist"&gt; &lt;tr&gt;&lt;td&gt;ÂïÜÂìÅÂêçÁß∞&lt;/td&gt;&lt;td&gt;ÂïÜÂìÅÂõæÁâá&lt;/td&gt;&lt;td&gt;ÂïÜÂìÅÂéü‰ª∑&lt;/td&gt;&lt;td&gt;ÁßíÊùÄ‰ª∑&lt;/td&gt;&lt;td&gt;Â∫ìÂ≠òÊï∞Èáè&lt;/td&gt;&lt;td&gt;ËØ¶ÊÉÖ&lt;/td&gt;&lt;/tr&gt; &lt;tr th:each="goods,goodsStat : $&#123;goodsList&#125;"&gt; &lt;td th:text="$&#123;goods.goodsName&#125;"&gt;&lt;/td&gt; &lt;td &gt;&lt;img th:src="@&#123;$&#123;goods.goodsImg&#125;&#125;" width="100" height="100" /&gt;&lt;/td&gt; &lt;td th:text="$&#123;goods.goodsPrice&#125;"&gt;&lt;/td&gt; &lt;td th:text="$&#123;goods.miaoshaPrice&#125;"&gt;&lt;/td&gt; &lt;td th:text="$&#123;goods.stockCount&#125;"&gt;&lt;/td&gt; &lt;td&gt;&lt;a th:href="'/goods_detail.htm?goodsId='+$&#123;goods.id&#125;"&gt;ËØ¶ÊÉÖ&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; Freemarker(Ëá™Áî±Ê†áËÆ∞)POM1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-freemarker&lt;/artifactId&gt;&lt;/dependency&gt; ÈÖçÁΩÆÊñá‰ª∂Âú®application.properties‰∏≠Ê∑ªÂä†Ôºö 12345678910111213141516#Freemarkerspring.freemarker.allow-request-override=falsespring.freemarker.cache=truespring.freemarker.check-template-location=truespring.freemarker.charset=UTF-8spring.freemarker.content-type=text/htmlspring.freemarker.expose-request-attributes=falsespring.freemarker.expose-session-attributes=falsespring.freemarker.expose-spring-macro-helpers=false#spring.freemarker.prefix=#spring.freemarker.request-context-attribute=#spring.freemarker.settings.*=spring.freemarker.suffix=.ftlspring.freemarker.template-loader-path=classpath:/templates/#comma-separated list#spring.freemarker.view-names= # whitelist of view names that can be resolved ÂêéÂè∞Âú®src/main/resources/ÂàõÂª∫‰∏Ä‰∏™templatesÊñá‰ª∂Â§π,Êñ∞ÁΩëÈ°µÂêéÁºÄ‰∏∫*.ftl 1234567891011@RequestMapping("/freemarkerIndex") public String index(Map&lt;String, Object&gt; result) &#123; result.put("nickname", "tEngSHe789"); result.put("old", "18"); result.put("my Blog", "HTTPS://blog.tengshe789.tech/"); List&lt;String&gt; listResult = new ArrayList&lt;String&gt;(); listResult.add("guanyu"); listResult.add("zhugeliang"); result.put("listResult", listResult); return "index"; &#125; ÂâçÂè∞123456789101112131415161718192021&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head lang="en"&gt;&lt;meta charset="UTF-8" /&gt;&lt;title&gt;È¶ñÈ°µ&lt;/title&gt;&lt;/head&gt;&lt;body&gt; $&#123;nickname&#125;&lt;#if old=="18"&gt; Â§™ÂÅá‰∫ÜÂêßÂì•‰ª¨ &lt;#elseif old=="21"&gt; ‰Ω†ÊòØÁúüÁöÑ21Â≤Å &lt;#else&gt; ÂÖ∂‰ªñ &lt;/#if&gt; &lt;#list userlist as user&gt; $&#123;user&#125; &lt;/#list&gt;&lt;/body&gt; &lt;/html&gt; JSP‰∏çÂª∫ËÆÆÁî®SpringbootÊï¥ÂêàJSPÔºåË¶ÅÁöÑËØù‰∏ÄÂÆöË¶Å‰∏∫warÁ±ªÂûãÔºåÂê¶Âàô‰ºöÊâæ‰∏çÂà∞È°µÈù¢.,ËÄå‰∏î‰∏çË¶ÅÊääJSPÈ°µÈù¢Â≠òÊîæÂú®resources// jsp ‰∏çËÉΩË¢´ËÆøÈóÆÂà∞ POM123456789101112131415161718192021&lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.0.4.RELEASE&lt;/version&gt;&lt;/parent&gt;&lt;dependencies&gt; &lt;!-- SpringBoot web Ê†∏ÂøÉÁªÑ‰ª∂ --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt; &lt;/dependency&gt;&lt;!-- SpringBoot Â§ñÈÉ®tomcatÊîØÊåÅ --&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt; &lt;artifactId&gt;tomcat-embed-jasper&lt;/artifactId&gt; &lt;/dependency&gt;&lt;/dependencies&gt; ÈÖçÁΩÆÊñá‰ª∂Âú®application.properties‰∏≠Ê∑ªÂä†Ôºö 12spring.mvc.view.prefix=/WEB-INF/jsp/spring.mvc.view.suffix=.jsp ÂêéÂè∞Âú®src/main/resources/ÂàõÂª∫‰∏Ä‰∏™templatesÊñá‰ª∂Â§π,Êñ∞ÁΩëÈ°µÂêéÁºÄ‰∏∫*.jsp 1234567@Controllerpublic class IndexController &#123; @RequestMapping("/index") public String index() &#123; return "index"; &#125;&#125; ÂâçÂè∞Áï•Áï•Áï•üòù &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD Èù¢ÂêëÊµÅÁºñÁ®ãË¶Å‰∫ÜËß£ WebFlux ,È¶ñÂÖà‰∫ÜËß£‰∏ã‰ªÄ‰πàÊòØReactiveÂìçÂ∫îÂºè(ÂèçÂ∫îÂºè„ÄÅÂºÇÊ≠•„ÄÅÈù¢ÂêëÊµÅ)ÁºñÁ®ã Ôºå‰ªñÊòØ‰∏ÄÁßçÊñ∞ÁöÑÁºñÁ®ãÈ£éÊ†ºÔºåÂÖ∂ÁâπÁÇπÊòØÂºÇÊ≠•ÊàñÂπ∂Âèë„ÄÅ‰∫ã‰ª∂È©±Âä®„ÄÅÊé®ÈÄÅPUSHÊú∫Âà∂‰ª•ÂèäËßÇÂØüËÄÖÊ®°ÂºèÁöÑË°çÁîü„ÄÇreactiveÂ∫îÁî®(ÂìçÂ∫îÂºèÂ∫îÁî®)ÂÖÅËÆ∏ÂºÄÂèë‰∫∫ÂëòÊûÑÂª∫‰∫ã‰ª∂È©±Âä®Ôºàevent-drivenÔºâÔºåÂèØÊâ©Â±ïÊÄßÔºåÂºπÊÄßÁöÑÂèçÂ∫îÁ≥ªÁªüÔºöÊèê‰æõÈ´òÂ∫¶ÊïèÊÑüÁöÑÂÆûÊó∂ÁöÑÁî®Êà∑‰ΩìÈ™åÊÑüËßâÔºåÂèØ‰º∏Áº©ÊÄßÂíåÂºπÊÄßÁöÑÂ∫îÁî®Á®ãÂ∫èÊ†àÁöÑÊîØÊåÅÔºåÈöèÊó∂ÂèØ‰ª•ÈÉ®ÁΩ≤Âú®Â§öÊ†∏Âíå‰∫ëËÆ°ÁÆóÊû∂ÊûÑ„ÄÇ Spring WebfluxSpring Boot Webflux Â∞±ÊòØÂü∫‰∫é Reactor ÂÆûÁé∞ÁöÑ„ÄÇSpring Boot 2.0 ÂåÖÊã¨‰∏Ä‰∏™Êñ∞ÁöÑ spring-webflux Ê®°Âùó„ÄÇËØ•Ê®°ÂùóÂåÖÂê´ÂØπÂìçÂ∫îÂºè HTTP Âíå WebSocket ÂÆ¢Êà∑Á´ØÁöÑÊîØÊåÅÔºå‰ª•ÂèäÂØπ RESTÔºåHTML Âíå WebSocket ‰∫§‰∫íÁ≠âÁ®ãÂ∫èÁöÑÊîØÊåÅ„ÄÇ‰∏ÄËà¨Êù•ËØ¥ÔºåSpring MVC Áî®‰∫éÂêåÊ≠•Â§ÑÁêÜÔºåSpring Webflux Áî®‰∫éÂºÇÊ≠•Â§ÑÁêÜ„ÄÇ Spring Boot Webflux Êúâ‰∏§ÁßçÁºñÁ®ãÊ®°ÂûãÂÆûÁé∞Ôºå‰∏ÄÁßçÁ±ª‰ºº Spring MVC Ê≥®Ëß£ÊñπÂºèÔºåÂè¶‰∏ÄÁßçÊòØ‰ΩøÁî®ÂÖ∂ÂäüËÉΩÊÄßÁ´ØÁÇπÊñπÂºè„ÄÇ WebFlux ÊîØÊåÅÁöÑÂÆπÂô®Êúâ Tomcat„ÄÅJettyÔºàNon-Blocking IO APIÔºâ Ôºå‰πüÂèØ‰ª•ÂÉè Netty Âíå Undertow ÁöÑÊú¨Ë∫´Â∞±ÊîØÊåÅÂºÇÊ≠•ÂÆπÂô®„ÄÇÂú®ÂÆπÂô®‰∏≠ Spring WebFlux ‰ºöÂ∞ÜËæìÂÖ•ÊµÅÈÄÇÈÖçÊàê Mono ÊàñËÄÖ Flux Ê†ºÂºèËøõË°åÁªü‰∏ÄÂ§ÑÁêÜ„ÄÇ POM1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-webflux&lt;/artifactId&gt;&lt;/dependency&gt; ÂÆòÊñπÂÆû‰æã1234567891011121314151617181920212223@RestControllerpublic class PersonController &#123; private final PersonRepository repository; public PersonController(PersonRepository repository) &#123; this.repository = repository; &#125; @PostMapping("/person") Mono&lt;Void&gt; create(@RequestBody Publisher&lt;Person&gt; personStream) &#123; return this.repository.save(personStream).then(); &#125; @GetMapping("/person") Flux&lt;Person&gt; list() &#123; return this.repository.findAll(); &#125; @GetMapping("/person/&#123;id&#125;") Mono&lt;Person&gt; findById(@PathVariable String id) &#123; return this.repository.findOne(id); &#125;&#125; ControllerÂ±ÇSpring Boot 2.0 ËøôÈáåÊúâ‰∏§Êù°‰∏çÂêåÁöÑÁ∫øÂàÜÂà´ÊòØÔºö Spring Web MVC -&gt; Spring Data Spring WebFlux -&gt; Spring Data Reactive Â¶ÇÊûú‰ΩøÁî® Spring Data Reactive ÔºåÂéüÊù•ÁöÑ Spring ÈíàÂØπ Spring Data ÔºàJDBCÁ≠âÔºâÁöÑ‰∫ãÂä°ÁÆ°ÁêÜ‰ºö‰∏çËµ∑‰ΩúÁî®„ÄÇÂõ†‰∏∫ÂéüÊù•ÁöÑ Spring ‰∫ãÂä°ÁÆ°ÁêÜÔºàSpring Data JPAÔºâÈÉΩÊòØÂü∫‰∫é ThreadLocal ‰º†ÈÄí‰∫ãÂä°ÁöÑÔºåÂÖ∂Êú¨Ë¥®ÊòØÂü∫‰∫é ÈòªÂ°û IO Ê®°ÂûãÔºå‰∏çÊòØÂºÇÊ≠•ÁöÑ„ÄÇ ‰ΩÜ Reactive ÊòØË¶ÅÊ±ÇÂºÇÊ≠•ÁöÑÔºå‰∏çÂêåÁ∫øÁ®ãÈáåÈù¢ ThreadLocal ËÇØÂÆöÂèñ‰∏çÂà∞ÂÄº‰∫Ü„ÄÇËá™ÁÑ∂ÔºåÊàë‰ª¨ÂæóÊÉ≥ÊÉ≥Â¶Ç‰ΩïÂú®‰ΩøÁî® Reactive ÁºñÁ®ãÊòØÂÅöÂà∞‰∫ãÂä°ÔºåÊúâ‰∏ÄÁßçÊñπÂºèÊòØ ÂõûË∞É ÊñπÂºèÔºå‰∏ÄÁõ¥‰º†ÈÄí conn ÔºönewTransaction(conn -&gt;{}) Âõ†‰∏∫ÊØèÊ¨°Êìç‰ΩúÊï∞ÊçÆÂ∫ì‰πüÊòØÂºÇÊ≠•ÁöÑÔºåÊâÄ‰ª• connection Âú® Reactive ÁºñÁ®ã‰∏≠Êó†Ê≥ïÈù† ThreadLocal ‰º†ÈÄí‰∫ÜÔºåÂè™ËÉΩÊîæÂú®ÂèÇÊï∞‰∏äÈù¢‰º†ÈÄí„ÄÇËôΩÁÑ∂‰ºöÊúâ‰∏ÄÂÆöÁöÑ‰ª£Á†Å‰æµÂÖ•Ë°å„ÄÇËøõ‰∏ÄÊ≠•Ôºå‰πüÂèØ‰ª• kotlin ÂçèÁ®ãÔºåÂéªÂÅöÂà∞ÈÄèÊòéÁöÑ‰∫ãÂä°ÁÆ°ÁêÜÔºåÂç≥Êää conn ÊîæÂà∞ ÂçèÁ®ãÁöÑÂ±ÄÈÉ®ÂèòÈáè‰∏≠Âéª„ÄÇÈÇ£ Spring Data Reactive Repositories ‰∏çÊîØÊåÅ MySQLÔºåËøõ‰∏ÄÊ≠•‰πü‰∏çÊîØÊåÅ MySQL ‰∫ãÂä°ÔºåÊÄé‰πàÂäûÔºü Á≠îÊ°àÊòØÔºåËøô‰∏™ÈóÆÈ¢òÂÖ∂ÂÆûÂíåÁ¨¨‰∏Ä‰∏™ÈóÆÈ¢ò‰πüÁõ∏ÂÖ≥„ÄÇ ‰∏∫Âï•‰∏çÊîØÊåÅ MySQLÔºåÂç≥ JDBC ‰∏çÊîØÊåÅ„ÄÇÂ§ßÂÆ∂ÂèØ‰ª•ÁúãÂà∞ JDBC ÊòØÊâÄÂ±û Spring Data ÁöÑ„ÄÇÊâÄ‰ª•ÂèØ‰ª•Á≠âÂæÖ Spring Data Reactive Repositories ÂçáÁ∫ß IO Ê®°ÂûãÔºåÂéªÊîØÊåÅ MySQL„ÄÇ‰πüÂèØ‰ª•Âíå‰∏äÈù¢‰πüËÆ≤Âà∞‰∫ÜÔºåÂ¶Ç‰Ωï‰ΩøÁî® Reactive ÁºñÁ®ãÊîØÊåÅ‰∫ãÂä°„ÄÇ Â¶ÇÊûúÂ∫îÁî®Âè™ËÉΩ‰ΩøÁî®‰∏çÂº∫‰æùËµñÊï∞ÊçÆ‰∫ãÂä°Ôºå‰æùÊóß‰ΩøÁî® MySQL ÔºåÂèØ‰ª•‰ΩøÁî®‰∏ãÈù¢ÁöÑÂÆûÁé∞Ôºå‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 12 Service Â±Ç1234567891011121314151617181920212223242526272829303132333435363738394041public interface CityService &#123; /** * Ëé∑ÂèñÂüéÂ∏Ç‰ø°ÊÅØÂàóË°® * * @return */ List&lt;City&gt; findAllCity(); /** * Ê†πÊçÆÂüéÂ∏Ç ID,Êü•ËØ¢ÂüéÂ∏Ç‰ø°ÊÅØ * * @param id * @return */ City findCityById(Long id); /** * Êñ∞Â¢ûÂüéÂ∏Ç‰ø°ÊÅØ * * @param city * @return */ Long saveCity(City city); /** * Êõ¥Êñ∞ÂüéÂ∏Ç‰ø°ÊÅØ * * @param city * @return */ Long updateCity(City city); /** * Ê†πÊçÆÂüéÂ∏Ç ID,Âà†Èô§ÂüéÂ∏Ç‰ø°ÊÅØ * * @param id * @return */ Long deleteCity(Long id);&#125; ÂÖ∑‰ΩìÊ°à‰æãÂú®ÊàëÂèÇËÄÉÂçö‰∏ªÁöÑ Github Ë∑ØÁî±Âô®Á±ª RouterÂàõÂª∫‰∏Ä‰∏™ Route Á±ªÊù•ÂÆö‰πâ RESTful HTTP Ë∑ØÁî± 12 ËØ∑ÂèÇËÄÉËÅäËÅä Spring Boot 2.x ÈÇ£‰∫õ‰∫ãÂÑø @AsyncÈúÄË¶ÅÊâßË°åÂºÇÊ≠•ÊñπÊ≥ïÊó∂ÔºåÂú®ÊñπÊ≥ï‰∏äÂä†‰∏ä@Async‰πãÂêéÔºåÂ∫ïÂ±Ç‰ΩøÁî®Â§öÁ∫øÁ®ãÊäÄÊúØ „ÄÇÂêØÂä®Âä†‰∏äÈúÄË¶Å@EnableAsync Êï∞ÊçÆËÆøÈóÆÊï¥ÂêàJdbcTemplate‰ΩøÁî®Ëøô‰∏™ÈúÄË¶Åspring-boot-starter-parentÁâàÊú¨Ë¶ÅÂú®1.5‰ª•‰∏ä POM1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;&lt;/dependency&gt; ÈÖçÁΩÆÊñá‰ª∂Âú®application.properties‰∏≠Ê∑ªÂä†Ôºö 12345# jdbcÊ®°Êùøspring.datasource.url=jdbc:mysql://localhost:3306/testspring.datasource.username=rootspring.datasource.password=123456spring.datasource.driver-class-name=com.mysql.jdbc.Driver ÂêéÂè∞ÂàõÂª∫‰∏Ä‰∏™Service 12345678@Servicepublic class UserServiceImpl implements UserService &#123; @Autowired private JdbcTemplate jdbcTemplate; public void createUser(String name, Integer age) &#123; jdbcTemplate.update("insert into users values(null,?,?);", name, age); &#125;&#125; Êï¥ÂêàMybatisËøôÈáåÁî®ÊàëÂÜôÁöÑ‰∏Ä‰∏™ÁßíÊùÄÈ°πÁõÆ‰Ωú‰∏∫ÂèÇËÄÉÊ†óÂ≠ê„ÄÇÁßíÊùÄÂïÜÂüé POM12345&lt;dependency&gt; &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt; &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt; &lt;version&gt;1.3.2&lt;/version&gt;&lt;/dependency&gt; ÈÖçÁΩÆÊñá‰ª∂Âú®application.properties‰∏≠Ê∑ªÂä†Ôºö 123456#mybatismybatis.type-aliases-package=cn.tengshe789.domainmybatis.configuration.map-underscore-to-camel-case=truemybatis.configuration.default-fetch-size=100mybatis.configuration.default-statement-timeout=3000mybatis.mapperLocations = classpath:cn/tengshe789/dao/*.xml ÂêéÂè∞ÂàõÂª∫‰∏Ä‰∏™DaoÔºàMapper ‰ª£Á†ÅÔºâ 1234567@Mapper@Componentpublic interface GoodsDao &#123; @Select("select g.*,mg.stock_count, mg.start_date, mg.end_date,mg.miaosha_price from miaosha_goods mg left join goods g on mg.goods_id = g.id") public List&lt;GoodsVo&gt; listGoodsVo();&#125; ÂàõÂª∫service 12345678910111213@Servicepublic class GoodsService &#123; @Autowired GoodsDao goodsDao; /* * Â±ïÁ§∫ÂïÜÂìÅÂàóË°® */ public List&lt;GoodsVo&gt; listGoodsVo() &#123; return goodsDao.listGoodsVo(); &#125;&#125; MybatisÊï¥ÂêàÂàÜÈ°µÊèí‰ª∂PageHelperPageHelper ÊòØ‰∏ÄÊ¨æÂ•ΩÁî®ÁöÑÂºÄÊ∫êÂÖçË¥πÁöÑ Mybatis Á¨¨‰∏âÊñπÁâ©ÁêÜÂàÜÈ°µÊèí‰ª∂ POM12345&lt;dependency&gt; &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt; &lt;artifactId&gt;pagehelper-spring-boot-starter&lt;/artifactId&gt; &lt;version&gt;1.2.5&lt;/version&gt;&lt;/dependency&gt; ÈÖçÁΩÆÊñá‰ª∂Âú®application.properties‰∏≠Ê∑ªÂä†Ôºö 12345678# ÈÖçÁΩÆÊó•Âøólogging.level.cn.tengshe789.dao=DEBUG# Pagehelperpagehelper.helperDialect=mysqlpagehelper.reasonable=truepagehelper.supportMethodsArguments=truepagehelper.params=count=countSqlpagehelper.page-size-zero=true ÊàñËÄÖÂú®application.yml‰∏≠Ê∑ªÂä†Ôºö 123456789101112# ‰∏émybatisÊï¥Âêàmybatis: config-location: classpath:mybatis.xml mapper-locations: - classpath:cn/tengshe789/dao/*.xml# ÂàÜÈ°µÈÖçÁΩÆpagehelper: helper-dialect: mysql reasonable: true support-methods-arguments: true params: count=countSql ‰ª£Á†ÅÂÆû‰ΩìÂ±ÇÈù¢12345@Datapublic class User &#123; private Integer id; private String name;&#125; DaoÂ±Ç1234public interface UserDao &#123; @Select("SELECT * FROM USERS ") List&lt;User&gt; findUserList();&#125; ServiceÂ±Ç123456789101112131415161718@Servicepublic class UserService &#123; @Autowired private UserMapper userDao; /** * page ÂΩìÂâçÈ°µÊï∞&lt;br&gt; * size ÂΩìÂâçÂ±ïÁ§∫ÁöÑÊï∞ÊçÆ&lt;br&gt; */ public PageInfo&lt;User&gt; findUserList(int page, int size) &#123; // ÂºÄÂêØÂàÜÈ°µÊèí‰ª∂,ÊîæÂú®Êü•ËØ¢ËØ≠Âè•‰∏äÈù¢ PageHelper.startPage(page, size); List&lt;User&gt; listUser = userDao.findUserList(); // Â∞ÅË£ÖÂàÜÈ°µ‰πãÂêéÁöÑÊï∞ÊçÆ PageInfo&lt;User&gt; pageInfoUser = new PageInfo&lt;User&gt;(listUser); return pageInfoUser; &#125;&#125; Êï¥ÂêàSpringJPAspring-data-jpa‰∏â‰∏™Ê≠•È™§Ôºö Â£∞ÊòéÊåÅ‰πÖÂ±ÇÁöÑÊé•Âè£ÔºåËØ•Êé•Âè£ÁªßÊâø RepositoryÔºàÊàñRepositoryÁöÑÂ≠êÊé•Âè£ÔºåÂÖ∂‰∏≠ÂÆö‰πâ‰∫Ü‰∏Ä‰∫õÂ∏∏Áî®ÁöÑÂ¢ûÂà†ÊîπÊü•Ôºå‰ª•ÂèäÂàÜÈ°µÁõ∏ÂÖ≥ÁöÑÊñπÊ≥ïÔºâ„ÄÇ Âú®Êé•Âè£‰∏≠Â£∞ÊòéÈúÄË¶ÅÁöÑ‰∏öÂä°ÊñπÊ≥ï„ÄÇSpring Data Â∞ÜÊ†πÊçÆÁªôÂÆöÁöÑÁ≠ñÁï•ÁîüÊàêÂÆûÁé∞‰ª£Á†Å„ÄÇ Âú® Spring ÈÖçÁΩÆÊñá‰ª∂‰∏≠Â¢ûÂä†‰∏ÄË°åÂ£∞ÊòéÔºåËÆ© Spring ‰∏∫Â£∞ÊòéÁöÑÊé•Âè£ÂàõÂª∫‰ª£ÁêÜÂØπË±°„ÄÇÈÖçÁΩÆ‰∫Ü jpa:repositories ÂêéÔºåSpring ÂàùÂßãÂåñÂÆπÂô®Êó∂Â∞Ü‰ºöÊâ´Êèè base-package ÊåáÂÆöÁöÑÂåÖÁõÆÂΩïÂèäÂÖ∂Â≠êÁõÆÂΩïÔºå‰∏∫ÁªßÊâø Repository ÊàñÂÖ∂Â≠êÊé•Âè£ÁöÑÊé•Âè£ÂàõÂª∫‰ª£ÁêÜÂØπË±°ÔºåÂπ∂Â∞Ü‰ª£ÁêÜÂØπË±°Ê≥®ÂÜå‰∏∫ Spring BeanÔºå‰∏öÂä°Â±Ç‰æøÂèØ‰ª•ÈÄöËøá Spring Ëá™Âä®Â∞ÅË£ÖÁöÑÁâπÊÄßÊù•Áõ¥Êé•‰ΩøÁî®ËØ•ÂØπË±°„ÄÇ ËØ¶ÊÉÖÔºöJPAÂÆòÊñπÁΩëÁ´ô POM1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;&lt;/dependency&gt; ÈÖçÁΩÆÊñá‰ª∂Springboot ÈªòËÆ§‰ΩøÁî®hibernate‰Ωú‰∏∫JPAÁöÑÂÆûÁé∞ „ÄÇÈúÄË¶ÅÂú®application.properties‰∏≠Ê∑ªÂä†Ôºö 12345678# hibernatespring.datasource.url=jdbc:mysql://localhost:3306/test?useSSL=falsespring.datasource.username=rootspring.datasource.password=rootspring.datasource.tomcat.max-active=100spring.datasource.tomcat.max-idle=200spring.datasource.tomcat.initialSize=20spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect ‰ª£Á†ÅDomain1234567891011@Data@Entity(name = "users")public class UserEntity &#123; @Id @GeneratedValue(strategy = GenerationType.IDENTITY) private Integer id; @Column(name = "name") private String name; @Column(name = "age") private Integer age;&#125; Ê≥®Ëß£ÁöÑÊÑèÊÄùÔºö @Entity‰ºöË¢´springÊâ´ÊèèÂπ∂Âä†ËΩΩÔºå @IdÊ≥®Ëß£Âú®‰∏ªÈîÆ‰∏ä @Column name=&quot;call_phone&quot; ÊåáËØ•Â≠óÊÆµÂØπÂ∫îÁöÑÊï∞ÊçÆÂ∫ìÁöÑÂ≠óÊÆµÂêçÔºåÂ¶ÇÊûúÁõ∏ÂêåÂ∞±‰∏çÈúÄË¶ÅÂÆö‰πâ„ÄÇÊï∞ÊçÆÂ∫ì‰∏ãÂàíÁ∫øÈó¥ÈöîÂíå‰ª£Á†Å‰∏≠ÁöÑÈ©ºÂ≥∞Ê≥ïËßÜ‰∏∫Áõ∏ÂêåÔºåÂ¶ÇÊï∞ÊçÆÂ∫ìÂ≠óÊÆµcreate_timeÁ≠â‰ª∑‰∫éJavaÁ±ª‰∏≠ÁöÑcreateTimeÔºåÂõ†Ê≠§‰∏çÈúÄË¶ÅÁî®@ColumnÊ≥®Ëß£„ÄÇ DaoÂ±ÇÊ≠§Êó∂ÈúÄË¶ÅÁªßÊâøRepositoryÊé•Âè£~ 12public interface UserDao extends JpaRepository&lt;User, Integer&gt; &#123;&#125; Controller123456789101112@RestControllerpublic class IndexController &#123; @Autowired private UserDao userDao; @RequestMapping("/jpaFindUser") public Object jpaIndex(User user) &#123; Optional&lt;User&gt; userOptional = userDao.findById(user.getId()); User result = userOptional.get(); return reusltUser == null ? "Ê≤°ÊúâÊü•ËØ¢Âà∞Êï∞ÊçÆ" : result; &#125;&#125; Â§öÊï∞ÊçÆÊ∫êÂæàÂ§öÂÖ¨Âè∏ÈÉΩ‰ºö‰ΩøÁî®Â§öÊï∞ÊçÆÂ∫ìÔºå‰∏Ä‰∏™Êï∞ÊçÆÂ∫ìÂ≠òÊîæÂÖ±ÂêåÁöÑÈÖçÁΩÆÊàñÊñá‰ª∂ÔºåÂè¶‰∏Ä‰∏™Êï∞ÊçÆÂ∫ìÊòØÊîæÂûÇÁõ¥‰∏öÂä°ÁöÑÊï∞ÊçÆ„ÄÇÊâÄ‰ª•ËØ¥ÈúÄË¶Å‰∏Ä‰∏™È°πÁõÆ‰∏≠ÊúâÂ§ö‰∏™Êï∞ÊçÆÊ∫ê ËøôÁé©ÊÑèÂéüÁêÜÂæàÁÆÄÂçïÔºåÊ†πÊçÆ‰∏çÂêåÂåÖÂêçÔºåÂä†ËΩΩ‰∏çÂêåÊï∞ÊçÆÊ∫ê„ÄÇ ÈÖçÁΩÆÊñá‰ª∂Âú®application.properties‰∏≠Ê∑ªÂä†Ôºö 12345678910# datasource1spring.datasource.test1.driver-class-name = com.mysql.jdbc.Driverspring.datasource.test1.jdbc-url =jdbc:mysql://localhost:3306/test01?useUnicode=true&amp;characterEncoding=utf-8spring.datasource.test1.username = rootspring.datasource.test1.password = 123456# datasource2spring.datasource.test2.driver-class-name = com.mysql.jdbc.Driverspring.datasource.test2.jdbc-url =jdbc:mysql://localhost:3306/test02?useUnicode=true&amp;characterEncoding=utf-8spring.datasource.test2.username = rootspring.datasource.test2.password = 123456 ‰ª£Á†ÅÊ∑ªÂä†ÈÖçÁΩÆÊï∞ÊçÆÂ∫ì1ÁöÑ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849//DataSource01@Configuration // Ê≥®ÂÜåÂà∞springbootÂÆπÂô®‰∏≠@MapperScan(basePackages = "tech.tengshe789.test01", sqlSessionFactoryRef = "test1SqlSessionFactory")public class DataSource1Config &#123; /** * @methodDesc: ÂäüËÉΩÊèèËø∞:(ÈÖçÁΩÆtest1Êï∞ÊçÆÂ∫ì) * @author: tEngSHe789 */ @Bean(name = "test1DataSource") @ConfigurationProperties(prefix = "spring.datasource.test1") @Primary public DataSource testDataSource() &#123; return DataSourceBuilder.create().build(); &#125; /** * @methodDesc: ÂäüËÉΩÊèèËø∞:(test1 sql‰ºöËØùÂ∑•ÂéÇ) */ @Bean(name = "test1SqlSessionFactory") @Primary public SqlSessionFactory testSqlSessionFactory(@Qualifier("test1DataSource") DataSource dataSource) throws Exception &#123; SqlSessionFactoryBean bean = new SqlSessionFactoryBean(); bean.setDataSource(dataSource); //Âä†ËΩΩmapperÔºà‰∏çÈúÄË¶ÅÔºâ bean.setMapperLocations( new PathMatchingResourcePatternResolver().getResources("classpath:mybatis/mapper/test1/*.xml")); return bean.getObject(); &#125; /** * * @methodDesc: ÂäüËÉΩÊèèËø∞:(test1 ‰∫ãÁâ©ÁÆ°ÁêÜ) */ @Bean(name = "test1TransactionManager") @Primary public DataSourceTransactionManager testTransactionManager(@Qualifier("test1DataSource") DataSource dataSource) &#123; return new DataSourceTransactionManager(dataSource); &#125; @Bean(name = "test1SqlSessionTemplate") @Primary public SqlSessionTemplate testSqlSessionTemplate( @Qualifier("test1SqlSessionFactory") SqlSessionFactory sqlSessionFactory) throws Exception &#123; return new SqlSessionTemplate(sqlSessionFactory); &#125;&#125; Êï∞ÊçÆÂ∫ì2ÁöÑÂêåÁêÜ„ÄÇ Dao1234public interface User1Dao &#123; @Insert("insert into users values(null,#&#123;name&#125;,#&#123;age&#125;);") public int addUser(@Param("name") String name, @Param("age") Integer age);&#125; Ê≥®ÊÑè‰∫ãÈ°πÂú®Â§öÊï∞ÊçÆÊ∫êÁöÑÊÉÖÂÜµ‰∏ãÔºå‰ΩøÁî®@TransactionalÊ≥®Ëß£Êó∂ÔºåÂ∫îËØ•ÊåáÂÆö‰∫ãÂä°ÁÆ°ÁêÜËÄÖ@Transactional(transactionManager = &quot;test1TransactionManager&quot;) ‰∫ãÁâ©ÁÆ°ÁêÜÊÄé‰πàËøõË°å‰∫ãÁâ©ÁÆ°ÁêÜÂë¢ÔºåÁÆÄÂçïÔºåÂæÄ‰∏ãÁúã„ÄÇ Â£∞ÊòéÂºè‰∫ãÂä°ÊâæÂà∞serviceÂÆûÁé∞Á±ªÔºåÂä†‰∏ä@Transactional Ê≥®Ëß£Â∞±Ë°åÔºåÊ≠§@TransactionalÊ≥®Ëß£Êù•Ëá™org.springframework.transaction.annotationÂåÖ Ôºå‰∏çÊòØÊù•Ëá™javax.transaction „ÄÇËÄå‰∏î@Transactional‰∏ç‰ªÖÂèØ‰ª•Ê≥®Ëß£Âú®ÊñπÊ≥ï‰∏äÔºå‰πüÂèØ‰ª•Ê≥®Ëß£Âú®Á±ª‰∏ä„ÄÇÂΩìÊ≥®Ëß£Âú®Á±ª‰∏äÁöÑÊó∂ÂÄôÊÑèÂë≥ÁùÄÊ≠§Á±ªÁöÑÊâÄÊúâpublicÊñπÊ≥ïÈÉΩÊòØÂºÄÂêØ‰∫ãÂä°ÁöÑ„ÄÇÂ¶ÇÊûúÁ±ªÁ∫ßÂà´ÂíåÊñπÊ≥ïÁ∫ßÂà´ÂêåÊó∂‰ΩøÁî®‰∫Ü@TransactionalÊ≥®Ëß£ÔºåÂàô‰ΩøÁî®Âú®Á±ªÁ∫ßÂà´ÁöÑÊ≥®Ëß£‰ºöÈáçËΩΩÊñπÊ≥ïÁ∫ßÂà´ÁöÑÊ≥®Ëß£„ÄÇ Ê≥®ÊÑèÔºöSpringbootÊèê‰æõ‰∫Ü‰∏Ä‰∏™@EnableTransactionManagementÊ≥®Ëß£Âú®ÈÖçÁΩÆÁ±ª‰∏äÊù•ÂºÄÂêØÂ£∞ÊòéÂºè‰∫ãÂä°ÁöÑÊîØÊåÅ„ÄÇÊ≥®Ëß£@EnableTransactionManagementÊòØÈªòËÆ§ÊâìÂºÄÁöÑÔºåÊÉ≥Ë¶ÅÂÖ≥Èó≠‰∫ãÂä°ÁÆ°ÁêÜÔºåÊÉ≥Ë¶ÅÂú®Á®ãÂ∫èÂÖ•Âè£Â∞ÜËøô‰∏™Ê≥®Ëß£Êîπ‰∏∫false ÂàÜÂ∏ÉÂºè‰∫ãÁâ©ÁÆ°ÁêÜÂï•ÊòØÂàÜÂ∏ÉÂºè‰∫ãÂä°Âë¢ÔºåÊØîÂ¶ÇÊàë‰ª¨Âú®ÊâßË°å‰∏Ä‰∏™‰∏öÂä°ÈÄªËæëÁöÑÊó∂ÂÄôÊúâ‰∏§Ê≠•ÂàÜÂà´Êìç‰ΩúAÊï∞ÊçÆÊ∫êÂíåBÊï∞ÊçÆÊ∫êÔºåÂΩìÊàë‰ª¨Âú®AÊï∞ÊçÆÊ∫êÊâßË°åÊï∞ÊçÆÊõ¥ÊîπÂêéÔºåÂú®BÊï∞ÊçÆÊ∫êÊâßË°åÊó∂Âá∫Áé∞ËøêË°åÊó∂ÂºÇÂ∏∏ÔºåÈÇ£‰πàÊàë‰ª¨ÂøÖÈ°ªË¶ÅËÆ©BÊï∞ÊçÆÊ∫êÁöÑÊìç‰ΩúÂõûÊªöÔºåÂπ∂ÂõûÊªöÂØπAÊï∞ÊçÆÊ∫êÁöÑÊìç‰Ωú„ÄÇËøôÁßçÊÉÖÂÜµÂú®ÊîØ‰ªò‰∏öÂä°Êó∂Â∏∏Â∏∏Âá∫Áé∞ÔºåÊØîÂ¶Ç‰π∞Á•®‰∏öÂä°Âú®ÊúÄÂêéÊîØ‰ªòÂ§±Ë¥•ÔºåÈÇ£‰πãÂâçÁöÑÊìç‰ΩúÂøÖÈ°ªÂÖ®ÈÉ®ÂõûÊªöÔºåÂ¶ÇÊûú‰πãÂâçÁöÑÊìç‰ΩúÂàÜÂ∏ÉÂú®Â§ö‰∏™Êï∞ÊçÆÊ∫ê‰∏≠ÔºåÈÇ£‰πàËøôÂ∞±ÊòØÂÖ∏ÂûãÁöÑÂàÜÂ∏ÉÂºè‰∫ãÂä°ÂõûÊªö ‰∫ÜËß£‰∫Ü‰ªÄ‰πàÊòØÂàÜÂ∏ÉÂºè‰∫ãÂä°ÔºåÈÇ£ÂàÜÂ∏ÉÂºè‰∫ãÂä°Âú®javaÁöÑËß£ÂÜ≥ÊñπÊ°àÂ∞±ÊòØJTA(Âç≥Java Transaction API)„ÄÇ springbootÂÆòÊñπÊèê‰æõ‰∫Ü Atomikos Ôºå Bitronix ÔºåNarayana ÁöÑÁ±ª‰∫ãÂä°ÁÆ°ÁêÜÂô® Á±ª‰∫ãÂä°ÁÆ°ÁêÜÂô®AtomikosPOM1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-jta-atomikos&lt;/artifactId&gt;&lt;/dependency&gt; ÈÖçÁΩÆÊñá‰ª∂12345678910111213141516171819202122232425# Mysql 1mysql.datasource.test1.url = jdbc:mysql://localhost:3306/test01?useUnicode=true&amp;characterEncoding=utf-8mysql.datasource.test1.username = rootmysql.datasource.test1.password = 123456mysql.datasource.test1.minPoolSize = 3mysql.datasource.test1.maxPoolSize = 25mysql.datasource.test1.maxLifetime = 20000mysql.datasource.test1.borrowConnectionTimeout = 30mysql.datasource.test1.loginTimeout = 30mysql.datasource.test1.maintenanceInterval = 60mysql.datasource.test1.maxIdleTime = 60# Mysql 2mysql.datasource.test2.url =jdbc:mysql://localhost:3306/test02?useUnicode=true&amp;characterEncoding=utf-8mysql.datasource.test2.username =rootmysql.datasource.test2.password =123456mysql.datasource.test2.minPoolSize = 3mysql.datasource.test2.maxPoolSize = 25mysql.datasource.test2.maxLifetime = 20000mysql.datasource.test2.borrowConnectionTimeout = 30mysql.datasource.test2.loginTimeout = 30mysql.datasource.test2.maintenanceInterval = 60mysql.datasource.test2.maxIdleTime = 60 ËØªÂèñÈÖçÁΩÆÊñá‰ª∂‰ø°ÊÅØ‰ª•‰∏ãÊòØËØªÂèñÊï∞ÊçÆÂ∫ì1ÁöÑÈÖçÁΩÆÊñá‰ª∂ 123456789101112131415@Data@ConfigurationProperties(prefix = "mysql.datasource.test1")public class DBConfig1 &#123; private String url; private String username; private String password; private int minPoolSize; private int maxPoolSize; private int maxLifetime; private int borrowConnectionTimeout; private int loginTimeout; private int maintenanceInterval; private int maxIdleTime; private String testQuery;&#125; ËØªÂèñÊï∞ÊçÆÂ∫ì2ÁöÑÈÖçÁΩÆÊñá‰ª∂Áï• ÂàõÂª∫Êï∞ÊçÆÊ∫êÊï∞ÊçÆÊ∫ê1Ôºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647@Configuration// basePackages ÊúÄÂ•ΩÂàÜÂºÄÈÖçÁΩÆ Â¶ÇÊûúÊîæÂú®Âêå‰∏Ä‰∏™Êñá‰ª∂Â§πÂèØËÉΩ‰ºöÊä•Èîô@MapperScan(basePackages = "tech.tengshe789.test01", sqlSessionTemplateRef = "testSqlSessionTemplate")public class MyBatisConfig1 &#123; // ÈÖçÁΩÆÊï∞ÊçÆÊ∫ê @Primary @Bean(name = "testDataSource") public DataSource testDataSource(DBConfig1 testConfig) throws SQLException &#123; MysqlXADataSource mysqlXaDataSource = new MysqlXADataSource(); mysqlXaDataSource.setUrl(testConfig.getUrl()); mysqlXaDataSource.setPinGlobalTxToPhysicalConnection(true); mysqlXaDataSource.setPassword(testConfig.getPassword()); mysqlXaDataSource.setUser(testConfig.getUsername()); mysqlXaDataSource.setPinGlobalTxToPhysicalConnection(true); AtomikosDataSourceBean xaDataSource = new AtomikosDataSourceBean(); xaDataSource.setXaDataSource(mysqlXaDataSource); xaDataSource.setUniqueResourceName("testDataSource"); xaDataSource.setMinPoolSize(testConfig.getMinPoolSize()); xaDataSource.setMaxPoolSize(testConfig.getMaxPoolSize()); xaDataSource.setMaxLifetime(testConfig.getMaxLifetime()); xaDataSource.setBorrowConnectionTimeout(testConfig.getBorrowConnectionTimeout()); xaDataSource.setLoginTimeout(testConfig.getLoginTimeout()); xaDataSource.setMaintenanceInterval(testConfig.getMaintenanceInterval()); xaDataSource.setMaxIdleTime(testConfig.getMaxIdleTime()); xaDataSource.setTestQuery(testConfig.getTestQuery()); return xaDataSource; &#125; @Primary @Bean(name = "testSqlSessionFactory") public SqlSessionFactory testSqlSessionFactory(@Qualifier("testDataSource") DataSource dataSource) throws Exception &#123; SqlSessionFactoryBean bean = new SqlSessionFactoryBean(); bean.setDataSource(dataSource); return bean.getObject(); &#125; @Primary @Bean(name = "testSqlSessionTemplate") public SqlSessionTemplate testSqlSessionTemplate( @Qualifier("testSqlSessionFactory") SqlSessionFactory sqlSessionFactory) throws Exception &#123; return new SqlSessionTemplate(sqlSessionFactory); &#125;&#125; Êï∞ÊçÆÂ∫ì2Áï• Â¶Ç‰ΩïÂêØÂä®1234567@EnableConfigurationProperties(value = &#123; DBConfig1.class, DBConfig2.class &#125;)@SpringBootApplicationpublic class MainApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(MainApplication.class, args); &#125; &#125; ÂÆöÊó∂‰ªªÂä°Âú®ÂÅöÈ°πÁõÆÊó∂ÊúâÊó∂ÂÄô‰ºöÊúâÂÆöÊó∂Âô®‰ªªÂä°ÁöÑÂäüËÉΩÔºåÊØîÂ¶ÇÊüêÊüêÊó∂Èó¥Â∫îËØ•ÂÅö‰ªÄ‰πàÔºåÂ§öÂ∞ëÁßíÂ∫îËØ•ÊÄé‰πàÊ†∑‰πãÁ±ªÁöÑ„ÄÇ springÊîØÊåÅÂ§öÁßçÂÆöÊó∂‰ªªÂä°ÁöÑÂÆûÁé∞„ÄÇÊàë‰ª¨Êù•‰ªãÁªç‰∏ã‰ΩøÁî®Quartz ÂíåScheduler Spring ScheduleSpring Schedule ÂÆûÁé∞ÂÆöÊó∂‰ªªÂä°Êúâ‰∏§ÁßçÊñπÂºè 1. ‰ΩøÁî®XMLÈÖçÁΩÆÂÆöÊó∂‰ªªÂä°Ôºå 2. ‰ΩøÁî® @Scheduled Ê≥®Ëß£„ÄÇ ‰ª£Á†ÅÂõ∫ÂÆöÁ≠âÂæÖÊó∂Èó¥ @Scheduled(fixedDelay = Êó∂Èó¥Èó¥Èöî ) Âõ∫ÂÆöÈó¥ÈöîÊó∂Èó¥ @Scheduled(fixedRate = Êó∂Èó¥Èó¥Èöî ) 123456789101112@Componentpublic class ScheduleJobs &#123; public final static long SECOND = 1 * 1000; FastDateFormat fdf = FastDateFormat.getInstance("yyyy-MM-dd HH:mm:ss"); @Scheduled(fixedDelay = SECOND * 2) public void fixedDelayJob() throws InterruptedException &#123; TimeUnit.SECONDS.sleep(2); System.out.println("[FixedDelayJob Execute]"+fdf.format(new Date())); &#125;&#125; CornË°®ËææÂºè @Scheduled(cron = CornË°®ËææÂºè) 1234567891011@Componentpublic class ScheduleJobs &#123; public final static long SECOND = 1 * 1000; FastDateFormat fdf = FastDateFormat.getInstance("yyyy-MM-dd HH:mm:ss"); @Scheduled(cron = "0/4 * * * * ?") public void cronJob() &#123; System.out.println("[CronJob Execute]"+fdf.format(new Date())); &#125;&#125; ÂêØÂä®Ë¶ÅÂú®‰∏ªÊñπÊ≥ï‰∏äÂä†‰∏ä@EnableScheduling QuartzPOM1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-quartz-starter&lt;/artifactId&gt; &lt;/dependency&gt; ÈÖçÁΩÆÊñá‰ª∂1234567891011121314# spring boot 2.x Â∑≤ÈõÜÊàêQuartzÔºåÊó†ÈúÄËá™Â∑±ÈÖçÁΩÆspring.quartz.job-store-type=jdbcspring.quartz.properties.org.quartz.scheduler.instanceName=clusteredSchedulerspring.quartz.properties.org.quartz.scheduler.instanceId=AUTOspring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTXspring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegatespring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_spring.quartz.properties.org.quartz.jobStore.isClustered=truespring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=10000spring.quartz.properties.org.quartz.jobStore.useProperties=falsespring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPoolspring.quartz.properties.org.quartz.threadPool.threadCount=10spring.quartz.properties.org.quartz.threadPool.threadPriority=5spring.quartz.properties.org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true ÈÖçÁΩÆÁ±ª12345678910111213141516@Configurationpublic class QuartzConfig &#123; @Bean public JobDetail uploadTaskDetail() &#123; return JobBuilder.newJob(UploadTask.class).withIdentity("uploadTask").storeDurably().build(); &#125; @Bean public Trigger uploadTaskTrigger() &#123; CronScheduleBuilder scheduleBuilder = CronScheduleBuilder.cronSchedule("*/5 * * * * ?"); return TriggerBuilder.newTrigger().forJob(uploadTaskDetail()) .withIdentity("uploadTask") .withSchedule(scheduleBuilder) .build(); &#125;&#125; ÂÆûÁé∞Á±ªÂàõÂª∫‰∏Ä‰∏™ÈÖçÁΩÆÁ±ªÔºåÂàÜÂà´Âà∂ÂÆöÂÖ∑‰Ωì‰ªªÂä°Á±ªÂíåËß¶ÂèëÁöÑËßÑÂàô 12345678910111213141516@Configuration@DisallowConcurrentExecutionpublic class UploadTask extends QuartzJobBean &#123; @Resource private TencentYunService tencentYunService; @Override protected void executeInternal(JobExecutionContext jobExecutionContext) throws JobExecutionException &#123; System.out.println("‰ªªÂä°ÂºÄÂßã"); try &#123; Thread.sleep(6000); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; System.out.println("‰ªªÂä°ÁªìÊùü"); &#125;&#125; @DisallowConcurrentExecutionÁ¶ÅÊ≠¢Âπ∂ÂèëÊâßË°å Âπ∂ÂèëÊâßË°åÊñπÈù¢ÔºåÁ≥ªÁªüÈªòËÆ§‰∏∫true,Âç≥Á¨¨‰∏Ä‰∏™‰ªªÂä°ËøòÊú™ÊâßË°åÂÆåÊï¥ÔºåÁ¨¨‰∫å‰∏™‰ªªÂä°Â¶ÇÊûúÂà∞‰∫ÜÊâßË°åÊó∂Èó¥ÔºåÂàô‰ºöÁ´ãÈ©¨ÂºÄÂêØÊñ∞Á∫øÁ®ãÊâßË°å‰ªªÂä°ÔºåËøôÊ†∑Â¶ÇÊûúÊàë‰ª¨ÊòØ‰ªéÊï∞ÊçÆÂ∫ìËØªÂèñ‰ø°ÊÅØÔºå‰∏§Ê¨°ÈáçÂ§çËØªÂèñÂèØËÉΩÂá∫Áé∞ÈáçÂ§çÊâßË°å‰ªªÂä°ÁöÑÊÉÖÂÜµÔºåÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶ÅÂ∞ÜËøô‰∏™ÂÄºËÆæÁΩÆ‰∏∫falseÔºåËøôÊ†∑Á¨¨‰∫å‰∏™‰ªªÂä°‰ºöÂæÄÂêéÊé®ËøüÔºåÂè™ÊúâÂú®Á¨¨‰∏Ä‰∏™‰ªªÂä°ÊâßË°åÂÆåÊàêÂêéÊâç‰ºöÊâßË°åÁ¨¨‰∫å‰∏™‰ªªÂä° Êó•ÂøóÁÆ°ÁêÜlog4jPOM12345678910111213141516171819&lt;!-- spring boot start --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt; &lt;exclusions&gt; &lt;!-- ÊéíÈô§Ëá™Â∏¶ÁöÑlogback‰æùËµñ --&gt; &lt;exclusion&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-logging&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt; &lt;/dependency&gt; &lt;!-- springboot-log4j --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-log4j&lt;/artifactId&gt; &lt;version&gt;1.3.8.RELEASE&lt;/version&gt; &lt;/dependency&gt; ÈÖçÁΩÆÊñá‰ª∂Êñá‰ª∂ÂêçÁß∞log4j.properties 1234567891011121314151617181920212223242526272829303132#log4j.rootLogger=CONSOLE,info,error,DEBUGlog4j.rootLogger=info,error,CONSOLE,DEBUGlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout log4j.appender.CONSOLE.layout.ConversionPattern=%d&#123;yyyy-MM-dd-HH-mm&#125; [%t] [%c] [%p] - %m%n log4j.logger.info=infolog4j.appender.info=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.info.layout=org.apache.log4j.PatternLayout log4j.appender.info.layout.ConversionPattern=%d&#123;yyyy-MM-dd-HH-mm&#125; [%t] [%c] [%p] - %m%n log4j.appender.info.datePattern='.'yyyy-MM-ddlog4j.appender.info.Threshold = info log4j.appender.info.append=true #log4j.appender.info.File=/home/admin/pms-api-services/logs/info/api_services_infolog4j.appender.info.File=/Users/dddd/Documents/testspace/pms-api-services/logs/info/api_services_infolog4j.logger.error=error log4j.appender.error=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.error.layout=org.apache.log4j.PatternLayout log4j.appender.error.layout.ConversionPattern=%d&#123;yyyy-MM-dd-HH-mm&#125; [%t] [%c] [%p] - %m%n log4j.appender.error.datePattern='.'yyyy-MM-ddlog4j.appender.error.Threshold = error log4j.appender.error.append=true #log4j.appender.error.File=/home/admin/pms-api-services/logs/error/api_services_errorlog4j.appender.error.File=/Users/dddd/Documents/testspace/pms-api-services/logs/error/api_services_errorlog4j.logger.DEBUG=DEBUGlog4j.appender.DEBUG=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.DEBUG.layout=org.apache.log4j.PatternLayout log4j.appender.DEBUG.layout.ConversionPattern=%d&#123;yyyy-MM-dd-HH-mm&#125; [%t] [%c] [%p] - %m%n log4j.appender.DEBUG.datePattern='.'yyyy-MM-ddlog4j.appender.DEBUG.Threshold = DEBUG log4j.appender.DEBUG.append=true #log4j.appender.DEBUG.File=/home/admin/pms-api-services/logs/debug/api_services_debuglog4j.appender.DEBUG.File=/Users/dddd/Documents/testspace/pms-api-services/logs/debug/api_services_debug ‰ΩøÁî®1private static final Logger logger = LoggerFactory.getLogger(IndexController.class); ‰ΩøÁî®AOPÁªü‰∏ÄÂ§ÑÁêÜWebËØ∑Ê±ÇÊó•ÂøóPOM1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt; &lt;/dependency&gt; ‰ª£Á†Å1234567891011121314151617181920212223242526272829303132@Aspect@Componentpublic class WebLogAspect &#123; private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class); @Pointcut("execution(public * tech.tengshe789.controller.*.*(..))") public void webLog() &#123; &#125; @Before("webLog()") public void doBefore(JoinPoint joinPoint) throws Throwable &#123; // Êé•Êî∂Âà∞ËØ∑Ê±ÇÔºåËÆ∞ÂΩïËØ∑Ê±ÇÂÜÖÂÆπ ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes(); HttpServletRequest request = attributes.getRequest(); // ËÆ∞ÂΩï‰∏ãËØ∑Ê±ÇÂÜÖÂÆπ logger.info("URL : " + request.getRequestURL().toString()); logger.info("HTTP_METHOD : " + request.getMethod()); logger.info("IP : " + request.getRemoteAddr()); Enumeration&lt;String&gt; enu = request.getParameterNames(); while (enu.hasMoreElements()) &#123; String name = (String) enu.nextElement(); logger.info("name:&#123;&#125;,value:&#123;&#125;", name, request.getParameter(name)); &#125; &#125; @AfterReturning(returning = "ret", pointcut = "webLog()") public void doAfterReturning(Object ret) throws Throwable &#123; // Â§ÑÁêÜÂÆåËØ∑Ê±ÇÔºåËøîÂõûÂÜÖÂÆπ logger.info("RESPONSE : " + ret); &#125;&#125; lombok Êèí‰ª∂ÈùûÂ∏∏ÁÆÄÂçïÁöÑÂäûÊ≥ï POM12345&lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;1.18.0&lt;/version&gt; &lt;/dependency&gt; ‰ª£Á†ÅÁ±ª‰∏≠Ê∑ªÂä†@Slf4j Ê≥®Ëß£Âç≥ÂèØ„ÄÇ‰ΩøÁî®ÊòØÁõ¥Êé•ËæìÂÖ•logÂÖ®Â±ÄÂèòÈáè LombokÁöÑÂÖ∂‰ªñÁî®Ê≥ï123456789101112131415@Data Ê†áÁ≠æÔºåÁîüÊàêgetter/setter toString()Á≠âÊñπÊ≥ï @NonNull : ËÆ©‰Ω†‰∏çÂú®ÊãÖÂøßÂπ∂‰∏îÁà±‰∏äNullPointerException @CleanUp : Ëá™Âä®ËµÑÊ∫êÁÆ°ÁêÜÔºö‰∏çÁî®ÂÜçÂú®finally‰∏≠Ê∑ªÂä†ËµÑÊ∫êÁöÑcloseÊñπÊ≥ï @Setter/@Getter : Ëá™Âä®ÁîüÊàêsetÂíågetÊñπÊ≥ï @ToString : Ëá™Âä®ÁîüÊàêtoStringÊñπÊ≥ï @EqualsAndHashcode : ‰ªéÂØπË±°ÁöÑÂ≠óÊÆµ‰∏≠ÁîüÊàêhashCodeÂíåequalsÁöÑÂÆûÁé∞ @NoArgsConstructor/@RequiredArgsConstructor/@AllArgsConstructor Ëá™Âä®ÁîüÊàêÊûÑÈÄ†ÊñπÊ≥ï @Data : Ëá™Âä®ÁîüÊàêset/getÊñπÊ≥ïÔºåtoStringÊñπÊ≥ïÔºåequalsÊñπÊ≥ïÔºåhashCodeÊñπÊ≥ïÔºå‰∏çÂ∏¶ÂèÇÊï∞ÁöÑÊûÑÈÄ†ÊñπÊ≥ï @Value : Áî®‰∫éÊ≥®Ëß£finalÁ±ª @Builder : ‰∫ßÁîüÂ§çÊùÇÁöÑÊûÑÂª∫Âô®apiÁ±ª@SneakyThrows : ÂºÇÂ∏∏Â§ÑÁêÜÔºàË∞®ÊÖé‰ΩøÁî®Ôºâ @Synchronized : ÂêåÊ≠•ÊñπÊ≥ïÂÆâÂÖ®ÁöÑËΩ¨Âåñ @Getter(lazy=true) : @Log : ÊîØÊåÅÂêÑÁßçloggerÂØπË±°Ôºå‰ΩøÁî®Êó∂Áî®ÂØπÂ∫îÁöÑÊ≥®Ëß£ÔºåÂ¶ÇÔºö@Log4 Êã¶Êà™Âô®Êã¶Êà™Âô®ÔºåÂú®AOP(Aspect-Oriented Programming)‰∏≠Áî®‰∫éÂú®Êüê‰∏™ÊñπÊ≥ïÊàñÂ≠óÊÆµË¢´ËÆøÈóÆ‰πãÂâçÔºåËøõË°åÊã¶Êà™ÔºåÁÑ∂ÂêéÂú®‰πãÂâçÊàñ‰πãÂêéÂä†ÂÖ•Êüê‰∫õÊìç‰Ωú„ÄÇÊã¶Êà™ÊòØAOPÁöÑ‰∏ÄÁßçÂÆûÁé∞Á≠ñÁï•„ÄÇ Ôºà1ÔºâÊã¶Êà™Âô®ÊòØÂü∫‰∫éjavaÁöÑÂèçÂ∞ÑÊú∫Âà∂ÁöÑÔºåËÄåËøáÊª§Âô®ÊòØÂü∫‰∫éÂáΩÊï∞ÂõûË∞É„ÄÇ Ôºà2ÔºâÊã¶Êà™Âô®‰∏ç‰æùËµñ‰∫éservletÂÆπÂô®ÔºåËÄåËøáÊª§Âô®‰æùËµñ‰∫éservletÂÆπÂô®„ÄÇ Ôºà3ÔºâÊã¶Êà™Âô®Âè™ËÉΩÂØπControllerËØ∑Ê±ÇËµ∑‰ΩúÁî®ÔºåËÄåËøáÊª§Âô®ÂàôÂèØ‰ª•ÂØπÂá†‰πéÊâÄÊúâÁöÑËØ∑Ê±ÇËµ∑‰ΩúÁî®„ÄÇ Ôºà4ÔºâÂú®ControllerÁöÑÁîüÂëΩÂë®Êúü‰∏≠ÔºåÊã¶Êà™Âô®ÂèØ‰ª•Â§öÊ¨°Ë¢´Ë∞ÉÁî®ÔºåËÄåËøáÊª§Âô®Âè™ËÉΩÂú®ÂÆπÂô®ÂàùÂßãÂåñÊó∂Ë¢´Ë∞ÉÁî®‰∏ÄÊ¨°„ÄÇ ËøáÊª§Âô®ÔºàfilterÔºâÂíåÊã¶Êà™Âô®ÔºàinterceptorÔºâÊòØÊúâÂå∫Âà´ÁöÑÔºåËØ¶ÊÉÖ Ôºå‰ªñ‰ª¨ÁöÑÊâßË°åÈ°∫Â∫èÔºö ÂÖàfilter Âêé interceptor -&gt;ËøáÊª§Âô®Â∫îÁî®Âú∫ÊôØ:ËÆæÁΩÆÁºñÁ†ÅÂ≠óÁ¨¶„ÄÅËøáÊª§Èì≠ÊÑüÂ≠óÁ¨¶ -&gt;Êã¶Êà™Âô®Â∫îÁî®Âú∫ÊôØ:Êã¶Êà™Êú™ÁôªÈôÜÁî®Êà∑„ÄÅÂÆ°ËÆ°Êó•Âøó Ëá™ÂÆö‰πâÊã¶Êà™Âô®‰ª£Á†ÅÊ≥®ÂÜåÊã¶Êà™Âô® 123456789101112131415@Configurationpublic class WebAppConfig &#123; @Autowired private LoginIntercept loginIntercept; @Bean public WebMvcConfigurer WebMvcConfigurer() &#123; return new WebMvcConfigurer() &#123; public void addInterceptors(InterceptorRegistry registry) &#123; registry.addInterceptor(loginIntercept).addPathPatterns("/*"); &#125;; &#125;; &#125;&#125; ÂàõÂª∫Ê®°ÊãüÁôªÂΩïÊã¶Êà™Âô®ÔºåÈ™åËØÅËØ∑Ê±ÇÊòØÂê¶ÊúâtokenÂèÇÊï∞ 123456789101112131415@Slf4j@Componentpublic class LoginIntercept implements HandlerInterceptor &#123; public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception &#123; log.info("ÂºÄÂßãÊã¶Êà™ÁôªÂΩïËØ∑Ê±Ç...."); String token = request.getParameter("token"); if (StringUtils.isEmpty(token)) &#123; response.getWriter().println("not found token"); return false; &#125; return true; &#125;&#125; ÁºìÂ≠òÂú® Spring Boot‰∏≠ÔºåÈÄöËøá@EnableCachingÊ≥®Ëß£Ëá™Âä®ÂåñÈÖçÁΩÆÂêàÈÄÇÁöÑÁºìÂ≠òÁÆ°ÁêÜÂô®ÔºàCacheManagerÔºâÔºåSpring BootÊ†πÊçÆ‰∏ãÈù¢ÁöÑÈ°∫Â∫èÂéª‰æ¶ÊµãÁºìÂ≠òÊèê‰æõËÄÖÔºö Generic Ôºå JCache (JSR-107)Ôºå EhCache 2.x ÔºåHazelcast Ôºå Infinispan ÔºåRedis ÔºåGuava Ôºå Simple EhCachePOM1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-cache&lt;/artifactId&gt;&lt;/dependency&gt; Êñ∞Âª∫ehcache.xml Êñá‰ª∂123456789101112131415&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd" updateCheck="false"&gt; &lt;diskStore path="java.io.tmpdir/Tmp_EhCache" /&gt; &lt;!-- ÈªòËÆ§ÈÖçÁΩÆ --&gt; &lt;defaultCache maxElementsInMemory="5000" eternal="false" timeToIdleSeconds="120" timeToLiveSeconds="120" memoryStoreEvictionPolicy="LRU" overflowToDisk="false" /&gt; &lt;cache name="baseCache" maxElementsInMemory="10000" maxElementsOnDisk="100000" /&gt;&lt;/ehcache&gt; ÈÖçÁΩÆ‰ø°ÊÅØ‰ªãÁªç name:ÁºìÂ≠òÂêçÁß∞„ÄÇ maxElementsInMemoryÔºöÁºìÂ≠òÊúÄÂ§ß‰∏™Êï∞„ÄÇ eternal:ÂØπË±°ÊòØÂê¶Ê∞∏‰πÖÊúâÊïàÔºå‰∏Ä‰ΩÜËÆæÁΩÆ‰∫ÜÔºåtimeoutÂ∞Ü‰∏çËµ∑‰ΩúÁî®„ÄÇ timeToIdleSecondsÔºöËÆæÁΩÆÂØπË±°Âú®Â§±ÊïàÂâçÁöÑÂÖÅËÆ∏Èó≤ÁΩÆÊó∂Èó¥ÔºàÂçï‰ΩçÔºöÁßíÔºâ„ÄÇ‰ªÖÂΩìeternal=falseÂØπË±°‰∏çÊòØÊ∞∏‰πÖÊúâÊïàÊó∂‰ΩøÁî®ÔºåÂèØÈÄâÂ±ûÊÄßÔºåÈªòËÆ§ÂÄºÊòØ0Ôºå‰πüÂ∞±ÊòØÂèØÈó≤ÁΩÆÊó∂Èó¥Êó†Á©∑Â§ß„ÄÇ timeToLiveSecondsÔºöËÆæÁΩÆÂØπË±°Âú®Â§±ÊïàÂâçÂÖÅËÆ∏Â≠òÊ¥ªÊó∂Èó¥ÔºàÂçï‰ΩçÔºöÁßíÔºâ„ÄÇÊúÄÂ§ßÊó∂Èó¥‰ªã‰∫éÂàõÂª∫Êó∂Èó¥ÂíåÂ§±ÊïàÊó∂Èó¥‰πãÈó¥„ÄÇ‰ªÖÂΩìeternal=falseÂØπË±°‰∏çÊòØÊ∞∏‰πÖÊúâÊïàÊó∂‰ΩøÁî®ÔºåÈªòËÆ§ÊòØ0.Ôºå‰πüÂ∞±ÊòØÂØπË±°Â≠òÊ¥ªÊó∂Èó¥Êó†Á©∑Â§ß„ÄÇ overflowToDiskÔºöÂΩìÂÜÖÂ≠ò‰∏≠ÂØπË±°Êï∞ÈáèËææÂà∞maxElementsInMemoryÊó∂ÔºåEhcacheÂ∞Ü‰ºöÂØπË±°ÂÜôÂà∞Á£ÅÁõò‰∏≠„ÄÇ diskSpoolBufferSizeMBÔºöËøô‰∏™ÂèÇÊï∞ËÆæÁΩÆDiskStoreÔºàÁ£ÅÁõòÁºìÂ≠òÔºâÁöÑÁºìÂ≠òÂå∫Â§ßÂ∞è„ÄÇÈªòËÆ§ÊòØ30MB„ÄÇÊØè‰∏™CacheÈÉΩÂ∫îËØ•ÊúâËá™Â∑±ÁöÑ‰∏Ä‰∏™ÁºìÂÜ≤Âå∫„ÄÇ maxElementsOnDiskÔºöÁ°¨ÁõòÊúÄÂ§ßÁºìÂ≠ò‰∏™Êï∞„ÄÇ diskPersistentÔºöÊòØÂê¶ÁºìÂ≠òËôöÊãüÊú∫ÈáçÂêØÊúüÊï∞ÊçÆ Whether the disk store persists between restarts of the Virtual Machine. The default value is false. diskExpiryThreadIntervalSecondsÔºöÁ£ÅÁõòÂ§±ÊïàÁ∫øÁ®ãËøêË°åÊó∂Èó¥Èó¥ÈöîÔºåÈªòËÆ§ÊòØ120Áßí„ÄÇ memoryStoreEvictionPolicyÔºöÂΩìËææÂà∞maxElementsInMemoryÈôêÂà∂Êó∂ÔºåEhcacheÂ∞Ü‰ºöÊ†πÊçÆÊåáÂÆöÁöÑÁ≠ñÁï•ÂéªÊ∏ÖÁêÜÂÜÖÂ≠ò„ÄÇÈªòËÆ§Á≠ñÁï•ÊòØLRUÔºàÊúÄËøëÊúÄÂ∞ë‰ΩøÁî®Ôºâ„ÄÇ‰Ω†ÂèØ‰ª•ËÆæÁΩÆ‰∏∫FIFOÔºàÂÖàËøõÂÖàÂá∫ÔºâÊàñÊòØLFUÔºàËæÉÂ∞ë‰ΩøÁî®Ôºâ„ÄÇ clearOnFlushÔºöÂÜÖÂ≠òÊï∞ÈáèÊúÄÂ§ßÊó∂ÊòØÂê¶Ê∏ÖÈô§„ÄÇ ÂÖ≥‰∫éÊ≥®Ëß£Âíå‰ª£Á†Å‰ΩøÁî®123456@CacheConfig(cacheNames = "baseCache")public interface UserDao &#123; @Select("select * from users where name=#&#123;name&#125;") @Cacheable UserEntity findName(@Param("name") String name);&#125; Ê∏ÖÈô§ÁºìÂ≠ò123456@Autowiredprivate CacheManager cacheManager;@RequestMapping("/remoKey")public void remoKey() &#123; cacheManager.getCache("baseCache").clear();&#125; ÂêØÂä®‰∏ªÊñπÊ≥ïÂêØÂä®Êó∂Âä†‰∏ä@EnableCachingÂç≥ÂèØ Redis‰ΩøÁî®Ëá™Â∏¶È©±Âä®Âô®ËøûÊé•‰ΩøÁî®RedisTemplate ËøûÊé• POM1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt; &lt;/dependency&gt; ÈÖçÁΩÆÊñá‰ª∂ÂçïÊú∫ 12345678910111213141516171819#redis# RedisÊï∞ÊçÆÂ∫ìÁ¥¢ÂºïÔºàÈªòËÆ§‰∏∫0Ôºâspring.redis.database=0# RedisÊúçÂä°Âô®Âú∞ÂùÄspring.redis.host=127.0.0.1# RedisÊúçÂä°Âô®ËøûÊé•Á´ØÂè£spring.redis.port=6379# RedisÊúçÂä°Âô®ËøûÊé•ÂØÜÁ†ÅÔºàÈªòËÆ§‰∏∫Á©∫Ôºâspring.redis.password=# ËøûÊé•Ê±†ÊúÄÂ§ßËøûÊé•Êï∞Ôºà‰ΩøÁî®Ë¥üÂÄºË°®Á§∫Ê≤°ÊúâÈôêÂà∂Ôºâspring.redis.pool.max-active=8# ËøûÊé•Ê±†ÊúÄÂ§ßÈòªÂ°ûÁ≠âÂæÖÊó∂Èó¥Ôºà‰ΩøÁî®Ë¥üÂÄºË°®Á§∫Ê≤°ÊúâÈôêÂà∂Ôºâspring.redis.pool.max-wait=-1# ËøûÊé•Ê±†‰∏≠ÁöÑÊúÄÂ§ßÁ©∫Èó≤ËøûÊé•spring.redis.pool.max-idle=8# ËøûÊé•Ê±†‰∏≠ÁöÑÊúÄÂ∞èÁ©∫Èó≤ËøûÊé•spring.redis.pool.min-idle=0# ËøûÊé•Ë∂ÖÊó∂Êó∂Èó¥ÔºàÊØ´ÁßíÔºâspring.redis.timeout=0 ÈõÜÁæ§ÊàñÂì®ÂÖµÊ®°Âºè 1234567891011121314151617181920212223242526272829303132333435363738#MatserÁöÑipÂú∞ÂùÄ redis.hostName=192.168.177.128#Á´ØÂè£Âè∑ redis.port=6382#Â¶ÇÊûúÊúâÂØÜÁ†Å redis.password=#ÂÆ¢Êà∑Á´ØË∂ÖÊó∂Êó∂Èó¥Âçï‰ΩçÊòØÊØ´Áßí ÈªòËÆ§ÊòØ2000 redis.timeout=10000 #ÊúÄÂ§ßÁ©∫Èó≤Êï∞ redis.maxIdle=300 #ËøûÊé•Ê±†ÁöÑÊúÄÂ§ßÊï∞ÊçÆÂ∫ìËøûÊé•Êï∞„ÄÇËÆæ‰∏∫0Ë°®Á§∫Êó†ÈôêÂà∂,Â¶ÇÊûúÊòØjedis 2.4‰ª•ÂêéÁî®redis.maxTotal #redis.maxActive=600 #ÊéßÂà∂‰∏Ä‰∏™poolÂèØÂàÜÈÖçÂ§öÂ∞ë‰∏™jedisÂÆû‰æã,Áî®Êù•ÊõøÊç¢‰∏äÈù¢ÁöÑredis.maxActive,Â¶ÇÊûúÊòØjedis 2.4‰ª•ÂêéÁî®ËØ•Â±ûÊÄß redis.maxTotal=1000 #ÊúÄÂ§ßÂª∫Á´ãËøûÊé•Á≠âÂæÖÊó∂Èó¥„ÄÇÂ¶ÇÊûúË∂ÖËøáÊ≠§Êó∂Èó¥Â∞ÜÊé•Âà∞ÂºÇÂ∏∏„ÄÇËÆæ‰∏∫-1Ë°®Á§∫Êó†ÈôêÂà∂„ÄÇ redis.maxWaitMillis=1000 #ËøûÊé•ÁöÑÊúÄÂ∞èÁ©∫Èó≤Êó∂Èó¥ ÈªòËÆ§1800000ÊØ´Áßí(30ÂàÜÈíü) redis.minEvictableIdleTimeMillis=300000 #ÊØèÊ¨°ÈáäÊîæËøûÊé•ÁöÑÊúÄÂ§ßÊï∞ÁõÆ,ÈªòËÆ§3 redis.numTestsPerEvictionRun=1024 #ÈÄêÂá∫Êâ´ÊèèÁöÑÊó∂Èó¥Èó¥Èöî(ÊØ´Áßí) Â¶ÇÊûú‰∏∫Ë¥üÊï∞,Âàô‰∏çËøêË°åÈÄêÂá∫Á∫øÁ®ã, ÈªòËÆ§-1 redis.timeBetweenEvictionRunsMillis=30000 #ÊòØÂê¶Âú®‰ªéÊ±†‰∏≠ÂèñÂá∫ËøûÊé•ÂâçËøõË°åÊ£ÄÈ™å,Â¶ÇÊûúÊ£ÄÈ™åÂ§±Ë¥•,Âàô‰ªéÊ±†‰∏≠ÂéªÈô§ËøûÊé•Âπ∂Â∞ùËØïÂèñÂá∫Âè¶‰∏Ä‰∏™ redis.testOnBorrow=true #Âú®Á©∫Èó≤Êó∂Ê£ÄÊü•ÊúâÊïàÊÄß, ÈªòËÆ§false redis.testWhileIdle=true #redisÈõÜÁæ§ÈÖçÁΩÆ spring.redis.cluster.nodes=192.168.177.128:7001,192.168.177.128:7002,192.168.177.128:7003,192.168.177.128:7004,192.168.177.128:7005,192.168.177.128:7006spring.redis.cluster.max-redirects=3#Âì®ÂÖµÊ®°Âºè#redis.sentinel.host1=192.168.177.128#redis.sentinel.port1=26379#redis.sentinel.host2=172.20.1.231 #redis.sentinel.port2=26379 ÈÖçÁΩÆÁ±ª12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152@Configuration@EnableCachingpublic class RedisConfig extends CachingConfigurerSupport&#123; @Value("$&#123;spring.redis.host&#125;") private String host; @Value("$&#123;spring.redis.port&#125;") private int port; @Value("$&#123;spring.redis.timeout&#125;") private int timeout; //Ëá™ÂÆö‰πâÁºìÂ≠òkeyÁîüÊàêÁ≠ñÁï•// @Bean// public KeyGenerator keyGenerator() &#123;// return new KeyGenerator()&#123;// @Override// public Object generate(Object target, java.lang.reflect.Method method, Object... params) &#123;// StringBuffer sb = new StringBuffer();// sb.append(target.getClass().getName());// sb.append(method.getName());// for(Object obj:params)&#123;// sb.append(obj.toString());// &#125;// return sb.toString();// &#125;// &#125;;// &#125; //ÁºìÂ≠òÁÆ°ÁêÜÂô® @Bean public CacheManager cacheManager(@SuppressWarnings("rawtypes") RedisTemplate redisTemplate) &#123; RedisCacheManager cacheManager = new RedisCacheManager(redisTemplate); //ËÆæÁΩÆÁºìÂ≠òËøáÊúüÊó∂Èó¥ cacheManager.setDefaultExpiration(10000); return cacheManager; &#125; @Bean public RedisTemplate&lt;String, String&gt; redisTemplate(RedisConnectionFactory factory)&#123; StringRedisTemplate template = new StringRedisTemplate(factory); setSerializer(template);//ËÆæÁΩÆÂ∫èÂàóÂåñÂ∑•ÂÖ∑ template.afterPropertiesSet(); return template; &#125; private void setSerializer(StringRedisTemplate template)&#123; @SuppressWarnings(&#123; "rawtypes", "unchecked" &#125;) Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class); ObjectMapper om = new ObjectMapper(); om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY); om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL); jackson2JsonRedisSerializer.setObjectMapper(om); template.setValueSerializer(jackson2JsonRedisSerializer); &#125;&#125; Dao123456789101112131415161718192021@Mapper@CacheConfig(cacheNames = "users")public interface UserMapper &#123; @Insert("insert into user(name,age) values(#&#123;name&#125;,#&#123;age&#125;)") int addUser(@Param("name")String name,@Param("age")String age); @Select("select * from user where id =#&#123;id&#125;") @Cacheable(key ="#p0") User findById(@Param("id") String id); @CachePut(key = "#p0") @Update("update user set name=#&#123;name&#125; where id=#&#123;id&#125;") void updataById(@Param("id")String id,@Param("name")String name); //Â¶ÇÊûúÊåáÂÆö‰∏∫ trueÔºåÂàôÊñπÊ≥ïË∞ÉÁî®ÂêéÂ∞ÜÁ´ãÂç≥Ê∏ÖÁ©∫ÊâÄÊúâÁºìÂ≠ò @CacheEvict(key ="#p0",allEntries=true) @Delete("delete from user where id=#&#123;id&#125;") void deleteById(@Param("id")String id); &#125; @CacheableÂ∞ÜÊü•ËØ¢ÁªìÊûúÁºìÂ≠òÂà∞redis‰∏≠ÔºåÔºàkey=‚Äù#p0‚ÄùÔºâÊåáÂÆö‰º†ÂÖ•ÁöÑÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞‰Ωú‰∏∫redisÁöÑkey„ÄÇ @CachePutÔºåÊåáÂÆökeyÔºåÂ∞ÜÊõ¥Êñ∞ÁöÑÁªìÊûúÂêåÊ≠•Âà∞redis‰∏≠ @CacheEvictÔºåÊåáÂÆökeyÔºåÂà†Èô§ÁºìÂ≠òÊï∞ÊçÆÔºåallEntries=true,ÊñπÊ≥ïË∞ÉÁî®ÂêéÂ∞ÜÁ´ãÂç≥Ê∏ÖÈô§ÁºìÂ≠ò ‰ΩøÁî®JedisËøûÊé•Ë¶ÅÊ≥®ÊÑèÔºåredisÂú®5.0ÁâàÊú¨‰ª•Âêé‰∏çÊîØÊåÅJedis POM1234&lt;dependency&gt; &lt;groupId&gt;redis.clients&lt;/groupId&gt; &lt;artifactId&gt;jedis&lt;/artifactId&gt; &lt;/dependency&gt; ÈÖçÁΩÆÁ±ª123456789101112@Data@Component@ConfigurationProperties(prefix="redis")public class RedisConfig &#123; private String host; private int port; private int timeout;//Áßí private String password; private int poolMaxTotal; private int poolMaxIdle; private int poolMaxWait;//Áßí&#125; 123456789101112131415161718@Servicepublic class RedisPoolFactory &#123; @Autowired RedisConfig redisConfig; @Bean public JedisPool edisPoolFactory() &#123; JedisPoolConfig poolConfig = new JedisPoolConfig(); poolConfig.setMaxIdle(redisConfig.getPoolMaxIdle()); poolConfig.setMaxTotal(redisConfig.getPoolMaxTotal()); poolConfig.setMaxWaitMillis(redisConfig.getPoolMaxWait() * 1000); JedisPool jp = new JedisPool(poolConfig, redisConfig.getHost(), redisConfig.getPort(), redisConfig.getTimeout()*1000, redisConfig.getPassword(), 0); return jp; &#125;&#125; ÁõëÊéß‰∏≠ÂøÉSpringbootÁõëÊéß‰∏≠ÂøÉÊòØÂπ≤‰ªÄ‰πàÁöÑÂë¢Ôºü‰ªñÊòØÈíàÂØπÂæÆÊúçÂä°ÁöÑ ÊúçÂä°Áä∂ÊÄÅ„ÄÅHttpËØ∑Ê±ÇËµÑÊ∫êËøõË°åÁõëÊéßÔºåÂèØ‰ª•ÁúãÂà∞ÊúçÂä°Âô®ÂÜÖÂ≠òÂèòÂåñÔºàÂ†ÜÂÜÖÂ≠ò„ÄÅÁ∫øÁ®ã„ÄÅÊó•ÂøóÁÆ°ÁêÜÔºâÔºåÂèØ‰ª•Ê£ÄÊµãÊúçÂä°ÈÖçÁΩÆËøûÊé•Âú∞ÂùÄÊòØÂê¶ÂèØÁî®ÔºàÊ®°ÊãüËÆøÈóÆÔºåÊáíÂä†ËΩΩÔºâÔºåÂèØ‰ª•ÁªüËÆ°ÊúâÂ§öÂ∞ëBeanÊúâ‰ªÄ‰πàÂçï‰æãÂ§ö‰æãÔºåÂèØ‰ª•ÁªüËÆ°SpringMVCÊúâÂ§öÂ∞ë@RequestMapping ActuatorActuatorÊòØspring bootÁöÑ‰∏Ä‰∏™ÈôÑÂä†ÂäüËÉΩ,ÂèØÂ∏ÆÂä©‰Ω†Âú®Â∫îÁî®Á®ãÂ∫èÁîü‰∫ßÁéØÂ¢ÉÊó∂ÁõëËßÜÂíåÁÆ°ÁêÜÂ∫îÁî®Á®ãÂ∫è„ÄÇ ÂèØ‰ª•‰ΩøÁî®HTTPÁöÑÂêÑÁßçËØ∑Ê±ÇÊù•ÁõëÁÆ°,ÂÆ°ËÆ°,Êî∂ÈõÜÂ∫îÁî®ÁöÑËøêË°åÊÉÖÂÜµ.ËøîÂõûÁöÑÊòØjson Áº∫ÁÇπÔºöÊ≤°ÊúâÂèØËßÜÂåñÁïåÈù¢„ÄÇ Âú®springboot2.0‰∏≠ÔºåActuatorÁöÑÁ´ØÁÇπÔºàendpointÔºâÁé∞Âú®ÈªòËÆ§Êò†Â∞ÑÂà∞/applicationÔºåÊØîÂ¶ÇÔºå/info Á´ØÁÇπÁé∞Âú®Â∞±ÊòØÂú®/application/info„ÄÇ‰ΩÜ‰Ω†ÂèØ‰ª•‰ΩøÁî®management.context-pathÊù•Ë¶ÜÁõñÊ≠§ÈªòËÆ§ÂÄº„ÄÇ POM1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;&lt;/dependency&gt; ÈÖçÁΩÆ‰ø°ÊÅØ1234567891011121314# Actuator ÈÄöËøá‰∏ãÈù¢ÁöÑÈÖçÁΩÆÂêØÁî®ÊâÄÊúâÁöÑÁõëÊéßÁ´ØÁÇπÔºåÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºåËøô‰∫õÁ´ØÁÇπÊòØÁ¶ÅÁî®ÁöÑÔºõmanagement: endpoints: web: exposure: include: "*"spring: profiles: active: prod datasource: driver-class-name: com.mysql.jdbc.Driver url: jdbc:mysql://127.0.0.1:3306/test username: root password: 123456 ActuatorËÆøÈóÆË∑ØÂæÑÈÄöËøáactuator/+Á´ØÁÇπÂêçÂ∞±ÂèØ‰ª•Ëé∑ÂèñÁõ∏Â∫îÁöÑ‰ø°ÊÅØ„ÄÇ Ë∑ØÂæÑ ‰ΩúÁî® /actuator/beans ÊòæÁ§∫Â∫îÁî®Á®ãÂ∫è‰∏≠ÊâÄÊúâSpring beanÁöÑÂÆåÊï¥ÂàóË°®„ÄÇ /actuator/configprops ÊòæÁ§∫ÊâÄÊúâÈÖçÁΩÆ‰ø°ÊÅØ„ÄÇ /actuator/env ÈôàÂàóÊâÄÊúâÁöÑÁéØÂ¢ÉÂèòÈáè„ÄÇ /actuator/mappings ÊòæÁ§∫ÊâÄÊúâ@RequestMappingÁöÑurlÊï¥ÁêÜÂàóË°®„ÄÇ /actuator/health ÊòæÁ§∫Â∫îÁî®Á®ãÂ∫èËøêË°åÁä∂ÂÜµ‰ø°ÊÅØ upË°®Á§∫ÊàêÂäü downÂ§±Ë¥• /actuator/info Êü•ÁúãËá™ÂÆö‰πâÂ∫îÁî®‰ø°ÊÅØ Admin-UIÂàÜÂ∏ÉÂºèÂæÆÊúçÂä°ÁõëÊéß‰∏≠ÂøÉAdmin-UIÂ∫ïÂ±Ç‰ΩøÁî®actuatorÔºåÂÆûÁé∞ÁõëÊéß‰ø°ÊÅØ ÁöÑÁïåÈù¢ POM123456789101112131415161718192021222324&lt;!--ÊúçÂä°Á´Ø--&gt;&lt;dependency&gt; &lt;groupId&gt;de.codecentric&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-admin-starter-server&lt;/artifactId&gt; &lt;version&gt;2.0.0&lt;/version&gt;&lt;/dependency&gt;&lt;!--ÂÆ¢Êà∑Á´Ø--&gt;&lt;dependency&gt; &lt;groupId&gt;de.codecentric&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-admin-starter-client&lt;/artifactId&gt; &lt;version&gt;2.0.0&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.jolokia&lt;/groupId&gt; &lt;artifactId&gt;jolokia-core&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;com.googlecode.json-simple&lt;/groupId&gt; &lt;artifactId&gt;json-simple&lt;/artifactId&gt; &lt;version&gt;1.1&lt;/version&gt; application.ymlÈÖçÁΩÆÊñá‰ª∂123456789101112131415161718192021//ÊúçÂä°Á´Øspring: application: name: spring-boot-admin-server//ÂÆ¢Êà∑Á´Øspring: boot: admin: client: url: http://localhost:8080server: port: 8081 management: endpoints: web: exposure: include: "*" endpoint: health: show-details: ALWAYS ÊÄßËÉΩ‰ºòÂåñÊâ´ÂåÖ‰ºòÂåñÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºåÊàë‰ª¨‰ºö‰ΩøÁî® @SpringBootApplication Ê≥®Ëß£Êù•Ëá™Âä®Ëé∑ÂèñÂ∫îÁî®ÁöÑÈÖçÁΩÆ‰ø°ÊÅØÔºå‰ΩÜËøôÊ†∑‰πü‰ºöÁªôÂ∫îÁî®Â∏¶Êù•‰∏Ä‰∫õÂâØ‰ΩúÁî®„ÄÇ‰ΩøÁî®Ëøô‰∏™Ê≥®Ëß£ÂêéÔºå‰ºöËß¶ÂèëËá™Âä®ÈÖçÁΩÆÔºà auto-configuration ÔºâÂíå ÁªÑ‰ª∂Êâ´Êèè Ôºà component scanning ÔºâÔºåËøôË∑ü‰ΩøÁî® @Configuration„ÄÅ@EnableAutoConfiguration Âíå @ComponentScan ‰∏â‰∏™Ê≥®Ëß£ÁöÑ‰ΩúÁî®ÊòØ‰∏ÄÊ†∑ÁöÑ„ÄÇËøôÊ†∑ÂÅöÁªôÂºÄÂèëÂ∏¶Êù•Êñπ‰æøÁöÑÂêåÊó∂Ôºå‰πü‰ºöÊúâ‰∏âÊñπÈù¢ÁöÑÂΩ±ÂìçÔºö 1„ÄÅ‰ºöÂØºËá¥È°πÁõÆÂêØÂä®Êó∂Èó¥ÂèòÈïø„ÄÇÂΩìÂêØÂä®‰∏Ä‰∏™Â§ßÁöÑÂ∫îÁî®Á®ãÂ∫è,ÊàñÂ∞ÜÂÅöÂ§ßÈáèÁöÑÈõÜÊàêÊµãËØïÂêØÂä®Â∫îÁî®Á®ãÂ∫èÊó∂ÔºåÂΩ±Âìç‰ºöÁâπÂà´ÊòéÊòæ„ÄÇ 2„ÄÅ‰ºöÂä†ËΩΩ‰∏Ä‰∫õ‰∏çÈúÄË¶ÅÁöÑÂ§ö‰ΩôÁöÑÂÆû‰æãÔºàbeansÔºâ„ÄÇ 3„ÄÅ‰ºöÂ¢ûÂä† CPU Ê∂àËÄó„ÄÇ ÈíàÂØπ‰ª•‰∏ä‰∏â‰∏™ÊÉÖÂÜµÔºåÊàë‰ª¨ÂèØ‰ª•ÁßªÈô§ @SpringBootApplication Âíå @ComponentScan ‰∏§‰∏™Ê≥®Ëß£Êù•Á¶ÅÁî®ÁªÑ‰ª∂Ëá™Âä®Êâ´ÊèèÔºåÁÑ∂ÂêéÂú®Êàë‰ª¨ÈúÄË¶ÅÁöÑ bean ‰∏äËøõË°åÊòæÂºèÈÖçÁΩÆ„ÄÇ SpringBoot JVMÂèÇÊï∞Ë∞É‰ºòÂêÑÁßçÂèÇÊï∞ ÂèÇÊï∞ÂêçÁß∞ Âê´‰πâ ÈªòËÆ§ÂÄº -Xms ÂàùÂßãÂ†ÜÂ§ßÂ∞è Áâ©ÁêÜÂÜÖÂ≠òÁöÑ1/64(&lt;1GB) ÈªòËÆ§(MinHeapFreeRatioÂèÇÊï∞ÂèØ‰ª•Ë∞ÉÊï¥)Á©∫‰ΩôÂ†ÜÂÜÖÂ≠òÂ∞è‰∫é40%Êó∂ÔºåJVMÂ∞±‰ºöÂ¢ûÂ§ßÂ†ÜÁõ¥Âà∞-XmxÁöÑÊúÄÂ§ßÈôêÂà∂. -Xmx ÊúÄÂ§ßÂ†ÜÂ§ßÂ∞è Áâ©ÁêÜÂÜÖÂ≠òÁöÑ1/4(&lt;1GB) ÈªòËÆ§(MaxHeapFreeRatioÂèÇÊï∞ÂèØ‰ª•Ë∞ÉÊï¥)Á©∫‰ΩôÂ†ÜÂÜÖÂ≠òÂ§ß‰∫é70%Êó∂ÔºåJVM‰ºöÂáèÂ∞ëÂ†ÜÁõ¥Âà∞ -XmsÁöÑÊúÄÂ∞èÈôêÂà∂ -Xmn Âπ¥ËΩª‰ª£Â§ßÂ∞è(1.4or lator) Ê≥®ÊÑèÔºöÊ≠§Â§ÑÁöÑÂ§ßÂ∞èÊòØÔºàeden+ 2 survivor space).‰∏éjmap -heap‰∏≠ÊòæÁ§∫ÁöÑNew genÊòØ‰∏çÂêåÁöÑ„ÄÇ Êï¥‰∏™Â†ÜÂ§ßÂ∞è=Âπ¥ËΩª‰ª£Â§ßÂ∞è + Âπ¥ËÄÅ‰ª£Â§ßÂ∞è + ÊåÅ‰πÖ‰ª£Â§ßÂ∞è. Â¢ûÂ§ßÂπ¥ËΩª‰ª£Âêé,Â∞Ü‰ºöÂáèÂ∞èÂπ¥ËÄÅ‰ª£Â§ßÂ∞è.Ê≠§ÂÄºÂØπÁ≥ªÁªüÊÄßËÉΩÂΩ±ÂìçËæÉÂ§ß,SunÂÆòÊñπÊé®ËçêÈÖçÁΩÆ‰∏∫Êï¥‰∏™Â†ÜÁöÑ3/8 -XX:NewSize ËÆæÁΩÆÂπ¥ËΩª‰ª£Â§ßÂ∞è(for 1.3/1.4) -XX:MaxNewSize Âπ¥ËΩª‰ª£ÊúÄÂ§ßÂÄº(for 1.3/1.4) -XX:PermSize ËÆæÁΩÆÊåÅ‰πÖ‰ª£(perm gen)ÂàùÂßãÂÄº Áâ©ÁêÜÂÜÖÂ≠òÁöÑ1/64 -XX:MaxPermSize ËÆæÁΩÆÊåÅ‰πÖ‰ª£ÊúÄÂ§ßÂÄº Áâ©ÁêÜÂÜÖÂ≠òÁöÑ1/4 -Xss ÊØè‰∏™Á∫øÁ®ãÁöÑÂ†ÜÊ†àÂ§ßÂ∞è JDK5.0‰ª•ÂêéÊØè‰∏™Á∫øÁ®ãÂ†ÜÊ†àÂ§ßÂ∞è‰∏∫1M,‰ª•ÂâçÊØè‰∏™Á∫øÁ®ãÂ†ÜÊ†àÂ§ßÂ∞è‰∏∫256K.Êõ¥ÂÖ∑Â∫îÁî®ÁöÑÁ∫øÁ®ãÊâÄÈúÄÂÜÖÂ≠òÂ§ßÂ∞èËøõË°å Ë∞ÉÊï¥.Âú®Áõ∏ÂêåÁâ©ÁêÜÂÜÖÂ≠ò‰∏ã,ÂáèÂ∞èËøô‰∏™ÂÄºËÉΩÁîüÊàêÊõ¥Â§öÁöÑÁ∫øÁ®ã.‰ΩÜÊòØÊìç‰ΩúÁ≥ªÁªüÂØπ‰∏Ä‰∏™ËøõÁ®ãÂÜÖÁöÑÁ∫øÁ®ãÊï∞ËøòÊòØÊúâÈôêÂà∂ÁöÑ,‰∏çËÉΩÊó†ÈôêÁîüÊàê,ÁªèÈ™åÂÄºÂú®3000~5000Â∑¶Âè≥ ‰∏ÄËà¨Â∞èÁöÑÂ∫îÁî®Ôºå Â¶ÇÊûúÊ†à‰∏çÊòØÂæàÊ∑±Ôºå Â∫îËØ•ÊòØ128kÂ§üÁî®ÁöÑ Â§ßÁöÑÂ∫îÁî®Âª∫ËÆÆ‰ΩøÁî®256k„ÄÇËøô‰∏™ÈÄâÈ°πÂØπÊÄßËÉΩÂΩ±ÂìçÊØîËæÉÂ§ßÔºåÈúÄË¶Å‰∏•Ê†ºÁöÑÊµãËØï„ÄÇÔºàÊ†°ÈïøÔºâ ÂíåthreadstacksizeÈÄâÈ°πËß£ÈáäÂæàÁ±ª‰ºº,ÂÆòÊñπÊñáÊ°£‰ºº‰πéÊ≤°ÊúâËß£Èáä,Âú®ËÆ∫Âùõ‰∏≠ÊúâËøôÊ†∑‰∏ÄÂè•ËØù:‚Äù‚Äù -Xss is translated in a VM flag named ThreadStackSize‚Äù ‰∏ÄËà¨ËÆæÁΩÆËøô‰∏™ÂÄºÂ∞±ÂèØ‰ª•‰∫Ü„ÄÇ -XX:ThreadStackSize Thread Stack Size (0 means use default stack size) [Sparc: 512; Solaris x86: 320 (was 256 prior in 5.0 and earlier); Sparc 64 bit: 1024; Linux amd64: 1024 (was 0 in 5.0 and earlier); all others 0.] -XX:NewRatio Âπ¥ËΩª‰ª£(ÂåÖÊã¨EdenÂíå‰∏§‰∏™SurvivorÂå∫)‰∏éÂπ¥ËÄÅ‰ª£ÁöÑÊØîÂÄº(Èô§ÂéªÊåÅ‰πÖ‰ª£) -XX:NewRatio=4Ë°®Á§∫Âπ¥ËΩª‰ª£‰∏éÂπ¥ËÄÅ‰ª£ÊâÄÂç†ÊØîÂÄº‰∏∫1:4,Âπ¥ËΩª‰ª£Âç†Êï¥‰∏™Â†ÜÊ†àÁöÑ1/5 Xms=XmxÂπ∂‰∏îËÆæÁΩÆ‰∫ÜXmnÁöÑÊÉÖÂÜµ‰∏ãÔºåËØ•ÂèÇÊï∞‰∏çÈúÄË¶ÅËøõË°åËÆæÁΩÆ„ÄÇ -XX:SurvivorRatio EdenÂå∫‰∏éSurvivorÂå∫ÁöÑÂ§ßÂ∞èÊØîÂÄº ËÆæÁΩÆ‰∏∫8,Âàô‰∏§‰∏™SurvivorÂå∫‰∏é‰∏Ä‰∏™EdenÂå∫ÁöÑÊØîÂÄº‰∏∫2:8,‰∏Ä‰∏™SurvivorÂå∫Âç†Êï¥‰∏™Âπ¥ËΩª‰ª£ÁöÑ1/10 -XX:LargePageSizeInBytes ÂÜÖÂ≠òÈ°µÁöÑÂ§ßÂ∞è‰∏çÂèØËÆæÁΩÆËøáÂ§ßÔºå ‰ºöÂΩ±ÂìçPermÁöÑÂ§ßÂ∞è =128m -XX:+UseFastAccessorMethods ÂéüÂßãÁ±ªÂûãÁöÑÂø´ÈÄü‰ºòÂåñ -XX:+DisableExplicitGC ÂÖ≥Èó≠System.gc() Ëøô‰∏™ÂèÇÊï∞ÈúÄË¶Å‰∏•Ê†ºÁöÑÊµãËØï -XX:MaxTenuringThreshold ÂûÉÂúæÊúÄÂ§ßÂπ¥ÈæÑ Â¶ÇÊûúËÆæÁΩÆ‰∏∫0ÁöÑËØù,ÂàôÂπ¥ËΩª‰ª£ÂØπË±°‰∏çÁªèËøáSurvivorÂå∫,Áõ¥Êé•ËøõÂÖ•Âπ¥ËÄÅ‰ª£. ÂØπ‰∫éÂπ¥ËÄÅ‰ª£ÊØîËæÉÂ§öÁöÑÂ∫îÁî®,ÂèØ‰ª•ÊèêÈ´òÊïàÁéá.Â¶ÇÊûúÂ∞ÜÊ≠§ÂÄºËÆæÁΩÆ‰∏∫‰∏Ä‰∏™ËæÉÂ§ßÂÄº,ÂàôÂπ¥ËΩª‰ª£ÂØπË±°‰ºöÂú®SurvivorÂå∫ËøõË°åÂ§öÊ¨°Â§çÂà∂,ËøôÊ†∑ÂèØ‰ª•Â¢ûÂä†ÂØπË±°ÂÜçÂπ¥ËΩª‰ª£ÁöÑÂ≠òÊ¥ª Êó∂Èó¥,Â¢ûÂä†Âú®Âπ¥ËΩª‰ª£Âç≥Ë¢´ÂõûÊî∂ÁöÑÊ¶ÇÁéá ËØ•ÂèÇÊï∞Âè™ÊúâÂú®‰∏≤Ë°åGCÊó∂ÊâçÊúâÊïà. -XX:+AggressiveOpts Âä†Âø´ÁºñËØë -XX:+UseBiasedLocking ÈîÅÊú∫Âà∂ÁöÑÊÄßËÉΩÊîπÂñÑ -Xnoclassgc Á¶ÅÁî®ÂûÉÂúæÂõûÊî∂ -XX:SoftRefLRUPolicyMSPerMB ÊØèÂÖÜÂ†ÜÁ©∫Èó≤Á©∫Èó¥‰∏≠SoftReferenceÁöÑÂ≠òÊ¥ªÊó∂Èó¥ 1s softly reachable objects will remain alive for some amount of time after the last time they were referenced. The default value is one second of lifetime per free megabyte in the heap -XX:PretenureSizeThreshold ÂØπË±°Ë∂ÖËøáÂ§öÂ§ßÊòØÁõ¥Êé•Âú®ÊóßÁîü‰ª£ÂàÜÈÖç 0 Âçï‰ΩçÂ≠óËäÇ Êñ∞Áîü‰ª£ÈááÁî®Parallel Scavenge GCÊó∂Êó†Êïà Âè¶‰∏ÄÁßçÁõ¥Êé•Âú®ÊóßÁîü‰ª£ÂàÜÈÖçÁöÑÊÉÖÂÜµÊòØÂ§ßÁöÑÊï∞ÁªÑÂØπË±°,‰∏îÊï∞ÁªÑ‰∏≠Êó†Â§ñÈÉ®ÂºïÁî®ÂØπË±°. -XX:TLABWasteTargetPercent TLABÂç†edenÂå∫ÁöÑÁôæÂàÜÊØî 1% -XX:+CollectGen0First FullGCÊó∂ÊòØÂê¶ÂÖàYGC false Ë∞É‰ºòÁ≠ñÁï• ÂàùÂßãÂåñÂ†ÜÂÜÖÂ≠òÂíåÊúÄÂ§ßÂ†ÜÁõ∏Âêå ÂáèÂ∞ëÂûÉÂúæÂõûÊî∂Ê¨°Êï∞ ÂÜÖÈÉ®Ë∞É‰ºò ËæìÂÖ• -XX:+PrintGCDetails ÊòØ‰∏∫‰∫ÜÂú®ÊéßÂà∂Âè∞ÊòæÁ§∫ÂõûÊî∂ÁöÑ‰ø°ÊÅØ Â§ñÈÉ®Ë∞É‰ºòËøõÂÖ•ÂØπÂ∫îjarÁöÑÁõÆÂΩïÔºåÂú®CMDËæìÂÖ•java -server -Xms32m -Xmx32m -jar springboot.jar ‰ΩøÁî®Â∑•ÂÖ∑java visual vm ‰ΩøÁî®Â∑•ÂÖ∑java console Â∞ÜServletÂÆπÂô®‰ªéTomcatÂèòÊàêUndertowUndertow ÊòØ‰∏Ä‰∏™ÈááÁî® Java ÂºÄÂèëÁöÑÁÅµÊ¥ªÁöÑÈ´òÊÄßËÉΩ Web ÊúçÂä°Âô®ÔºåÊèê‰æõÂåÖÊã¨ÈòªÂ°ûÂíåÂü∫‰∫é NIO ÁöÑÈùûÂ†µÂ°ûÊú∫Âà∂„ÄÇUndertow ÊòØÁ∫¢Â∏ΩÂÖ¨Âè∏ÁöÑÂºÄÊ∫ê‰∫ßÂìÅÔºåÊòØ JBossÈªòËÆ§ÁöÑ Web ÊúçÂä°Âô®„ÄÇüëá Undertow POMÈ¶ñÂÖàÔºå‰ªé‰æùËµñ‰ø°ÊÅØÈáåÁßªÈô§ Tomcat ÈÖçÁΩÆ 12345678910&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt; ÁÑ∂ÂêéÊ∑ªÂä† UndertowÔºö 1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-undertow&lt;/artifactId&gt;&lt;/dependency&gt; Tomcat ‰ºòÂåñËßÅüëâSpring Boot Memory Performance ÁÉ≠ÈÉ®ÁΩ≤ÁÉ≠ÈÉ®ÁΩ≤ÔºåÂ∞±ÊòØÂú®Â∫îÁî®Á®ãÂ∫èÂú®‰∏çÂÅúÊ≠¢ÁöÑÊÉÖÂÜµ‰∏ãÔºåËá™Âä®ÂÆûÁé∞Êñ∞ÁöÑÈÉ®ÁΩ≤ ÂéüÁêÜ‰ΩøÁî®Á±ªÂä†ËΩΩÂô®classroadÊù•Ê£ÄÊµãÂ≠óËäÇÁ†ÅÊñá‰ª∂ÔºåÁÑ∂ÂêéÈáçÊñ∞Âä†ËΩΩÂà∞jvmÂÜÖÂ≠ò‰∏≠ Á¨¨‰∏ÄÊ≠•ÔºöÊ£ÄÊµãÊú¨Âú∞.classÊñá‰ª∂ÂèòÂä®ÔºàÁâàÊú¨Âè∑Ôºå‰øÆÊîπÊó∂Èó¥‰∏ç‰∏ÄÊ†∑Ôºâ Á¨¨‰∫åÊ≠•ÔºöËá™Âä®ÁõëÂê¨ÔºåÂÆûÁé∞ÈÉ®ÁΩ≤ Â∫îÁî®Âú∫ÊôØÊú¨Âú∞ÂºÄÂèëÊó∂ÔºåÂèØ‰ª•ÊèêÈ´òËøêË°åÁéØÂ¢É Dev-toolsspring-boot-devtools ÊòØ‰∏Ä‰∏™‰∏∫ÂºÄÂèëËÄÖÊúçÂä°ÁöÑ‰∏Ä‰∏™Ê®°ÂùóÔºåÂÖ∂‰∏≠ÊúÄÈáçË¶ÅÁöÑÂäüËÉΩÂ∞±ÊòØËá™Âä®Â∫îÁî®‰ª£Á†ÅÊõ¥ÊîπÂà∞ÊúÄÊñ∞ÁöÑApp‰∏äÈù¢Âéª POM123456&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;scope&gt;true&lt;/scope&gt;&lt;/dependency&gt; ÂéüÁêÜ devtools‰ºöÁõëÂê¨classpath‰∏ãÁöÑÊñá‰ª∂ÂèòÂä®ÔºåÂπ∂‰∏î‰ºöÁ´ãÂç≥ÈáçÂêØÂ∫îÁî®ÔºàÂèëÁîüÂú®‰øùÂ≠òÊó∂Êú∫ÔºâÔºåÂõ†‰∏∫ÂÖ∂ÈááÁî®ÁöÑËôöÊãüÊú∫Êú∫Âà∂ÔºåËØ•È°πÈáçÂêØÊòØÂæàÂø´ÁöÑ„ÄÇ devtoolsÂèØ‰ª•ÂÆûÁé∞È°µÈù¢ÁÉ≠ÈÉ®ÁΩ≤ÔºàÂç≥È°µÈù¢‰øÆÊîπÂêé‰ºöÁ´ãÂç≥ÁîüÊïàÔºåËøô‰∏™ÂèØ‰ª•Áõ¥Êé•Âú®application.propertiesÊñá‰ª∂‰∏≠ÈÖçÁΩÆspring.thymeleaf.cache=falseÊù•ÂÆûÁé∞(Ê≥®ÊÑèÔºö‰∏çÂêåÁöÑÊ®°ÊùøÈÖçÁΩÆ‰∏ç‰∏ÄÊ†∑) ÂèëÂ∏ÉÊâìÂåÖJarÁ±ªÂûãÊâìÂåÖÊñπÂºè1.‰ΩøÁî®mvn clean package ÊâìÂåÖ 2.‰ΩøÁî®java ‚Äìjar ÂåÖÂêç warÁ±ªÂûãÊâìÂåÖÊñπÂºè1.‰ΩøÁî®mvn celan package ÊâìÂåÖ 2.‰ΩøÁî®java ‚Äìjar ÂåÖÂêç Â§ñÈÉ®TomcatËøêË°å1.‰ΩøÁî®mvn celan package ÊâìÂåÖ 2.Â∞ÜwarÂåÖ ÊîæÂÖ•Âà∞tomcat webapps‰∏ãËøêË°åÂç≥ÂèØ„ÄÇ Ê≥®ÊÑè:springboot2.0ÂÜÖÁΩÆtomcat8.5.25ÔºåÂª∫ËÆÆ‰ΩøÁî®Â§ñÈÉ®Tomcat9.0ÁâàÊú¨ËøêË°åÂç≥ÂèØ,Âê¶ÂàôÊä•ÈîôÁâàÊú¨‰∏çÂÖºÂÆπ„ÄÇ POM123456789101112131415161718192021222324252627&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;source&gt;1.8&lt;/source&gt; &lt;target&gt;1.8&lt;/target&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;maimClass&gt;com.itmayiedu.app.App&lt;/maimClass&gt; &lt;/configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;goals&gt; &lt;goal&gt;repackage&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; ÂèÇËÄÉÊñáÁåÆJdbcTemplate SpringBootÂàÜÈ°µÊèí‰ª∂PageHelper jpa Spring For All Á§æÂå∫ Spring ÂÆòÊñπÊïôÁ®ãÁøªËØë SpringBoot‰ΩøÁî®RedisÁºìÂ≠ò Spring Boot AdminÁÆÄÂçï‰ΩøÁî® Spring Boot ÊÄßËÉΩ‰ºòÂåñ WebFlux ÊÑüË∞¢‰ª•‰∏äÂ§ßÂ§ß‰ª¨~ÔºÅ ÂπøÂëäÊó∂Èó¥ÔºöÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢]]></content>
      <tags>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÆâÂà©ËΩØ‰ª∂-Â¶Ç‰Ωï‰∏ÄÈîÆË£ÖB]]></title>
    <url>%2F2018%2F08%2F02%2F%E5%A6%82%E4%BD%95%E4%B8%80%E9%94%AE%E8%A3%85B%2F</url>
    <content type="text"><![CDATA[‰ªäÂ§©ÊïôÂ§ßÂÆ∂Â¶ÇÊûúÈ´òÂ§ß‰∏äÁöÑË£ÖBÔºÅ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ Á¨¨‰∏ÄÊ≠•https://github.com/WWILLV/GodOfHacker ÂÖãÈöÜËΩØ‰ª∂ Á¨¨‰∫åÈÉ®‰ΩøÁî® ‰∏çË∞¢Âì¶üòè ÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ . Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåjuejinÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèã~]]></content>
      <tags>
        <tag>Êó•Â∏∏</tag>
        <tag>Windows10</tag>
        <tag>ËΩØ‰ª∂ÊïôÂ≠¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ∞‰∏ÄÊ¨°Â§±Ë¥•ÁöÑredisÂÆâË£Ö]]></title>
    <url>%2F2018%2F08%2F02%2F%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%A4%B1%E8%B4%A5%E7%9A%84redis%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[ÂàöÂàöÁúãËßÅÁæ§ÂèãËØ¥VPSÂèàÊêûÂπ¥‰∏≠Áâπ‰ª∑‰∫ÜÔºåÁúãÊù•ÁúãÂéªÔºåÈÄâ‰∫Ü‰∏™Âπ¥‰ªò$9.99ÁöÑCN2Á∫øË∑ØÁöÑKVM VPSÔºåÂøÉÈáåÁæéÊªãÊªã„ÄÇÁÑ∂ËÄåËøôÂÆ∂ÁöÑÊúÄÂ∞èÂåñcentOSÂ±ÖÁÑ∂ÂæàÂ§öÂü∫Á°ÄËøêË°åÁéØÂ¢ÉÈÉΩ‰∏çË£ÖÔºåÁîöÊòØÂ§¥Áñº„ÄÇÊé•‰∏ãÊù•ÊàëÊù•ÂàÜ‰∫´‰∏Ä‰∏ãÊàëË£ÖÊú∫ÁöÑËøáÁ®ã ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ ÂÆâË£ÖÁºñËØëÁéØÂ¢ÉÈ¶ñÂÖàÔºåÁî®sftpÔºàÂ¶àËõãÁ´üÁÑ∂Ê≤°ÊúâÂÜÖÁΩÆwgetÔºâ‰∏ãËΩΩÂ•ΩredisÔºåËøõÂÖ•redisÁõÆÂΩï ËøêË°å 123yum -y install wgetyum -y install makeyum install gcc Ë£ÖÂ•ΩmakeÁ≠âÁéØÂ¢ÉÔºåmake ‰∏Ä‰∏ãÔºåÊä•Èîô‰∫ÜÔºö ÂõæÊòØÊàë‰ªécsdnÊà™ÁöÑÔºåÊàëÂíå‰ªñÁöÑÈîôËØØ‰∏ÄÊ®°‰∏ÄÊ†∑„ÄÇÊü•‰∫ÜÊü•ÂéüÂõ†ÔºåÊòØÂõ†‰∏∫Ôºåredame‰∏≠ÊúâËøôÊ†∑‰∏ÄÂè•ËØùÔºö Allocator ‚Äî‚Äî‚Äî Selecting a non-default memory allocator when building Redis is done by setting the MALLOC environment variable. Redis is compiled and linked against libc malloc by default, with the exception of jemalloc being the default on Linux systems. This default was picked because jemalloc has proven to have fewer fragmentation problems than libc malloc. To force compiling against libc malloc, use: % make MALLOC=libc To compile against jemalloc on Mac OS X systems, use: % make MALLOC=jemalloc ÂÆÉËØ¥ÔºåÂú®ÊûÑÂª∫RedisÊó∂ÈÄâÊã©ÈùûÈªòËÆ§ÂÜÖÂ≠òÂàÜÈÖçÂô®ÊòØÈÄöËøáËÆæÁΩÆÂÆåÊàêÁöÑ MALLOCÁéØÂ¢ÉÂèòÈáè„ÄÇ RedisÊòØÈíàÂØπlibcÁºñËØëÂíåÈìæÊé•ÁöÑ ÈªòËÆ§ÊÉÖÂÜµ‰∏ã‰∏∫mallocÔºå‰ΩÜjemallocÊòØLinux‰∏äÁöÑÈªòËÆ§ËÆæÁΩÆÁ≥ªÁªü„ÄÇ ÊâÄ‰ª•ÔºåË¶ÅÊâßË°å 1make MALLOC=libc ÁÑ∂ÂêéÊâßË°åmake &amp;&amp; make install ÂÆâË£Öredis Â§ßÂäüÂëäÊàêÔºÅ ‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂Êé•‰∏ãÊù•ÊîπredisÈÖçÁΩÆÊñá‰ª∂ ÁªëÂÆö0.0.0.0ÔºåÂèäÂÖÅËÆ∏‰ªªÊÑèÊúçÂä°Âô®ËÆøÈóÆredis Â∞ÜdaemonizeÊîπÊàêyesÔºåÂèäÂÖÅËÆ∏ÂêéÂè∞ÊâßË°å ËÆøÈóÆÂØÜÁ†ÅrequirepassËÆæÁΩÆÊàêËá™Â∑±ÁöÑ ÂêØÂä®redisÁî®ÂàöÂàöÁöÑÈÖçÁΩÆÊñá‰ª∂ÂêØÂä®redisÔºö 12redis-server ./redis.confps -ef |grep redis ÁÑ∂ÂêéËøõÂÖ•utilsÁõÆÂΩï‰∏ãÔºåËøêË°åÁîüÊàêÁ≥ªÁªüÊúçÂä° 1./install_server.sh RedisÈÖçÁΩÆÊñá‰ª∂Ê†∑‰æã123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426# RedisÈÖçÁΩÆÊñá‰ª∂Ê†∑‰æã# Note on units: when memory size is needed, it is possible to specifiy# it in the usual form of 1k 5GB 4M and so forth:## 1k =&gt; 1000 bytes# 1kb =&gt; 1024 bytes# 1m =&gt; 1000000 bytes# 1mb =&gt; 1024*1024 bytes# 1g =&gt; 1000000000 bytes# 1gb =&gt; 1024*1024*1024 bytes## units are case insensitive so 1GB 1Gb 1gB are all the same.# RedisÈªòËÆ§‰∏çÊòØ‰ª•ÂÆàÊä§ËøõÁ®ãÁöÑÊñπÂºèËøêË°åÔºåÂèØ‰ª•ÈÄöËøáËØ•ÈÖçÁΩÆÈ°π‰øÆÊîπÔºå‰ΩøÁî®yesÂêØÁî®ÂÆàÊä§ËøõÁ®ã# ÂêØÁî®ÂÆàÊä§ËøõÁ®ãÂêéÔºåRedis‰ºöÊääpidÂÜôÂà∞‰∏Ä‰∏™pidfile‰∏≠ÔºåÂú®/var/run/redis.piddaemonize no# ÂΩìRedis‰ª•ÂÆàÊä§ËøõÁ®ãÊñπÂºèËøêË°åÊó∂ÔºåRedisÈªòËÆ§‰ºöÊääpidÂÜôÂÖ•/var/run/redis.pidÊñá‰ª∂ÔºåÂèØ‰ª•ÈÄöËøápidfileÊåáÂÆöpidfile /var/run/redis.pid# ÊåáÂÆöRedisÁõëÂê¨Á´ØÂè£ÔºåÈªòËÆ§Á´ØÂè£‰∏∫6379# Â¶ÇÊûúÊåáÂÆö0Á´ØÂè£ÔºåË°®Á§∫Redis‰∏çÁõëÂê¨TCPËøûÊé•port 6379# ÁªëÂÆöÁöÑ‰∏ªÊú∫Âú∞ÂùÄ# ‰Ω†ÂèØ‰ª•ÁªëÂÆöÂçï‰∏ÄÊé•Âè£ÔºåÂ¶ÇÊûúÊ≤°ÊúâÁªëÂÆöÔºåÊâÄÊúâÊé•Âè£ÈÉΩ‰ºöÁõëÂê¨Âà∞Êù•ÁöÑËøûÊé•# bind 127.0.0.1# Specify the path for the unix socket that will be used to listen for# incoming connections. There is no default, so Redis will not listen# on a unix socket when not specified.## unixsocket /tmp/redis.sock# unixsocketperm 755# ÂΩìÂÆ¢Êà∑Á´ØÈó≤ÁΩÆÂ§öÈïøÊó∂Èó¥ÂêéÂÖ≥Èó≠ËøûÊé•ÔºåÂ¶ÇÊûúÊåáÂÆö‰∏∫0ÔºåË°®Á§∫ÂÖ≥Èó≠ËØ•ÂäüËÉΩtimeout 0# ÊåáÂÆöÊó•ÂøóËÆ∞ÂΩïÁ∫ßÂà´ÔºåRedisÊÄªÂÖ±ÊîØÊåÅÂõõ‰∏™Á∫ßÂà´Ôºödebug„ÄÅverbose„ÄÅnotice„ÄÅwarningÔºåÈªòËÆ§‰∏∫verbose# debug (ÂæàÂ§ö‰ø°ÊÅØ, ÂØπÂºÄÂèëÔºèÊµãËØïÊØîËæÉÊúâÁî®)# verbose (many rarely useful info, but not a mess like the debug level)# notice (moderately verbose, what you want in production probably)# warning (only very important / critical messages are logged)loglevel verbose# Êó•ÂøóËÆ∞ÂΩïÊñπÂºèÔºåÈªòËÆ§‰∏∫Ê†áÂáÜËæìÂá∫ÔºåÂ¶ÇÊûúÈÖçÁΩÆ‰∏∫redis‰∏∫ÂÆàÊä§ËøõÁ®ãÊñπÂºèËøêË°åÔºåËÄåËøôÈáåÂèàÈÖçÁΩÆ‰∏∫Ê†áÂáÜËæìÂá∫ÔºåÂàôÊó•ÂøóÂ∞Ü‰ºöÂèëÈÄÅÁªô/dev/nulllogfile stdout# To enable logging to the system logger, just set &apos;syslog-enabled&apos; to yes,# and optionally update the other syslog parameters to suit your needs.# syslog-enabled no# Specify the syslog identity.# syslog-ident redis# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.# syslog-facility local0# ËÆæÁΩÆÊï∞ÊçÆÂ∫ìÁöÑÊï∞ÈáèÔºåÈªòËÆ§Êï∞ÊçÆÂ∫ì‰∏∫0ÔºåÂèØ‰ª•‰ΩøÁî®select &lt;dbid&gt;ÂëΩ‰ª§Âú®ËøûÊé•‰∏äÊåáÂÆöÊï∞ÊçÆÂ∫ìid# dbidÊòØ‰ªé0Âà∞‚Äòdatabases‚Äô-1ÁöÑÊï∞ÁõÆdatabases 16################################ SNAPSHOTTING ################################## ÊåáÂÆöÂú®Â§öÈïøÊó∂Èó¥ÂÜÖÔºåÊúâÂ§öÂ∞ëÊ¨°Êõ¥Êñ∞Êìç‰ΩúÔºåÂ∞±Â∞ÜÊï∞ÊçÆÂêåÊ≠•Âà∞Êï∞ÊçÆÊñá‰ª∂ÔºåÂèØ‰ª•Â§ö‰∏™Êù°‰ª∂ÈÖçÂêà# Save the DB on disk:## save &lt;seconds&gt; &lt;changes&gt;## Will save the DB if both the given number of seconds and the given# number of write operations against the DB occurred.## Êª°Ë∂≥‰ª•‰∏ãÊù°‰ª∂Â∞Ü‰ºöÂêåÊ≠•Êï∞ÊçÆ:# 900ÁßíÔºà15ÂàÜÈíüÔºâÂÜÖÊúâ1‰∏™Êõ¥Êîπ# 300ÁßíÔºà5ÂàÜÈíüÔºâÂÜÖÊúâ10‰∏™Êõ¥Êîπ# 60ÁßíÂÜÖÊúâ10000‰∏™Êõ¥Êîπ# Note: ÂèØ‰ª•ÊääÊâÄÊúâ‚Äúsave‚ÄùË°åÊ≥®ÈáäÊéâÔºåËøôÊ†∑Â∞±ÂèñÊ∂àÂêåÊ≠•Êìç‰Ωú‰∫Üsave 900 1save 300 10save 60 10000# ÊåáÂÆöÂ≠òÂÇ®Ëá≥Êú¨Âú∞Êï∞ÊçÆÂ∫ìÊó∂ÊòØÂê¶ÂéãÁº©Êï∞ÊçÆÔºåÈªòËÆ§‰∏∫yesÔºåRedisÈááÁî®LZFÂéãÁº©ÔºåÂ¶ÇÊûú‰∏∫‰∫ÜËäÇÁúÅCPUÊó∂Èó¥ÔºåÂèØ‰ª•ÂÖ≥Èó≠ËØ•ÈÄâÈ°πÔºå‰ΩÜ‰ºöÂØºËá¥Êï∞ÊçÆÂ∫ìÊñá‰ª∂ÂèòÁöÑÂ∑®Â§ßrdbcompression yes# ÊåáÂÆöÊú¨Âú∞Êï∞ÊçÆÂ∫ìÊñá‰ª∂ÂêçÔºåÈªòËÆ§ÂÄº‰∏∫dump.rdbdbfilename dump.rdb# Â∑•‰ΩúÁõÆÂΩï.# ÊåáÂÆöÊú¨Âú∞Êï∞ÊçÆÂ∫ìÂ≠òÊîæÁõÆÂΩïÔºåÊñá‰ª∂ÂêçÁî±‰∏ä‰∏Ä‰∏™dbfilenameÈÖçÁΩÆÈ°πÊåáÂÆö# # Also the Append Only File will be created inside this directory.# # Ê≥®ÊÑèÔºåËøôÈáåÂè™ËÉΩÊåáÂÆö‰∏Ä‰∏™ÁõÆÂΩïÔºå‰∏çËÉΩÊåáÂÆöÊñá‰ª∂Âêçdir ./################################# REPLICATION ################################## ‰∏ª‰ªéÂ§çÂà∂„ÄÇ‰ΩøÁî®slaveof‰ªé RedisÊúçÂä°Âô®Â§çÂà∂‰∏Ä‰∏™RedisÂÆû‰æã„ÄÇÊ≥®ÊÑèÔºåËØ•ÈÖçÁΩÆ‰ªÖÈôê‰∫éÂΩìÂâçslaveÊúâÊïà# so for example it is possible to configure the slave to save the DB with a# different interval, or to listen to another port, and so on.# ËÆæÁΩÆÂΩìÊú¨Êú∫‰∏∫slavÊúçÂä°Êó∂ÔºåËÆæÁΩÆmasterÊúçÂä°ÁöÑipÂú∞ÂùÄÂèäÁ´ØÂè£ÔºåÂú®RedisÂêØÂä®Êó∂ÔºåÂÆÉ‰ºöËá™Âä®‰ªémasterËøõË°åÊï∞ÊçÆÂêåÊ≠•# slaveof &lt;masterip&gt; &lt;masterport&gt;# ÂΩìmasterÊúçÂä°ËÆæÁΩÆ‰∫ÜÂØÜÁ†Å‰øùÊä§Êó∂ÔºåslavÊúçÂä°ËøûÊé•masterÁöÑÂØÜÁ†Å# ‰∏ãÊñáÁöÑ‚Äúrequirepass‚ÄùÈÖçÁΩÆÈ°πÂèØ‰ª•ÊåáÂÆöÂØÜÁ†Å# masterauth &lt;master-password&gt;# When a slave lost the connection with the master, or when the replication# is still in progress, the slave can act in two different ways:## 1) if slave-serve-stale-data is set to &apos;yes&apos; (the default) the slave will# still reply to client requests, possibly with out of data data, or the# data set may just be empty if this is the first synchronization.## 2) if slave-serve-stale data is set to &apos;no&apos; the slave will reply with# an error &quot;SYNC with master in progress&quot; to all the kind of commands# but to INFO and SLAVEOF.#slave-serve-stale-data yes# Slaves send PINGs to server in a predefined interval. It&apos;s possible to change# this interval with the repl_ping_slave_period option. The default value is 10# seconds.## repl-ping-slave-period 10# The following option sets a timeout for both Bulk transfer I/O timeout and# master data or ping response timeout. The default value is 60 seconds.## It is important to make sure that this value is greater than the value# specified for repl-ping-slave-period otherwise a timeout will be detected# every time there is low traffic between the master and the slave.## repl-timeout 60################################## SECURITY #################################### Warning: since Redis is pretty fast an outside user can try up to# 150k passwords per second against a good box. This means that you should# use a very strong password otherwise it will be very easy to break.# ËÆæÁΩÆRedisËøûÊé•ÂØÜÁ†ÅÔºåÂ¶ÇÊûúÈÖçÁΩÆ‰∫ÜËøûÊé•ÂØÜÁ†ÅÔºåÂÆ¢Êà∑Á´ØÂú®ËøûÊé•RedisÊó∂ÈúÄË¶ÅÈÄöËøáauth &lt;password&gt;ÂëΩ‰ª§Êèê‰æõÂØÜÁ†ÅÔºåÈªòËÆ§ÂÖ≥Èó≠# requirepass foobared# Command renaming.## It is possilbe to change the name of dangerous commands in a shared# environment. For instance the CONFIG command may be renamed into something# of hard to guess so that it will be still available for internal-use# tools but not available for general clients.## Example:## rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52## It is also possilbe to completely kill a command renaming it into# an empty string:## rename-command CONFIG &quot;&quot;################################### LIMITS ##################################### ËÆæÁΩÆÂêå‰∏ÄÊó∂Èó¥ÊúÄÂ§ßÂÆ¢Êà∑Á´ØËøûÊé•Êï∞ÔºåÈªòËÆ§Êó†ÈôêÂà∂ÔºåRedisÂèØ‰ª•ÂêåÊó∂ÊâìÂºÄÁöÑÂÆ¢Êà∑Á´ØËøûÊé•Êï∞‰∏∫RedisËøõÁ®ãÂèØ‰ª•ÊâìÂºÄÁöÑÊúÄÂ§ßÊñá‰ª∂ÊèèËø∞Á¨¶Êï∞Ôºå# Â¶ÇÊûúËÆæÁΩÆmaxclients 0ÔºåË°®Á§∫‰∏ç‰ΩúÈôêÂà∂„ÄÇÂΩìÂÆ¢Êà∑Á´ØËøûÊé•Êï∞Âà∞ËææÈôêÂà∂Êó∂ÔºåRedis‰ºöÂÖ≥Èó≠Êñ∞ÁöÑËøûÊé•Âπ∂ÂêëÂÆ¢Êà∑Á´ØËøîÂõûmax Number of clients reachedÈîôËØØ‰ø°ÊÅØ# maxclients 128# Don&apos;t use more memory than the specified amount of bytes.# When the memory limit is reached Redis will try to remove keys with an# EXPIRE set. It will try to start freeing keys that are going to expire# in little time and preserve keys with a longer time to live.# Redis will also try to remove objects from free lists if possible.## If all this fails, Redis will start to reply with errors to commands# that will use more memory, like SET, LPUSH, and so on, and will continue# to reply to most read-only commands like GET.## WARNING: maxmemory can be a good idea mainly if you want to use Redis as a# &apos;state&apos; server or cache, not as a real DB. When Redis is used as a real# database the memory usage will grow over the weeks, it will be obvious if# it is going to use too much memory in the long run, and you&apos;ll have the time# to upgrade. With maxmemory after the limit is reached you&apos;ll start to get# errors for write operations, and this may even lead to DB inconsistency.# ÊåáÂÆöRedisÊúÄÂ§ßÂÜÖÂ≠òÈôêÂà∂ÔºåRedisÂú®ÂêØÂä®Êó∂‰ºöÊääÊï∞ÊçÆÂä†ËΩΩÂà∞ÂÜÖÂ≠ò‰∏≠ÔºåËææÂà∞ÊúÄÂ§ßÂÜÖÂ≠òÂêéÔºåRedis‰ºöÂÖàÂ∞ùËØïÊ∏ÖÈô§Â∑≤Âà∞ÊúüÊàñÂç≥Â∞ÜÂà∞ÊúüÁöÑKeyÔºå# ÂΩìÊ≠§ÊñπÊ≥ïÂ§ÑÁêÜÂêéÔºå‰ªçÁÑ∂Âà∞ËææÊúÄÂ§ßÂÜÖÂ≠òËÆæÁΩÆÔºåÂ∞ÜÊó†Ê≥ïÂÜçËøõË°åÂÜôÂÖ•Êìç‰ΩúÔºå‰ΩÜ‰ªçÁÑ∂ÂèØ‰ª•ËøõË°åËØªÂèñÊìç‰Ωú„ÄÇ# RedisÊñ∞ÁöÑvmÊú∫Âà∂Ôºå‰ºöÊääKeyÂ≠òÊîæÂÜÖÂ≠òÔºåValue‰ºöÂ≠òÊîæÂú®swapÂå∫# maxmemory &lt;bytes&gt;# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory# is reached? You can select among five behavior:# # volatile-lru -&gt; remove the key with an expire set using an LRU algorithm# allkeys-lru -&gt; remove any key accordingly to the LRU algorithm# volatile-random -&gt; remove a random key with an expire set# allkeys-&gt;random -&gt; remove a random key, any key# volatile-ttl -&gt; remove the key with the nearest expire time (minor TTL)# noeviction -&gt; don&apos;t expire at all, just return an error on write operations# # Note: with all the kind of policies, Redis will return an error on write# operations, when there are not suitable keys for eviction.## At the date of writing this commands are: set setnx setex append# incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd# sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby# zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby# getset mset msetnx exec sort## The default is:## maxmemory-policy volatile-lru# LRU and minimal TTL algorithms are not precise algorithms but approximated# algorithms (in order to save memory), so you can select as well the sample# size to check. For instance for default Redis will check three keys and# pick the one that was used less recently, you can change the sample size# using the following configuration directive.## maxmemory-samples 3############################## APPEND ONLY MODE ################################ # Note that you can have both the async dumps and the append only file if you# like (you have to comment the &quot;save&quot; statements above to disable the dumps).# Still if append only mode is enabled Redis will load the data from the# log file at startup ignoring the dump.rdb file.# ÊåáÂÆöÊòØÂê¶Âú®ÊØèÊ¨°Êõ¥Êñ∞Êìç‰ΩúÂêéËøõË°åÊó•ÂøóËÆ∞ÂΩïÔºåRedisÂú®ÈªòËÆ§ÊÉÖÂÜµ‰∏ãÊòØÂºÇÊ≠•ÁöÑÊääÊï∞ÊçÆÂÜôÂÖ•Á£ÅÁõòÔºåÂ¶ÇÊûú‰∏çÂºÄÂêØÔºåÂèØËÉΩ‰ºöÂú®Êñ≠ÁîµÊó∂ÂØºËá¥‰∏ÄÊÆµÊó∂Èó¥ÂÜÖÁöÑÊï∞ÊçÆ‰∏¢Â§±„ÄÇ# Âõ†‰∏∫redisÊú¨Ë∫´ÂêåÊ≠•Êï∞ÊçÆÊñá‰ª∂ÊòØÊåâ‰∏äÈù¢saveÊù°‰ª∂Êù•ÂêåÊ≠•ÁöÑÔºåÊâÄ‰ª•ÊúâÁöÑÊï∞ÊçÆ‰ºöÂú®‰∏ÄÊÆµÊó∂Èó¥ÂÜÖÂè™Â≠òÂú®‰∫éÂÜÖÂ≠ò‰∏≠„ÄÇÈªòËÆ§‰∏∫no# IMPORTANT: Check the BGREWRITEAOF to check how to rewrite the append# log file in background when it gets too big.appendonly no# ÊåáÂÆöÊõ¥Êñ∞Êó•ÂøóÊñá‰ª∂ÂêçÔºåÈªòËÆ§‰∏∫appendonly.aof# appendfilename appendonly.aof# The fsync() call tells the Operating System to actually write data on disk# instead to wait for more data in the output buffer. Some OS will really flush # data on disk, some other OS will just try to do it ASAP.# ÊåáÂÆöÊõ¥Êñ∞Êó•ÂøóÊù°‰ª∂ÔºåÂÖ±Êúâ3‰∏™ÂèØÈÄâÂÄºÔºö# no:Ë°®Á§∫Á≠âÊìç‰ΩúÁ≥ªÁªüËøõË°åÊï∞ÊçÆÁºìÂ≠òÂêåÊ≠•Âà∞Á£ÅÁõòÔºàÂø´Ôºâ# always:Ë°®Á§∫ÊØèÊ¨°Êõ¥Êñ∞Êìç‰ΩúÂêéÊâãÂä®Ë∞ÉÁî®fsync()Â∞ÜÊï∞ÊçÆÂÜôÂà∞Á£ÅÁõòÔºàÊÖ¢ÔºåÂÆâÂÖ®Ôºâ# everysec:Ë°®Á§∫ÊØèÁßíÂêåÊ≠•‰∏ÄÊ¨°ÔºàÊäòË°∑ÔºåÈªòËÆ§ÂÄºÔºâappendfsync everysec# appendfsync no# When the AOF fsync policy is set to always or everysec, and a background# saving process (a background save or AOF log background rewriting) is# performing a lot of I/O against the disk, in some Linux configurations# Redis may block too long on the fsync() call. Note that there is no fix for# this currently, as even performing fsync in a different thread will block# our synchronous write(2) call.## In order to mitigate this problem it&apos;s possible to use the following option# that will prevent fsync() from being called in the main process while a# BGSAVE or BGREWRITEAOF is in progress.## This means that while another child is saving the durability of Redis is# the same as &quot;appendfsync none&quot;, that in pratical terms means that it is# possible to lost up to 30 seconds of log in the worst scenario (with the# default Linux settings).# # If you have latency problems turn this to &quot;yes&quot;. Otherwise leave it as# &quot;no&quot; that is the safest pick from the point of view of durability.no-appendfsync-on-rewrite no# Automatic rewrite of the append only file.# Redis is able to automatically rewrite the log file implicitly calling# BGREWRITEAOF when the AOF log size will growth by the specified percentage.# # This is how it works: Redis remembers the size of the AOF file after the# latest rewrite (or if no rewrite happened since the restart, the size of# the AOF at startup is used).## This base size is compared to the current size. If the current size is# bigger than the specified percentage, the rewrite is triggered. Also# you need to specify a minimal size for the AOF file to be rewritten, this# is useful to avoid rewriting the AOF file even if the percentage increase# is reached but it is still pretty small.## Specify a precentage of zero in order to disable the automatic AOF# rewrite feature.auto-aof-rewrite-percentage 100auto-aof-rewrite-min-size 64mb################################## SLOW LOG #################################### The Redis Slow Log is a system to log queries that exceeded a specified# execution time. The execution time does not include the I/O operations# like talking with the client, sending the reply and so forth,# but just the time needed to actually execute the command (this is the only# stage of command execution where the thread is blocked and can not serve# other requests in the meantime).# # You can configure the slow log with two parameters: one tells Redis# what is the execution time, in microseconds, to exceed in order for the# command to get logged, and the other parameter is the length of the# slow log. When a new command is logged the oldest one is removed from the# queue of logged commands.# The following time is expressed in microseconds, so 1000000 is equivalent# to one second. Note that a negative number disables the slow log, while# a value of zero forces the logging of every command.slowlog-log-slower-than 10000# There is no limit to this length. Just be aware that it will consume memory.# You can reclaim memory used by the slow log with SLOWLOG RESET.slowlog-max-len 1024################################ VIRTUAL MEMORY ################################## WARNING! Virtual Memory is deprecated in Redis 2.4### The use of Virtual Memory is strongly discouraged.### WARNING! Virtual Memory is deprecated in Redis 2.4### The use of Virtual Memory is strongly discouraged.# Virtual Memory allows Redis to work with datasets bigger than the actual# amount of RAM needed to hold the whole dataset in memory.# In order to do so very used keys are taken in memory while the other keys# are swapped into a swap file, similarly to what operating systems do# with memory pages.# ÊåáÂÆöÊòØÂê¶ÂêØÁî®ËôöÊãüÂÜÖÂ≠òÊú∫Âà∂ÔºåÈªòËÆ§ÂÄº‰∏∫noÔºå# VMÊú∫Âà∂Â∞ÜÊï∞ÊçÆÂàÜÈ°µÂ≠òÊîæÔºåÁî±RedisÂ∞ÜËÆøÈóÆÈáèËæÉÂ∞ëÁöÑÈ°µÂç≥ÂÜ∑Êï∞ÊçÆswapÂà∞Á£ÅÁõò‰∏äÔºåËÆøÈóÆÂ§öÁöÑÈ°µÈù¢Áî±Á£ÅÁõòËá™Âä®Êç¢Âá∫Âà∞ÂÜÖÂ≠ò‰∏≠# Êäävm-enabledËÆæÁΩÆ‰∏∫yesÔºåÊ†πÊçÆÈúÄË¶ÅËÆæÁΩÆÂ•ΩÊé•‰∏ãÊù•ÁöÑ‰∏â‰∏™VMÂèÇÊï∞ÔºåÂ∞±ÂèØ‰ª•ÂêØÂä®VM‰∫Üvm-enabled no# vm-enabled yes# This is the path of the Redis swap file. As you can guess, swap files# can&apos;t be shared by different Redis instances, so make sure to use a swap# file for every redis process you are running. Redis will complain if the# swap file is already in use.## Redis‰∫§Êç¢Êñá‰ª∂ÊúÄÂ•ΩÁöÑÂ≠òÂÇ®ÊòØSSDÔºàÂõ∫ÊÄÅÁ°¨ÁõòÔºâ# ËôöÊãüÂÜÖÂ≠òÊñá‰ª∂Ë∑ØÂæÑÔºåÈªòËÆ§ÂÄº‰∏∫/tmp/redis.swapÔºå‰∏çÂèØÂ§ö‰∏™RedisÂÆû‰æãÂÖ±‰∫´# *** WARNING *** if you are using a shared hosting the default of putting# the swap file under /tmp is not secure. Create a dir with access granted# only to Redis user and configure Redis to create the swap file there.vm-swap-file /tmp/redis.swap# With vm-max-memory 0 the system will swap everything it can. Not a good# default, just specify the max amount of RAM you can in bytes, but it&apos;s# better to leave some margin. For instance specify an amount of RAM# that&apos;s more or less between 60 and 80% of your free RAM.# Â∞ÜÊâÄÊúâÂ§ß‰∫évm-max-memoryÁöÑÊï∞ÊçÆÂ≠òÂÖ•ËôöÊãüÂÜÖÂ≠òÔºåÊó†ËÆ∫vm-max-memoryËÆæÁΩÆÂ§öÂ∞ëÔºåÊâÄÊúâÁ¥¢ÂºïÊï∞ÊçÆÈÉΩÊòØÂÜÖÂ≠òÂ≠òÂÇ®ÁöÑÔºàRedisÁöÑÁ¥¢ÂºïÊï∞ÊçÆÂ∞±ÊòØkeysÔºâ# ‰πüÂ∞±ÊòØËØ¥ÂΩìvm-max-memoryËÆæÁΩÆ‰∏∫0ÁöÑÊó∂ÂÄôÔºåÂÖ∂ÂÆûÊòØÊâÄÊúâvalueÈÉΩÂ≠òÂú®‰∫éÁ£ÅÁõò„ÄÇÈªòËÆ§ÂÄº‰∏∫0vm-max-memory 0# Redis swapÊñá‰ª∂ÂàÜÊàê‰∫ÜÂæàÂ§öÁöÑpageÔºå‰∏Ä‰∏™ÂØπË±°ÂèØ‰ª•‰øùÂ≠òÂú®Â§ö‰∏™page‰∏äÈù¢Ôºå‰ΩÜ‰∏Ä‰∏™page‰∏ä‰∏çËÉΩË¢´Â§ö‰∏™ÂØπË±°ÂÖ±‰∫´Ôºåvm-page-sizeÊòØË¶ÅÊ†πÊçÆÂ≠òÂÇ®ÁöÑÊï∞ÊçÆÂ§ßÂ∞èÊù•ËÆæÂÆöÁöÑ„ÄÇ# Âª∫ËÆÆÂ¶ÇÊûúÂ≠òÂÇ®ÂæàÂ§öÂ∞èÂØπË±°ÔºåpageÂ§ßÂ∞èÊúÄÂêéËÆæÁΩÆ‰∏∫32Êàñ64bytesÔºõÂ¶ÇÊûúÂ≠òÂÇ®ÂæàÂ§ßÁöÑÂØπË±°ÔºåÂàôÂèØ‰ª•‰ΩøÁî®Êõ¥Â§ßÁöÑpageÔºåÂ¶ÇÊûú‰∏çÁ°ÆÂÆöÔºåÂ∞±‰ΩøÁî®ÈªòËÆ§ÂÄºvm-page-size 32# ËÆæÁΩÆswapÊñá‰ª∂‰∏≠ÁöÑpageÊï∞ÈáèÁî±‰∫éÈ°µË°®Ôºà‰∏ÄÁßçË°®Á§∫È°µÈù¢Á©∫Èó≤Êàñ‰ΩøÁî®ÁöÑbitmapÔºâÊòØÂ≠òÊîæÂú®ÂÜÖÂ≠ò‰∏≠ÁöÑÔºåÂú®Á£ÅÁõò‰∏äÊØè8‰∏™pagesÂ∞ÜÊ∂àËÄó1byteÁöÑÂÜÖÂ≠ò# swapÁ©∫Èó¥ÊÄªÂÆπÈáè‰∏∫ vm-page-size * vm-pages## With the default of 32-bytes memory pages and 134217728 pages Redis will# use a 4 GB swap file, that will use 16 MB of RAM for the page table.## It&apos;s better to use the smallest acceptable value for your application,# but the default is large in order to work in most conditions.vm-pages 134217728# Max number of VM I/O threads running at the same time.# This threads are used to read/write data from/to swap file, since they# also encode and decode objects from disk to memory or the reverse, a bigger# number of threads can help with big objects even if they can&apos;t help with# I/O itself as the physical device may not be able to couple with many# reads/writes operations at the same time.# ËÆæÁΩÆËÆøÈóÆswapÊñá‰ª∂ÁöÑI/OÁ∫øÁ®ãÊï∞ÔºåÊúÄÂêé‰∏çË¶ÅË∂ÖËøáÊú∫Âô®ÁöÑÊ†∏Êï∞ÔºåÂ¶ÇÊûúËÆæÁΩÆ‰∏∫0ÔºåÈÇ£‰πàÊâÄÊúâÂØπswapÊñá‰ª∂ÁöÑÊìç‰ΩúÈÉΩÊòØ‰∏≤Ë°åÁöÑÔºåÂèØËÉΩ‰ºöÈÄ†ÊàêÊØîËæÉÈïøÊó∂Èó¥ÁöÑÂª∂ËøüÔºåÈªòËÆ§ÂÄº‰∏∫4vm-max-threads 4############################### ADVANCED CONFIG ################################ Hashes are encoded in a special way (much more memory efficient) when they# have at max a given numer of elements, and the biggest element does not# exceed a given threshold. You can configure this limits with the following# configuration directives.# ÊåáÂÆöÂú®Ë∂ÖËøá‰∏ÄÂÆöÁöÑÊï∞ÈáèÊàñËÄÖÊúÄÂ§ßÁöÑÂÖÉÁ¥†Ë∂ÖËøáÊüê‰∏Ä‰∏¥ÁïåÂÄºÊó∂ÔºåÈááÁî®‰∏ÄÁßçÁâπÊÆäÁöÑÂìàÂ∏åÁÆóÊ≥ïhash-max-zipmap-entries 512hash-max-zipmap-value 64# Similarly to hashes, small lists are also encoded in a special way in order# to save a lot of space. The special representation is only used when# you are under the following limits:list-max-ziplist-entries 512list-max-ziplist-value 64# Sets have a special encoding in just one case: when a set is composed# of just strings that happens to be integers in radix 10 in the range# of 64 bit signed integers.# The following configuration setting sets the limit in the size of the# set in order to use this special memory saving encoding.set-max-intset-entries 512# Similarly to hashes and lists, sorted sets are also specially encoded in# order to save a lot of space. This encoding is only used when the length and# elements of a sorted set are below the following limits:zset-max-ziplist-entries 128zset-max-ziplist-value 64# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in# order to help rehashing the main Redis hash table (the one mapping top-level# keys to values). The hash table implementation redis uses (see dict.c)# performs a lazy rehashing: the more operation you run into an hash table# that is rhashing, the more rehashing &quot;steps&quot; are performed, so if the# server is idle the rehashing is never complete and some more memory is used# by the hash table.# # The default is to use this millisecond 10 times every second in order to# active rehashing the main dictionaries, freeing memory when possible.## If unsure:# use &quot;activerehashing no&quot; if you have hard latency requirements and it is# not a good thing in your environment that Redis can reply form time to time# to queries with 2 milliseconds delay.# ÊåáÂÆöÊòØÂê¶ÊøÄÊ¥ªÈáçÁΩÆÂìàÂ∏åÔºåÈªòËÆ§‰∏∫ÂºÄÂêØactiverehashing yes################################## INCLUDES #################################### ÊåáÂÆöÂåÖÂê´ÂÖ∂‰ªñÁöÑÈÖçÁΩÆÊñá‰ª∂ÔºåÂèØ‰ª•Âú®Âêå‰∏Ä‰∏ªÊú∫‰∏äÂ§ö‰∏™RedisÂÆû‰æã‰πãÈó¥‰ΩøÁî®Âêå‰∏Ä‰ªΩÈÖçÁΩÆÊñá‰ª∂ÔºåËÄåÂêåÊó∂ÂêÑÂÆû‰æãÂèàÊã•ÊúâËá™Â∑±ÁöÑÁâπÂÆöÈÖçÁΩÆÊñá‰ª∂# include /path/to/local.conf# include /path/to/other.conf ÂÆåÊàêÔºÅÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèã~]]></content>
      <tags>
        <tag>Êìç‰ΩúÁ≥ªÁªü</tag>
        <tag>ËΩØ‰ª∂ÊïôÂ≠¶</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ=5=-zookeeper]]></title>
    <url>%2F2018%2F07%2F29%2F%E6%88%91%E8%A6%81%E5%AD%A6%E5%A5%BD%E5%88%86%E5%B8%83%E5%BC%8F-zookeeper%2F</url>
    <content type="text"><![CDATA[‚ÄúÂ≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ‚ÄùËäÇÁõÆÂÅöÂà∞Á¨¨ÂõõÊúü‰∫ÜÔºåüëèüëèüëè ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ ÂàÜÂ∏ÉÂºèÊ¶ÇÂøµÔºàÂâçÊàèÔºâ‰∫ÜËß£‰∏Ä‰∏™ÊäÄÊúØÔºåÂÖàË¶ÅÊéåÊè°ÂÆÉÁöÑÁêÜËÆ∫ÔºåÁÑ∂ÂêéÂæ™Â∫èÊ∏êËøõ„ÄÇÊâÄ‰ª•ÔºåÁêÜËÆ∫Êù•‰∫Ü~ ‰ªÄ‰πàÊòØÂàÜÂ∏ÉÂºèÂë¢ÔºüÁÆÄÂçïËØ¥ÔºåÂàÜÂ∏ÉÂºèÁ≥ªÁªüËÉåÂêéÊòØÁî±‰∏ÄÁ≥ªÂàóÁöÑËÆ°ÁÆóÊú∫ÁªÑÊàêÁöÑÔºå‰ΩÜÁî®Êà∑ÊÑüÁü•‰∏çÂà∞ËÉåÂêéÁöÑÈÄªËæëÔºåÂ∞±ÂÉèËÆøÈóÆÂçï‰∏™ËÆ°ÁÆóÊú∫‰∏ÄÊ†∑ ÊúÄÂü∫Êú¨ÁöÑÁâπÁÇπÂàÜÂ∏ÉÊÄßÊúçÂä°Âô®ÁöÑ‰ΩçÁΩÆÂèØËÉΩÂú®‰∏ç‰∏Ä‰∏™‰ΩçÁΩÆ Âπ∂ÂèëÊÄßÁ®ãÂ∫èËøêË°åËøáÁ®ã‰∏≠ÔºåÂπ∂ÂèëÊÄßÊìç‰ΩúÊòØÂæàÂ∏∏ËßÅÁöÑ„ÄÇÊØîÂ¶ÇÂêå‰∏Ä‰∏™ÂàÜÂ∏ÉÂºèÁ≥ªÁªü‰∏≠ÁöÑÂ§ö‰∏™ËäÇÁÇπÔºåÂêåÊó∂ËÆøÈóÆ‰∏Ä‰∏™ÂÖ±‰∫´ËµÑÊ∫ê„ÄÇÊï∞ÊçÆÂ∫ì„ÄÅÂàÜÂ∏ÉÂºèÂ≠òÂÇ® Êó†Â∫èÊÄßËøõÁ®ã‰πãÈó¥ÁöÑÊ∂àÊÅØÈÄö‰ø°Ôºå‰ºöÂá∫Áé∞È°∫Â∫è‰∏ç‰∏ÄËá¥ÈóÆÈ¢ò ÂàÜÂ∏ÉÂºèÁéØÂ¢É‰∏ãÈù¢‰∏¥ÁöÑÈóÆÈ¢òÂàÜÂ∏ÉÂºèÁöÑÁâπÁÇπÂÜ≥ÂÆö‰∫ÜÂÆÉ‰∏ÄÂÆö‰ºöÊúâÁõ∏Â∫îÁöÑÈóÆÈ¢ò ÁΩëÁªúÈÄö‰ø°ÂàÜÂ∏ÉÂºèÁ≥ªÁªüÁöÑ‰ø°ÊÅØÈÄöËøáÁΩëÁªúÊù•‰º†ËæìÁöÑÔºåËÄåÁΩëÁªúÊú¨Ë∫´ÁöÑ‰∏çÂèØÈù†ÊÄßÔºåÂõ†Ê≠§‰ºöÊ∂âÂèäÂà∞‰∏Ä‰∫õÁΩëÁªúÈÄö‰ø°ÈóÆÈ¢ò ÁΩëÁªúÂàÜÂå∫(ËÑëË£Ç)‰ªÄ‰πàÊòØËÑëË£ÇÂë¢Ôºü Âú®È´òÂèØÁî®ÔºàHAÔºâÁ≥ªÁªü‰∏≠ÔºåÂΩìËÅîÁ≥ª2‰∏™ËäÇÁÇπÁöÑ‚ÄúÂøÉË∑≥Á∫ø‚ÄùÊñ≠ÂºÄÊó∂ÔºåÊú¨Êù•‰∏∫‰∏ÄÊï¥‰Ωì„ÄÅÂä®‰ΩúÂçèË∞ÉÁöÑHAÁ≥ªÁªüÔºåÂ∞±ÂàÜË£ÇÊàê‰∏∫2‰∏™Áã¨Á´ãÁöÑ‰∏™‰Ωì„ÄÇÁî±‰∫éÁõ∏‰∫íÂ§±Âéª‰∫ÜËÅîÁ≥ªÔºåÈÉΩ‰ª•‰∏∫ÊòØÂØπÊñπÂá∫‰∫ÜÊïÖÈöú„ÄÇ‰∏§‰∏™ËäÇÁÇπ‰∏äÁöÑHAËΩØ‰ª∂ÂÉè‚ÄúË£ÇËÑë‰∫∫‚Äù‰∏ÄÊ†∑Ôºå‰∫âÊä¢‚ÄúÂÖ±‰∫´ËµÑÊ∫ê‚Äù„ÄÅ‰∫âËµ∑‚ÄúÂ∫îÁî®ÊúçÂä°‚ÄùÔºåÂ∞±‰ºöÂèëÁîü‰∏•ÈáçÂêéÊûú‚Äî‚ÄîÊàñËÄÖÂÖ±‰∫´ËµÑÊ∫êË¢´ÁìúÂàÜ„ÄÅ2Ëæπ‚ÄúÊúçÂä°‚ÄùÈÉΩËµ∑‰∏çÊù•‰∫ÜÔºõÊàñËÄÖ2Ëæπ‚ÄúÊúçÂä°‚ÄùÈÉΩËµ∑Êù•‰∫ÜÔºå‰ΩÜÂêåÊó∂ËØªÂÜô‚ÄúÂÖ±‰∫´Â≠òÂÇ®‚ÄùÔºåÂØºËá¥Êï∞ÊçÆÊçüÂùèÔºàÂ∏∏ËßÅÂ¶ÇÊï∞ÊçÆÂ∫ìËΩÆËØ¢ÁùÄÁöÑËÅîÊú∫Êó•ÂøóÂá∫ÈîôÔºâ„ÄÇ ËÄåÂΩìÁΩëÁªúÂèëÁîüÂºÇÂ∏∏ÂØºËá¥ÂàÜÂ∏ÉÂºèÁ≥ªÁªü‰∏≠ÈÉ®ÂàÜËäÇÁÇπ‰πãÈó¥ÁöÑÁΩëÁªúÂª∂Êó∂‰∏çÊñ≠Â¢ûÂ§ßÔºåÂ∞±‰ºö‰∫ßÁîüËÑëË£ÇÁé∞Ë±°ÔºåÂç≥ÁªÑÊàêÂàÜÂ∏ÉÂºèÊû∂ÊûÑÁöÑÊâÄÊúâËäÇÁÇπÔºåÂè™ÊúâÈÉ®ÂàÜËäÇÁÇπËÉΩÂ§üÊ≠£Â∏∏ÈÄö‰ø° ‰∏âÊÄÅÂú®Ê≠£Â∏∏ÁöÑÂçïÊú∫ÁéØÂ¢É‰∏ãÔºå‰∏Ä‰∏™Á®ãÂ∫èË∞ÉÁî®‰∏Ä‰∏™Êé•Âè£ÔºåÊ≠£Â∏∏ÊÉÖÂÜµ‰∏ãÂè™Êúâ2‰∏™Áä∂ÊÄÅÔºåÊàêÂäüÊÄÅÂíåÂ§±Ë¥•ÊÄÅ„ÄÇ ‰ΩÜÊòØÂú®ÂàÜÂ∏ÉÂºèÁéØÂ¢É‰∏ãÔºåÂ∞±ÂèàÂ§ö‰∫Ü‰∏ÄÁßçÁä∂ÊÄÅÔºåÂè´ÂÅöË∂ÖÊó∂ÊÄÅÔºåÊåáÁöÑÂ∞±ÊòØÂú®ÂàÜÂ∏ÉÂºèÁΩëË∑ØÈÄö‰ø°Êó∂ÔºåÂõ†‰∏∫ÁΩëÁªúÊïÖÈöúÔºåÊàëÁöÑÊ∂àÊÅØ‰∏ÄÁõ¥Ê≤°ÊúâÊî∂Âà∞ËøîÂõûÊàñËÄÖÊòØÊàëÁöÑÊ∂àÊÅØÊ≤°ÊúâÂèëÈÄÅÂá∫Âéª„ÄÇ ÂàÜÂ∏ÉÂºè‰∫ãÂä°ÂàÜÂ∏ÉÂºè‰πü‰ºöÊúâ‰∫ãÁâ©ÈóÆÈ¢òÔºåÂç≥ACID(ÂéüÂ≠êÊÄß„ÄÅ‰∏ÄËá¥ÊÄß„ÄÅÈöîÁ¶ªÊÄß„ÄÅÊåÅ‰πÖÊÄß)„ÄÇË≠¨Â¶ÇÔºåÂ¶ÇÊûú‰∏§Âè∞ÂàÜÂ∏ÉÂºèÊû∂ÊûÑÁöÑÊúçÂä°Âô®ÊúâËøôÁõ∏ÂêåÁöÑÂäüËÉΩÔºåÂΩìÁî®Êà∑Êìç‰ΩúÁöÑÊó∂ÂÄôÔºå‰Ω†Ë¶Å‰øùÂ≠òËøô‰∏§Âè∞ÊúçÂä°Âô®ÁöÑÂêåÊó∂ÂèëÁîüÂêåÊó∂ÊàêÂäüÔºåËøôÂ∞±Â±û‰∫é‰∫ãÁâ©ÈóÆÈ¢ò„ÄÇ 1.ÂéüÂ≠êÊÄßÔºàAtomicityÔºâ ‚Äã ‰∏Ä‰∏™ÂéüÂ≠ê‰∫ãÂä°Ë¶Å‰πàÂÆåÊï¥ÊâßË°åÔºåË¶Å‰πàÂπ≤ËÑÜ‰∏çÊâßË°å„ÄÇËøôÊÑèÂë≥ÁùÄÔºåÂ∑•‰ΩúÂçïÂÖÉ‰∏≠ÁöÑÊØèÈ°π‰ªªÂä°ÈÉΩÂøÖÈ°ªÊ≠£Á°ÆÊâßË°å„ÄÇÂ¶ÇÊûúÊúâ‰ªª‰∏Ä‰ªªÂä°ÊâßË°åÂ§±Ë¥•ÔºåÂàôÊï¥‰∏™Â∑•‰ΩúÂçïÂÖÉÊàñ‰∫ãÂä°Â∞±‰ºöË¢´ÁªàÊ≠¢„ÄÇÂç≥Ê≠§ÂâçÂØπÊï∞ÊçÆÊâÄ‰ΩúÁöÑ‰ªª‰Ωï‰øÆÊîπÈÉΩÂ∞ÜË¢´Êí§ÈîÄ„ÄÇÂ¶ÇÊûúÊâÄÊúâ‰ªªÂä°ÈÉΩË¢´ÊàêÂäüÊâßË°åÔºå‰∫ãÂä°Â∞±‰ºöË¢´Êèê‰∫§ÔºåÂç≥ÂØπÊï∞ÊçÆÊâÄ‰ΩúÁöÑ‰øÆÊîπÂ∞Ü‰ºöÊòØÊ∞∏‰πÖÊÄßÁöÑ„ÄÇ 2.‰∏ÄËá¥ÊÄßÔºàConsistencyÔºâ ‚Äã ‰∏ÄËá¥ÊÄß‰ª£Ë°®‰∫ÜÂ∫ïÂ±ÇÊï∞ÊçÆÂ≠òÂÇ®ÁöÑÂÆåÊï¥ÊÄß„ÄÇÂÆÉÂøÖÈ°ªÁî±‰∫ãÂä°Á≥ªÁªüÂíåÂ∫îÁî®ÂºÄÂèë‰∫∫ÂëòÂÖ±ÂêåÊù•‰øùËØÅ„ÄÇ‰∫ãÂä°Á≥ªÁªüÈÄöËøá‰øùËØÅ‰∫ãÂä°ÁöÑÂéüÂ≠êÊÄßÔºåÈöîÁ¶ªÊÄßÂíåÊåÅ‰πÖÊÄßÊù•Êª°Ë∂≥Ëøô‰∏ÄË¶ÅÊ±Ç; Â∫îÁî®ÂºÄÂèë‰∫∫ÂëòÂàôÈúÄË¶Å‰øùËØÅÊï∞ÊçÆÂ∫ìÊúâÈÄÇÂΩìÁöÑÁ∫¶Êùü(‰∏ªÈîÆÔºåÂºïÁî®ÂÆåÊï¥ÊÄßÁ≠â)ÔºåÂπ∂‰∏îÂ∑•‰ΩúÂçïÂÖÉ‰∏≠ÊâÄÂÆûÁé∞ÁöÑ‰∏öÂä°ÈÄªËæë‰∏ç‰ºöÂØºËá¥Êï∞ÊçÆÁöÑ‰∏ç‰∏ÄËá¥(Âç≥ÔºåÊï∞ÊçÆÈ¢ÑÊúüÊâÄË°®ËææÁöÑÁé∞ÂÆû‰∏öÂä°ÊÉÖÂÜµ‰∏çÁõ∏‰∏ÄËá¥)„ÄÇ‰æãÂ¶ÇÔºåÂú®‰∏ÄÊ¨°ËΩ¨Ë¥¶ËøáÁ®ã‰∏≠Ôºå‰ªéÊüê‰∏ÄË¥¶Êà∑‰∏≠Êâ£Èô§ÁöÑÈáëÈ¢ùÂøÖÈ°ª‰∏éÂè¶‰∏ÄË¥¶Êà∑‰∏≠Â≠òÂÖ•ÁöÑÈáëÈ¢ùÁõ∏Á≠â„ÄÇ 3.ÈöîÁ¶ªÊÄßÔºàIsolationÔºâ ‚Äã ÈöîÁ¶ªÊÄßÊÑèÂë≥ÁùÄ‰∫ãÂä°ÂøÖÈ°ªÂú®‰∏çÂπ≤Êâ∞ÂÖ∂‰ªñËøõÁ®ãÊàñ‰∫ãÂä°ÁöÑÂâçÊèê‰∏ãÁã¨Á´ãÊâßË°å„ÄÇÊç¢Ë®Ä‰πãÔºåÂú®‰∫ãÂä°ÊàñÂ∑•‰ΩúÂçïÂÖÉÊâßË°åÂÆåÊØï‰πãÂâçÔºåÂÖ∂ÊâÄËÆøÈóÆÁöÑÊï∞ÊçÆ‰∏çËÉΩÂèóÁ≥ªÁªüÂÖ∂‰ªñÈÉ®ÂàÜÁöÑÂΩ±Âìç„ÄÇ 4.ÊåÅ‰πÖÊÄßÔºàDurabilityÔºâ ‚Äã ÊåÅ‰πÖÊÄßË°®Á§∫Âú®Êüê‰∏™‰∫ãÂä°ÁöÑÊâßË°åËøáÁ®ã‰∏≠ÔºåÂØπÊï∞ÊçÆÊâÄ‰ΩúÁöÑÊâÄÊúâÊîπÂä®ÈÉΩÂøÖÈ°ªÂú®‰∫ãÂä°ÊàêÂäüÁªìÊùüÂâç‰øùÂ≠òËá≥ÊüêÁßçÁâ©ÁêÜÂ≠òÂÇ®ËÆæÂ§á„ÄÇËøôÊ†∑ÂèØ‰ª•‰øùËØÅÔºåÊâÄ‰ΩúÁöÑ‰øÆÊîπÂú®‰ªª‰ΩïÁ≥ªÁªüÁò´Áó™Êó∂‰∏çËá≥‰∫é‰∏¢Â§±„ÄÇ ‰∏≠ÂøÉÂåñÂíåÂéª‰∏≠ÂøÉÂåñÊï∞ÊçÆÂ∫ìÂ§á‰ªΩ‰∏ÄËà¨‰ΩøÁî®ÂÜ∑Â§áÊàñËÄÖÁÉ≠Â§á ÁÉ≠Â§áÔºö‰∏ÄËà¨Áî®‰∫é‰øùËØÅÊúçÂä°Ê≠£Â∏∏‰∏çÈó¥Êñ≠ËøêË°åÔºåÁî®‰∏§Âè∞Êú∫Âô®‰Ωú‰∏∫ÊúçÂä°Êú∫Âô®Ôºå‰∏ÄÂè∞Áî®‰∫éÂÆûÈôÖÊï∞ÊçÆÂ∫ìÊìç‰ΩúÂ∫îÁî®,Âè¶Â§ñ‰∏ÄÂè∞ÂÆûÊó∂ÁöÑ‰ªéÂâçËÄÖ‰∏≠Ëé∑ÂèñÊï∞ÊçÆ‰ª•‰øùÊåÅÊï∞ÊçÆ‰∏ÄËá¥.Â¶ÇÊûúÂΩìÂâçÁöÑÊú∫Âô®ÁÜÑÁÅ´,Â§á‰ªΩÁöÑÊú∫Âô®Á´ãÈ©¨Âèñ‰ª£ÂΩìÂâçÁöÑÊú∫Âô®ÁªßÁª≠Êèê‰æõÊúçÂä° ÂÜ∑Â§áÔºö.ÂÜ∑Â§á‰ªΩÊåáÂú®Êï∞ÊçÆÂ∫ìÂÖ≥Èó≠Âêé,ËøõË°åÂ§á‰ªΩ,ÈÄÇÁî®‰∫éÊâÄÊúâÊ®°ÂºèÁöÑÊï∞ÊçÆÂ∫ì ÂàÜÂ∏ÉÂºèÊû∂ÊûÑÈáåÈù¢ÔºåÂæàÂ§öÁöÑÊû∂ÊûÑÊÄùÊÉ≥ÈááÁî®ÁöÑÊòØÂéª‰∏≠ÂøÉÂåñ„ÄÇÂç≥Âú®‰∏Ä‰∏™ÂàÜÂ∏ÉÊúâ‰ºóÂ§öËäÇÁÇπÁöÑÁ≥ªÁªü‰∏≠ÔºåÊØè‰∏™ËäÇÁÇπÈÉΩÂÖ∑ÊúâÈ´òÂ∫¶Ëá™Ê≤ªÁöÑÁâπÂæÅ„ÄÇËäÇÁÇπ‰πãÈó¥ÂΩºÊ≠§ÂèØ‰ª•Ëá™Áî±ËøûÊé•ÔºåÂΩ¢ÊàêÊñ∞ÁöÑËøûÊé•ÂçïÂÖÉ„ÄÇ‰ªª‰Ωï‰∏Ä‰∏™ËäÇÁÇπÈÉΩÂèØËÉΩÊàê‰∏∫Èò∂ÊÆµÊÄßÁöÑ‰∏≠ÂøÉÔºå‰ΩÜ‰∏çÂÖ∑Â§áÂº∫Âà∂ÊÄßÁöÑ‰∏≠ÂøÉÊéßÂà∂ÂäüËÉΩ„ÄÇËäÇÁÇπ‰∏éËäÇÁÇπ‰πãÈó¥ÁöÑÂΩ±ÂìçÔºå‰ºöÈÄöËøáÁΩëÁªúËÄåÂΩ¢ÊàêÈùûÁ∫øÊÄßÂõ†ÊûúÂÖ≥Á≥ª„ÄÇËøôÁßçÂºÄÊîæÂºè„ÄÅÊâÅÂπ≥Âåñ„ÄÅÂπ≥Á≠âÊÄßÁöÑÁ≥ªÁªüÁé∞Ë±°ÊàñÁªìÊûÑÔºåÊàë‰ª¨Áß∞‰πã‰∏∫Âéª‰∏≠ÂøÉÂåñ ÊúÄÂÖ∏ÂûãÁöÑÊòØÔºö zookeeper / etcd ÁªèÂÖ∏ÁöÑCAPC‰∏ÄËá¥ÊÄß ÔºàConsistencyÔºâ: ÊâÄÊúâËäÇÁÇπ‰∏äÁöÑÊï∞ÊçÆÔºåÊó∂Âàª‰øùÊåÅ‰∏ÄËá¥ AÂèØÁî®ÊÄßÔºàAvailabilityÔºâÔºöÊØè‰∏™ËØ∑Ê±ÇÈÉΩËÉΩÂ§üÊî∂Âà∞‰∏Ä‰∏™ÂìçÂ∫îÔºåÊó†ËÆ∫ÂìçÂ∫îÊàêÂäüÊàñËÄÖÂ§±Ë¥• PÂàÜÂå∫ÂÆπÈîô ÔºàPartition-toleranceÔºâÔºöË°®Á§∫Á≥ªÁªüÂá∫Áé∞ËÑëË£Ç‰ª•ÂêéÔºåÂèØËÉΩÂØºËá¥Êüê‰∫õserver‰∏éÈõÜÁæ§‰∏≠ÁöÑÂÖ∂‰ªñÊú∫Âô®Â§±ÂéªËÅîÁ≥ª Êó†ËÆ∫Â¶Ç‰ΩïÔºåÈÉΩÂè™ËÉΩ‰øùËØÅCPÊàñËÄÖ AP„ÄÇCAPÁêÜËÆ∫‰ªÖÈÄÇÁî®‰∫éÂéüÂ≠êËØªÂÜôÁöÑNosqlÂú∫ÊôØÔºå‰∏çÈÄÇÁî®‰∫éÊï∞ÊçÆÂ∫ìÁ≥ªÁªü BASEÁêÜËÆ∫Âü∫‰∫éCAPÁêÜËÆ∫ÔºåCAPÁêÜËÆ∫Âπ∂‰∏çÈÄÇÁî®‰∫éÊï∞ÊçÆÂ∫ì‰∫ãÂä°ÔºàÂõ†‰∏∫Êõ¥Êñ∞‰∏Ä‰∫õÈîôËØØÁöÑÊï∞ÊçÆËÄåÂØºËá¥Êï∞ÊçÆÂá∫Áé∞Á¥ä‰π±ÔºåÊó†ËÆ∫‰ªÄ‰πàÊ†∑ÁöÑÊï∞ÊçÆÂ∫ìÈ´òÂèØÁî®ÊñπÊ°àÈÉΩÊòØÂæíÂä≥Ôºâ ÔºåËôΩÁÑ∂XA‰∫ãÂä°ÂèØ‰ª•‰øùËØÅÊï∞ÊçÆÂ∫ìÂú®ÂàÜÂ∏ÉÂºèÁ≥ªÁªü‰∏ãÁöÑACIDÁâπÊÄßÔºå‰ΩÜÊòØ‰ºöÂ∏¶Êù•ÊÄßËÉΩÊñπÈù¢ÁöÑÂΩ±ÂìçÔºõ eBayÂ∞ùËØï‰∫Ü‰∏ÄÁßçÂÆåÂÖ®‰∏çÂêåÁöÑÂ•óË∑ØÔºåÊîæÂÆΩ‰∫ÜÂØπ‰∫ãÂä°ACIDÁöÑË¶ÅÊ±Ç„ÄÇÊèêÂá∫‰∫ÜBASEÁêÜËÆ∫Ôºö Basically available Ôºö Êï∞ÊçÆÂ∫ìÈááÁî®ÂàÜÁâáÊ®°ÂºèÔºå Êää100WÁöÑÁî®Êà∑Êï∞ÊçÆÂàÜÂ∏ÉÂú®5‰∏™ÂÆû‰æã‰∏ä„ÄÇÂ¶ÇÊûúÁ†¥Âùè‰∫ÜÂÖ∂‰∏≠‰∏Ä‰∏™ÂÆû‰æãÔºå‰ªçÁÑ∂ÂèØ‰ª•‰øùËØÅ 80%ÁöÑÁî®Êà∑ÂèØÁî® soft-stateÔºö Âú®Âü∫‰∫éclient-serverÊ®°ÂºèÁöÑÁ≥ªÁªü‰∏≠ÔºåserverÁ´ØÊòØÂê¶ÊúâÁä∂ÊÄÅÔºåÂÜ≥ÂÆö‰∫ÜÁ≥ªÁªüÊòØÂê¶ÂÖ∑Â§áËâØÂ•ΩÁöÑÊ∞¥Âπ≥Êâ©Â±ï„ÄÅË¥üËΩΩÂùáË°°„ÄÅÊïÖÈöúÊÅ¢Â§çÁ≠âÁâπÊÄß„ÄÇ ServerÁ´ØÊâøËØ∫‰ºöÁª¥Êä§clientÁ´ØÁä∂ÊÄÅÊï∞ÊçÆÔºåËøô‰∏™Áä∂ÊÄÅ‰ªÖ‰ªÖÁª¥ÊåÅ‰∏ÄÂ∞èÊÆµÊó∂Èó¥, ËøôÊÆµÊó∂Èó¥‰ª•ÂêéÔºåserverÁ´ØÂ∞±‰ºö‰∏¢ÂºÉËøô‰∏™Áä∂ÊÄÅÔºåÊÅ¢Â§çÊ≠£Â∏∏Áä∂ÊÄÅ Eventually consistentÔºöÊï∞ÊçÆÁöÑÊúÄÁªà‰∏ÄËá¥ÊÄß ÊòØ ZookeeperÔºàÊ≠£ÁâáÔºâzookeeperÊòØ‰∏Ä‰∏™ÂºÄÊ∫êÁöÑÂàÜÂ∏ÉÂºèÊï∞ÊçÆÂ≠òÂÇ®Á≥ªÁªüÔºåÊèê‰æõÂàÜÂ∏ÉÂºèÊï∞ÊçÆ‰∏ÄËá¥ÊÄßÁöÑËß£ÂÜ≥ÊñπÊ°à„ÄÇÊòØÁî±ÈõÖËôéÂàõÂª∫ÁöÑÔºåÂü∫‰∫égoogle chubby„ÄÇ zookeeperÊòØ‰ªÄ‰πàÂàÜÂ∏ÉÂºèÊï∞ÊçÆ‰∏ÄËá¥ÊÄßÁöÑËß£ÂÜ≥ÊñπÊ°à zookeeperËÉΩÂÅö‰ªÄ‰πàÊï∞ÊçÆÁöÑÂèëÂ∏É/ËÆ¢ÈòÖÔºàÈÖçÁΩÆ‰∏≠ÂøÉ:disconfÔºâ „ÄÅ Ë¥üËΩΩÂùáË°°ÔºàdubboÂà©Áî®‰∫ÜzookeeperÊú∫Âà∂ÂÆûÁé∞Ë¥üËΩΩÂùáË°°Ôºâ „ÄÅÂëΩÂêçÊúçÂä°„ÄÅ masterÈÄâ‰∏æ(kafka„ÄÅhadoop„ÄÅhbase)„ÄÅÂàÜÂ∏ÉÂºèÈòüÂàó„ÄÅÂàÜÂ∏ÉÂºèÈîÅ zookeeperÁâπÊÄßÈ°∫Â∫è‰∏ÄËá¥ÊÄß‰ªéÂêå‰∏Ä‰∏™ÂÆ¢Êà∑Á´ØÂèëËµ∑ÁöÑ‰∫ãÂä°ËØ∑Ê±ÇÔºåÊúÄÁªà‰ºö‰∏•Ê†ºÊåâÁÖßÈ°∫Â∫èË¢´Â∫îÁî®Âà∞zookeeper‰∏≠ ÂéüÂ≠êÊÄßÊâÄÊúâÁöÑ‰∫ãÂä°ËØ∑Ê±ÇÁöÑÂ§ÑÁêÜÁªìÊûúÂú®Êï¥‰∏™ÈõÜÁæ§‰∏≠ÁöÑÊâÄÊúâÊú∫Âô®‰∏äÁöÑÂ∫îÁî®ÊÉÖÂÜµÊòØ‰∏ÄËá¥ÁöÑÔºå‰πüÂ∞±ÊòØËØ¥ÔºåË¶Å‰πàÊï¥‰∏™ÈõÜÁæ§‰∏≠ÁöÑÊâÄÊúâÊú∫Âô®ÈÉΩÊàêÂäüÂ∫îÁî®‰∫ÜÊüê‰∏Ä‰∫ãÂä°„ÄÅË¶Å‰πàÂÖ®ÈÉΩ‰∏çÂ∫îÁî® ÂèØÈù†ÊÄß‰∏ÄÊó¶ÊúçÂä°Âô®ÊàêÂäüÂ∫îÁî®‰∫ÜÊüê‰∏Ä‰∏™‰∫ãÂä°Êï∞ÊçÆÔºåÂπ∂‰∏îÂØπÂÆ¢Êà∑Á´ØÂÅö‰∫ÜÂìçÂ∫îÔºåÈÇ£‰πàËøô‰∏™Êï∞ÊçÆÂú®Êï¥‰∏™ÈõÜÁæ§‰∏≠‰∏ÄÂÆöÊòØÂêåÊ≠•Âπ∂‰∏î‰øùÁïô‰∏ãÊù•ÁöÑ ÂÆûÊó∂ÊÄß‰∏ÄÊó¶‰∏Ä‰∏™‰∫ãÂä°Ë¢´ÊàêÂäüÂ∫îÁî®ÔºåÂÆ¢Êà∑Á´ØÂ∞±ËÉΩÂ§üÁ´ãÂç≥‰ªéÊúçÂä°Âô®Á´ØËØªÂèñÂà∞‰∫ãÂä°ÂèòÊõ¥ÂêéÁöÑÊúÄÊñ∞Êï∞ÊçÆÁä∂ÊÄÅÔºõÔºàzookeeper‰ªÖ‰ªÖ‰øùËØÅÂú®‰∏ÄÂÆöÊó∂Èó¥ÂÜÖÔºåËøëÂÆûÊó∂Ôºâ zookeeperÈõÜÁæ§ÁéØÂ¢ÉzookeeperÈõÜÁæ§, ÂåÖÂê´‰∏âÁßçËßíËâ≤: leader / follower /observer observer observer ÊòØ‰∏ÄÁßçÁâπÊÆäÁöÑzookeeperËäÇÁÇπ„ÄÇÂèØ‰ª•Â∏ÆÂä©Ëß£ÂÜ≥zookeeperÁöÑÊâ©Â±ïÊÄßÔºàÂ¶ÇÊûúÂ§ßÈáèÂÆ¢Êà∑Á´ØËÆøÈóÆÊàë‰ª¨zookeeperÈõÜÁæ§ÔºåÈúÄË¶ÅÂ¢ûÂä†zookeeperÈõÜÁæ§Êú∫Âô®Êï∞Èáè„ÄÇ‰ªéËÄåÂ¢ûÂä†zookeeperÈõÜÁæ§ÁöÑÊÄßËÉΩ„ÄÇ ÂØºËá¥zookeeperÂÜôÊÄßËÉΩ‰∏ãÈôçÔºå zookeeperÁöÑÊï∞ÊçÆÂèòÊõ¥ÈúÄË¶ÅÂçäÊï∞‰ª•‰∏äÊúçÂä°Âô®ÊäïÁ•®ÈÄöËøá„ÄÇÈÄ†ÊàêÁΩëÁªúÊ∂àËÄóÂ¢ûÂä†ÊäïÁ•®ÊàêÊú¨Ôºâ observer‰∏çÂèÇ‰∏éÊäïÁ•®„ÄÇ Âè™Êé•Êî∂ÊäïÁ•®ÁªìÊûú„ÄÇ‰∏çÂíåfollowerËÅîÁ≥ª„ÄÇ ‰∏çÂ±û‰∫ézookeeperÁöÑÂÖ≥ÈîÆÈÉ®‰Ωç„ÄÇ ÂÆâË£ÖzookeeperÂèØ‰ª•ËôöÊãüÊú∫‰∏≠Êìç‰ΩúÔºåÁ≥ªÁªücentos7ÔºåzookeeperÂéªÂÆòÊñπÁΩë‰∏ãÁ®≥ÂÆöÁâà„ÄÇÂÆâË£ÖÂêéÔºö Á¨¨‰∏ÄÊ≠•Ôºö ‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂zoo.cfgserver.id=host:port:port idÁöÑÂèñÂÄºËåÉÂõ¥Ôºö 1~255Ôºõ Áî®idÊù•Ê†áËØÜËØ•Êú∫Âô®Âú®ÈõÜÁæ§‰∏≠ÁöÑÊú∫Âô®Â∫èÂè∑Ôºõ 2888ÊòØË°®Á§∫followerËäÇÁÇπ‰∏éleaderËäÇÁÇπ‰∫§Êç¢‰ø°ÊÅØÁöÑÁ´ØÂè£Âè∑ÔºåË¶ÅÂÆö‰πâÊàêÂíåÁ≥ªÁªüÊ≤°ÊúâÂÜ≤Á™ÅÁöÑÁ´ØÂè£Âè∑Ôºõ 3181 Ë°®Á§∫leaderÈÄâ‰∏æÁöÑÁ´ØÂè£ÔºåÂ¶ÇÊûúleaderËäÇÁÇπÊåÇÊéâ‰∫Ü, ÈúÄË¶Å‰∏Ä‰∏™Á´ØÂè£Êù•ÈáçÊñ∞ÈÄâ‰∏æ Ê†óÂ≠êÔºö server.1=192.168.11.129:2888:3181 server.2=192.168.11.131:2888:3181 server.3=192.168.11.135:2888:3181 Â¶ÇÊûúÈúÄË¶ÅÂ¢ûÂä†observerËäÇÁÇπÔºåzoo.cfg‰∏≠ÔºåÂ¢ûÂä† ;peerType=observer server.1=192.168.11.129:2888:3181 server.2=192.168.11.135:2888:3181 server.3=192.168.111.136:2888:3181:observer Á¨¨‰∫åÊ≠•ÔºöÂàõÂª∫myidÂú®ÊØè‰∏Ä‰∏™ÊúçÂä°Âô®ÁöÑdataDirÁõÆÂΩï‰∏ãÂàõÂª∫‰∏Ä‰∏™myidÁöÑÊñá‰ª∂ÔºåÊñá‰ª∂Â∞±‰∏ÄË°åÊï∞ÊçÆÔºåÊï∞ÊçÆÂÜÖÂÆπÊòØÊØèÂè∞Êú∫Âô®ÂØπÂ∫îÁöÑserver IDÁöÑÊï∞Â≠ó Á¨¨‰∏âÊ≠•ÔºöÂêØÂä®zookeeper ÂÖ≥ÊéâÈò≤ÁÅ´Â¢ô ÁúãÂà∞ÁîüÊàêzeekeeper.outËøôÊ†∑ÁöÑ‰∏Ä‰∏™Êó•ÂøóÔºåÂèØ‰ª•‰ΩøÁî®tailÂëΩ‰ª§Êü•Áúã Zookeeper‰∏≠ÁöÑ‰∏Ä‰∫õÊ¶ÇÂøµZookeeperÈÖçÁΩÆËß£Êûê tickTime=2000 zookeeper‰∏≠ÊúÄÂ∞èÁöÑÊó∂Èó¥Âçï‰ΩçÈïøÂ∫¶ ÔºàmsÔºâ initLimit=10 followerËäÇÁÇπÂêØÂä®Âêé‰∏éleaderËäÇÁÇπÂÆåÊàêÊï∞ÊçÆÂêåÊ≠•ÁöÑÊó∂Èó¥ syncLimit=5 leaderËäÇÁÇπÂíåfollowerËäÇÁÇπËøõË°åÂøÉË∑≥Ê£ÄÊµãÁöÑÊúÄÂ§ßÂª∂Êó∂Êó∂Èó¥ dataDir=/tmp/zookeeper Ë°®Á§∫zookeeperÊúçÂä°Âô®Â≠òÂÇ®Âø´ÁÖßÊñá‰ª∂ÁöÑÁõÆÂΩï dataLogDir Ë°®Á§∫ÈÖçÁΩÆ zookeeper‰∫ãÂä°Êó•ÂøóÁöÑÂ≠òÂÇ®Ë∑ØÂæÑÔºåÈªòËÆ§ÊåáÂÆöÂú®dataDirÁõÆÂΩï‰∏ã clientPort Ë°®Á§∫ÂÆ¢Êà∑Á´ØÂíåÊúçÂä°Á´ØÂª∫Á´ãËøûÊé•ÁöÑÁ´ØÂè£Âè∑Ôºö 2181 Êï∞ÊçÆÊ®°ÂûãzookeeperÁöÑÊï∞ÊçÆÊ®°ÂûãÂíåÊñá‰ª∂Á≥ªÁªüÁ±ª‰ººÔºåÊØè‰∏Ä‰∏™ËäÇÁÇπÁß∞‰∏∫Ôºöznode. ÊòØzookeeper‰∏≠ÁöÑÊúÄÂ∞èÊï∞ÊçÆÂçïÂÖÉ„ÄÇÊØè‰∏Ä‰∏™znode‰∏äÈÉΩÂèØ‰ª•‰øùÂ≠òÊï∞ÊçÆÂíåÊåÇËΩΩÂ≠êËäÇÁÇπ„ÄÇ ‰ªéËÄåÊûÑÊàê‰∏Ä‰∏™Â±ÇÊ¨°ÂåñÁöÑÂ±ûÊÄßÁªìÊûÑ ËäÇÁÇπÁâπÊÄßÊåÅ‰πÖÂåñËäÇÁÇπ Ôºö ËäÇÁÇπÂàõÂª∫Âêé‰ºö‰∏ÄÁõ¥Â≠òÂú®zookeeperÊúçÂä°Âô®‰∏äÔºåÁõ¥Âà∞‰∏ªÂä®Âà†Èô§ ÊåÅ‰πÖÂåñÊúâÂ∫èËäÇÁÇπ ÔºöÊØè‰∏™ËäÇÁÇπÈÉΩ‰ºö‰∏∫ÂÆÉÁöÑ‰∏ÄÁ∫ßÂ≠êËäÇÁÇπÁª¥Êä§‰∏Ä‰∏™È°∫Â∫è ‰∏¥Êó∂ËäÇÁÇπ Ôºö ‰∏¥Êó∂ËäÇÁÇπÁöÑÁîüÂëΩÂë®ÊúüÂíåÂÆ¢Êà∑Á´ØÁöÑ‰ºöËØù‰øùÊåÅ‰∏ÄËá¥„ÄÇÂΩìÂÆ¢Êà∑Á´Ø‰ºöËØùÂ§±ÊïàÔºåËØ•ËäÇÁÇπËá™Âä®Ê∏ÖÁêÜ ‰∏¥Êó∂ÊúâÂ∫èËäÇÁÇπ Ôºö Âú®‰∏¥Êó∂ËäÇÁÇπ‰∏äÂ§öÂãí‰∏Ä‰∏™È°∫Â∫èÊÄßÁâπÊÄß ‰ºöËØùÂÆ¢Êà∑Á´ØÂíåzookeeper‰ºöÂª∫Á´ã‰∏Ä‰∏™ËøûÊé•ÔºåËøôÂ∞±ÊòØ‰∏Ä‰∏™‰ºöËØù„ÄÇ ‰ºöËØùÊúâ‰ªÄ‰πàËøáÁ®ãÂë¢Ôºü WatcherÔºàÁõëÂê¨ÔºâzookeeperÊèê‰æõ‰∫ÜÂàÜÂ∏ÉÂºèÊï∞ÊçÆÂèëÂ∏É/ËÆ¢ÈòÖ,zookeeperÂÖÅËÆ∏ÂÆ¢Êà∑Á´ØÂêëÊúçÂä°Âô®Ê≥®ÂÜå‰∏Ä‰∏™watcherÁõëÂê¨„ÄÇÂΩìÊúçÂä°Âô®Á´ØÁöÑËäÇÁÇπËß¶ÂèëÊåáÂÆö‰∫ã‰ª∂ÁöÑÊó∂ÂÄôÔºå‰ºöËß¶Âèëwatcher„ÄÇÊúçÂä°Á´Ø‰ºöÂêëÂÆ¢Êà∑Á´ØÂèëÈÄÅ‰∏Ä‰∏™‰∫ã‰ª∂ÈÄöÁü• watcherÁöÑÈÄöÁü•ÊòØ‰∏ÄÊ¨°ÊÄßÔºå‰∏ÄÊó¶Ëß¶Âèë‰∏ÄÊ¨°ÈÄöÁü•ÂêéÔºåËØ•watcherÂ∞±Â§±Êïà ACLzookeeperÊèê‰æõÊéßÂà∂ËäÇÁÇπËÆøÈóÆÊùÉÈôêÁöÑÂäüËÉΩÔºåÁî®‰∫éÊúâÊïàÁöÑ‰øùËØÅzookeeper‰∏≠Êï∞ÊçÆÁöÑÂÆâÂÖ®ÊÄß„ÄÇÈÅøÂÖçËØØÊìç‰ΩúËÄåÂØºËá¥Á≥ªÁªüÂá∫Áé∞ÈáçÂ§ß‰∫ãÊïÖ„ÄÇ Êèê‰æõ‰∫ÜÔºöCREATE /READ/WRITE/DELETE/ADMIN ZookeeperÂëΩ‰ª§Êìç‰Ωú(Â¢ûÂà†ÊîπÊü•) create [-s] -e path data acl -s Ë°®Á§∫ËäÇÁÇπÊòØÂê¶ÊúâÂ∫è -e Ë°®Á§∫ÊòØÂê¶‰∏∫‰∏¥Êó∂ËäÇÁÇπ (ÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºåÊòØÊåÅ‰πÖÂåñËäÇÁÇπ) 123create /zoo #ÂàõÂª∫zooËäÇÁÇπcreate /zoo /zoo-1 #ÂàõÂª∫zooËäÇÁÇπ‰∏ãÁöÑzoo-1ls /nodes #ÊòæÁ§∫ËäÇÁÇπ get path [watch] Ëé∑ÂæóÊåáÂÆö pathÁöÑ‰ø°ÊÅØ ‚Äã 3.set path data [version] ‰øÆÊîπËäÇÁÇπ pathÂØπÂ∫îÁöÑdata versionË°®Á§∫‰πêËßÇÈîÅÔºåÂèäÊï∞ÊçÆÂ∫ì‰∏≠Êúâ‰∏Ä‰∏™versionÂ≠óÊÆµÂéªÊéßÂà∂Êï∞ÊçÆË°åÁöÑÁâàÊú¨Âè∑ ‰πêËßÇÈîÅÔºà Optimistic Locking Ôºâ Áõ∏ÂØπÊÇ≤ËßÇÈîÅËÄåË®ÄÔºå‰πêËßÇÈîÅÊú∫Âà∂ÈááÂèñ‰∫ÜÊõ¥Âä†ÂÆΩÊùæÁöÑÂä†ÈîÅÊú∫Âà∂„ÄÇÊÇ≤ËßÇÈîÅÂ§ßÂ§öÊï∞ÊÉÖÂÜµ‰∏ã‰æùÈù†Êï∞ÊçÆÂ∫ìÁöÑÈîÅÊú∫Âà∂ÂÆûÁé∞Ôºå‰ª•‰øùËØÅÊìç‰ΩúÊúÄÂ§ßÁ®ãÂ∫¶ÁöÑÁã¨Âç†ÊÄß„ÄÇ‰ΩÜÈöè‰πãËÄåÊù•ÁöÑÂ∞±ÊòØÊï∞ÊçÆÂ∫ìÊÄßËÉΩÁöÑÂ§ßÈáèÂºÄÈîÄÔºåÁâπÂà´ÊòØÂØπÈïø‰∫ãÂä°ËÄåË®ÄÔºåËøôÊ†∑ÁöÑÂºÄÈîÄÂæÄÂæÄÊó†Ê≥ïÊâøÂèó„ÄÇËÄå‰πêËßÇÈîÅÊú∫Âà∂Âú®‰∏ÄÂÆöÁ®ãÂ∫¶‰∏äËß£ÂÜ≥‰∫ÜËøô‰∏™ÈóÆÈ¢ò„ÄÇ‰πêËßÇÈîÅÔºåÂ§ßÂ§öÊòØÂü∫‰∫éÊï∞ÊçÆÁâàÊú¨Ôºà Version ÔºâËÆ∞ÂΩïÊú∫Âà∂ÂÆûÁé∞„ÄÇ‰ΩïË∞ìÊï∞ÊçÆÁâàÊú¨ÔºüÂç≥‰∏∫Êï∞ÊçÆÂ¢ûÂä†‰∏Ä‰∏™ÁâàÊú¨Ê†áËØÜÔºåÂú®Âü∫‰∫éÊï∞ÊçÆÂ∫ìË°®ÁöÑÁâàÊú¨Ëß£ÂÜ≥ÊñπÊ°à‰∏≠Ôºå‰∏ÄËà¨ÊòØÈÄöËøá‰∏∫Êï∞ÊçÆÂ∫ìË°®Â¢ûÂä†‰∏Ä‰∏™ ‚Äúversion‚Äù Â≠óÊÆµÊù•ÂÆûÁé∞„ÄÇËØªÂèñÂá∫Êï∞ÊçÆÊó∂ÔºåÂ∞ÜÊ≠§ÁâàÊú¨Âè∑‰∏ÄÂêåËØªÂá∫Ôºå‰πãÂêéÊõ¥Êñ∞Êó∂ÔºåÂØπÊ≠§ÁâàÊú¨Âè∑Âä†‰∏Ä„ÄÇÊ≠§Êó∂ÔºåÂ∞ÜÊèê‰∫§Êï∞ÊçÆÁöÑÁâàÊú¨Êï∞ÊçÆ‰∏éÊï∞ÊçÆÂ∫ìË°®ÂØπÂ∫îËÆ∞ÂΩïÁöÑÂΩìÂâçÁâàÊú¨‰ø°ÊÅØËøõË°åÊØîÂØπÔºåÂ¶ÇÊûúÊèê‰∫§ÁöÑÊï∞ÊçÆÁâàÊú¨Âè∑Â§ß‰∫éÊï∞ÊçÆÂ∫ìË°®ÂΩìÂâçÁâàÊú¨Âè∑ÔºåÂàô‰∫à‰ª•Êõ¥Êñ∞ÔºåÂê¶ÂàôËÆ§‰∏∫ÊòØËøáÊúüÊï∞ÊçÆ„ÄÇ ‚Äã 4.delete path [version] Âà†Èô§ËäÇÁÇπ ËäÇÁÇπÁä∂ÊÄÅstat‰ø°ÊÅØcversion = 0 Â≠êÔºàchildÔºâËäÇÁÇπÁöÑÁâàÊú¨Âè∑ aclVersion = 0 Ë°®Á§∫aclÁöÑÁâàÊú¨Âè∑Ôºå‰øÆÊîπËäÇÁÇπÊùÉÈôê dataVersion = 1 Ë°®Á§∫ÁöÑÊòØÂΩìÂâçËäÇÁÇπÊï∞ÊçÆÁöÑÁâàÊú¨Âè∑ czxid ËäÇÁÇπË¢´ÂàõÂª∫Êó∂ÁöÑ‰∫ãÂä°ID mzxid ËäÇÁÇπÊúÄÂêé‰∏ÄÊ¨°Ë¢´Êõ¥Êñ∞ÁöÑ‰∫ãÂä°ID pzxid ÂΩìÂâçËäÇÁÇπ‰∏ãÁöÑÂ≠êËäÇÁÇπÊúÄÂêé‰∏ÄÊ¨°Ë¢´‰øÆÊîπÊó∂ÁöÑ‰∫ãÂä°ID ctime = ÂàõÂª∫Êó∂Èó¥ mtime = ‰øÆÊîπÊó∂Èó¥ ephemeralOwner = 0x0 ÂàõÂª∫‰∏¥Êó∂ËäÇÁÇπÁöÑÊó∂ÂÄôÔºå‰ºöÊúâ‰∏Ä‰∏™sessionId „ÄÇ ËØ•ÂÄºÂ≠òÂÇ®ÁöÑÂ∞±ÊòØËøô‰∏™sessionid „ÄÇ0X0‰ª£Ë°®Êó† dataLength = 3 Êï∞ÊçÆÂÄºÈïøÂ∫¶ numChildren = 0 Â≠êËäÇÁÇπÊï∞ Âú®Java‰∏≠‰ΩøÁî®zookeeperÂºïÂÖ•‰æùËµñ 12345 &lt;dependency&gt; &lt;groupId&gt;org.apache.zookeeper&lt;/groupId&gt; &lt;artifactId&gt;zookeeper&lt;/artifactId&gt; &lt;version&gt;3.4.9&lt;/version&gt;&lt;/dependency&gt; Âõ∞‰∫ÜÔºåÁù°Ëßâ„ÄÇÊòéÂ§©ÂÜçÁ†ÅÂ≠ó„ÄÇÊú™ÂÆåÂæÖÁª≠„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ ÂèÇËÄÉ ËÅäËÅäÂàÜÂ∏ÉÂºè‰∫ãÂä°ÔºåÂÜçËØ¥ËØ¥Ëß£ÂÜ≥ÊñπÊ°à ÊÑüË∞¢ ÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèãÔºåÂí±‰ª¨‰∏§‰∏™ÊÉ≥‰∏™Âè∑Á†ÅÔºå ‰π∞‰∏™ÂΩ©Á•®ÔºåÂÖàÊå£‰ªñ‰∏™Âá†Áôæ‰∏áüòù]]></content>
      <tags>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ=4=-webservice]]></title>
    <url>%2F2018%2F07%2F28%2F%E6%88%91%E8%A6%81%E5%AD%A6%E5%A5%BD%E5%88%86%E5%B8%83%E5%BC%8F-webservice%2F</url>
    <content type="text"><![CDATA[‰ªäÂ§©Âí±‰ª¨‰∏ÄËµ∑Êé¢Á¥¢‰∏Ä‰∏ãwebserviceËøô‰∏™ÊäÄÊúØ„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ ‰ªÄ‰πàÊòØwebservicewebservice‰πüÂèØ‰ª•Âè´xml web service webserviceÔºàÂú®javax.jwsÔºâ, ËΩªÈáèÁ∫ßÁöÑÁã¨Á´ãÁöÑÈÄöËÆØÊäÄÊúØ Âü∫‰∫éwebÁöÑÊúçÂä°ÔºöÊúçÂä°Á´ØÊèê‰æõÁöÑÊúçÂä°Êé•Âè£ËÆ©ÂÆ¢Êà∑Á´ØËÆøÈóÆ Ë∑®Âπ≥Âè∞„ÄÅË∑®ËØ≠Ë®ÄÁöÑÊï¥ÂêàÊñπÊ°à ‰∏∫‰ªÄ‰πàË¶Å‰ΩøÁî®webserviceÁõ∏ÊØîRMIÔºåÂÆÉÊòØ‰ª•ÂâçÊØîËæÉÂ•ΩÁöÑË∑®ËØ≠Ë®ÄË∞ÉÁî®ÁöÑËß£ÂÜ≥ÊñπÊ°à Â∞±Ë≠¨Â¶ÇËØ¥Ôºå‰∏Ä‰∏™ÁîµÂïÜÂπ≥Âè∞ÔºåËÆ¢ÂçïÂèØ‰ª•Êü•ÁúãÁâ©ÊµÅÁä∂ÊÄÅ„ÄÇÔºåËøôÂèØËÉΩÂ∞±ÊòØ.netÂÆûÁé∞ÁöÑwebserviceÊúçÂä°Êé•Âè£„ÄÇ webservice‰∏≠ÁöÑ‰∏Ä‰∫õÊ¶ÇÂøµWSDL(web service definition language webservice ÂÆö‰πâËØ≠Ë®Ä)webserviceÊúçÂä°ÈúÄË¶ÅÈÄöËøáwsdlÊñá‰ª∂Êù•ËØ¥ÊòéËá™Â∑±Êúâ‰ªÄ‰πàÊúçÂä°ÂèØ‰ª•ÂØπÂ§ñË∞ÉÁî®„ÄÇÂπ∂‰∏îÊúâÂì™‰∫õÊñπÊ≥ï„ÄÅÊñπÊ≥ïÈáåÈù¢ÊúâÂì™‰∫õÂèÇÊï∞ wsdlÂü∫‰∫éXMLÔºàÂèØÊâ©Â±ïÊ†áËÆ∞ËØ≠Ë®ÄÔºâÂéªÂÆö‰πâ‰∫Ü ÂØπÂ∫î‰∏Ä‰∏™.wsdlÁöÑÊñá‰ª∂Á±ªÂûã ÂÆö‰πâ‰∫ÜwebserviceÁöÑÊúçÂä°Âô®Á´ØÂíåÂÆ¢Êà∑Á´ØÂ∫îÁî®ËøõË°å‰∫§‰∫íÁöÑ‰º†ÈÄíÊï∞ÊçÆÂíåÂìçÂ∫îÊï∞ÊçÆÊ†ºÂºèÂíåÊñπÂºè ‰∏Ä‰∏™webserviceÂØπÂ∫îÂîØ‰∏Ä‰∏Ä‰∏™wsdlÊñáÊ°£ SOAPÔºàsimple object access protocalÁÆÄÂçïÂØπË±°ËÆøÈóÆÂçèËÆÆÔºâÂ∑Æ‰∏çÂ§öÂ∞±ÊòØhttp+xmlÔºå‰ªÄ‰πàÊÑèÊÄùÂë¢ÔºüwebserviceÈÄöËøáhttpÂçèËÆÆÂèëÈÄÅÂíåÊé•Êî∂ËØ∑Ê±ÇÊó∂Ôºå ÂèëÈÄÅÁöÑÂÜÖÂÆπÔºàËØ∑Ê±ÇÊä•ÊñáÔºâÂíåÊé•Êî∂ÁöÑÂÜÖÂÆπÔºàÂìçÂ∫îÊä•ÊñáÔºâÈÉΩÊòØÈááÁî®xmlÊ†ºÂºèËøõË°åÂ∞ÅË£ÖÔºåËøô‰∫õÁâπÂÆöÁöÑHTTPÊ∂àÊÅØÂ§¥ÂíåXMLÂÜÖÂÆπÊ†ºÂºèÂ∞±ÊòØSOAPÂçèËÆÆ„ÄÇ ‰∏ÄÊù° SOAP Ê∂àÊÅØÂ∞±ÊòØ‰∏Ä‰∏™ÊôÆÈÄöÁöÑ XML ÊñáÊ°£ÔºåÂåÖÂê´‰∏ãÂàóÂÖÉÁ¥†Ôºö ‚Ä¢ Envelope ÂÖÉÁ¥†ÔºåÊ†áËØÜXML ÊñáÊ°£‰∏ÄÊù° SOAP Ê∂àÊÅØ ‚Ä¢ Header ÂÖÉÁ¥†ÔºåÂåÖÂê´Â§¥ÈÉ®‰ø°ÊÅØÁöÑXMLÊ†áÁ≠æ ‚Ä¢ Body ÂÖÉÁ¥†ÔºåÂåÖÂê´ÊâÄÊúâÁöÑË∞ÉÁî®ÂíåÂìçÂ∫îÁöÑ‰∏ª‰Ωì‰ø°ÊÅØÁöÑÊ†áÁ≠æ ‚Ä¢ Fault ÂÖÉÁ¥†ÔºåÈîôËØØ‰ø°ÊÅØÊ†áÁ≠æ„ÄÇ Êèí‰∏ÄÂè•Âò¥ÔºåÁé∞Âú®ÁöÑÂë¢ÔºåÂü∫‰∫éRESTfulÊé•Âè£ÁöÑÈÉΩÊòØhttp+json ÂõûÂà∞‰∏ªÈ¢òÔºå‰ªÄ‰πàÊòØsoapÔºü ‰∏ÄÁßçÁÆÄÂçï„ÄÅÂü∫‰∫éHTTPÂíåXMLÁöÑÂçèËÆÆ soapÊ∂àÊÅØÔºöËØ∑Ê±ÇÂíåÂìçÂ∫îÊ∂àÊÅØ http+xmlÊä•Êñá SEIÔºàwebservice endpoint interface webserviceÁöÑÁªàÁ´ØÊé•Âè£ÔºâwebserviceÊúçÂä°Á´ØÁî®Êù•Â§ÑÁêÜËØ∑Ê±ÇÁöÑÊé•Âè£Ôºå‰πüÂ∞±ÊòØÂèëÂ∏ÉÂá∫ÂéªÁöÑÊé•Âè£„ÄÇ DemoÂ¶Ç‰ΩïÂÆûÁé∞Âë¢ÔºüÂÜô‰∏Ä‰∏™Â∞èdemo È¶ñÂÖàÊòØÊúçÂä°Á´ØÁöÑÊé•Âè£ 123456@WebService//SEI‰ª•ÂèäÂÆûÁé∞Á±ªpublic interface ISayHello &#123; @WebMethod//sei‰∏≠ÁöÑÊñπÊ≥ï public String sayHello();&#125; ÂÖ∑‰ΩìÂÆûÁé∞Á±ª 123456789@WebServicepublic class SayHello implements ISayHello&#123; @Override public String sayHello() &#123; return "hello"; &#125;&#125; ÂêØÂä®Á±ª 12345678public class Bootstrap &#123; public static void main(String[] args) &#123; //ÁªàÁ´ØÂèëÂ∏É~ Endpoint.publish("http://localhost:8888/tech/hello",new SayHello()); System.out.println("ÂèëÂ∏ÉÊàêÂäü~"); &#125;&#125; Êé•ÁùÄÊàë‰ª¨ÂêØÂä®Á®ãÂ∫è„ÄÇÂà∞ÊµèËßàÂô®ËæìÂÖ•url+‚Äù?wsdl‚ÄùÂ∞±ÂèØ‰ª•Êü•ÁúãwsdlÊñáÊ°£‰∫Ü Êé•‰∏ãÊù•Âú®IDEA‰∏≠ÊâìÂºÄterminalÊàñËÄÖÁõ¥Êé•ËøõÂÖ•cmdÔºåË∞ÉÁî®wsimportÂ∑•ÂÖ∑,ËæìÂÖ•ÂëΩ‰ª§: 1wsimport -keep http://localhost:8888/tech/hello?wsdl ËøôÈáåÁÆÄ‰ªã‰∏Ä‰∏ãÂèÉÊï∞Ôºö -d Ë°®Á§∫ËæìÂá∫ÁöÑÊñá‰ª∂Â§π„ÄÇÊñá‰ª∂Â§πÂøÖÈ°ª‰∫ãÂÖàÂ≠òÂú®ÔºåÂê¶ÂàôÂØºÂá∫Â§±Ë¥•„ÄÇ -keep Ë°®Á§∫ÂØºÂá∫webserviceÁöÑclassÊñá‰ª∂Êó∂ÊòØÂê¶‰πüÂØºÂá∫Ê∫êÁ†ÅjavaÊñá‰ª∂„ÄÇ -verbose verboseË°®Á§∫ÂÖ∑‰Ωì‰ø°ÊÅØ„ÄÇ ËøôÊó∂ÂÄôÁîüÊàêÁöÑÂÆ¢Êà∑Á´Ø‰ª£Á†Å ËøÅÁßªÂà∞IDEAÊâìÂºÄÔºåÊñ∞Âª∫‰∏Ä‰∏™demo 1234567public class Demo &#123; public static void main(String[] args) &#123; SayHelloService service=new SayHelloService(); SayHello sayHello= (SayHello) service.getSayHelloPort(); System.out.println(); &#125;&#125; demoÂÆåÊàê~ÔºÅ ÂÖ≥‰∫éWSDLÊñáÊ°£‰∏ãÈù¢ËØ¥ËØ¥wsdlÊñáÊ°£ÂêÑ‰∏™Ê†áÁ≠æÁöÑÂê´‰πâ TypesÊ†áÁ≠æÂÆö‰πâÊï¥ÊúçÂä°Á´ØÁöÑÊï∞ÊçÆÊä•Êñá SchemaÊ†áÁ≠æ‰∏∫‰∫ÜÂÆûÁé∞ÊúÄÂ§ßÁöÑ‰∫íÊìç‰ΩúÊÄßÔºàinteroperabilityÔºâÂíåÂπ≥Âè∞‰∏≠Á´ãÊÄßÔºàneutralityÔºâÔºåWSDLÈÄâÁî®XML Schema DataTypesÔºåÁÆÄÁß∞XSD‰Ωú‰∏∫Ê†áÂáÜÁ±ªÂûãÁ≥ªÁªüÔºåÂπ∂Â∞ÜÂÆÉ‰Ωú‰∏∫Âõ∫ÊúâÁ±ªÂûãÁ≥ªÁªü„ÄÇ Âõæ‰∏≠ÁöÑÊòØÊï∞ÊçÆÂÆö‰πâÈÉ®ÂàÜÔºåËØ•ÈÉ®ÂàÜÂÆö‰πâ‰∫Ü‰∏§‰∏™ÂÖÉÁ¥†Ôºå‰∏Ä‰∏™ÊòØsayHelloÔºå‰∏Ä‰∏™ÊòØsayHelloResponseÔºö sayHelloÔºöÂÆö‰πâ‰∫Ü‰∏Ä‰∏™Â§çÊùÇÁ±ªÂûãÔºå‰ªÖ‰ªÖÂåÖÂê´‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÂ∞ÜÊù•Áî®Êù•ÊèèËø∞Êìç‰ΩúÁöÑÂèÇÂÖ•‰º†ÂÖ•ÈÉ®ÂàÜÔºõ sayHelloResponseÔºöÂÆö‰πâ‰∫Ü‰∏Ä‰∏™Â§çÊùÇÁ±ªÂûãÔºå‰ªÖ‰ªÖÂåÖÂê´‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÂ∞ÜÊù•Áî®Êù•ÊèèËø∞Êìç‰ΩúÁöÑËøîÂõûÂÄºÔºõ MessageÊ†áÁ≠æÂÆö‰πâÂÖÉÁ¥†Êï∞ÊçÆÁ±ªÂûã PorttypeÂÆö‰πâÊúçÂä°Âô®Á´ØÁöÑSEI input/outputÂ±ûÊÄßÔºöÊåáÂÆöËæìÂÖ•ËæìÂá∫ÁöÑÊï∞ÊçÆÁ±ªÂûã BindingÊ†áÁ≠ætypeÂ±ûÊÄßÔºöÂºïÁî®PortType serviceÊ†áÁ≠æË°®Á§∫ÊúçÂä°Âô®Á´ØÁöÑ‰∏Ä‰∏™webserviceÂÆπÂô® nameÂ±ûÊÄßÔºöÂà∂ÂÆöÂÆ¢Êà∑Á´ØÂ±ûÊÄß protÂ±ûÊÄßÔºöÊåáÂÆöÂÆ¢Êà∑Á´ØÁöÑÂÆπÂô®Á±ª addressÔºöÂ§ßÈÉ®ÂàÜÂÖ®ÈÉ®webserviceÁöÑÂú∞ÂùÄ ËøáÂéªÁöÑWebserviceÂ∑•ÂÖ∑Âèë‰∏™ÂêçÂ≠óÁïô‰ΩúÂ§á‰ªΩÔºåÂõ†‰∏∫Áé∞Âú®Êó©Â∑≤‰∏çÁî®Â§çÊùÇÁöÑwebservice‰∫Ü cxfceltix+xfire axisÂÆåÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèãÔºåÂí±‰ª¨‰∏§‰∏™ÊÉ≥‰∏™Âè∑Á†ÅÔºå ‰π∞‰∏™ÂΩ©Á•®ÔºåÂÖàÊå£‰ªñ‰∏™Âá†Áôæ‰∏áüòù]]></content>
      <tags>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ=6=-RMIÈÄö‰ø°Ê°ÜÊû∂]]></title>
    <url>%2F2018%2F07%2F26%2FRMI%E9%80%9A%E4%BF%A1%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[ÂàÜÂ∏ÉÂºèÊ°ÜÊû∂ÊòØÊúÄËøëÂá†Âπ¥ÁöÑÁÉ≠Èó®„ÄÇÂèØÊòØË¶ÅÊÉ≥ÁêÜËß£ÂàÜÂ∏ÉÂºèÊ°ÜÊû∂ÁùÄÂÆû‰∏çÊòìÔºå‰∏∫‰∫ÜÂä™ÂäõË∑ü‰∏äÊó∂‰ª£ÊΩÆÊµÅÔºåÁâπÊ≠§ÂºÄ‰∫Ü‰∏Ä‰∏™‰∏ìÈ¢òÔºåËµ∑Âêç‚ÄúÊàëË¶ÅÂ≠¶Â•ΩÂàÜÂ∏ÉÂºè‚ÄùÔºåÈÄöËøáÂçöÂÆ¢Êù•ÂàÜ‰∫´‰∏Ä‰∏ãÊàëÁöÑÂ≠¶‰π†ËøáÁ®ãÔºåÂä†Ê∑±ÊàëÂØπÂàÜÂ∏ÉÂºèÊï¥‰ΩìÊ°ÜÊû∂ÁöÑÁêÜËß£„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ ‰ªÄ‰πàÊòØRPCËã±ÊñáÂ∞±‰∏çËØ¥‰∫Ü„ÄÇ‰∏≠ÊñáÂêçËøúÁ®ãËøõÁ®ãË∞ÉÁî®ÂçèËÆÆ„ÄÇÈ°æÂêçÊÄù‰πâÔºåÂÆ¢Êà∑Á´ØÂú®‰∏çÁü•ÈÅìÁªÜËäÇÁöÑÊÉÖÂÜµ‰∏ãÔºåÂèØ‰ª•Ë∞ÉÁî®ËøúÁ®ãËÆ°ÁÆóÊú∫ÁöÑapiÔºåÂ∞±ÂÉèÊòØË∞ÉÁî®Êú¨Âú∞ÊñπÊ≥ï‰∏ÄÊ†∑„ÄÇ RPCÂçèËÆÆÊòØ‰∏Ä‰∏™ËßÑËåÉ„ÄÇ‰∏ªÊµÅÁöÑPRCÂçèËÆÆÊúâDubbo„ÄÅThrif„ÄÅRMI„ÄÅWebservice„ÄÅHessain ‰ªñÂèà‰∏Ä‰∏™ÈùûÂ∏∏Â§ßÁöÑÁâπÁÇπÔºåÁΩëÁªúÂçèËÆÆÂíåÁΩëÁªúIOÂØπ‰∫éË∞ÉÁî®Á´ØÂíåÊúçÂä°Á´ØÊù•ËØ¥ÊòØÈÄèÊòéÁöÑÔºàÂä®ÊÄÅ‰ª£ÁêÜÔºâ ‰∏Ä‰∏™RPCÊ°ÜÊû∂ÂåÖÂê´ÁöÑË¶ÅÁ¥†Ôºö RMIRMI(remote method invocation) , ÂèØ‰ª•ËÆ§‰∏∫ÊòØRPCÁöÑjavaÁâàÊú¨ RMI‰ΩøÁî®ÁöÑÊòØJRMPÔºàJava Remote Messageing ProtocolÔºâ, JRMPÊòØ‰∏ìÈó®‰∏∫javaÂÆöÂà∂ÁöÑÈÄö‰ø°ÂçèËÆÆÔºåÊâÄ‰ª•‰ªñÊòØÁ∫ØjavaÁöÑÂàÜÂ∏ÉÂºèËß£ÂÜ≥ÊñπÊ°à „ÄÇ RMI Demo ÂÖàÂÜô‰∏™ÊµãËØïÁî®ÁöÑËøúÁ®ãÊé•Âè£ÔºåÊ≥®ÊÑèÊé•Âè£Ë¶ÅÊäõÂºÇÂ∏∏ 123public interface ISayHello extends Remote &#123; public String satHello(String name) throws RemoteException;&#125; 2.ÂÆûÁé∞ËøúÁ®ãÊé•Âè£ÔºåÂπ∂‰∏îÁªßÊâøÔºö`UnicastRemoteObject` 123456789public class SayHelloImpl extends UnicastRemoteObject implements ISayHello&#123; protected SayHelloImpl() throws RemoteException &#123; &#125; public String satHello(String name) throws RemoteException &#123; return "hello," + name; &#125;&#125; 3.ÂàõÂª∫ÊúçÂä°Âô®Á®ãÂ∫èÔºö `createRegistry`ÊñπÊ≥ïÊ≥®ÂÜåËøúÁ®ãÂØπË±° 123456789101112131415161718192021import java.net.MalformedURLException;import java.rmi.AlreadyBoundException;import java.rmi.Naming;import java.rmi.RemoteException;import java.rmi.registry.LocateRegistry;public class HelloServer &#123; public static void main(String[] args) &#123; try &#123; ISayHello sayHello =new SayHelloImpl(); LocateRegistry.createRegistry(8888); Naming.bind("rmi://localhost:8888/sayhello",sayHello); System.out.println("server start success"); &#125; catch (RemoteException e) &#123; e.printStackTrace(); &#125; catch (MalformedURLException e) &#123; e.printStackTrace(); &#125; catch (AlreadyBoundException e) &#123; e.printStackTrace(); &#125; &#125; 4.ÂàõÂª∫ÂÆ¢Êà∑Á´ØÁ®ãÂ∫è 1234567891011121314public class HelloClient &#123; public static void main(String[] args) &#123; try &#123; ISayHello iSayHello = (ISayHello) Naming.lookup("rmi://localhost:8888/sayhello"); System.out.println("hello"); &#125; catch (NotBoundException e) &#123; e.printStackTrace(); &#125; catch (MalformedURLException e) &#123; e.printStackTrace(); &#125; catch (RemoteException e) &#123; e.printStackTrace(); &#125; &#125;&#125; RMIË∞ÉÁî®ËøáÁ®ã ÊµÅÁ®ãÔºö 1.ÂéªÊ≥®ÂÜå‰∏≠ÂøÉÊ≥®ÂÜåÔºåserverÁ´ØÂêØÂä®ÊúçÂä°„ÄÇ 2.Ê≥®ÂÜå‰∏≠ÂøÉËÅîÁ≥ªstubÔºàÂ≠òÊ†πÔºâ„ÄÇstubÁî®‰∫éÂÆ¢Êà∑Á´Ø ÔºåÂú®j2ee‰∏≠ÊòØËøô‰πàËØ¥ÁöÑÔºö‰∏∫Â±èËîΩÂÆ¢Êà∑Ë∞ÉÁî®ËøúÁ®ã‰∏ªÊú∫‰∏äÁöÑÂØπË±°ÔºåÂøÖÈ°ªÊèê‰æõÊüêÁßçÊñπÂºèÊù•Ê®°ÊãüÊú¨Âú∞ÂØπË±°,ËøôÁßçÊú¨Âú∞ÂØπË±°Áß∞‰∏∫Â≠òÊ†π(stub),Â≠òÊ†πË¥üË¥£Êé•Êî∂Êú¨Âú∞ÊñπÊ≥ïË∞ÉÁî®,Âπ∂Â∞ÜÂÆÉ‰ª¨ÂßîÊ¥æÁªôÂêÑËá™ÁöÑÂÖ∑‰ΩìÂÆûÁé∞ÂØπË±° 3.serverÊ≥®ÂÜåÂØπË±°ÔºåÁÑ∂ÂêéËøîÂõûÊ≥®ÂÜåÂØπË±° 4.ÂÆ¢Êà∑Á´ØËÆøÈóÆÊ≥®ÂÜå‰∏≠ÂøÉÔºåÔºàÂä®ÊÄÅ‰ª£ÁêÜÔºâËøîÂõûstubÂØπË±° 5.stubÔºàÂ≠òÊ†πÔºâËøúÁ®ãË∞ÉÁî®skeleton ÔºàÈ™®Êû∂ Ôºâ 6.skeleton Ë∞ÉÁî®Áõ∏Â∫îÊé•Âè£ Ê∫êÁ†ÅËÆ©ÊàëÁúãÁúãÊ†∏ÂøÉÁöÑÊ≥®ÂÜåÊúçÂä°ÁöÑÊ∫êÁ†ÅÂÆûÁé∞ 123456789101112131415161718192021222324public RegistryImpl(final int var1) throws RemoteException &#123; this.bindings = new Hashtable(101); //ÂÆâÂÖ®ËÆ§ËØÅ if (var1 == 1099 &amp;&amp; System.getSecurityManager() != null) &#123; try &#123; AccessController.doPrivileged(new PrivilegedExceptionAction&lt;Void&gt;() &#123; public Void run() throws RemoteException &#123; LiveRef var1x = new LiveRef(RegistryImpl.id, var1); RegistryImpl.this.setup(new UnicastServerRef(var1x, (var0) -&gt; &#123; return RegistryImpl.registryFilter(var0); &#125;)); return null; &#125; &#125;, (AccessControlContext)null, new SocketPermission("localhost:" + var1, "listen,accept")); &#125; catch (PrivilegedActionException var3) &#123; throw (RemoteException)var3.getException(); &#125; &#125; else &#123; //ÂàùÂßãÂåñËøúÁ®ãÂºïÁî®UnicastServerRefÂØπË±° LiveRef var2 = new LiveRef(id, var1);//„Ää-------------------------- this.setup(new UnicastServerRef(var2, RegistryImpl::registryFilter)); &#125; &#125; ÁÇπËøõUnicastServerRefÔºåÊâæÂá∫ÂÆûÁé∞ÁöÑÂÖ≥Á≥ª~ ÁÇπËøõsetupÊñπÊ≥ïÔºåÁî®ideaÂèçÁºñÁ†Å 12345678910111213141516171819public Remote exportObject(Remote var1, Object var2, boolean var3) throws RemoteException &#123; Class var4 = var1.getClass(); Remote var5; try &#123; var5 = Util.createProxy(var4, this.getClientRef(), this.forceStubUse);//„Ää-------------------- &#125; catch (IllegalArgumentException var7) &#123; throw new ExportException("remote object implements illegal remote interface", var7); &#125; if (var5 instanceof RemoteStub) &#123;//„Ää-------------------------- this.setSkeleton(var1); &#125; Target var6 = new Target(var1, this, var5, this.ref.getObjID(), var3);//„Ää------------------------ this.ref.exportObject(var6); this.hashToMethod_Map = (Map)hashToMethod_Maps.get(var4); return var5; &#125; ÂèëÁé∞Âú®ÂàõÂª∫‰ª£ÁêÜÔºåÂà§Êñ≠ÂΩìÂâçÁöÑvarÊòØ‰∏çÊòØËøúÁ®ãstubÔºåÂ¶ÇÊûúÊòØÂ∞±ËÆæÁΩÆÈ™®Êû∂„ÄÇÂ¶ÇÊûú‰∏çÊòØÔºåÂ∞±ÊûÑÂª∫targetÂØπË±°„ÄÇÁÇπÂºÄ‰ª£ÁêÜ 1234567891011121314151617181920212223242526public static Remote createProxy(Class&lt;?&gt; var0, RemoteRef var1, boolean var2) throws StubNotFoundException &#123; Class var3; try &#123; var3 = getRemoteClass(var0);//„Ää-------------------------- &#125; catch (ClassNotFoundException var9) &#123; throw new StubNotFoundException("object does not implement a remote interface: " + var0.getName()); &#125; if (var2 || !ignoreStubClasses &amp;&amp; stubClassExists(var3)) &#123; return createStub(var3, var1);//„Ää-------------------------- &#125; else &#123; final ClassLoader var4 = var0.getClassLoader(); final Class[] var5 = getRemoteInterfaces(var0); final RemoteObjectInvocationHandler var6 = new RemoteObjectInvocationHandler(var1); try &#123; return (Remote)AccessController.doPrivileged(new PrivilegedAction&lt;Remote&gt;() &#123; public Remote run() &#123; return (Remote)Proxy.newProxyInstance(var4, var5, var6); &#125; &#125;); &#125; catch (IllegalArgumentException var8) &#123; throw new StubNotFoundException("unable to create proxy", var8); &#125; &#125; &#125; ÂèëÁé∞Âú®Ë∞ÉÁî®ËøúÁ®ãÊúçÂä°ÔºåÁÑ∂ÂêéÂàõÂª∫‰∫Üstub„ÄÇÁªßÁª≠ÁÇπÂºÄgetRemoteClassÔºàÔºâÊñπÊ≥ï 123456789101112131415private static Class&lt;?&gt; getRemoteClass(Class&lt;?&gt; var0) throws ClassNotFoundException &#123; while(var0 != null) &#123; Class[] var1 = var0.getInterfaces();//„Ää-------------------------- for(int var2 = var1.length - 1; var2 &gt;= 0; --var2) &#123; if (Remote.class.isAssignableFrom(var1[var2])) &#123; return var0; &#125; &#125; var0 = var0.getSuperclass(); &#125; throw new ClassNotFoundException("class does not implement java.rmi.Remote"); &#125; ÂèëÁé∞Áé∞Âú®Âú®ÂàõÂª∫ÂÆû‰æã Â•ΩÂêßÔºåÂõûÂà∞createProxyÊñπÊ≥ïÔºåÂÜçÁúãÁúãÈ°∫ÁùÄÂæÄ‰∏ãËµ∞ÔºåÁúãÁúãTarget var6 = new Target(var1, this, var5, this.ref.getObjID(), var3); this.ref.exportObject(var6);ÁöÑÂá∫Âè£ÂØπË±°ÊñπÊ≥ï 123public void exportObject(Target var1) throws RemoteException &#123; this.ep.exportObject(var1); &#125; 123456789public interface Endpoint &#123; Channel getChannel(); void exportObject(Target var1) throws RemoteException; Transport getInboundTransport(); Transport getOutboundTransport();&#125; 123public void exportObject(Target var1) throws RemoteException &#123; this.transport.exportObject(var1); &#125; ‰∏ÄË∑ØÁÇπ‰∏ãÂéªÔºåÊâæÂà∞‰∫ÜtcpÂá∫Âè£ÁöÑÊñπÊ≥ï„ÄÇËøôÊòØÂ±û‰∫éÂçèËÆÆÂ±ÇÁöÑÁé©ÊÑè„ÄÇ 12345public void exportObject(Target var1) throws RemoteException &#123; synchronized(this) &#123; this.listen(); ++this.exportCount; &#125; ‰∏ÄË∑ØÁÇπ‰∏ãÂéªÔºåÂèëÁé∞listen„ÄÇ 12345678910111213141516171819202122232425private void listen() throws RemoteException &#123; assert Thread.holdsLock(this); TCPEndpoint var1 = this.getEndpoint(); int var2 = var1.getPort(); if (this.server == null) &#123; if (tcpLog.isLoggable(Log.BRIEF)) &#123; tcpLog.log(Log.BRIEF, "(port " + var2 + ") create server socket"); &#125; try &#123; this.server = var1.newServerSocket();//„Ää-------------------------- Thread var3 = (Thread)AccessController.doPrivileged(new NewThreadAction(new TCPTransport.AcceptLoop(this.server), "TCP Accept-" + var2, true)); var3.start(); &#125; catch (BindException var4) &#123; throw new ExportException("Port already in use: " + var2, var4); &#125; catch (IOException var5) &#123; throw new ExportException("Listen failed on port: " + var2, var5); &#125; &#125; else &#123; SecurityManager var6 = System.getSecurityManager(); if (var6 != null) &#123; var6.checkListen(var2); &#125; &#125; ÂèëÁé∞newServerSocketÔºÅÔºÅÔºÅ Áªº‰∏äÔºåÊÄª‰ΩìÊµÅÁ®ãÂíå‰∏äÂõæ‰∏ÄÊ†∑„ÄÇ RMIÁº∫Èô∑1.Âü∫‰∫éjavaÔºåÊîØÊåÅËØ≠Ë®ÄÂçï‰∏Ä 2.ÊúçÂä°Ê≥®ÂÜåÂè™ËÉΩÊ≥®ÂÜåÂà∞Êàë‰∏äÈù¢ÂàÜÊûêÁöÑÈÇ£‰∏™Ê∫êÁ†Å„ÄÇÊ≥®ÂÜå‰∏≠ÂøÉÊåÇ‰∫Ü‰ª•ÂêéÂ∞±ÂÆå‰∫Ü 3.Â∫èÂàóÂåñÊòØÁî®javaÂéüÁîüÈÇ£‰∏™ÊñπÊ≥ïÔºåÊïàÁéá‰∏çÂ•Ω 4.ÊúçÂä°Á´ØÂ∫ïÂ±ÇÊòØbioÊñπÂºèÔºåÊÄßËÉΩ‰∏çÂ•Ω ÊâãÂÜô‰∏™RMIÔºüÊ≠•È™§Ôºö ÁºñÂÜôÊúçÂä°Âô®Á®ãÂ∫èÔºåÊö¥Èú≤‰∏Ä‰∏™ÁõëÂê¨Ôºå ÂèØ‰ª•‰ΩøÁî®socket ÁºñÂÜôÂÆ¢Êà∑Á´ØÁ®ãÂ∫èÔºåÈÄöËøáipÂíåÁ´ØÂè£ËøûÊé•Âà∞ÊåáÂÆöÁöÑÊúçÂä°Âô®ÔºåÂπ∂‰∏îÂ∞ÜÊï∞ÊçÆÂÅöÂ∞ÅË£ÖÔºàÂ∫èÂàóÂåñÔºâ ÊúçÂä°Âô®Á´ØÊî∂Âà∞ËØ∑Ê±ÇÔºåÂÖàÂèçÂ∫èÂàóÂåñ„ÄÇÂÜçËøõË°å‰∏öÂä°ÈÄªËæëÂ§ÑÁêÜ„ÄÇÊääËøîÂõûÁªìÊûúÂ∫èÂàóÂåñËøîÂõû Ê∫êÁ†ÅÔºöhttps://github.com/tengshe789/ForRMI ÊääÊ∫êÁ†ÅÂèëÂ∏ÉÂà∞GitHub‰∫ÜÔºåÂú®ÊääÊ∫êÁ†ÅÁ≤òË¥¥Â§™È∫ªÁÉ¶‰∫Ü„ÄÇ ÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèã~]]></content>
      <tags>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Â≠¶Â•ΩÂàÜÂ∏ÉÂºèÊû∂ÊûÑ</tag>
        <tag>ÁΩëÁªú</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖ≥ÊéâX5ÂÜÖÊ†∏ËÆ©ÂæÆ‰ø°ÂèòÂæóÈ£ûÂø´~]]></title>
    <url>%2F2018%2F07%2F26%2F%E5%85%B3%E6%8E%89X5%E5%86%85%E6%A0%B8%E8%AE%A9%E5%BE%AE%E4%BF%A1%E5%8F%98%E5%BE%97%E9%A3%9E%E5%BF%AB%2F</url>
    <content type="text"><![CDATA[ÂâçË®ÄÊàëÊç¢ÊâãÊú∫‰∫Ü„ÄÇ„ÄÇ„ÄÇ ‰ª•ÂâçÁöÑÂ∞èS8ÂçñÊéâ‰∫ÜÔºàÊó•Â∏∏Êìç‰ΩúüòéÔºâÁ≠â‰ª∑Êç¢‰∫Ü‰∏™üëá Êñ∞ÊâãÊú∫ÊµãËØïÂÆåÂäüËÉΩÔºå‰∏ãÂ•ΩÂæÆ‰ø°‰ª•ÂêéÔºåÂèëÁé∞ÊµèËßàÊäÄÊúØÂÖ¨‰ºóÂè∑ÊØîËÄÅÊâãÊú∫ÊÖ¢‰∫ÜÂæàÂ§öÔºåÁ∫≥Èó∑„ÄÇÂêéÊù•ÊâçÊÉ≥Âà∞Âøò‰∫ÜÊç¢ÂÜÖÊ†∏‰∫Ü„ÄÇ Êìç‰ΩúÊ≠•È™§WebView ÊòØAndroidÂºÄÂèë‰∏≠ÁªèÂ∏∏‰ºöÁî®Âà∞ÁöÑÂäüËÉΩÔºåÊòØ‰∏Ä‰∏™Âü∫‰∫éwebkitÂºïÊìéÔºåÁî®‰∫éÊòæÁ§∫Êù•Ëá™Êú¨Âú∞„ÄÅÊúçÂä°Âô®webÈ°µÈù¢ÁöÑÊéß‰ª∂ÔºåÂèØ‰ª•ÂæàÂ•ΩÁöÑÊèêÂçáÂ∫îÁî®Êâ©Â±ïÊÄß„ÄÇÊúâ‰ª•‰∏ã‰ºòÁÇπÔºö ÂèØ‰ª•Áõ¥Êé•ÊòæÁ§∫ÂíåÊ∏≤ÊüìwebÈ°µÈù¢ webviewÂèØ‰ª•Áõ¥Êé•Áî®htmlÊñá‰ª∂ÔºàÁΩëÁªú‰∏äÊàñÊú¨Âú∞assets‰∏≠Ôºâ‰ΩúÂ∏ÉÂ±Ä ÂíåJavaScript‰∫§‰∫íË∞ÉÁî® È¶ñÂÖàÔºåÊàë‰ª¨ÈúÄË¶ÅÂ∞ÜwebviewÊõ¥Êñ∞Âà∞ÊúÄÊñ∞„ÄÇ ÁÑ∂ÂêéÊâìÂºÄÂæÆ‰ø°ÔºåÂú®‰ªªÊÑèËÅäÂ§©ÁïåÈù¢ÔºåËæìÂÖ• debugtbs.qq.com ÁÇπÂáªÁ¶ÅÁî®ÂÜÖÊ†∏ÔºåÈáçÂêØÂæÆ‰ø°ÂêéÔºåÂú®ÁÇπÂáªÊ∏ÖÈô§tbs Êìç‰ΩúÂÆåÊàêÔºåÁªìÊùüÔºÅ Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèã~]]></content>
      <tags>
        <tag>Á™çÈó®</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÆâÂà©ËΩØ‰ª∂-Â¶Ç‰ΩïÂú®WindowsË∞ÉÊï¥Â§öÊ†∏ÂøÉCPUË¥üËΩΩÂπ∂‰ºòÂåñÔºü]]></title>
    <url>%2F2018%2F07%2F25%2F%E6%95%99%E4%BD%A0%E5%A6%82%E4%BD%95%E5%9C%A8Winddows%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%A4%9A%E6%A0%B8%E5%BF%83CPU%E8%B4%9F%E8%BD%BD%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[hexo‰∏çÁü•ÈÅìÂíãÂú∞‰∫ÜÔºåmarkdownËΩ¨htmlÁîüÊàêÈùôÊÄÅËµÑÊ∫êÁöÑÊó∂ÂÄôÔºåÂõæÁâáÂÆåÂÖ®‰∏çÂÜôËøõhtmlÔºåÂâçÈù¢Âá†ÁØáÊ∫êÁ†ÅÂàÜÊûêÁöÑÂõæÂÖ®ÊòæÁ§∫‰∏çÂá∫Êù•‰∫Ü„ÄÇËÑëÈòîÁñº~ Áî±‰∫éÊöÇÊó∂Ê≤°ÊúâËß£ÂÜ≥ÈùôÊÄÅËµÑÊ∫êÁöÑÈóÆÈ¢òÔºåÊâÄ‰ª•ÊàëÊú¨ÁØá‰∏çÊîæÂõæÔºåÊù•‰∏ÄÂú∫Ê≤°ÊúâÁ°ùÁÉüÁöÑÊàò‰∫â„ÄÇÊàë‰ºöÂ∞ΩÈáèËÆ©Ê≠§ÊñáÁ´†ÈÄö‰øóÊòìÊáÇÔºåÂæÖÊàëËß£ÂÜ≥ÈóÆÈ¢òÊó∂ÔºåÂÜçÈáçÊñ∞ÁºñËæë‰∏Ä‰∏ãÔºàÂèçÊ≠£Ëøô‰∏™ÂçöÂÆ¢Ê≤°‰∫∫ÁúãÔºâ„ÄÇ ‰ªäÂ§©ÊàëÊù•ÂàÜ‰∫´‰∏Ä‰∏™ËΩØ‰ª∂ÔºåÂêçÂ≠óÊòØProcess Lasso Pro„ÄÇËøô‰∏™ËΩØ‰ª∂ÁöÑ‰ΩúÁî®ÊòØ‰ºòÂåñËøõÁ®ãË∞ÉÂ∫¶ÔºåÈôç‰ΩéÈ´òCPUÂç†Áî®ÁéáËøõÁ®ãÁöÑ‰ºòÂÖàÁ∫ßÔºå‰øùËØÅÂâçÂè∞ËøõÁ®ãÂíåÁ≥ªÁªüÊã•ÊúâÊúÄÈ´òÁöÑÂìçÂ∫îÈÄüÂ∫¶ÔºåÁÆÄÂçïËØ¥Â∞±ÊòØÂ∞ΩÂèØËÉΩ‰øùËØÅÁîµËÑëÂú®È´òCPUÂç†Áî®ÁéáÁöÑÊÉÖÂÜµ‰∏çÂç°„ÄÇÊ≥®ÊÑèÔºåËΩØ‰ª∂Â¶ÇÊûúÊòØÂÆ∂Áî®Â∞±ÊòØÂÖçË¥πÁöÑÔºå‰∏ì‰∏öÁâàÊúâÈ´òÁ∫ßÂäüËÉΩÔºå‰∏çËøáÂü∫Êú¨Áî®‰∏çÂà∞„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ ‰∏ªË¶ÅÁâπÊÄßÂÖàÊù•ÁúãÁúãÂÆòÊñπÂèëÁöÑ‰∫ßÂìÅÁâπÊÄß„ÄÇ ProBalanceÔºöÂÆâÂÖ®ÊúâÊïàÂú∞Âπ≥Ë°°ËøõÁ®ã‰ºòÂÖàÁ∫ßÔºå‰ªéËÄå‰ΩøÁîµËÑëÂú®È´òË¥üËç∑ÁöÑÊó∂ÂÄôÊèêÈ´òÁ≥ªÁªüÁöÑÂìçÂ∫îÈÄüÂ∫¶ÂíåÈò≤Ê≠¢Á≥ªÁªüÂ§±ÈÄüÂíåÂèçÂ∫îÊªûÂêé„ÄÇÊàë‰ª¨ÁöÑÊäÄÊúØÂπ∂‰∏çÂÅöÈ¢ùÂ§ñÁöÑÂâçÂè∞Êé®ËøõËÄåÊòØÈÄÇÂΩìÈôç‰Ωé‰∫ÜÂêéÂè∞ËøõÁ®ã‰ºòÂÖàÁ∫ß„ÄÇÊàë‰ª¨Â§öÂπ¥ÁöÑÁªèÈ™å‰ΩøÊàë‰ª¨ÁöÑÁÆóÊ≥ïÈ´òÂ∫¶‰ºòÂåñ„ÄÅÁã¨‰∏ÄÊó†‰∫å„ÄÇ ÊåÅ‰πÖÁöÑ‰ºòÂÖàÁ∫ßÂíå‰∫≤ÂíåÂäõÔºö‰∏∫ÊÇ®ÁöÑËøõÁ®ãËÆæÁΩÆ‚ÄúÈªòËÆ§‚ÄùÁöÑ‰ºòÂÖàÁ∫ßÂíåCPU‰∫≤ÂíåÂäõÔºåËÆ©ÊÇ®ÂèØ‰ª•Ë∞ÉÊï¥ÂÆÉ‰ª¨ÁöÑÊâßË°åÊñπÂºè„ÄÇ Ëá™Âä®ÁªàÊ≠¢ÔºöÂØπ‰∫éÊÇ®ÊâÄÈÄâÊã©ÁöÑÁâπÂÆöËøõÁ®ãÔºåÂÆÉ‰∏ÄÊó¶ËøêË°åÔºåProcess LassoÂ∞ÜËá™Âä®ÁªàÊ≠¢ÂÆÉ„ÄÇ ËøõÁ®ãÁúãÂÆàÔºöÂΩìËææÂà∞ÊåáÂÆöÁöÑÈòàÂÄºÁöÑÊó∂ÂÄôÔºåÂ∞ÜÁªàÊ≠¢„ÄÅÈáçÊñ∞ÂêØÂä®ÊàñÊõ¥ÊîπCPU‰∫≤ÂíåÂäõ„ÄÇ ÂÆû‰æãÊï∞ÈáèÈôêÂà∂ÔºöÂ∞ÜËøõÁ®ãÂÆû‰æãÊï∞ÈáèÈôêÂà∂Âú®ÊåáÂÆöÁöÑËåÉÂõ¥ÂÜÖ„ÄÇ Â§öÊ†∏‰ºòÂåñÔºöÈÄöËøáÈ¢ÑËÆæÁöÑCPU‰∫≤ÂíåÂäõÂíåProBalance‰∫≤ÂíåÂäõÁöÑË∞ÉÊï¥ÔºåÂèØ‰ª•‰ºòÂåñÂ§öÊ†∏Â§ÑÁêÜÂô®ÔºåÊèêÈ´òCPUËøêË°åÊïàÁéá„ÄÇÂÆÉËøòÈÅøÂÖç‰ΩøÁî®ÈÄªËæëÊ†∏ÂøÉÔºå‰ªéËÄåÂú®Ë∂ÖÁ∫øÁ®ãCPU‰∏ãÊèêÈ´òÊèêÈ´òÊüê‰∫õÂ∫îÁî®Á®ãÂ∫èÁöÑÊÄßËÉΩ„ÄÇ I/O‰ºòÂÖàÁ∫ßÔºöWindows VistaÂèäWindows 7‰∏ãÂèØ‰ª•ËÆæÁΩÆËøõÁ®ãÁöÑÂΩìÂâçÁöÑ/ÈªòËÆ§ÁöÑ/ÊåÅÁª≠ÁöÑI / O‰ºòÂÖàÁ∫ß ÁîµÊ∫êÊ®°ÂºèËá™Âä®ÂåñÔºöËÆæÁΩÆÁîµÊ∫êÊ®°ÂºèÔºåÂΩìÊüê‰∫õËøõÁ®ãÊ≠£Âú®ËøêË°åÊó∂Ëá™Âä®Êõ¥Êîπ‰∏∫‚ÄúÈ´òÊÄßËÉΩ‚ÄùÔºåÂΩìËøõÁ®ãÈÄÄÂá∫ÂêéÂÜçÊç¢Âà∞ÂéüÂÖàÁöÑÊ®°ÂºèÔºàËæÉÊñ∞ÁâàÊú¨ÂäüËÉΩÊõ¥Âº∫Â§ßÔºåÂèØ‰ª•Êõ¥ÊîπÂà∞‰ªª‰ΩïÁîµÊ∫êÊ®°ÂºèÔºâ„ÄÇ ËäÇÁ∫¶ÁîµËÉΩÔºöÊàñÂΩìÈúÄË¶ÅÊó∂ÊèêÈ´òÊÄßËÉΩÔºÅ Á≥ªÁªüÂìçÂ∫îÊ†áÔºöÊàë‰ª¨Â∞Ü‰ª•Áã¨ÁâπÁöÑÁÆóÊ≥ïÔºå‰ª•ÊÉä‰∫∫ÁöÑÂáÜÁ°ÆÁéáÁõëÊµãÁ≥ªÁªüÂìçÂ∫î Áã¨Á´ãÁöÑÊ†∏ÂøÉÂºïÊìéÔºöËøô‰∏™Áã¨Á´ãÁöÑÂêéÂè∞ËøõÁ®ãÂèØ‰ª•‰∏Ä‰∏™ÊôÆÈÄöÁöÑËøáÁ®ãÊàñÊúçÂä°ÂΩ¢ÂºèËøêË°å„ÄÇËøô‰∏™‚ÄúÊ†∏ÂøÉÂºïÊìé‚ÄùË¢´ÂëΩÂêç ProcessGovernor.exeÔºåÂÆÉÂÆûÈôÖ‰∏äÂèØ‰ª•Âº∫Âà∂ÊâßË°åËøõÁ®ãËßÑÂàôÂíåProBalance„ÄÇÂÆÉÊ†πÊú¨‰∏çÈúÄË¶ÅGUIÔºà‰∏ªÁ™óÂè£ÔºâÁöÑÂ≠òÂú®„ÄÇËøôÂèØ‰ª•ÂÆûÁé∞ÊúÄÂ∞èÁöÑËµÑÊ∫êÂà©Áî®Áéá„ÄÇ ÊúÄÂ∞èÁöÑËµÑÊ∫êÂà©Áî®ÔºöÂú®ÂÆûÁé∞ÊúÄÂ∞èÁöÑËµÑÊ∫êÂà©Áî®ÊñπÈù¢ÔºåÊ≤°Êúâ‰ªª‰Ωï‰∏Ä‰∏™Á®ãÂ∫èÂèØ‰ª•‰∏éProcess LassoÁõ∏ÊØî„ÄÇÂÆÉÊòØÁî®ÂéüÁîüÁöÑC + +ÁºñÂÜôÁöÑÔºåÂπ∂‰∏çÊñ≠ÊîπËøõ‰ª•Ëé∑ÂæóÊúÄÂ§ßÁöÑÊïàÁéá„ÄÇÊàë‰ª¨‰πüÊèê‰æõÂéüÁîüÁöÑ64‰ΩçÁâàÊú¨„ÄÇÊú¨Á®ãÂ∫èÁöÑÂÜÖÂ≠ò‰ΩøÁî®ÈáèÈÄöÂ∏∏Âú®1MB‰ª•‰∏ãÔºÅÔºà‰æùÁ≥ªÁªüËÄåÂÆöÔºâ ÂÆâË£ÖÈ¶ñÂÖàÔºåÈÄâÊã©X64ÂÆâË£ÖÂåÖÔºå‰∏ÄË∑ØnextÂà∞Â∫ï„ÄÇ GUI‰ΩøÁî®ÂÆâË£ÖÂÆåÊØïÔºåÂú®‰∏ªÁïåÈù¢‰∏äÔºåÂèØ‰ª•ÁúãÂà∞ÂΩìÂâçÊâÄÊúâÁöÑÊ¥ªÂä®ËøõÁ®ãÔºåËøô‰∏™ÂíåÁ≥ªÁªüÁöÑËµÑÊ∫êÁÆ°ÁêÜÂô®ÂæàÁõ∏‰ºº„ÄÇProcess LassoÂú®ÈªòËÆ§ËÆæÁΩÆ‰∏ãÂ∑≤ÁªèÂèØ‰ª•ÁîüÊïàÔºåÂÆÉ‰ºöÁõëËßÜÂêéÂè∞ËøõÁ®ãÔºåÂ¶ÇÊûúÊüê‰∏™ËøõÁ®ãË∂ÖËøá‰∫ÜCPUÂç†Áî®ÁéáÁöÑÈòàÂÄºÔºåÂ∞±‰ºöÂØπ‰ªñËøõË°åÈôêÂà∂ÔºåÈôç‰ΩéCPUÂØπËøô‰∏™ËøõÁ®ãÁöÑÂìçÂ∫î‰ºòÂÖàÁ∫ßÔºåËÆ©CPUÁùÄÂäõ‰∫éÂâçÂè∞ËøõÁ®ãÔºàÂ¶ÇÊ∏∏ÊàèÁ≠âÔºâ„ÄÇ Âè≥ÂáªËæÉ‰∏∫Âç†CPU‰ΩøÁî®Êó∂Èó¥ÁöÑÊ∏∏Êàè„ÄÅËßÜÈ¢ëÁ≠âÁöÑËøõÁ®ãÔºåÂãæÈÄâ‚ÄúÂΩíÁ±ª‰∏∫Ê∏∏ÊàèÊàñÂ§öÂ™í‰ΩìËøõÁ®ã‚Äù „ÄÇËøôÊó∂ÔºåProcess Lasso‰ºöÊéíÈô§ÂØπËøô‰∏™ËøõÁ®ãÁöÑ‚ÄúÊäëÂà∂‚ÄùÔºåÂπ∂Âú®ËøêË°åËøô‰∏™ËøõÁ®ãÊó∂Ë∞ÉËäÇÁîµÊ∫êÊñπÊ°à‰∏∫‚ÄúÈ´òÊÄßËÉΩ‚ÄùÔºåÂÖÖÂàÜË∞ÉÂä®CPUËµÑÊ∫ê„ÄÇ Èô§Ê≠§‰πãÂ§ñÔºåÈáçÁÇπÂ∞±ÊòØ‰ºòÂåñÂ§öÊ†∏ÂøÉCPUÁöÑÂà©Áî®Áéá‰∫ÜÔºåËøòÊòØÂè≥ÈîÆÂçïÂáªË¶Å‰ºòÂåñÊâßË°åÁöÑËøõÁ®ãÔºåÈÄâ‰∏≠‚ÄúCPU‰∫≤ÂíåÂäõÔºàÈôêÂà∂CPU‰ΩøÁî®Ôºâ‚Äì&gt;ÊÄªÊòØ‚Äì&gt;ÈÄâÊã©CPU‰∫≤ÂíåÂäõ‚ÄùÔºåÊåâÁÖßËá™Â∑±ÁöÑÈúÄÊ±ÇÂãæÈÄâÈúÄË¶Å‰ΩøÁî®ÁöÑCPUÊ†∏ÂøÉ(‰∏ÄËà¨Êù•ËØ¥ÔºåCPU 0ÊÄßËÉΩÊúÄÂº∫ÔºåCPU 1ÊÄßËÉΩÁ¨¨‰∫åÂº∫‚Ä¶‚Ä¶.CPU nÊÄßËÉΩÊúÄÂº±)ÔºåËøôÊ†∑Ëøô‰∏™ËøõÁ®ãÂÖ≥Èó≠ÂêéÂÜçËøêË°å‰πüÊòØÊåâÁÖßËøô‰∏™ËÆæÁΩÆË∞ÉÁî®CPUËµÑÊ∫ê„ÄÇ Ê≥®ÊÑè‰∫ãÈ°π ‰∏çÊé®ËçêÂØπProcess LassoËá™Ë∫´/ÂÆâÂÖ®ËΩØ‰ª∂/ÊùÄÊØíËΩØ‰ª∂/Á≥ªÁªüÂÖ≥ÈîÆÊúçÂä°ËøõÁ®ãÁ≠âËøõË°åÁªìÊùüËøõÁ®ã„ÄÅÈôç‰ΩéÂÜÖÂ≠òÊàñI/O‰ºòÂÖàÁ∫ßËá≥ÈùûÂ∏∏‰Ωé„ÄÅÁ°¨ËäÇÊµÅÁ≠âÊìç‰ΩúÔºå‰∏îÈÉ®ÂàÜÊùÄÊØí„ÄÅÂÆâÂÖ®ËΩØ‰ª∂ÊúâËá™Êàë‰øùÊä§ÂäüËÉΩÔºåÁªìÊùüËøõÁ®ã„ÄÅCPU‰ºòÂÖàÁ∫ß„ÄÅI/O‰ºòÂÖàÁ∫ß ÁΩÆÂèØËÉΩ‰ºöÂ§±Êïà ËèúÂçï-&gt;ÈÄâÈ°π-&gt;Êó•ÂøóËÆæÁΩÆ-&gt;ÂãæÈÄâ‚ÄúÈÄÄÂá∫Êó∂Ê∏ÖÈô§Êó•Âøó‚Äù‚Äú‰øùÊåÅÊó•Âøó‰øÆÂâ™‚ÄùÂèØ‰ª•ÊúâÊïàÈôç‰ΩéÊó•ÂøóÊï∞Èáè Âª∫ËÆÆ‰øùÊåÅProcess LassoÂºÄÊú∫ÂêØÂä®(ÂåÖÊã¨ÊúçÂä°)ÔºåÈÉ®ÂàÜÂºÄÊú∫Âä†ÈÄü‰ºòÂåñËΩØ‰ª∂‰ºöÁ¶ÅÊ≠¢Process LassoÂêØÂä®ÔºåËøôÂ∞ÜÂØºËá¥Process LassoÊó†Ê≥ïÂÆûÊó∂‰ºòÂåñÁ≥ªÁªü Process LassoÂú®ÁïåÈù¢ËøêË°åÁöÑËøáÁ®ã‰∏≠ÔºåÁî±‰∫éÊúâÂ§ßÈáè‰ø°ÊÅØÈúÄË¶ÅËé∑ÂèñÂπ∂ÂÆûÊó∂ÊòæÁ§∫ÔºåÂèØËÉΩ‰ºöÁúãÂà∞Process LassoÂõæÂΩ¢ÁïåÈù¢ÊàñÊ†∏ÂøÉÂºïÊìéËøõÁ®ãCPU‰ΩøÁî®ÁéáËææÂà∞15%~40%ÔºåËøôÂ±û‰∫éÊ≠£Â∏∏Áé∞Ë±°„ÄÇÈöêËóèÊàñÂÖ≥Èó≠Ê≠§ÁïåÈù¢ÂêéProcess LassoÁöÑËµÑÊ∫êÂç†Áî®ÁéáÂ∞Ü‰ºöÂèòÂæóÈùûÂ∏∏Â∞èÔºå‰∏ç‰ºöÊãñÊÖ¢ÁîµËÑëÈÄüÂ∫¶„ÄÇ ÊÄªÁªìÂÖàÂñä‰∏ÄÂè•Âè£Âè∑ÔºåProcess LassoÁâõÈÄºÔºÅ ‰∏çËøáÁªôÂ§ßÂÆ∂‰∏æ‰æãÁöÑ‰∏çËøáÊòØÂÆÉÁöÑÁöÆÊØõËÄåÂ∑≤ÔºåÊõ¥Â§ö‰ºòÂåñËÆæÁΩÆÂèØ‰ª•ÈÄöËøáËá™Â∑±ÁöÑÂ∞ùËØïË∞ÉÊï¥Ëé∑ÂæóÔºåÂ∏åÊúõÂ§ßÂÆ∂ÂèØ‰ª•Â§öÂ§öÁ†îÁ©∂ÔºåÂèëÁé∞Êúâ‰ªÄ‰πàÊúâÁî®ÁöÑÁé©Ê≥ïÂèØ‰ª•ÁßÅËÅäÊàë„ÄÇ ÂØπ‰∫ÜÔºåËøô‰∏™ËΩØ‰ª∂ÊúâÊî∂Ë¥πProÁâàÂíåÂÖçË¥πÁâàÔºåÊî∂Ë¥πÁâàÊúâÂæàÂ§öÊñ∞ÂäüËÉΩÔºåÊØîÂ¶ÇÂº∫Âà∂ÊÄßÂØπËøõÁ®ãÁöÑCPUÂç†Áî®ÁéáËøõË°åÂä®ÊÄÅË∞ÉÊï¥ÔºåËÉΩÂ§üÊòéÊòæÊèêÂçáÈÉ®ÂàÜÂ∫îÁî®ÁöÑÊâßË°åÊïàÁéá„ÄÇÂéüÂàô‰∏äÊàë‰∏çÊé®Ëçê‰ªª‰ΩïÁî®Êà∑‰ΩøÁî®ÁõóÁâàËΩØ‰ª∂ÁöÑ„ÄÇ]]></content>
      <tags>
        <tag>Êó•Â∏∏</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Windows10</tag>
        <tag>ËΩØ‰ª∂ÊïôÂ≠¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÈÇ£‰∫õÂπ¥Êï∞ÁªÑÁöÑÊéíÂ∫è]]></title>
    <url>%2F2018%2F07%2F24%2F%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%95%B0%E7%BB%84%E7%9A%84%E6%8E%92%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[‰ªäÂ§©Êù•ÂõûÈ°æ‰∏Ä‰∏ãÁÆÄÂçïÁöÑÊéíÂ∫èÊÄùÊÉ≥ÔºåÁïô‰Ωú‰ªäÂêéÁöÑÂ§ç‰π†ÂíåÂ§á‰ªΩÁî®„ÄÇÊú¨ÁØáÊòØÈùûÂ∏∏ÈùûÂ∏∏Âü∫Á°ÄÁöÑÔºåÁîöËá≥ÈÉΩ‰∏ç‰ºöËÆ≤ÂÆûÈôÖÈ°πÁõÆÁúüÊ≠£ËÉΩÁî®ÁöÑÊéíÂ∫èÊñπÊ≥ïÔºåË≠¨Â¶ÇÂèåËΩ¥Âø´ÈÄüÊéíÂ∫è „ÄÇÂÜôÁöÑ‰∏çÂ•ΩËØ∑Â§öÂ§öË∞ÖËß£„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ ÂáÜÂ§áÈò∂ÊÆµÁõ∏ÂÖ≥ÂäüËÉΩÂáΩÊï∞‰∏∫‰∫Ü‰øùÊåÅ‰ª£Á†ÅÁöÑÊï¥Ê¥ÅÔºåÂÖàÂàõÈÄ†Â•ΩÂØπÊï∞Âô®ÂíåÁõ∏ÂÖ≥ÂäüËÉΩÊÄßÂáΩÊï∞„ÄÇ ‰∫§Êç¢Âô®‰∏§‰∏™Êï∞ÁªÑ‰∏≠ÁöÑÂÖÉÁ¥†ÊØîËæÉÊéíÂ∫èËøáÁ®ã‰∏≠Ôºå‰∏ÄÂÆö‰ºöÊúâÂÖÉÁ¥†ÁöÑ‰∫§Êç¢Êìç‰Ωú„ÄÇ‰∏∫‰∫Ü‰øùÊåÅ‰ª£Á†ÅÁöÑÊï¥Ê¥ÅÔºåÂÖàÂÜôÂá∫‰∫§Êç¢Êìç‰ΩúÁöÑÂáΩÊï∞„ÄÇ 12345public static void swap(int[] arr, int i, int j) &#123; arr[i] = arr[i] ^ arr[j]; arr[j] = arr[i] ^ arr[j]; arr[i] = arr[i] ^ arr[j]; &#125; ÈöèÊú∫Ê†∑Êú¨‰∫ßÁîüÂô®Ëá™Â∑±ÁºñÊï∞ÁªÑÂ§™È∫ªÁÉ¶‰∫ÜÔºåËÆ©‰ªñËá™Â∑±Áîü‰∫ßÂêß 1234567public static int[] generateRandomArray(int maxSize, int maxValue) &#123; int[] arr = new int[(int) ((maxSize + 1) * Math.random())]; for (int i = 0; i &lt; arr.length; i++) &#123; arr[i] = (int) ((maxValue + 1) * Math.random()) - (int) (maxValue * Math.random()); &#125; return arr; &#125; ÂØπÊï∞Âô®ÂØπÊï∞Âô®ÂÖ∂ÂÆûÂ∞±ÊòØ‰∏Ä‰∏™ÁªùÂØπÊ≠£Á°Æ‰ΩÜÊòØÂ§çÊùÇÂ∫¶‰∏çÂ•ΩÁöÑÊñπÊ≥ï„ÄÇ 123public static void comparator(int[] arr) &#123; Arrays.sort(arr); &#125; ËØ¥ËØ¥Arrays.sort()ÁöÑÈÄªËæëÂêß„ÄÇÊï∞ÁªÑËøõÂÖ•ÊñπÊ≥ïÔºåÂÖàÂà§Êñ≠„ÄÇÂ¶ÇÊûúÊï∞ÁªÑÁöÑÈïøÂ∫¶Â∞è‰∫éQUICKSORT_THRESHOLDÔºàÈªòËÆ§ÂÄºÊòØ286ÔºâÁöÑËØùÔºåÂÜçÂà§Êñ≠ÔºåÂ¶ÇÊûúÊï∞ÁªÑÈïøÂ∫¶Â∞è‰∫éINSERTION_SORT_THRESHOLD(ÂÄº‰∏∫47)ÁöÑËØùÔºåÈÇ£‰πàÂ∞±‰ºöÁî®ÊèíÂÖ•ÊéíÂ∫è ÔºåÂê¶ÂàôÂ∞±‰ºö‰ΩøÁî®ÂèåËΩ¥Âø´ÈÄüÊéíÂ∫è„ÄÇ Â¶ÇÊûúÂ§ß‰∫é286Âë¢ÔºåÂÆÉÂ∞±‰ºöÂùöÊåÅÊï∞ÁªÑÁöÑËøûÁª≠ÂçáÂ∫èÂíåËøûÁª≠ÈôçÂ∫èÊÄßÂ•Ω‰∏çÂ•ΩÔºåÂ¶ÇÊûúÂ•ΩÁöÑËØùÂ∞±Áî®ÂΩíÂπ∂ÊéíÂ∫èÔºå‰∏çÂ•ΩÁöÑËØùÂ∞±Áî®Âø´ÈÄüÊéíÂ∫è„ÄÇ ÊØîËæÉÂô®ÊØîËæÉ‰∏§‰∏™Êï∞ÁªÑ‰∏Ä‰∏ç‰∏ÄÊ†∑~ 1234567891011121314151617public static boolean isEqual(int[] arr1, int[] arr2) &#123; if ((arr1 == null &amp;&amp; arr2 != null) || (arr1 != null &amp;&amp; arr2 == null)) &#123; return false; &#125; if (arr1 == null &amp;&amp; arr2 == null) &#123; return true; &#125; if (arr1.length != arr2.length) &#123; return false; &#125; for (int i = 0; i &lt; arr1.length; i++) &#123; if (arr1[i] != arr2[i]) &#123; return false; &#125; &#125; return true; &#125; ÊâìÂç∞Âô®123456789public static void printArray(int[] arr) &#123; if (arr == null) &#123; return; &#125; for (int i = 0; i &lt; arr.length; i++) &#123; System.out.print(arr[i] + " "); &#125; System.out.println();&#125; Â§çÂà∂Âô®12345678910public static int[] copyArray(int[] arr) &#123; if (arr == null) &#123; return null; &#125; int[] res = new int[arr.length]; for (int i = 0; i &lt; arr.length; i++) &#123; res[i] = arr[i]; &#125; return res; &#125; ‰∏ªÂáΩÊï∞12345678910111213141516171819202122public static void main(String[] args) &#123; int testTime = 500000; int maxSize = 100; int maxValue = 100; boolean succeed = true; for (int i = 0; i &lt; testTime; i++) &#123; int[] arr1 = generateRandomArray(maxSize, maxValue); int[] arr2 = copyArray(arr1); bubbleSort(arr1); comparator(arr2); if (!isEqual(arr1, arr2)) &#123; succeed = false; break; &#125; &#125; System.out.println(succeed ? "ÁâõÈÄºÔºåÁÆóÊ≥ïÂØπ‰∫Ü!" : "‚ùå!"); int[] arr = generateRandomArray(maxSize, maxValue); printArray(arr); bubbleSort(arr);//ÊµãËØïÁöÑÁÆóÊ≥ï printArray(arr);&#125; ËÑëÂ≠êËÑëÈòîÁñº Ê≠£ÁØáÂü∫‰∫éÊØîËæÉÁöÑÊéíÂ∫èÂÜíÊ≥°ÊéíÂ∫èÂéüÁêÜÂÜíÊ≥°ÊéíÂ∫èÁÆóÊ≥ïÁöÑÂéüÁêÜÂ¶Ç‰∏ãÔºö ÊØîËæÉÁõ∏ÈÇªÁöÑÂÖÉÁ¥†„ÄÇÂ¶ÇÊûúÁ¨¨‰∏Ä‰∏™ÊØîÁ¨¨‰∫å‰∏™Â§ßÔºåÂ∞±‰∫§Êç¢‰ªñ‰ª¨‰∏§‰∏™„ÄÇÊ≠§Êó∂Ëøô‰∏§‰∏™Êï∞ÔºåÊ∞∏ËøúÊòØÂêéÈù¢ÁöÑÊï∞Â§ß„ÄÇ Á¨¨‰∏ÄÂõûÂêàÂ∞ÜÊØè‰∏ÄÂØπÁõ∏ÈÇªÂÖÉÁ¥†ÂÅöÂêåÊ†∑ÁöÑÂ∑•‰Ωú„ÄÇÂõûÂêàÁªìÊùüÂêéÔºåÊúÄÂêéÁöÑÂÖÉÁ¥†ÊòØÊï¥‰∏™Êï∞ÁªÑÊúÄÂ§ßÁöÑÊï∞„ÄÇ Á¨¨‰∫åÂõûÂêà‚Ä¶Á¨¨nÂõûÂêàËøáÁ®ã‰∏≠ÔºåÂØπÈô§‰∫ÜÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†ÈáçÂ§ç‰ª•‰∏äÁöÑÊ≠•È™§„ÄÇ ÂÆûÁé∞123456789101112public static void bubbleSort(int[] arr) &#123; if (arr == null || arr.length &lt; 2) &#123; return; &#125; for (int end = arr.length - 1; end &gt; 0; end--) &#123;//endÊúÄÂêéÁöÑÊï∞ for (int i = 0; i &lt; e; i++) &#123; if (arr[i] &gt; arr[i + 1]) &#123; swap(arr, i, i + 1);//‰∫§Êç¢ &#125; &#125; &#125; &#125; Â§çÊùÇÂ∫¶Êó∂Èó¥Â§çÊùÇÂ∫¶ÔºöO(N¬≤) È¢ùÂ§ñÁ©∫Èó¥Â§çÊùÇÂ∫¶ÔºöO(1) ÈÄâÊã©ÊéíÂ∫èÂéüÁêÜ1.Á¨¨‰∏ÄÂõûÂêàÔºåÂ∞ÜÊåáÈíàÊåáÂêëÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÂ∞ÜÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÂíåÂâ©‰ΩôÁöÑÂÖÉÁ¥†ÊØîËæÉÔºåÊúÄÂ∞èÁöÑÂÖÉÁ¥†ÊîæÂà∞‰∏ÄÂè∑‰ΩçÁΩÆ„ÄÇ 2.Á¨¨‰∫åÂõûÂêà‚Ä¶Á¨¨nÂõûÂêàËøáÁ®ã‰∏≠ÔºåÊåáÈíàÂä†‰∏Ä„ÄÇÂØπÈô§‰∫ÜÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÈáçÂ§ç‰ª•‰∏äÁöÑÊ≠•È™§„ÄÇ ÂÆûÁé∞123456789101112public static void selectionSort(int[] arr) &#123; if (arr == null || arr.length &lt; 2) &#123; return; &#125; for (int i = 0; i &lt; arr.length - 1; i++) &#123; int minIndex = i; for (int j = i + 1; j &lt; arr.length; j++) &#123; minIndex = arr[j] &lt; arr[minIndex] ? j : minIndex; &#125; swap(arr, i, minIndex); &#125;&#125; Â§çÊùÇÂ∫¶Êó∂Èó¥Â§çÊùÇÂ∫¶ÔºöO(N¬≤) È¢ùÂ§ñÁ©∫Èó¥Â§çÊùÇÂ∫¶ÔºöO(1) ÊèíÂÖ•ÊéíÂ∫èÁöÑÂéüÁêÜ1.Á¨¨‰∏ÄÂõûÂêàÔºåÊØîËæÉÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÂíåÁ¨¨‰∫å‰∏™ÂÖÉÁ¥†Â§ßÂ∞èÔºåÂ§ßÁöÑÊîæÂú®Á¨¨‰∫å‰∏™‰ΩçÁΩÆ‰∏ä 2.Á¨¨‰∫åÂõûÂêàÔºåÂ∞ÜÁ¨¨‰∏â‰∏™ÂÖÉÁ¥†‰∏éÁ¨¨‰∫å„ÄÅÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÊØîËæÉÔºåÂ§ßÁöÑÊîæÂú®Á¨¨‰∏â‰∏™‰ΩçÁΩÆ‰∏ä 3.ËΩÆÂõû ÂÆûÁé∞12345678910public static void insertionSort(int[] arr) &#123; if (arr == null || arr.length &lt; 2) &#123; return; &#125; for (int i = 1; i &lt; arr.length; i++) &#123; for (int j = i - 1; j &gt;= 0 &amp;&amp; arr[j] &gt; arr[j + 1]; j--) &#123; swap(arr, j, j + 1); &#125; &#125;&#125; Â§çÊùÇÂ∫¶Êó∂Èó¥Â§çÊùÇÂ∫¶ÔºöO(N¬≤) È¢ùÂ§ñÁ©∫Èó¥Â§çÊùÇÂ∫¶ÔºöO(1) Â†ÜÊéíÂ∫èÂ†ÜÂÖ∂ÂÆûÂ∞±ÊòØÂÆåÂÖ®‰∫åÂèâÊ†ëÔºåÁúãÂ†ÜË¶ÅÈ¶ñÂÖàÁü•ÈÅìÂ§ßÈ°∂Â†Ü„ÄÅÂ∞èÈ°∂Â†Ü„ÄÇ ÊØè‰∏™ÁªìÁÇπÁöÑÂÄºÈÉΩÂ§ß‰∫éÊàñÁ≠â‰∫éÂÖ∂Â∑¶Âè≥Â≠©Â≠êÁªìÁÇπÁöÑÂÄºÔºåÁß∞‰∏∫Â§ßÈ°∂Â†ÜÔºõÊàñËÄÖÊØè‰∏™ÁªìÁÇπÁöÑÂÄºÈÉΩÂ∞è‰∫éÊàñÁ≠â‰∫éÂÖ∂Â∑¶Âè≥Â≠©Â≠êÁªìÁÇπÁöÑÂÄºÔºåÁß∞‰∏∫Â∞èÈ°∂Â†Ü„ÄÇ Â§ßÈ°∂Â†ÜÔºöarr[i] &gt;= arr[2i+1] &amp;&amp; arr[i] &gt;= arr[2i+2] Â∞èÈ°∂Â†ÜÔºöarr[i] &lt;= arr[2i+1] &amp;&amp; arr[i] &lt;= arr[2i+2] ÂéüÁêÜÂ∞ÜÂæÖÊéíÂ∫èÂ∫èÂàóÊûÑÈÄ†Êàê‰∏Ä‰∏™Â§ßÈ°∂Â†ÜÔºàÂçáÂ∫èÈááÁî®Â§ßÈ°∂Â†ÜÔºåÈôçÂ∫èÈááÁî®Â∞èÈ°∂Â†ÜÔºâÔºåÊ≠§Êó∂ÔºåÊï¥‰∏™Â∫èÂàóÁöÑÊúÄÂ§ßÂÄºÂ∞±ÊòØÂ†ÜÈ°∂ÁöÑÊ†πËäÇÁÇπ„ÄÇÂ∞ÜÂÖ∂‰∏éÊú´Â∞æÂÖÉÁ¥†ËøõË°å‰∫§Êç¢ÔºåÊ≠§Êó∂Êú´Â∞æÂ∞±‰∏∫ÊúÄÂ§ßÂÄº„ÄÇÁÑ∂ÂêéÂ∞ÜÂâ©‰Ωôn-1‰∏™ÂÖÉÁ¥†ÈáçÊñ∞ÊûÑÈÄ†Êàê‰∏Ä‰∏™Â†ÜÔºåËøôÊ†∑‰ºöÂæóÂà∞n‰∏™ÂÖÉÁ¥†ÁöÑÊ¨°Â∞èÂÄº„ÄÇÂ¶ÇÊ≠§ÂèçÂ§çÊâßË°åÔºå‰æøËÉΩÂæóÂà∞‰∏Ä‰∏™ÊúâÂ∫èÂ∫èÂàó‰∫Ü ‰ª£Á†Å123456789101112131415161718192021222324252627282930313233343536public static void heapSort(int[] arr) &#123; if (arr == null || arr.length &lt; 2) &#123; return; &#125; //0-i‰πãÈó¥ÁîüÊàêÂ§ßÊ†πÂ†ÜËøôÁßçÁªìÊûÑ for (int i = 0; i &lt; arr.length; i++) &#123; heapInsert(arr, i); &#125; int size = arr.length;//ÂÆö‰πâÊï∞ÁªÑÂ§ßÂ∞èÔºåÂèØ‰ª•Âà§Êñ≠ÊòØÂê¶Ë∂äÁïå swap(arr, 0, --size); while (size &gt; 0) &#123; heapify(arr, 0, size); swap(arr, 0, --size); &#125; &#125; //ÁîüÊàêÂ§ßÊ†πÂ†ÜËøôÁßçÁªìÊûÑ public static void heapInsert(int[] arr, int index) &#123; while (arr[index] &gt; arr[(index - 1) / 2]) &#123;//Â¶ÇÊûúÊàëËøô‰∏™ËäÇÁÇπÊØîÁà∂ËäÇÁÇπÂ§ß swap(arr, index, (index - 1) / 2);//‰∫§Êç¢ index = (index - 1) / 2;//ÂõûÂà∞Áà∂‰ΩçÁΩÆÁªßÁª≠ &#125; &#125; //Â∞ÜÊï∞ÂÄºÂ∞èÁöÑÂÖÉÁ¥†ÂæÄ‰∏ãÊ≤â public static void heapify(int[] arr, int index, int size) &#123; int left = index * 2 + 1; while (left &lt; size) &#123;//Â∑¶Â≠©Â≠êÂú®Â†Ü‰∏äÔºåÊ≤°Ë∂äÁïå int largest = left + 1 &lt; size &amp;&amp; arr[left + 1] &gt; arr[left] ? left + 1 : left;//ÊâæÂá∫Â∑¶Âè≥Â≠©Â≠ê‰∏≠ÊúÄÂ§ßÁöÑÊï∞ largest = arr[largest] &gt; arr[index] ? largest : index;//ÂíåÁà∂ÊØîËæÉ if (largest == index) &#123; break; &#125; swap(arr, largest, index); index = largest;//ÂõûÂà∞ËæÉÂ§ßËäÇÁÇπ left = index * 2 + 1; &#125; &#125; Â§çÊùÇÂ∫¶Â¶ÇÊûúÂè™ÊòØÂª∫Á´ãÂ†ÜÁöÑËøáÁ®ãÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫O(N) Êó∂Èó¥Â§çÊùÇÂ∫¶O(N*logN) È¢ùÂ§ñÁ©∫Èó¥Â§çÊùÇÂ∫¶O(1) Âø´ÈÄüÊéíÂ∫èÂø´ÈÄüÊéíÂ∫è‰∏çÊòØ‰∏ÄÁßçÁ®≥ÂÆöÁöÑÊéíÂ∫èÁÆóÊ≥ïÔºå‰πüÂ∞±ÊòØËØ¥ÔºåÂ§ö‰∏™Áõ∏ÂêåÁöÑÂÄºÁöÑÁõ∏ÂØπ‰ΩçÁΩÆ‰πüËÆ∏‰ºöÂú®ÁÆóÊ≥ïÁªìÊùüÊó∂‰∫ßÁîüÂèòÂä®„ÄÇ ÂÅáÂÆöÂú®ÂæÖÊéíÂ∫èÁöÑËÆ∞ÂΩïÂ∫èÂàó‰∏≠ÔºåÂ≠òÂú®Â§ö‰∏™ÂÖ∑ÊúâÁõ∏ÂêåÁöÑÂÖ≥ÈîÆÂ≠óÁöÑËÆ∞ÂΩïÔºåËã•ÁªèËøáÊéíÂ∫èÔºåËøô‰∫õËÆ∞ÂΩïÁöÑÁõ∏ÂØπÊ¨°Â∫è‰øùÊåÅ‰∏çÂèòÔºåÂç≥Âú®ÂéüÂ∫èÂàó‰∏≠Ôºår[i]=r[j]Ôºå‰∏îr[i]Âú®r[j]‰πãÂâçÔºåËÄåÂú®ÊéíÂ∫èÂêéÁöÑÂ∫èÂàó‰∏≠Ôºår[i]‰ªçÂú®r[j]‰πãÂâçÔºåÂàôÁß∞ËøôÁßçÊéíÂ∫èÁÆóÊ≥ïÊòØÁ®≥ÂÆöÁöÑÔºõÂê¶ÂàôÁß∞‰∏∫‰∏çÁ®≥ÂÆöÁöÑ„ÄÇ ÂéüÁêÜÊàëÂÖàËØ¥ËØ¥ÁªèÂÖ∏Âø´ÊéíÁöÑÊÄùË∑ØÂêß„ÄÇ Â∞ÜÊï∞ÁªÑÂàÜÊàê‰∏§ÈÉ®ÂàÜÔºå‰∏ÄÈÉ®ÂàÜÊòØÂ∞è‰∫éÁ≠â‰∫éÊüê‰∏™Êï∞ÁöÑÔºå‰∏ÄÈÉ®ÂàÜÊòØÂ§ß‰∫éÁ≠â‰∫éÊüê‰∏™Êï∞ÁöÑ„ÄÇËøô‰∏§ÈÉ®ÂàÜÂàùÂßãÊåáÈíàÂú®Êï∞ÁªÑÁöÑÂ∑¶(L)Âè≥(R)‰∏§Â§¥ÔºåÊ≠§Êó∂LÂíåRÂàÜÂà´ÊòØ‰∏Ä‰∏™ËæπÁïåÁÇπ„ÄÇ 1.ÂÖàÂÆö‰πâlessÂå∫ÂüüÂíåmoreÂå∫ÂüüÔºå‰ª£Ë°®ÊØîÊï∞ÁªÑ‰∏≠Êüê‰∏Ä‰∏™Êï∞Êõ¥Â∞èÊõ¥Â§ßÁöÑÂå∫Âüü„ÄÇÂàùÂßãlessÂå∫ÂüüÊòØL-1‰ª•Â∑¶ÁöÑÈÉ®ÂàÜÔºåmoreÂå∫ÂüüÊòØR‰ª•Âè≥ÁöÑÂå∫Âüü 2.Á¨¨‰∏ÄÂõûÂêàÔºå‰ªéÊï∞ÁªÑÂ∑¶ËæπÂºÄÂßã„ÄÇËã•LÊåáÈíàÊåáÁöÑËäÇÁÇπÂÄºÂ∞è‰∫éÊüê‰∏™Êï∞ÂÄºÔºålessÂå∫ÂüüÂêëÂè≥ÁßªÂä®‰∏Ä‰∏™‰ΩçÁΩÆ swap(arr,++less,L++);ÔºåLËäÇÁÇπ‰ΩçÁΩÆ+1ÂáÜÂ§á‰∏ã‰∏Ä‰∏™ÂõûÂêàÔºõËã•ÂÆÉÂ§ß‰∫éËøô‰∏™Êï∞ÂÄºÔºåmoreÂå∫ÂüüÂêëÂ∑¶Êâ©Âº†‰∏ÄÊ†ºÔºåÁÑ∂ÂêéÂ∞ÜËøô‰∏™ËäÇÁÇπÊîæÂà∞moreÂå∫Âüüswap(arr,--more,L++);ÔºåLËäÇÁÇπ‰ΩçÁΩÆ+1ÂáÜÂ§á‰∏ã‰∏Ä‰∏™ÂõûÂêàÔºõËã•‰ªñÁ≠â‰∫éËøô‰∏™Êï∞ÂÄºÔºå‰ªÄ‰πà‰πü‰∏çÁÆ°ÔºåÂè™ÊòØLËäÇÁÇπ‰ΩçÁΩÆ+1ÂáÜÂ§á‰∏ã‰∏Ä‰∏™ÂõûÂêà„ÄÇ 3.ÈáçÂ§ç‰∏äËø∞ËøáÁ®ãÔºåÂæóÂà∞‰∫Ü‰∏Ä‰∏™Êï∞ÁªÑÔºå‰ªñÁöÑLÊåáÈíàÂè≥ËæπÊó∂Â∞è‰∫éÊüê‰∏™Êï∞ÁöÑÔºåRÁöÑÂè≥ËæπÊó∂Â§ß‰∫éÊüê‰∏™Êï∞ÁöÑ„ÄÇ[L,R]Ëøô‰∏™Âå∫Èó¥ÊòØÁ≠â‰∫éÊüê‰∏™Êï∞ÁöÑ„ÄÇ 4.ËøîÂõûËøô‰∏™ÈÉΩÊòØÁõ∏ÂêåÊï∞ÁöÑÊï∞ÁªÑÁöÑÂ∑¶ËæπÁïå„ÄÅÂè≥ËæπÁïå 5.‰∏çÊñ≠ÈÄíÂΩí ÁªèÂÖ∏Âø´ÊéíÊúâ‰∏Ä‰∏™ÂºäÁ´Ø„ÄÇÂ∑¶ÈÉ®ÂàÜÂíåÂè≥ÈÉ®ÂàÜÁöÑËßÑÊ®°‰∏ç‰∏ÄÊ†∑ÊàñËÄÖÊúâ‰∏Ä‰∏™ÈÉ®ÂàÜËßÑÊ®°ÁâπÂà´Â§ßÔºåÁÆóÊ≥ïÊïàÁéá‰ºöÂèòÂ∑Æ„ÄÇ‰∏æ‰∏™Ê†óÂ≠êÔºåÂ¶ÇÊûúÊàëÊúâ‰∏™Êï∞ÁªÑ[1,1,3,4,7,6,1,2,1,5,1,7]ÔºåÊàëÊåáÂÆöÁöÑÊüê‰∏™Êï∞Â≠óÊòØ7ÔºåÈÇ£‰πàÈÇ£‰πàÊéíÂ∫èÂêéÂ∞±ÂèòÊàê‰∫Ü[1Ôºå1Ôºå1Ôºå1Ôºå1,2,3,4,5,6,7],ÁªèÂÖ∏Âø´ÊéíÁªìÊùüÂêéÂè™ÊêûÂÆö‰∫Ü‰∏Ä‰∏™‰∏Ä‰∏™Âå∫Èó¥Ôºà&lt;7ÁöÑÂå∫Èó¥ÔºâÔºåÂ§çÊùÇÂ∫¶Â∞±‰ªéÁêÜÊÉ≥Áä∂ÊÄÅ‰∏ãÁöÑOÔºàNÔºâÂèòÊàê‰∫ÜOÔºàN¬≤Ôºâ ÁÑ∂ÂêéÂ∞±Êúâ‰∫ÜÊîπËøõÂêéÁöÑÈöèÊú∫Âø´Êéí„ÄÇ ÈöèÊú∫Âø´ÊéíÊØîÁªèÂÖ∏Âø´ÊéíÂ§ö‰∫Ü‰∏Ä‰∏™ÈÄâÈöèÊú∫Êï∞ÁöÑËøáÁ®ã swap(arr, L + (int) (Math.random() * (R - L + 1)), R);„ÄÇÂ∞±ÊòØÈöèÊú∫ÁîüÊàêÊüê‰∏™Êï∞ÔºåËøôÊ†∑ÁîüÊàêÁöÑÂå∫Èó¥ËôΩÁÑ∂‰πü‰ºöÂá∫Áé∞‰∏äËø∞ÁªèÂÖ∏Âø´ÊéíÁöÑÊÅ∂Âä£ÊÉÖÂÜµÔºå‰ΩÜÊòØÊ≠§Êó∂ÁöÑÂ§çÊùÇÂ∫¶Â∞±‰ªéÂéüÊù•ÁöÑÊÅ∂Âä£‰∫ã‰ª∂ÂèòÊàê‰∫ÜÊúâÊ¶ÇÁéáÊÅ∂Âä£‰∫ã‰ª∂Ôºå‰ΩÜÊÄª‰ΩìÊúüÊúõÊòØÂ•ΩÁöÑ„ÄÇËøôÂ∞±ÂèòÊàê‰∫Ü‰∏Ä‰∏™Ê¶ÇÁéáÈóÆÈ¢ò„ÄÇ ‰ª£Á†Å‰ª•‰∏ã‰∏∫ÈöèÊú∫Âø´Êéí 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364public static void main(String[] args) &#123; int[] nums = &#123;9,10,45,36,98,1,3,5,8,6,4&#125;; quickSort(nums); for (int num : nums) &#123; System.out.print(num+","); &#125;&#125;/** * Âø´ÈÄüÊéíÂ∫èÔºå‰ΩøÂæóÊï¥Êï∞Êï∞ÁªÑ arr ÊúâÂ∫è */public static void quickSort(int[] arr) &#123; if (arr == null || arr.length &lt; 2) &#123; return; &#125; quickSort(arr, 0, arr.length - 1);&#125;/** * Âø´ÈÄüÊéíÂ∫èÔºå‰ΩøÂæóÊï¥Êï∞Êï∞ÁªÑ arr ÁöÑ [L, R] ÈÉ®ÂàÜÊúâÂ∫è */public static void quickSort(int[] arr, int L, int R) &#123; if(L &lt; R) &#123; // ÊääÊï∞ÁªÑ‰∏≠ÈöèÊú∫ÁöÑ‰∏Ä‰∏™ÂÖÉÁ¥†‰∏éÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†‰∫§Êç¢ÔºåËøôÊ†∑‰ª•ÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†‰Ωú‰∏∫Âü∫ÂáÜÂÄºÂÆûÈôÖ‰∏äÂ∞±ÊòØ‰ª•Êï∞ÁªÑ‰∏≠ÈöèÊú∫ÁöÑ‰∏Ä‰∏™ÂÖÉÁ¥†‰Ωú‰∏∫Âü∫ÂáÜÂÄº swap(arr, new Random().nextInt(R - L + 1) + L, R); int[] p = partition(arr, L, R); quickSort(arr, L, p[0] - 1); quickSort(arr, p[1] + 1, R); &#125;&#125;/** * ÂàÜÂå∫ÁöÑËøáÁ®ãÔºåÊï¥Êï∞Êï∞ÁªÑ arr ÁöÑ[L, R]ÈÉ®ÂàÜ‰∏äÔºå‰ΩøÂæóÔºö * Â§ß‰∫é arr[R] ÁöÑÂÖÉÁ¥†‰Ωç‰∫é[L, R]ÈÉ®ÂàÜÁöÑÂè≥ËæπÔºå‰ΩÜËøôÈÉ®ÂàÜÊï∞ÊçÆ‰∏ç‰∏ÄÂÆöÊúâÂ∫è * Â∞è‰∫é arr[R] ÁöÑÂÖÉÁ¥†‰Ωç‰∫é[L, R]ÈÉ®ÂàÜÁöÑÂ∑¶ËæπÔºå‰ΩÜËøôÈÉ®ÂàÜÊï∞ÊçÆ‰∏ç‰∏ÄÂÆöÊúâÂ∫è * Á≠â‰∫é arr[R] ÁöÑÂÖÉÁ¥†‰Ωç‰∫é[L, R]ÈÉ®ÂàÜÁöÑ‰∏≠Èó¥ * ËøîÂõûÁ≠â‰∫éÈÉ®ÂàÜÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑ‰∏ãÊ†áÂíåÊúÄÂêé‰∏Ä‰∏™‰∏ãÊ†áÁªÑÊàêÁöÑÊï¥Êï∞Êï∞ÁªÑ */public static int[] partition(int[] arr, int L, int R) &#123; int basic = arr[R]; int less = L - 1; int more = R + 1; while(L &lt; more) &#123; if(arr[L] &lt; basic) &#123; swap(arr, ++less, L++); &#125; else if (arr[L] &gt; basic) &#123; swap(arr, --more, L); &#125; else &#123; L++; &#125; &#125; return new int[] &#123; less + 1, more - 1 &#125;;&#125;/* * ‰∫§Êç¢Êï∞ÁªÑ arr ‰∏≠‰∏ãÊ†á‰∏∫ i Âíå‰∏ãÊ†á‰∏∫ j ‰ΩçÁΩÆÁöÑÂÖÉÁ¥† */public static void swap(int[] arr, int i, int j) &#123; int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp;&#125; Â§çÊùÇÂ∫¶ÁßëÂ≠¶ÂÆ∂Êï∞Â≠¶ËØÅÊòéÔºåÈïøÊúüÊúüÊúõÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫O(logN*N) Âø´ÈÄüÊéíÂ∫èÂèØ‰ª•ÂÅöÂà∞Á®≥ÂÆöÊÄßÈóÆÈ¢òÔºåÈùûÂ∏∏ÈöæÔºåË¶ÅÁü•ÈÅìÁöÑÂèØ‰ª•Ë∞∑Ê≠å‚Äú01 stable sort‚Äù ÔºåÂèçÊ≠£Êàë‰∏ç‰ºö„ÄÇ ÂΩíÂπ∂ÊéíÂ∫èÂéüÁêÜ1.Âíå‰∏äÈ¢ò‰∏ÄÊ†∑ÔºåÂÖàÂÆö‰πâÂ∑¶ËæπÁïåLÂè≥ËæπÁïåRÊï∞ÁªÑ‰∏≠ÔºåÁÑ∂ÂêéÂÆö‰πâ‰∏Ä‰∏™‰∏≠Èó¥ÂÄºmid = (r-l)/2 2.ÈÄíÂΩíÔºåÂú®ËæπÁïåÂÜÖÈÉ®‰∏çÊñ≠ÁöÑÊâæ‰∏≠Èó¥ÂÄºmid ÂÆûÁé∞1234567891011121314151617//ÂΩíÂπ∂ÊéíÂ∫èpublic static void mergeSort(int[] arr)&#123; if (arr==null || arr.length &lt;2)&#123; return; &#125; mergeSort(arr,0,arr.length-1);&#125;private static void mergeSort(int[] arr, int l, int r) &#123; if (l == r)&#123; return; &#125; int mid = l + ((r - l) &gt;&gt; 1); //(r-l)/2 mergeSort(arr,l,mid); mergeSort(arr,mid+1,r); merge(arr, l, mid, r);&#125; Â§çÊùÇÂ∫¶Êó∂Èó¥Â§çÊùÇÂ∫¶O(N*logN) È¢ùÂ§ñÁ©∫Èó¥Â§çÊùÇÂ∫¶O(N)ÔºåÂΩíÂπ∂ÊéíÂ∫èÁöÑÈ¢ùÂ§ñÁ©∫Èó¥Â§çÊùÇÂ∫¶ÂèØ‰ª•ÂèòÊàêO(1)Ôºå‰ΩÜÊòØÈùûÂ∏∏ÈöæÔºåÊàëÊ≤°Ëä±Êó∂Èó¥Á†îÁ©∂ÔºåË¶ÅÁü•ÈÅìÁöÑÂèØ‰ª•Ë∞∑Ê≠å‚ÄúÂΩíÂπ∂ÊéíÂ∫è ÂÜÖÈÉ®ÁºìÂ≠òÊ≥ï‚Äù ËøôÈáåÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÊÄé‰πàÁÆóÂá∫Êù•ÁöÑÂë¢ÔºüÊúâ‰∏Ä‰∏™masterÂÆöÁêÜÔºö T(N) = a*T(N/b) + O(N^d) ÂÖ∂‰∏≠ a &gt;= 1 and b &gt; 1 ÊòØÂ∏∏ÈáèÔºåÂÖ∂Ë°®Á§∫ÁöÑÊÑè‰πâÊòØnË°®Á§∫ÈóÆÈ¢òÁöÑËßÑÊ®°ÔºåaË°®Á§∫ÈÄíÂΩíÁöÑÊ¨°Êï∞‰πüÂ∞±ÊòØÁîüÊàêÁöÑÂ≠êÈóÆÈ¢òÊï∞ÔºåbË°®Á§∫ÊØèÊ¨°ÈÄíÂΩíÊòØÂéüÊù•ÁöÑ1/b‰πã‰∏Ä‰∏™ËßÑÊ®°„ÄÇ Â¶Ç‰∏ãÔºö 1) log(b,a) &gt; d -&gt; Â§çÊùÇÂ∫¶‰∏∫O(N^log(b,a)) 2) log(b,a) = d -&gt; Â§çÊùÇÂ∫¶‰∏∫O(N^d * logN) 3) log(b,a) &lt; d -&gt; Â§çÊùÇÂ∫¶‰∏∫O(N^d) ËøôÈáåÔºåÂΩíÂπ∂ÊéíÂ∫è‰∏≠b=2Ôºåa=2. ÈùûÂü∫‰∫éÊØîËæÉÁöÑÊéíÂ∫èÈùûÂü∫‰∫éÊØîËæÉÁöÑÊéíÂ∫èÔºå‰∏éË¢´ÊéíÂ∫èÁöÑÊ†∑Êú¨ÁöÑÂÆûÈôÖÊï∞ÊçÆÁä∂ÂÜµÂæàÊúâÂÖ≥Á≥ªÔºåÊâÄ‰ª•ÂÆûÈôÖ‰∏≠Âπ∂‰∏çÁªèÂ∏∏‰ΩøÁî® Ê°∂ÊéíÂ∫èÂéüÁêÜ1.ÊâæÂà∞‰∏Ä‰∏™Êï∞ÁªÑ‰∏≠ÊúÄÂ§ßÊï∞ÁöÑÂÄº 2.ÂÆö‰πâÔºàÊúÄÂ§ßÊï∞+1Ôºâ‰∏™Ê°∂ 3.Â∞ÜÊï∞ÁªÑÁöÑÊï∞ÊîæÂà∞ÂØπÂ∫îÁºñÂè∑Áõ∏ÂêåÁöÑÊ°∂‰∏≠ÔºåÊØèÊîæËøõ‰∏Ä‰∏™Êï∞ÔºåÊ°∂ÈáåÈù¢ÁöÑÊï∞ÂÄºÂä†‰∏Ä 4.‰æùÊ¨°‰ªéÂ∞èËæìÂá∫Ëøô‰∏™Ê°∂ÔºåÊ°∂ÈáåÁöÑÂÖÉÁ¥†Âá∫Áé∞Âá†Ê¨°Â∞±ËæìÂá∫Âá†‰∏™Ê°∂ÁöÑÁºñÂè∑ ‰ª£Á†Å1234567891011121314151617181920// only for 0~200 value public static void bucketSort(int[] arr) &#123; if (arr == null || arr.length &lt; 2) &#123; return; &#125; int max = Integer.MIN_VALUE; for (int i = 0; i &lt; arr.length; i++) &#123; max = Math.max(max, arr[i]); &#125; int[] bucket = new int[max + 1]; for (int i = 0; i &lt; arr.length; i++) &#123; bucket[arr[i]]++; &#125; int i = 0; for (int j = 0; j &lt; bucket.length; j++) &#123; while (bucket[j]-- &gt; 0) &#123; arr[i++] = j; &#125; &#125; &#125; Â§çÊùÇÂ∫¶Êó∂Èó¥Â§çÊùÇÂ∫¶O(N) È¢ùÂ§ñÁ©∫Èó¥Â§çÊùÇÂ∫¶O(N) ÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèã~]]></content>
      <tags>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Êï∞ÊçÆÁªìÊûÑ‰∏éÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖ≥‰∫éTreeMapÁöÑ‰∏™‰∫∫ÁêÜËß£]]></title>
    <url>%2F2018%2F07%2F23%2FTreeMap%2F</url>
    <content type="text"><![CDATA[Áæ§ÈáåÁöÑÂ§ßÂì•ËØ¥‰∫ÜÔºåË¶ÅÊÉ≥ÊáÇÁ∫¢ÈªëÊ†ëÁöÑÂ∫îÁî®ÔºåÂÖàË¶ÅÁúãTreeMap„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆhttps://blog.tengshe789.tech/ OKÔºåÁé∞Âú®ÂºÄÂßãÔºö Á∫¢ÈªëÊ†ëÁÆÄ‰ªãÁ∫¢ÈªëÊ†ëÂèàÁß∞Á∫¢-Èªë‰∫åÂèâÊ†ëÔºåÂÆÉÈ¶ñÂÖàÊòØ‰∏ÄÈ¢ó‰∫åÂèâÊ†ëÔºåÂÆÉÂÖ∑‰Ωì‰∫åÂèâÊ†ëÊâÄÊúâÁöÑÁâπÊÄß„ÄÇÂêåÊó∂Á∫¢ÈªëÊ†ëÊõ¥ÊòØ‰∏ÄÈ¢óËá™Âπ≥Ë°°ÁöÑÊéíÂ∫è‰∫åÂèâÊ†ë„ÄÇ ‚Äã ‰∏ÄËà¨ÁöÑ‰∫åÂèâÊ†ë‰ªñ‰ª¨ÈÉΩÈúÄË¶ÅÊª°Ë∂≥‰∏Ä‰∏™Âü∫Êú¨ÊÄßË¥®‚ÄìÂç≥Ê†ë‰∏≠ÁöÑ‰ªª‰ΩïËäÇÁÇπÁöÑÂÄºÂ§ß‰∫éÂÆÉÁöÑÂ∑¶Â≠êËäÇÁÇπÔºå‰∏îÂ∞è‰∫éÂÆÉÁöÑÂè≥Â≠êËäÇÁÇπ„ÄÇÂõ†‰∏∫ÊåâÁÖßËøô‰∏™Âü∫Êú¨ÊÄßË¥®‰ΩøÂæóÊ†ëÁöÑÊ£ÄÁ¥¢ÊïàÁéáÂ§ßÂ§ßÊèêÈ´ò„ÄÇ‰ΩÜÊàë‰ª¨Áü•ÈÅìÂú®ÁîüÊàê‰∫åÂèâÊ†ëÁöÑËøáÁ®ãÊòØÈùûÂ∏∏ÂÆπÊòìÂ§±Ë°°ÁöÑÔºåÊúÄÂùèÁöÑÊÉÖÂÜµÂ∞±ÊòØ‰∏ÄËæπÂÄíÔºàÂè™ÊúâÂè≥/Â∑¶Â≠êÊ†ëÔºâÔºåËøôÊ†∑ÂäøÂøÖ‰ºöÂØºËá¥‰∫åÂèâÊ†ëÁöÑÊ£ÄÁ¥¢ÊïàÁéáÂ§ßÂ§ßÈôç‰ΩéÔºàO(n)ÔºâÔºåÊâÄ‰ª•‰∏∫‰∫ÜÁª¥ÊåÅ‰∫åÂèâÊ†ëÁöÑÂπ≥Ë°°ÔºåÂ§ßÁâõ‰ª¨ÊèêÂá∫‰∫ÜÂêÑÁßçÂÆûÁé∞ÁöÑÁÆóÊ≥ïÔºåÂ¶ÇÔºöAVLÔºåSBTÔºå‰º∏Â±ïÊ†ëÔºåTREAP ÔºåÁ∫¢ÈªëÊ†ëÁ≠âÁ≠â„ÄÇ ‚Äã Âπ≥Ë°°‰∫åÂèâÊ†ëÂøÖÈ°ªÂÖ∑Â§áÂ¶Ç‰∏ãÁâπÊÄßÔºöÂÆÉÊòØ‰∏ÄÊ£µÁ©∫Ê†ëÊàñÂÆÉÁöÑÂ∑¶Âè≥‰∏§‰∏™Â≠êÊ†ëÁöÑÈ´òÂ∫¶Â∑ÆÁöÑÁªùÂØπÂÄº‰∏çË∂ÖËøá1ÔºåÂπ∂‰∏îÂ∑¶Âè≥‰∏§‰∏™Â≠êÊ†ëÈÉΩÊòØ‰∏ÄÊ£µÂπ≥Ë°°‰∫åÂèâÊ†ë„ÄÇ‰πüÂ∞±ÊòØËØ¥ËØ•‰∫åÂèâÊ†ëÁöÑ‰ªª‰Ωï‰∏Ä‰∏™Á≠âÁ≠âÂ≠êËäÇÁÇπÔºåÂÖ∂Â∑¶Âè≥Â≠êÊ†ëÁöÑÈ´òÂ∫¶ÈÉΩÁõ∏Ëøë„ÄÇ Á∫¢ÈªëÊ†ëÈ°æÂêçÊÄù‰πâÂ∞±ÊòØËäÇÁÇπÊòØÁ∫¢Ëâ≤ÊàñËÄÖÈªëËâ≤ÁöÑÂπ≥Ë°°‰∫åÂèâÊ†ëÔºåÂÆÉÈÄöËøáÈ¢úËâ≤ÁöÑÁ∫¶ÊùüÊù•Áª¥ÊåÅÁùÄ‰∫åÂèâÊ†ëÁöÑÂπ≥Ë°°„ÄÇÂØπ‰∫é‰∏ÄÊ£µÊúâÊïàÁöÑÁ∫¢ÈªëÊ†ë‰∫åÂèâÊ†ëËÄåË®ÄÊàë‰ª¨ÂøÖÈ°ªÂ¢ûÂä†Â¶Ç‰∏ãËßÑÂàôÔºö ‚Äã 1„ÄÅÊØè‰∏™ËäÇÁÇπÈÉΩÂè™ËÉΩÊòØÁ∫¢Ëâ≤ÊàñËÄÖÈªëËâ≤ ‚Äã 2„ÄÅÊ†πËäÇÁÇπÊòØÈªëËâ≤ ‚Äã 3„ÄÅÊØè‰∏™Âè∂ËäÇÁÇπÔºàNILËäÇÁÇπÔºåÁ©∫ËäÇÁÇπÔºâÊòØÈªëËâ≤ÁöÑ„ÄÇ ‚Äã 4„ÄÅÂ¶ÇÊûú‰∏Ä‰∏™ÁªìÁÇπÊòØÁ∫¢ÁöÑÔºåÂàôÂÆÉ‰∏§‰∏™Â≠êËäÇÁÇπÈÉΩÊòØÈªëÁöÑ„ÄÇ‰πüÂ∞±ÊòØËØ¥Âú®‰∏ÄÊù°Ë∑ØÂæÑ‰∏ä‰∏çËÉΩÂá∫Áé∞Áõ∏ÈÇªÁöÑ‰∏§‰∏™Á∫¢Ëâ≤ÁªìÁÇπ„ÄÇ ‚Äã 5„ÄÅ‰ªé‰ªª‰∏ÄËäÇÁÇπÂà∞ÂÖ∂ÊØè‰∏™Âè∂Â≠êÁöÑÊâÄÊúâË∑ØÂæÑÈÉΩÂåÖÂê´Áõ∏ÂêåÊï∞ÁõÆÁöÑÈªëËâ≤ËäÇÁÇπ„ÄÇ ‚Äã Ëøô‰∫õÁ∫¶ÊùüÂº∫Âà∂‰∫ÜÁ∫¢ÈªëÊ†ëÁöÑÂÖ≥ÈîÆÊÄßË¥®: ‰ªéÊ†πÂà∞Âè∂Â≠êÁöÑÊúÄÈïøÁöÑÂèØËÉΩË∑ØÂæÑ‰∏çÂ§ö‰∫éÊúÄÁü≠ÁöÑÂèØËÉΩË∑ØÂæÑÁöÑ‰∏§ÂÄçÈïø„ÄÇÁªìÊûúÊòØËøôÊ£µÊ†ëÂ§ßËá¥‰∏äÊòØÂπ≥Ë°°ÁöÑ„ÄÇÂõ†‰∏∫Êìç‰ΩúÊØîÂ¶ÇÊèíÂÖ•„ÄÅÂà†Èô§ÂíåÊü•ÊâæÊüê‰∏™ÂÄºÁöÑÊúÄÂùèÊÉÖÂÜµÊó∂Èó¥ÈÉΩË¶ÅÊ±Ç‰∏éÊ†ëÁöÑÈ´òÂ∫¶ÊàêÊØî‰æãÔºåËøô‰∏™Âú®È´òÂ∫¶‰∏äÁöÑÁêÜËÆ∫‰∏äÈôêÂÖÅËÆ∏Á∫¢ÈªëÊ†ëÂú®ÊúÄÂùèÊÉÖÂÜµ‰∏ãÈÉΩÊòØÈ´òÊïàÁöÑÔºåËÄå‰∏çÂêå‰∫éÊôÆÈÄöÁöÑ‰∫åÂèâÊü•ÊâæÊ†ë„ÄÇÊâÄ‰ª•Á∫¢ÈªëÊ†ëÂÆÉÊòØÂ§çÊùÇËÄåÈ´òÊïàÁöÑÔºåÂÖ∂Ê£ÄÁ¥¢ÊïàÁéáO(log n)„ÄÇ‰∏ãÂõæ‰∏∫‰∏ÄÈ¢óÂÖ∏ÂûãÁöÑÁ∫¢Èªë‰∫åÂèâÊ†ë„ÄÇ ÂÖ≥‰∫éTreeMapÊàëÊ≤°ÁúãÊáÇÂïäÂïäÂïäÂïäÔºåÊàëÁúãÊáÇ‰∫ÜÂú®Êõ¥Êñ∞(Á´ãFLAGüö©)]]></content>
      <tags>
        <tag>Ê∫êÁ†Å</tag>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[A Ê≠ªÈîÅ „ÅÆ Áâ©ËØ≠(Àâ‚ñΩÀâÔºõ)...]]></title>
    <url>%2F2018%2F07%2F23%2FA-%E6%AD%BB%E9%94%81%2F</url>
    <content type="text"><![CDATA[1234567891011121314151617181920212223242526272829303132333435363738394041/** * @author tengshe789 */public class DeadLock &#123; public static String obj1 = "obj1"; public static String obj2 = "obj2"; public static void main(String[] args)&#123; new Thread(()-&gt;&#123; try&#123; System.out.println("Lock1 running"); while(true)&#123; synchronized(DeadLock.obj1)&#123; System.out.println("Lock1 lock obj1"); Thread.sleep(3000);//Ëé∑Âèñobj1ÂêéÂÖàÁ≠â‰∏Ä‰ºöÂÑøÔºåËÆ©Lock2ÊúâË∂≥Â§üÁöÑÊó∂Èó¥ÈîÅ‰Ωèobj2 synchronized(DeadLock.obj2)&#123; System.out.println("Lock1 lock obj2"); &#125; &#125; &#125; &#125;catch(Exception e)&#123; e.printStackTrace(); &#125; &#125;).start();//first thread with lambda new Thread(()-&gt;&#123; try&#123; System.out.println("Lock2 running"); while(true)&#123; synchronized(DeadLock.obj2)&#123; System.out.println("Lock2 lock obj2"); Thread.sleep(3000); synchronized(DeadLock.obj1)&#123; System.out.println("Lock2 lock obj1"); &#125; &#125; &#125; &#125;catch(Exception e)&#123; e.printStackTrace(); &#125; &#125;).start();//second thread &#125;&#125; ÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèã~]]></content>
      <tags>
        <tag>Êó•Â∏∏</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖ≥‰∫éLinkedHashmapÁöÑ‰∏™‰∫∫ÁêÜËß£]]></title>
    <url>%2F2018%2F07%2F18%2F%E5%85%B3%E4%BA%8ELinkedHashmap%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%90%86%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[Â§ßÂ§öÊï∞ÊÉÖÂÜµ‰∏ãÔºåÂè™Ë¶Å‰∏çÊ∂âÂèäÁ∫øÁ®ãÂÆâÂÖ®ÈóÆÈ¢òÔºåMapÂü∫Êú¨ÈÉΩÂèØ‰ª•‰ΩøÁî®HashMapÔºå‰∏çËøáHashMapÊúâ‰∏Ä‰∏™ÈóÆÈ¢òÔºåÂ∞±ÊòØËø≠‰ª£HashMapÁöÑÈ°∫Â∫èÂπ∂‰∏çÊòØHashMapÊîæÁΩÆÁöÑÈ°∫Â∫è„ÄÇHashMapÁöÑËøô‰∏ÄÁº∫ÁÇπÂæÄÂæÄ‰ºöÂ∏¶Êù•Âõ∞Êâ∞ÔºåÂõ†‰∏∫Êúâ‰∫õÂú∫ÊôØÔºåÊàë‰ª¨ÈúÄË¶Å‰∏Ä‰∏™ÊúâÂ∫èÁöÑMap„ÄÇLinkedHashMapÂ∞±ÂèØ‰ª•ÂÅöÂà∞ÔºåÂÆÉËôΩÁÑ∂Â¢ûÂä†‰∫ÜÊó∂Èó¥ÂíåÁ©∫Èó¥‰∏äÁöÑÂºÄÈîÄÔºå‰ΩÜÊòØÈÄöËøáÁª¥Êä§‰∏Ä‰∏™ËøêË°å‰∫éÊâÄÊúâÊù°ÁõÆÁöÑÂèåÂêëÈìæË°®ÔºåLinkedHashMap‰øùËØÅ‰∫ÜÂÖÉÁ¥†Ëø≠‰ª£ÁöÑÈ°∫Â∫è„ÄÇÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆhttps://blog.tengshe789.tech/ Êï∞ÊçÆÁªìÊûÑÊâìÂºÄÊ∫êÁ†ÅÂèØ‰ª•ÁúãÂà∞Ôºö 123456789/** * HashMap.Node subclass for normal LinkedHashMap entries. */ static class Entry&lt;K,V&gt; extends HashMap.Node&lt;K,V&gt; &#123; Entry&lt;K,V&gt; before, after; Entry(int hash, K key, V value, Node&lt;K,V&gt; next) &#123; super(hash, key, value, next); &#125; &#125; LinkedHashMapÁªßÊâø‰∫ÜHashMapÁöÑEntryÔºåÂπ∂Êñ∞Â¢ûÂä†‰∫Ü‰∏§‰∏™ÊåáÈíà ÂèÇÁÖß‰∏Ä‰∏ãÁΩëÁªú‰∏äÊêúÂàÆÁöÑÂõæÁâáÔºåÂèØ‰ª•ÁúãÂá∫Êï∞ÊçÆÁªìÊûÑ‰∏∫Êï∞ÁªÑ + ÂçïÈìæË°® + Á∫¢ÈªëÊ†ë + ÂèåÈìæË°®ÔºåÊØîHashMapÂ§ö‰∫Ü‰∏Ä‰∏™ÂèåÂêëÈìæË°®ÔºåÂ∞±ÊòØÂà©Áî®‰∫ÜÂ§¥ËäÇÁÇπÂíåÂÖ∂‰ΩôÁöÑÂêÑ‰∏™ËäÇÁÇπ‰πãÈó¥ÈÄöËøá Entry ‰∏≠ÁöÑ after Âíå before ÊåáÈíàËøõË°åÂÖ≥ËÅî„ÄÇ ÊûÑÈÄ†ÊñπÊ≥ïÁúã‰∏Ä‰∏ãÊûÑÈÄ†ÊñπÊ≥ï„ÄÇ 12345678910111213141516171819202122public LinkedHashMap(int initialCapacity, float loadFactor) &#123; super(initialCapacity, loadFactor); accessOrder = false; &#125; public LinkedHashMap(int initialCapacity) &#123; super(initialCapacity); accessOrder = false; &#125; public LinkedHashMap() &#123; super(); accessOrder = false; &#125; public LinkedHashMap(Map&lt;? extends K, ? extends V&gt; m) &#123; super(); accessOrder = false; putMapEntries(m, false); &#125; ÊúâÂõõ‰∏™ÊûÑÈÄ†ÊñπÊ≥ïÔºåÊØè‰∏Ä‰∏™ÁöÑÊûÑÈÄ†ÊñπÊ≥ïÁ¨¨‰∏ÄÂè•ËØùÂü∫Êú¨ÈÉΩÊòØË∞ÉÁî®Áà∂Á±ªHashMapÊñπÊ≥ï„ÄÇ‰º∞ËÆ°ÊòØÁî®Â§öÊÄÅÊù•ÂÆûÁé∞ÁöÑÁõ∏ÂÖ≥ÂäüËÉΩ„ÄÇÊØî HashMap Â§ö‰∫Ü‰∏Ä‰∏™ accessOrder ÁöÑÂèÇÊï∞ÔºåÁî®Êù•ÊåáÂÆöÊåâÁÖß LRU ÊéíÂàóÊñπÂºèËøòÊòØÈ°∫Â∫èÊèíÂÖ•ÁöÑÊéíÂ∫èÊñπÂºè Ê∑ªÂä†Áúã LinkedHashMap ÁöÑ put() ÊñπÊ≥ï‰πãÂâçÂÖàÁúãÁúã HashMap ÁöÑ putVal ÊñπÊ≥ïÔºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445final V putVal(int hash, K key, V value, boolean onlyIfAbsent, boolean evict) &#123; Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i; if ((tab = table) == null || (n = tab.length) == 0) n = (tab = resize()).length; if ((p = tab[i = (n - 1) &amp; hash]) == null) tab[i] = newNode(hash, key, value, null); else &#123; Node&lt;K,V&gt; e; K k; if (p.hash == hash &amp;&amp; ((k = p.key) == key || (key != null &amp;&amp; key.equals(k)))) e = p; else if (p instanceof TreeNode) e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value); else &#123; for (int binCount = 0; ; ++binCount) &#123; if ((e = p.next) == null) &#123; p.next = newNode(hash, key, value, null); if (binCount &gt;= TREEIFY_THRESHOLD - 1) // -1 for 1st treeifyBin(tab, hash); break; &#125; if (e.hash == hash &amp;&amp; ((k = e.key) == key || (key != null &amp;&amp; key.equals(k)))) break; p = e; &#125; &#125; if (e != null) &#123; // existing mapping for key V oldValue = e.value; if (!onlyIfAbsent || oldValue == null) e.value = value; /* =============================Êï≤ÈªëÊùø========================================== */ afterNodeAccess(e); return oldValue; &#125; &#125; ++modCount; if (++size &gt; threshold) resize(); afterNodeInsertion(evict); return null; &#125; ÂÖ∂ÂÆûËøôÁØáÂ∑≤ÁªèÊòØÊàëÊó©ÊúâÂáÜÂ§áÁöÑÔºåÁ¨¨‰∏ÄÊ¨°ÁúãÊ∫êÁ†ÅÁöÑÊó∂ÂÄôÂ∑≤ÁªèÊÉä‰∫Ü„ÄÇLinkedHashMap Ëá™Â∑±Ê≤°ÊúâÈáçÂÜôputÊñπÊ≥ïÔºåÂÖ®ÊòØÁÖßÁùÄ‰ªñÁàπÊê¨ËøáÊù•ÁöÑÔºåÊó†Ëµñ Âïä„ÄÇ‰ª£Á†Å‰∏≠Êï≤ÈªëÊùø‰ΩçÁΩÆÔºåÊòØLinkedHashMap ÈáçÂÜô‰∫Ü afterNodeAccess() Ëøô‰∏™ÊñπÊ≥ï„ÄÇ 12345678910111213141516171819202122232425262728//Â∞ÜÊúÄËøë‰ΩøÁî®ÁöÑNode eÔºåÊîæÂú®ÈìæË°®ÁöÑÊúÄÊú´Â∞ævoid afterNodeAccess(Node&lt;K,V&gt; e) &#123; // move node to last LinkedHashMap.Entry&lt;K,V&gt; last; //‰ªÖÂΩìÊåâÁÖßLRUÂéüÂàô‰∏îe‰∏çÂú®ÊúÄÊú´Â∞æÔºåÊâçÊâßË°å‰øÆÊîπÈìæË°®ÔºåÂ∞ÜeÁßªÂà∞ÈìæË°®ÊúÄÊú´Â∞æÁöÑÊìç‰Ωú //accessOrder‰∏∫trueÂàôË°®Á§∫ÊåâÁÖßÂü∫‰∫éËÆøÈóÆÁöÑÈ°∫Â∫èÊù•ÊéíÂàó if (accessOrder &amp;&amp; (last = tail) != e) &#123; //Â∞ÜeËµãÂÄº‰∏¥Êó∂ËäÇÁÇπpÔºå bÊòØeÁöÑÂâç‰∏Ä‰∏™ËäÇÁÇπÔºå aÊòØeÁöÑÂêé‰∏Ä‰∏™ËäÇÁÇπ LinkedHashMap.Entry&lt;K,V&gt; p = (LinkedHashMap.Entry&lt;K,V&gt;)e, b = p.before, a = p.after; //ËäÇÁÇπÁßªÂä®ËøáÁ®ã p.after = null; if (b == null) head = a; else b.after = a; if (a != null) a.before = b; else last = b; if (last == null) head = p; else &#123; p.before = last; last.after = p; &#125; tail = p; ++modCount; &#125; ÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåjuejinÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèã~]]></content>
      <tags>
        <tag>Ê∫êÁ†Å</tag>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖ≥‰∫éConcurrentHashMap1.8ÁöÑ‰∏™‰∫∫ÁêÜËß£]]></title>
    <url>%2F2018%2F07%2F17%2FConcurrentHashMap1-8%2F</url>
    <content type="text"><![CDATA[ConcurrenHashMap „ÄÇ‰∏ãÈù¢ÂàÜ‰∫´‰∏Ä‰∏ãÊàëÂØπConcurrentHashMap ÁöÑÁêÜËß£Ôºå‰∏ªË¶ÅÁî®‰∫é‰∏™‰∫∫Â§áÂøò„ÄÇÂ¶ÇÊûúÊúâ‰∏çÂØπÔºåËØ∑ÊâπËØÑ„ÄÇ HashMap‚Äú‰∏•Èáç‚ÄùÁöÑÂãæËµ∑‰∫ÜÊàëÂØπHashMapÂÆ∂ÊóèÁöÑÂ•ΩÂ•áÂøÉÔºå‰∏ãÈù¢ÂàÜ‰∫´‰∏Ä‰∏ãÊàëÂØπConcurrentHashMap ÁöÑÁêÜËß£Ôºå‰∏ªË¶ÅÁî®‰∫é‰∏™‰∫∫Â§áÂøò„ÄÇÂ¶ÇÊûúÊúâ‰∏çÂØπÔºåËØ∑ÊâπËØÑ„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆhttps://blog.tengshe789.tech/ ÊÄªËµ∑HashMapÊòØÊàë‰ª¨Âπ≥Êó∂ÂºÄÂèëËøáÁ®ã‰∏≠Áî®ÁöÑÊØîËæÉÂ§öÁöÑÈõÜÂêàÔºå‰ΩÜÂÆÉÊòØÈùûÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÂú®Ê∂âÂèäÂà∞Â§öÁ∫øÁ®ãÂπ∂ÂèëÁöÑÊÉÖÂÜµÔºåËøõË°ågetÊìç‰ΩúÊúâÂèØËÉΩ‰ºöÂºïËµ∑Ê≠ªÂæ™ÁéØÔºåÂØºËá¥CPUÂà©Áî®ÁéáÊé•Ëøë100%„ÄÇ Âõ†Ê≠§ÈúÄË¶ÅÊîØÊåÅÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÂπ∂ÂèëÂÆπÂô® ConcurrentHashMap „ÄÇ Êï∞ÊçÆÁªìÊûÑ ÈáçË¶ÅÊàêÂëòÂèòÈáè12345/** * The array of bins. Lazily initialized upon first insertion. * Size is always a power of two. Accessed directly by iterators. */ transient volatile Node&lt;K,V&gt;[] table; table‰ª£Ë°®Êï¥‰∏™ÂìàÂ∏åË°®„ÄÇ ÈªòËÆ§‰∏∫nullÔºåÂàùÂßãÂåñÂèëÁîüÂú®Á¨¨‰∏ÄÊ¨°ÊèíÂÖ•Êìç‰ΩúÔºåÈªòËÆ§Â§ßÂ∞è‰∏∫16ÁöÑÊï∞ÁªÑÔºåÁî®Êù•Â≠òÂÇ®NodeËäÇÁÇπÊï∞ÊçÆÔºåÊâ©ÂÆπÊó∂Â§ßÂ∞èÊÄªÊòØ2ÁöÑÂπÇÊ¨°Êñπ„ÄÇ 1234/** * The next table to use; non-null only while resizing. */ private transient volatile Node&lt;K,V&gt;[] nextTable; nextTableÊòØ‰∏Ä‰∏™ËøûÊé•Ë°®ÔºåÁî®‰∫éÂìàÂ∏åË°®Êâ©ÂÆπÔºåÈªòËÆ§‰∏∫nullÔºåÊâ©ÂÆπÊó∂Êñ∞ÁîüÊàêÁöÑÊï∞ÁªÑÔºåÂÖ∂Â§ßÂ∞è‰∏∫ÂéüÊï∞ÁªÑÁöÑ‰∏§ÂÄç„ÄÇ 123456/** * Base counter value, used mainly when there is no contention, * but also as a fallback during table initialization * races. Updated via CAS. */ private transient volatile long baseCount; baseCount‰øùÂ≠òÁùÄÊï¥‰∏™ÂìàÂ∏åË°®‰∏≠Â≠òÂÇ®ÁöÑÊâÄÊúâÁöÑÁªìÁÇπÁöÑ‰∏™Êï∞ÊÄªÂíåÔºåÊúâÁÇπÁ±ª‰ºº‰∫é HashMap ÁöÑ size Â±ûÊÄß„ÄÇ Ëøô‰∏™Êï∞ÈÄöËøáCASÁÆóÊ≥ïÊõ¥Êñ∞ 123456789/** * Table initialization and resizing control. When negative, the * table is being initialized or resized: -1 for initialization, * else -(1 + the number of active resizing threads). Otherwise, * when table is null, holds the initial table size to use upon * creation, or 0 for default. After initialization, holds the * next element count value upon which to resize the table. */ private transient volatile int sizeCtl; ÂàùÂßãÂåñÂìàÂ∏åË°®ÂíåÊâ©ÂÆπ rehash ÁöÑËøáÁ®ãÔºåÈÉΩÈúÄË¶Å‰æùËµñsizeCtl„ÄÇËØ•Â±ûÊÄßÊúâ‰ª•‰∏ãÂá†ÁßçÂèñÂÄºÔºö 0ÔºöÈªòËÆ§ÂÄº -1Ôºö‰ª£Ë°®ÂìàÂ∏åË°®Ê≠£Âú®ËøõË°åÂàùÂßãÂåñ Â§ß‰∫é0ÔºöÁõ∏ÂΩì‰∫é HashMap ‰∏≠ÁöÑ thresholdÔºåË°®Á§∫ÈòàÂÄº Â∞è‰∫é-1Ôºö‰ª£Ë°®ÊúâÂ§ö‰∏™Á∫øÁ®ãÊ≠£Âú®ËøõË°åÊâ©ÂÆπ„ÄÇÔºàË≠¨Â¶ÇÔºö-N Ë°®Á§∫ÊúâN-1‰∏™Á∫øÁ®ãÊ≠£Âú®ËøõË°åÊâ©ÂÆπÊìç‰Ωú Ôºâ ÊûÑÈÄ†ÊñπÊ≥ï1234567891011121314public ConcurrentHashMap() &#123; &#125;public ConcurrentHashMap(int initialCapacity) &#123; if (initialCapacity &lt; 0) throw new IllegalArgumentException(); int cap = ((initialCapacity &gt;= (MAXIMUM_CAPACITY &gt;&gt;&gt; 1)) ? MAXIMUM_CAPACITY : tableSizeFor(initialCapacity + (initialCapacity &gt;&gt;&gt; 1) + 1));//MAXIMUM_CAPACITY = 1 &lt;&lt; 30 this.sizeCtl = cap;//ConcurrentHashMapÂú®ÊûÑÈÄ†ÂáΩÊï∞‰∏≠Âè™‰ºöÂàùÂßãÂåñsizeCtlÂÄºÔºåÂπ∂‰∏ç‰ºöÁõ¥Êé•ÂàùÂßãÂåñtableÔºåËÄåÊòØÂª∂ÁºìÂà∞Á¨¨‰∏ÄÊ¨°putÊìç‰Ωú„ÄÇ &#125;public ConcurrentHashMap(Map&lt;? extends K, ? extends V&gt; m) &#123; this.sizeCtl = DEFAULT_CAPACITY;//DEFAULT_CAPACITY = 16 putAll(m); &#125; ÊûÑÈÄ†ÊñπÊ≥ïÊòØ‰∏â‰∏™„ÄÇÈáçÁÇπÊòØÁ¨¨‰∫å‰∏™ÔºåÂ∏¶ÂèÇÁöÑÊûÑÈÄ†ÊñπÊ≥ï„ÄÇËøô‰∏™Â∏¶ÂèÇÁöÑÊûÑÈÄ†ÊñπÊ≥ï‰ºöË∞ÉÁî®tableSizeFor()ÊñπÊ≥ïÔºåÁ°Æ‰øùtableÁöÑÂ§ßÂ∞èÊÄªÊòØ2ÁöÑÂπÇÊ¨°ÊñπÔºàÂÅáËÆæÂèÇÊï∞‰∏∫100ÔºåÊúÄÁªà‰ºöË∞ÉÊï¥Êàê256Ôºâ„ÄÇÁÆóÊ≥ïÂ¶Ç‰∏ãÔºö 12345678910111213/** * Returns a power of two table size for the given desired capacity. * See Hackers Delight, sec 3.2 */ private static final int tableSizeFor(int c) &#123; int n = c - 1; n |= n &gt;&gt;&gt; 1; n |= n &gt;&gt;&gt; 2; n |= n &gt;&gt;&gt; 4; n |= n &gt;&gt;&gt; 8; n |= n &gt;&gt;&gt; 16; return (n &lt; 0) ? 1 : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1; &#125; PUT()ÊñπÊ≥ïput()Ë∞ÉÁî®putVal()ÊñπÊ≥ïÔºåËÆ©Êàë‰ª¨ÁúãÁúãÔºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576final V putVal(K key, V value, boolean onlyIfAbsent) &#123; //ÂØπ‰º†ÂÖ•ÁöÑÂèÇÊï∞ËøõË°åÂêàÊ≥ïÊÄßÂà§Êñ≠ if (key == null || value == null) throw new NullPointerException(); int hash = spread(key.hashCode());//ËÆ°ÁÆóÈîÆÊâÄÂØπÂ∫îÁöÑ hash ÂÄº int binCount = 0; for (Node&lt;K,V&gt;[] tab = table;;) &#123; Node&lt;K,V&gt; f; int n, i, fh; //Â¶ÇÊûúÂìàÂ∏åË°®ËøòÊú™ÂàùÂßãÂåñÔºåÈÇ£‰πàÂàùÂßãÂåñÂÆÉ if (tab == null || (n = tab.length) == 0) tab = initTable(); //Ê†πÊçÆhashÂÄºËÆ°ÁÆóÂá∫Âú®tableÈáåÈù¢ÁöÑ‰ΩçÁΩÆ else if ((f = tabAt(tab, i = (n - 1) &amp; hash)) == null) &#123; //Â¶ÇÊûúËøô‰∏™‰ΩçÁΩÆÊ≤°ÊúâÂÄº ÔºåÈÇ£‰πà‰ª•CASÊó†ÈîÅÂºèÂêëËØ•‰ΩçÁΩÆÊ∑ªÂä†‰∏Ä‰∏™ËäÇÁÇπ if (casTabAt(tab, i, null, new Node&lt;K,V&gt;(hash, key, value, null))) break; // no lock when adding to empty bin &#125; //Ê£ÄÊµãÂà∞Ê°∂ÁªìÁÇπÊòØ ForwardingNode Á±ªÂûãÔºåÂçèÂä©Êâ©ÂÆπÔºàMOVED = -1; // hash for forwarding nodesÔºâ else if ((fh = f.hash) == MOVED) tab = helpTransfer(tab, f); //Ê°∂ÁªìÁÇπÊòØÊôÆÈÄöÁöÑÁªìÁÇπÔºåÈîÅ‰ΩèËØ•Ê°∂Â§¥ÁªìÁÇπÂπ∂ËØïÂõæÂú®ËØ•ÈìæË°®ÁöÑÂ∞æÈÉ®Ê∑ªÂä†‰∏Ä‰∏™ËäÇÁÇπ else &#123; V oldVal = null; synchronized (f) &#123; if (tabAt(tab, i) == f) &#123; //ÂêëÊôÆÈÄöÁöÑÈìæË°®‰∏≠Ê∑ªÂä†ÂÖÉÁ¥† if (fh &gt;= 0) &#123; binCount = 1; //ÈÅçÂéÜÈìæË°®ÊâÄÊúâÁöÑÁªìÁÇπ for (Node&lt;K,V&gt; e = f;; ++binCount) &#123; K ek; //Â¶ÇÊûúhashÂÄºÂíåkeyÂÄºÁõ∏ÂêåÔºåÂàô‰øÆÊîπÂØπÂ∫îÁªìÁÇπÁöÑvalueÂÄº if (e.hash == hash &amp;&amp; ((ek = e.key) == key || (ek != null &amp;&amp; key.equals(ek)))) &#123; oldVal = e.val; if (!onlyIfAbsent) e.val = value; break; &#125; Node&lt;K,V&gt; pred = e; //Â¶ÇÊûúÈÅçÂéÜÂà∞‰∫ÜÊúÄÂêé‰∏Ä‰∏™ÁªìÁÇπÔºåÈÇ£‰πàÂ∞±ËØÅÊòéÊñ∞ÁöÑËäÇÁÇπÈúÄË¶ÅÊèíÂÖ•ÈìæË°®Â∞æÈÉ® if ((e = e.next) == null) &#123; pred.next = new Node&lt;K,V&gt;(hash, key, value, null); break; &#125; &#125; &#125; //Â¶ÇÊûúËøô‰∏™ËäÇÁÇπÊòØÊ†ëËäÇÁÇπÔºåÂ∞±ÊåâÁÖßÊ†ëÁöÑÊñπÂºèÊèíÂÖ•ÂÄº else if (f instanceof TreeBin) &#123; Node&lt;K,V&gt; p; binCount = 2; if ((p = ((TreeBin&lt;K,V&gt;)f).putTreeVal(hash, key, value)) != null) &#123; oldVal = p.val; if (!onlyIfAbsent) p.val = value; &#125; &#125; &#125; &#125; if (binCount != 0) &#123; //Â¶ÇÊûúÈìæË°®ÈïøÂ∫¶Â∑≤ÁªèËææÂà∞‰∏¥ÁïåÂÄº8ÔºåÂ∞±ÈúÄË¶ÅÊääÈìæË°®ËΩ¨Êç¢‰∏∫Ê†ëÁªìÊûÑÔºàTREEIFY_THRESHOLD = 8Ôºâ if (binCount &gt;= TREEIFY_THRESHOLD) treeifyBin(tab, i); if (oldVal != null) return oldVal; break; &#125; &#125; &#125; //CAS ÂºèÊõ¥Êñ∞baseCountÔºåÂπ∂Âà§Êñ≠ÊòØÂê¶ÈúÄË¶ÅÊâ©ÂÆπ addCount(1L, binCount); return null; &#125; ÂÖ∂ÂÆûputVal()‰πüÂ§öÂ§öÂ∞ëÂ∞ëÊéâÁî®‰∫ÜÂÖ∂‰ªñÊñπÊ≥ïÔºåËÆ©Êàë‰ª¨ÁªßÁª≠Êé¢Á©∂‰∏Ä‰∏ã„ÄÇ CASÔºàcompare and swapÔºâÁßëÊôÆcompare and swapÔºåËß£ÂÜ≥Â§öÁ∫øÁ®ãÂπ∂Ë°åÊÉÖÂÜµ‰∏ã‰ΩøÁî®ÈîÅÈÄ†ÊàêÊÄßËÉΩÊçüËÄóÁöÑ‰∏ÄÁßçÊú∫Âà∂ÔºåCASÊìç‰ΩúÂåÖÂê´‰∏â‰∏™Êìç‰ΩúÊï∞‚Äî‚ÄîÂÜÖÂ≠ò‰ΩçÁΩÆÔºàVÔºâ„ÄÅÈ¢ÑÊúüÂéüÂÄºÔºàAÔºâÂíåÊñ∞ÂÄº(B)„ÄÇÂ¶ÇÊûúÂÜÖÂ≠ò‰ΩçÁΩÆÁöÑÂÄº‰∏éÈ¢ÑÊúüÂéüÂÄºÁõ∏ÂåπÈÖçÔºåÈÇ£‰πàÂ§ÑÁêÜÂô®‰ºöËá™Âä®Â∞ÜËØ•‰ΩçÁΩÆÂÄºÊõ¥Êñ∞‰∏∫Êñ∞ÂÄº„ÄÇÂê¶ÂàôÔºåÂ§ÑÁêÜÂô®‰∏çÂÅö‰ªª‰ΩïÊìç‰Ωú„ÄÇÊó†ËÆ∫Âì™ÁßçÊÉÖÂÜµÔºåÂÆÉÈÉΩ‰ºöÂú®CASÊåá‰ª§‰πãÂâçËøîÂõûËØ•‰ΩçÁΩÆÁöÑÂÄº„ÄÇCASÊúâÊïàÂú∞ËØ¥Êòé‰∫Ü‚ÄúÊàëËÆ§‰∏∫‰ΩçÁΩÆVÂ∫îËØ•ÂåÖÂê´ÂÄºAÔºõÂ¶ÇÊûúÂåÖÂê´ËØ•ÂÄºÔºåÂàôÂ∞ÜBÊîæÂà∞Ëøô‰∏™‰ΩçÁΩÆÔºõÂê¶ÂàôÔºå‰∏çË¶ÅÊõ¥ÊîπËØ•‰ΩçÁΩÆÔºåÂè™ÂëäËØâÊàëËøô‰∏™‰ΩçÁΩÆÁé∞Âú®ÁöÑÂÄºÂç≥ÂèØ„ÄÇ spreadÈ¶ñÂÖàÔºåÁ¨¨ÂõõË°åÂá∫Áé∞ÁöÑint hash = spread(key.hashCode());ËøôÊòØ‰º†ÁªüÁöÑËÆ°ÁÆóhashÁöÑÊñπÊ≥ï„ÄÇkeyÁöÑhashÂÄºÈ´ò16‰Ωç‰∏çÂèòÔºå‰Ωé16‰Ωç‰∏éÈ´ò16‰ΩçÂºÇÊàñ‰Ωú‰∏∫keyÁöÑÊúÄÁªàhashÂÄº„ÄÇÔºàh &gt;&gt;&gt; 16ÔºåË°®Á§∫Êó†Á¨¶Âè∑Âè≥Áßª16‰ΩçÔºåÈ´ò‰ΩçË°•0Ôºå‰ªª‰ΩïÊï∞Ë∑ü0ÂºÇÊàñÈÉΩÊòØÂÖ∂Êú¨Ë∫´ÔºåÂõ†Ê≠§keyÁöÑhashÂÄºÈ´ò16‰Ωç‰∏çÂèò„ÄÇÔºâ 123static final int spread(int h) &#123; return (h ^ (h &gt;&gt;&gt; 16)) &amp; HASH_BITS; &#125; initTableÁ¨¨ÂçÅË°åÔºå tab = initTable();Ëøô‰∏™ÊñπÊ≥ïÁöÑ‰∫ÆÁÇπÊòØÔºåÂèØ‰ª•ËÆ©putÂπ∂ÂèëÊâßË°åÔºåÂÆûÁé∞tableÂè™ÂàùÂßãÂåñ‰∏ÄÊ¨° „ÄÇ initTable()Ê†∏ÂøÉÊÄùÊÉ≥Â∞±ÊòØÔºåÂè™ÂÖÅËÆ∏‰∏Ä‰∏™Á∫øÁ®ãÂØπË°®ËøõË°åÂàùÂßãÂåñÔºåÂ¶ÇÊûúÊúâÂÖ∂‰ªñÁ∫øÁ®ãËøõÊù•‰∫ÜÔºåÈÇ£‰πà‰ºöËÆ©ÂÖ∂‰ªñÁ∫øÁ®ã‰∫§Âá∫ CPU Á≠âÂæÖ‰∏ãÊ¨°Á≥ªÁªüË∞ÉÂ∫¶„ÄÇËøôÊ†∑Ôºå‰øùËØÅ‰∫ÜË°®ÂêåÊó∂Âè™‰ºöË¢´‰∏Ä‰∏™Á∫øÁ®ãÂàùÂßãÂåñ„ÄÇ 12345678910111213141516171819202122232425262728private final Node&lt;K,V&gt;[] initTable() &#123; Node&lt;K,V&gt;[] tab; int sc; //Â¶ÇÊûúË°®‰∏∫Á©∫ÊâçËøõË°åÂàùÂßãÂåñÊìç‰Ωú while ((tab = table) == null || tab.length == 0) &#123; //Â¶ÇÊûú‰∏Ä‰∏™Á∫øÁ®ãÂèëÁé∞sizeCtl&lt;0ÔºåÊÑèÂë≥ÁùÄÂè¶Â§ñÁöÑÁ∫øÁ®ãÊâßË°åCASÊìç‰ΩúÊàêÂäüÔºåÂΩìÂâçÁ∫øÁ®ãÂè™ÈúÄË¶ÅËÆ©Âá∫cpuÊó∂Èó¥ÁâáÔºàÊîæÂºÉ CPU ÁöÑ‰ΩøÁî®Ôºâ if ((sc = sizeCtl) &lt; 0) Thread.yield(); // lost initialization race; just spin //Âê¶ÂàôËØ¥ÊòéËøòÊú™ÊúâÁ∫øÁ®ãÂØπË°®ËøõË°åÂàùÂßãÂåñÔºåÈÇ£‰πàÊú¨Á∫øÁ®ãÂ∞±Êù•ÂÅöËøô‰∏™Â∑•‰Ωú else if (U.compareAndSwapInt(this, SIZECTL, sc, -1)) &#123; try &#123; if ((tab = table) == null || tab.length == 0) &#123; //sc Â§ß‰∫éÈõ∂ËØ¥ÊòéÂÆπÈáèÂ∑≤ÁªèÂàùÂßãÂåñ‰∫ÜÔºåÂê¶Âàô‰ΩøÁî®ÈªòËÆ§ÂÆπÈáè int n = (sc &gt; 0) ? sc : DEFAULT_CAPACITY; @SuppressWarnings("unchecked") Node&lt;K,V&gt;[] nt = (Node&lt;K,V&gt;[])new Node&lt;?,?&gt;[n]; table = tab = nt; //ËÆ°ÁÆóÈòàÂÄºÔºåÁ≠âÊïà‰∫é n*0.75 sc = n - (n &gt;&gt;&gt; 2); &#125; &#125; finally &#123; //ËÆæÁΩÆÈòàÂÄº sizeCtl = sc; &#125; break; &#125; &#125; return tab; &#125; Êé•‰∏ãÊù•ÔºåÁ¨¨19Ë°å„ÄÇ tab = helpTransfer(tab, f);ËøôÂè•ËØù„ÄÇË¶Å‰∫ÜËß£Ëøô‰∏™ÔºåÈ¶ñÂÖàÈúÄË¶ÅÁü•ÈÅìForwardingNode Ëøô‰∏™ËäÇÁÇπÁ±ªÂûã„ÄÇÂÆÉ‰∏Ä‰∏™Áî®‰∫éËøûÊé•‰∏§‰∏™tableÁöÑËäÇÁÇπÁ±ª„ÄÇÂÆÉÂåÖÂê´‰∏Ä‰∏™nextTableÊåáÈíàÔºåÁî®‰∫éÊåáÂêë‰∏ã‰∏ÄÂº†hashË°®„ÄÇËÄå‰∏îËøô‰∏™ËäÇÁÇπÁöÑkey„ÄÅvalue„ÄÅnextÊåáÈíàÂÖ®ÈÉ®‰∏∫nullÔºåÂÆÉÁöÑhashÂÄº‰∏∫MOVEDÔºàstatic final int MOVED = -1Ôºâ„ÄÇ 123456789101112131415161718192021222324252627282930313233static final class ForwardingNode&lt;K,V&gt; extends Node&lt;K,V&gt; &#123; final Node&lt;K,V&gt;[] nextTable; ForwardingNode(Node&lt;K,V&gt;[] tab) &#123; super(MOVED, null, null, null); this.nextTable = tab; &#125; //findÁöÑÊñπÊ≥ïÊòØ‰ªénextTableÈáåËøõË°åÊü•ËØ¢ËäÇÁÇπÔºåËÄå‰∏çÊòØ‰ª•Ëá™Ë∫´‰∏∫Â§¥ËäÇÁÇπËøõË°åÊü•Êâæ Node&lt;K,V&gt; find(int h, Object k) &#123; // loop to avoid arbitrarily deep recursion on forwarding nodes outer: for (Node&lt;K,V&gt;[] tab = nextTable;;) &#123; Node&lt;K,V&gt; e; int n; if (k == null || tab == null || (n = tab.length) == 0 || (e = tabAt(tab, (n - 1) &amp; h)) == null) return null; for (;;) &#123; int eh; K ek; if ((eh = e.hash) == h &amp;&amp; ((ek = e.key) == k || (ek != null &amp;&amp; k.equals(ek)))) return e; if (eh &lt; 0) &#123; if (e instanceof ForwardingNode) &#123; tab = ((ForwardingNode&lt;K,V&gt;)e).nextTable; continue outer; &#125; else return e.find(h, k); &#125; if ((e = e.next) == null) return null; &#125; &#125; &#125; &#125; helpTransferÂú®Êâ©ÂÆπÊìç‰Ωú‰∏≠ÔºåÊàë‰ª¨ÈúÄË¶ÅÂØπÊØè‰∏™Ê°∂‰∏≠ÁöÑÁªìÁÇπËøõË°åÂàÜÁ¶ªÂíåËΩ¨Áßª„ÄÇÂ¶ÇÊûúÊüê‰∏™Ê°∂ÁªìÁÇπ‰∏≠ÊâÄÊúâËäÇÁÇπÈÉΩÂ∑≤ÁªèËøÅÁßªÂÆåÊàê‰∫ÜÔºàÂ∑≤ÁªèË¢´ËΩ¨ÁßªÂà∞Êñ∞Ë°® nextTable ‰∏≠‰∫ÜÔºâÔºåÈÇ£‰πà‰ºöÂú®Âéü table Ë°®ÁöÑËØ•‰ΩçÁΩÆÊåÇ‰∏ä‰∏Ä‰∏™ ForwardingNode ÁªìÁÇπÔºåËØ¥ÊòéÊ≠§Ê°∂Â∑≤ÁªèÂÆåÊàêËøÅÁßª„ÄÇ helpTransfer‰ªÄ‰πà‰ΩúÁî®Âë¢ÔºüÊòØÊ£ÄÊµãÂà∞ÂΩìÂâçÂìàÂ∏åË°®Ê≠£Âú®Êâ©ÂÆπÔºåÁÑ∂ÂêéËÆ©ÂΩìÂâçÁ∫øÁ®ãÂéªÂçèÂä©Êâ©ÂÆπ ÔºÅ 123456789101112131415161718192021final Node&lt;K,V&gt;[] helpTransfer(Node&lt;K,V&gt;[] tab, Node&lt;K,V&gt; f) &#123; Node&lt;K,V&gt;[] nextTab; int sc; if (tab != null &amp;&amp; (f instanceof ForwardingNode) &amp;&amp; (nextTab = ((ForwardingNode&lt;K,V&gt;)f).nextTable) != null) &#123;//Êñ∞ÁöÑtableÔºånextTabÂ∑≤ÁªèÂ≠òÂú®ÂâçÊèê‰∏ãÊâçËÉΩÂ∏ÆÂä©Êâ©ÂÆπ int rs = resizeStamp(tab.length);//ËøîÂõû‰∏Ä‰∏™ 16 ‰ΩçÈïøÂ∫¶ÁöÑÊâ©ÂÆπÊ†°È™åÊ†áËØÜ while (nextTab == nextTable &amp;&amp; table == tab &amp;&amp; (sc = sizeCtl) &lt; 0) &#123;//sizeCtl Â¶ÇÊûúÂ§Ñ‰∫éÊâ©ÂÆπÁä∂ÊÄÅÁöÑËØù if ((sc &gt;&gt;&gt; RESIZE_STAMP_SHIFT) != rs || sc == rs + 1 || sc == rs + MAX_RESIZERS || transferIndex &lt;= 0) //Ââç 16 ‰ΩçÊòØÊï∞ÊçÆÊ†°È™åÊ†áËØÜÔºåÂêé 16 ‰ΩçÊòØÂΩìÂâçÊ≠£Âú®Êâ©ÂÆπÁöÑÁ∫øÁ®ãÊÄªÊï∞ //ËøôÈáåÂà§Êñ≠Ê†°È™åÊ†áËØÜÊòØÂê¶Áõ∏Á≠âÔºåÂ¶ÇÊûúÊ†°È™åÁ¨¶‰∏çÁ≠âÊàñËÄÖÊâ©ÂÆπÊìç‰ΩúÂ∑≤ÁªèÂÆåÊàê‰∫ÜÔºåÁõ¥Êé•ÈÄÄÂá∫Âæ™ÁéØÔºå‰∏çÁî®ÂçèÂä©ÂÆÉ‰ª¨Êâ©ÂÆπ‰∫Ü break; if (U.compareAndSwapInt(this, SIZECTL, sc, sc + 1)) &#123;//sc + 1 Ê†áËØÜÂ¢ûÂä†‰∫Ü‰∏Ä‰∏™Á∫øÁ®ãËøõË°åÊâ©ÂÆπ transfer(tab, nextTab);//Ë∞ÉÁî®Êâ©ÂÆπÊñπÊ≥ï break; &#125; &#125; return nextTab; &#125; return table; &#125; helpTransferÁ≤æÈ´ìÁöÑÊòØÂèØ‰ª•Ë∞ÉÁî®Â§ö‰∏™Â∑•‰ΩúÁ∫øÁ®ã‰∏ÄËµ∑Â∏ÆÂä©ËøõË°åÊâ©ÂÆπÔºåËøôÊ†∑ÁöÑÊïàÁéáÂ∞±‰ºöÊõ¥È´òÔºåËÄå‰∏çÊòØÂè™ÊúâÊ£ÄÊü•Âà∞Ë¶ÅÊâ©ÂÆπÁöÑÈÇ£‰∏™Á∫øÁ®ãËøõË°åÊâ©ÂÆπÊìç‰ΩúÔºåÂÖ∂‰ªñÁ∫øÁ®ãÂ∞±Ë¶ÅÁ≠âÂæÖÊâ©ÂÆπÊìç‰ΩúÂÆåÊàêÊâçËÉΩÂ∑•‰Ωú„ÄÇ transferÊó¢ÁÑ∂ËøôÈáåÊ∂âÂèäÂà∞Êâ©ÂÆπÁöÑÊìç‰ΩúÔºåÊàë‰ª¨‰πü‰∏ÄËµ∑Êù•ÁúãÁúãÊâ©ÂÆπÊñπÊ≥ïtransferÔºàÔºâ Ôºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147private final void transfer(Node&lt;K,V&gt;[] tab, Node&lt;K,V&gt;[] nextTab) &#123; int n = tab.length, stride; //ËÆ°ÁÆóÂçï‰∏™Á∫øÁ®ãÂÖÅËÆ∏Â§ÑÁêÜÁöÑÊúÄÂ∞ëtableÊ°∂È¶ñËäÇÁÇπ‰∏™Êï∞Ôºå‰∏çËÉΩÂ∞è‰∫é 16 if ((stride = (NCPU &gt; 1) ? (n &gt;&gt;&gt; 3) / NCPU : n) &lt; MIN_TRANSFER_STRIDE) stride = MIN_TRANSFER_STRIDE; // subdivide range //ÂàöÂºÄÂßãÊâ©ÂÆπÔºåÂàùÂßãÂåñ nextTab if (nextTab == null) &#123; // initiating try &#123; @SuppressWarnings("unchecked") Node&lt;K,V&gt;[] nt = (Node&lt;K,V&gt;[])new Node&lt;?,?&gt;[n &lt;&lt; 1]; nextTab = nt; &#125; catch (Throwable ex) &#123; // try to cope with OOME sizeCtl = Integer.MAX_VALUE; return; &#125; nextTable = nextTab; //transferIndex ÊåáÂêëÊúÄÂêé‰∏Ä‰∏™Ê°∂ÔºåÊñπ‰æø‰ªéÂêéÂêëÂâçÈÅçÂéÜ transferIndex = n; &#125; int nextn = nextTab.length; //ÂÆö‰πâ ForwardingNode Áî®‰∫éÊ†áËÆ∞ËøÅÁßªÂÆåÊàêÁöÑÊ°∂ ForwardingNode&lt;K,V&gt; fwd = new ForwardingNode&lt;K,V&gt;(nextTab); boolean advance = true; boolean finishing = false; // to ensure sweep before committing nextTab //i ÊåáÂêëÂΩìÂâçÊ°∂Ôºåbound ÊåáÂêëÂΩìÂâçÁ∫øÁ®ãÈúÄË¶ÅÂ§ÑÁêÜÁöÑÊ°∂ÁªìÁÇπÁöÑÂå∫Èó¥‰∏ãÈôê for (int i = 0, bound = 0;;) &#123; Node&lt;K,V&gt; f; int fh; //ÈÅçÂéÜÂΩìÂâçÁ∫øÁ®ãÊâÄÂàÜÈÖçÂà∞ÁöÑÊ°∂ÁªìÁÇπ while (advance) &#123; int nextIndex, nextBound; if (--i &gt;= bound || finishing) advance = false; //transferIndex &lt;= 0 ËØ¥ÊòéÂ∑≤ÁªèÊ≤°ÊúâÈúÄË¶ÅËøÅÁßªÁöÑÊ°∂‰∫Ü else if ((nextIndex = transferIndex) &lt;= 0) &#123; i = -1; advance = false; &#125; //Êõ¥Êñ∞ transferIndex //‰∏∫ÂΩìÂâçÁ∫øÁ®ãÂàÜÈÖç‰ªªÂä°ÔºåÂ§ÑÁêÜÁöÑÊ°∂ÁªìÁÇπÂå∫Èó¥‰∏∫ÔºànextBound,nextIndexÔºâ else if (U.compareAndSwapInt (this, TRANSFERINDEX, nextIndex, nextBound = (nextIndex &gt; stride ? nextIndex - stride : 0))) &#123; bound = nextBound; i = nextIndex - 1; advance = false; &#125; &#125; //ÂΩìÂâçÁ∫øÁ®ãÊâÄÊúâ‰ªªÂä°ÂÆåÊàê if (i &lt; 0 || i &gt;= n || i + n &gt;= nextn) &#123; int sc; if (finishing) &#123; nextTable = null; table = nextTab; sizeCtl = (n &lt;&lt; 1) - (n &gt;&gt;&gt; 1); return; &#125; if (U.compareAndSwapInt(this, SIZECTL, sc = sizeCtl, sc - 1)) &#123; if ((sc - 2) != resizeStamp(n) &lt;&lt; RESIZE_STAMP_SHIFT) return; finishing = advance = true; i = n; // recheck before commit &#125; &#125; //ÂæÖËøÅÁßªÊ°∂‰∏∫Á©∫ÔºåÈÇ£‰πàÂú®Ê≠§‰ΩçÁΩÆ CAS Ê∑ªÂä† ForwardingNode ÁªìÁÇπÊ†áËØÜËØ•Ê°∂Â∑≤ÁªèË¢´Â§ÑÁêÜËøá‰∫Ü else if ((f = tabAt(tab, i)) == null) advance = casTabAt(tab, i, null, fwd); //Â¶ÇÊûúÊâ´ÊèèÂà∞ ForwardingNodeÔºåËØ¥ÊòéÊ≠§Ê°∂Â∑≤ÁªèË¢´Â§ÑÁêÜËøá‰∫ÜÔºåË∑≥ËøáÂç≥ÂèØ else if ((fh = f.hash) == MOVED) advance = true; // already processed else &#123; synchronized (f) &#123; if (tabAt(tab, i) == f) &#123; Node&lt;K,V&gt; ln, hn; //ÈìæË°®ÁöÑËøÅÁßªÊìç‰Ωú if (fh &gt;= 0) &#123; int runBit = fh &amp; n; Node&lt;K,V&gt; lastRun = f; //Êï¥‰∏™ for Âæ™ÁéØ‰∏∫‰∫ÜÊâæÂà∞Êï¥‰∏™Ê°∂‰∏≠ÊúÄÂêéËøûÁª≠ÁöÑ fh &amp; n ‰∏çÂèòÁöÑÁªìÁÇπ for (Node&lt;K,V&gt; p = f.next; p != null; p = p.next) &#123; int b = p.hash &amp; n; if (b != runBit) &#123; runBit = b; lastRun = p; &#125; &#125; if (runBit == 0) &#123; ln = lastRun; hn = null; &#125; else &#123; hn = lastRun; ln = null; &#125; for (Node&lt;K,V&gt; p = f; p != lastRun; p = p.next) &#123; int ph = p.hash; K pk = p.key; V pv = p.val; if ((ph &amp; n) == 0) ln = new Node&lt;K,V&gt;(ph, pk, pv, ln); else hn = new Node&lt;K,V&gt;(ph, pk, pv, hn); &#125; setTabAt(nextTab, i, ln); setTabAt(nextTab, i + n, hn); setTabAt(tab, i, fwd); advance = true; &#125; //Á∫¢ÈªëÊ†ëÁöÑÂ§çÂà∂ÁÆóÊ≥ïÔºå else if (f instanceof TreeBin) &#123; TreeBin&lt;K,V&gt; t = (TreeBin&lt;K,V&gt;)f; TreeNode&lt;K,V&gt; lo = null, loTail = null; TreeNode&lt;K,V&gt; hi = null, hiTail = null; int lc = 0, hc = 0; for (Node&lt;K,V&gt; e = t.first; e != null; e = e.next) &#123; int h = e.hash; TreeNode&lt;K,V&gt; p = new TreeNode&lt;K,V&gt; (h, e.key, e.val, null, null); if ((h &amp; n) == 0) &#123; if ((p.prev = loTail) == null) lo = p; else loTail.next = p; loTail = p; ++lc; &#125; else &#123; if ((p.prev = hiTail) == null) hi = p; else hiTail.next = p; hiTail = p; ++hc; &#125; &#125; ln = (lc &lt;= UNTREEIFY_THRESHOLD) ? untreeify(lo) : (hc != 0) ? new TreeBin&lt;K,V&gt;(lo) : t; hn = (hc &lt;= UNTREEIFY_THRESHOLD) ? untreeify(hi) : (lc != 0) ? new TreeBin&lt;K,V&gt;(hi) : t; setTabAt(nextTab, i, ln); setTabAt(nextTab, i + n, hn); setTabAt(tab, i, fwd); advance = true; &#125; &#125; &#125; &#125; &#125; &#125; Ëá≥Ê≠§ÔºåputÊñπÊ≥ïËÆ≤ÂÆå‰∫Ü ÂèÇËÄÉËµÑÊñô~ÂèÇËÄÉËµÑÊñô ÊÑüË∞¢ ÁªìÊùü Ê≠§ÁâáÂÆå‰∫Ü~ ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÁ≤æÂΩ©Êñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑ‰∏™‰∫∫ÂçöÂÆ¢ Êú¨ÁØá‰∏∫ÂéüÂàõÂÜÖÂÆπÔºåÂ∑≤Âú®‰∏™‰∫∫ÂçöÂÆ¢ÁéáÂÖàÂèëË°®ÔºåÈöèÂêéCSDNÔºåsegmentfaultÔºåÊéòÈáëÔºåÁÆÄ‰π¶ÔºåÂºÄÊ∫ê‰∏≠ÂõΩÂêåÊ≠•ÂèëÂá∫„ÄÇÂ¶ÇÊúâÈõ∑ÂêåÔºåÁºòÂàÜÂë¢ÂÖÑÂºü„ÄÇËµ∂Âø´Âä†‰∏™Â•ΩÂèã~]]></content>
      <tags>
        <tag>Ê∫êÁ†Å</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HashSetÂéüÁêÜ]]></title>
    <url>%2F2018%2F07%2F17%2FHashSet%E5%8E%9F%E7%90%86%2F</url>
    <content type="text"><![CDATA[HashSetHashSet ÊòØ‰∏Ä‰∏™‰∏çÂÖÅËÆ∏Â≠òÂÇ®ÈáçÂ§çÂÖÉÁ¥†ÁöÑÈõÜÂêà„ÄÇ HashSetÂÆûÁé∞SetÊé•Âè£ÔºåÁî±ÂìàÂ∏åË°®ÔºàÂÆûÈôÖ‰∏äÊòØ‰∏Ä‰∏™HashMapÂÆû‰æãÔºâÊîØÊåÅ„ÄÇÂÆÉ‰∏ç‰øùËØÅset ÁöÑËø≠‰ª£È°∫Â∫èÔºõÁâπÂà´ÊòØÂÆÉ‰∏ç‰øùËØÅËØ•È°∫Â∫èÊÅí‰πÖ‰∏çÂèò„ÄÇÊ≠§Á±ªÂÖÅËÆ∏‰ΩøÁî®nullÂÖÉÁ¥†„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆhttps://blog.tengshe789.tech/ HashSetÂíåHashMapÊØîËæÉHashSetÔºö HashSetÂÆûÁé∞‰∫ÜSetÊé•Âè£ÔºåÂÆÉ‰∏çÂÖÅËÆ∏ÈõÜÂêà‰∏≠Âá∫Áé∞ÈáçÂ§çÂÖÉÁ¥†„ÄÇÂΩìÊàë‰ª¨ÊèêÂà∞HashSetÊó∂ÔºåÁ¨¨‰∏Ä‰ª∂‰∫ãÂ∞±ÊòØÂú®Â∞ÜÂØπË±°Â≠òÂÇ®Âú® HashSet‰πãÂâçÔºåË¶ÅÁ°Æ‰øùÈáçÂÜôhashCodeÔºàÔºâÊñπÊ≥ïÂíåequalsÔºàÔºâÊñπÊ≥ïÔºåËøôÊ†∑ÊâçËÉΩÊØîËæÉÂØπË±°ÁöÑÂÄºÊòØÂê¶Áõ∏Á≠âÔºåÁ°Æ‰øùÈõÜÂêà‰∏≠Ê≤°Êúâ ÂÇ®Â≠òÁõ∏ÂêåÁöÑÂØπË±°„ÄÇÂ¶ÇÊûú‰∏çÈáçÂÜô‰∏äËø∞‰∏§‰∏™ÊñπÊ≥ïÔºåÈÇ£‰πàÂ∞Ü‰ΩøÁî®‰∏ãÈù¢ÊñπÊ≥ïÈªòËÆ§ÂÆûÁé∞Ôºö public boolean add(Object obj)ÊñπÊ≥ïÁî®Âú®SetÊ∑ªÂä†ÂÖÉÁ¥†Êó∂ÔºåÂ¶ÇÊûúÂÖÉÁ¥†ÂÄºÈáçÂ§çÊó∂ËøîÂõû ‚Äúfalse‚ÄùÔºåÂ¶ÇÊûúÊ∑ªÂä†ÊàêÂäüÂàôËøîÂõû‚Äùtrue‚Äù HashMapÔºö HashMapÂÆûÁé∞‰∫ÜMapÊé•Âè£ÔºåMapÊé•Âè£ÂØπÈîÆÂÄºÂØπËøõË°åÊò†Â∞Ñ„ÄÇMap‰∏≠‰∏çÂÖÅËÆ∏Âá∫Áé∞ÈáçÂ§çÁöÑÈîÆÔºàKeyÔºâ„ÄÇMapÊé•Âè£Êúâ‰∏§‰∏™Âü∫Êú¨ÁöÑÂÆûÁé∞ TreeMapÂíåHashMap„ÄÇTreeMap‰øùÂ≠ò‰∫ÜÂØπË±°ÁöÑÊéíÂàóÊ¨°Â∫èÔºåËÄåHashMap‰∏çËÉΩ„ÄÇHashMapÂèØ‰ª•ÊúâÁ©∫ÁöÑÈîÆÂÄºÂØπÔºàKeyÔºànullÔºâ-ValueÔºànullÔºâÔºâ HashMapÊòØÈùûÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºàÈùûSynchronizeÔºâÔºåË¶ÅÊÉ≥ÂÆûÁé∞Á∫øÁ®ãÂÆâÂÖ®ÔºåÈÇ£‰πàÈúÄË¶ÅË∞ÉÁî®collectionsÁ±ªÁöÑÈùôÊÄÅÊñπÊ≥ïsynchronizeMapÔºàÔºâÂÆûÁé∞„ÄÇ public Object put(Object Key,Object value)ÊñπÊ≥ïÁî®Êù•Â∞ÜÂÖÉÁ¥†Ê∑ªÂä†Âà∞map‰∏≠„ÄÇ ÊàêÂëòÂèòÈáèÈ¶ñÂÖà‰∫ÜËß£‰∏ã HashSet ÁöÑÊàêÂëòÂèòÈáè: 12345//Áî®transientÂÖ≥ÈîÆÂ≠óÊ†áËÆ∞ÁöÑÊàêÂëòÂèòÈáè‰∏çÂèÇ‰∏éÂ∫èÂàóÂåñËøáÁ®ãprivate transient HashMap&lt;E,Object&gt; map;// Dummy value to associate with an Object in the backing Mapprivate static final Object PRESENT = new Object(); ÂèëÁé∞‰∏ªË¶ÅÂ∞±‰∏§‰∏™ÂèòÈáè: map ÔºöÁî®‰∫éÂ≠òÊîæÊúÄÁªàÊï∞ÊçÆÁöÑ„ÄÇ PRESENT ÔºöÊòØÊâÄÊúâÂÜôÂÖ• map ÁöÑ value ÂÄº„ÄÇ ÊûÑÈÄ†ÂáΩÊï∞1234567public HashSet() &#123; map = new HashMap&lt;&gt;();&#125;public HashSet(int initialCapacity, float loadFactor) &#123; map = new HashMap&lt;&gt;(initialCapacity, loadFactor);&#125; ÊûÑÈÄ†ÂáΩÊï∞ÂæàÁÆÄÂçïÔºåÂà©Áî®‰∫Ü HashMap ÂàùÂßãÂåñ‰∫Ü map „ÄÇ add123public boolean add(E e) &#123; return map.put(e, PRESENT)==null;&#125; ÊØîËæÉÂÖ≥ÈîÆÁöÑÂ∞±ÊòØËøô‰∏™ add() ÊñπÊ≥ï„ÄÇ ÂèØ‰ª•ÁúãÂá∫ÂÆÉÊòØÂ∞ÜÂ≠òÊîæÁöÑÂØπË±°ÂΩìÂÅö‰∫Ü HashMap ÁöÑÂÅ•Ôºåvalue ÈÉΩÊòØÁõ∏ÂêåÁöÑ PRESENT „ÄÇÁî±‰∫é HashMap ÁöÑ key ÊòØ‰∏çËÉΩÈáçÂ§çÁöÑÔºåÊâÄ‰ª•ÊØèÂΩìÊúâÈáçÂ§çÁöÑÂÄºÂÜôÂÖ•Âà∞ HashSet Êó∂Ôºåvalue ‰ºöË¢´Ë¶ÜÁõñÔºå‰ΩÜ key ‰∏ç‰ºöÊî∂Âà∞ÂΩ±ÂìçÔºåËøôÊ†∑Â∞±‰øùËØÅ‰∫Ü HashSet ‰∏≠Âè™ËÉΩÂ≠òÊîæ‰∏çÈáçÂ§çÁöÑÂÖÉÁ¥†„ÄÇ ÊÄªÁªìHashSet ÁöÑÂéüÁêÜÊØîËæÉÁÆÄÂçïÔºåÂá†‰πéÂÖ®ÈÉ®ÂÄüÂä©‰∫é HashMap Êù•ÂÆûÁé∞ÁöÑ„ÄÇ ÊâÄ‰ª• HashMap ‰ºöÂá∫Áé∞ÁöÑÈóÆÈ¢ò HashSet ‰æùÁÑ∂‰∏çËÉΩÈÅøÂÖç„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢]]></content>
      <tags>
        <tag>Ê∫êÁ†Å</tag>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂàÜ‰∫´‰∏Ä‰∏™ÁÆÄÂçïÂèàÂ§çÊùÇÁöÑÁ®ãÂ∫èÈÄâÊã©È¢ò]]></title>
    <url>%2F2018%2F07%2F11%2F%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E5%8F%88%E5%A4%8D%E6%9D%82%E7%9A%84%E7%A8%8B%E5%BA%8F%E9%80%89%E6%8B%A9%E9%A2%98%2F</url>
    <content type="text"><![CDATA[‰ªäÂ§©Âú®ÁâõÂÆ¢ÁΩëÂà∑È¢òÔºåÁúãËßÅ‰∏Ä‰∏™ÈùûÂ∏∏ÁÆÄÂçïÂèàÂæàÂ§çÊùÇÁöÑÈ¢òÁõÆÔºåÊàëÁé∞Âú®Êù•ÂàÜ‰∫´‰∏Ä‰∏ã„ÄÇ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢ È¢òÁõÆÊòØËøôÊ†∑ÁöÑÔºö 123456789101112131415161718192021222324252627282930313233343536public class Main &#123; public static void main(String [] args)&#123; System.out.println(new B().getValue()); &#125; static class A&#123; protected int value; public A(int v) &#123; setValue(v); &#125; public void setValue(int value)&#123; this.value = value; &#125; public int getValue()&#123; try&#123; value++; return value; &#125; catch(Exception e)&#123; System.out.println(e.toString()); &#125; finally &#123; this.setValue(value); System.out.println(value); &#125; return value; &#125; &#125; static class B extends A&#123; public B() &#123; super(5); setValue(getValue() - 3); &#125; @Override public void setValue(int value)&#123; super.setValue(2 * value); &#125; &#125; &#125; È¢òÁõÆËÆ©ÂÜôÂá∫‰∏äËø∞‰ª£Á†ÅÊâßË°åÂÆåÊàêÂêéÁöÑËæìÂá∫ÁªìÊûú ËøôÈÅìÈ¢òËÄÉÁöÑÂÖ∂ÂÆûÂ∞±ÊòØ‰ª£Á†ÅÊâßË°åÈ°∫Â∫èÁöÑÁü•ËØÜÔºåÊØîËæÉÂü∫Á°ÄÁöÑ‰∏úË•ø„ÄÇÈ¶ñÂÖàÔºåÁî®IDEAÊâì‰∏Ä‰∏ãÊñ≠ÁÇπÔºåÂ¶ÇÂõæÔºö È¶ñÂÖàËµ∞‰∏ªÂáΩÊï∞Ôºånew BÔºåËøõÂÖ•BÁöÑÊûÑÈÄ†ÊñπÊ≥ï Âπ∂Â∞ÜÁà∂Á±ªA‰º†ÂÖ•5ÔºàÂΩìÂ≠êÁ±ªÊûÑÈÄ†Âô®‰∏≠Ê≤°Êúâ‰ΩøÁî®‚Äùsuper(ÂèÇÊï∞ÊàñÊó†ÂèÇÊï∞)‚ÄùÊåáÂÆöË∞ÉÁî®Áà∂Á±ªÊûÑÈÄ†Âô®Êó∂ÔºåÊòØÈªòËÆ§Ë∞ÉÁî®Áà∂Á±ªÁöÑÊó†ÂèÇÊûÑÈÄ†Âô®ÔºåÂ¶ÇÊûúÁà∂Á±ª‰∏≠ÂåÖÂê´ÊúâÂèÇÊûÑÈÄ†Âô®ÔºåÂç¥Ê≤°ÊúâÊó†ÂèÇÊûÑÈÄ†Âô®ÔºåÂàôÂú®Â≠êÁ±ªÊûÑÈÄ†Âô®‰∏≠‰∏ÄÂÆöË¶Å‰ΩøÁî®‚Äúsuper(ÂèÇÊï∞)‚ÄùÊåáÂÆöË∞ÉÁî®Áà∂Á±ªÁöÑÊúâÂèÇÊûÑÈÄ†Âô®Ôºå‰∏çÁÑ∂Â∞±‰ºöÊä•Èîô„ÄÇ Ôºâ Ë∞ÉÁî®Áà∂Á±ªÁöÑsetValueÊñπÊ≥ïÔºåÁî±‰∫éÂ≠êÁ±ªÂ∑≤Â∞ÜÂÖ∂ÈáçÂÜôÔºåÊâÄ‰ª•Áõ¥Êé•Âà∞Â≠êÁ±ª{ Êï≤ÈªëÊùøÔºö 1.Áà∂Á±ªÔºåÂ≠êÁ±ª‰πãÈó¥ËΩ¨ÂûãÁöÑÈóÆÈ¢òÔºåÂΩìÁà∂Á±ªÂ£∞ÊòéÊåáÂêëÂ≠êÁ±ªÂØπË±°Ôºå‰ºöÂèëÁîüÈöêÂºèÂêë‰∏äËΩ¨Âûã„ÄÇ 2.ÁºñËØëÊó∂ÊâÄÂèÇËÄÉÁöÑÂØπË±°Á±ªÂûãÊòØÂ£∞ÊòéÂØπË±°ÊâÄÁî®ÁöÑÁ±ªÂûãÔºåËÄåËøêË°åÊó∂ÂàôÊòØÂèÇËÄÉÂØπË±°ÂÆû‰æãÂåñÁöÑÁ±ªÂûã„ÄÇ 3.ÂΩìÂ≠êÁ±ªÈáçÂÜô‰∫ÜÁà∂Á±ªÁöÑÊüê‰∏™ÊñπÊ≥ïÊó∂Ôºå‰ºöÂ∞ÜÁà∂Á±ªÁöÑÊñπÊ≥ïËøõË°åÈöêËóèÔºåÂõ†Ê≠§ËøôËæπÊúÄÂêéË∞ÉÂà∞ÁöÑÈÉΩÊòØÂ≠êÁ±ªÈáçÂÜôÁöÑÊñπÊ≥ï„ÄÇ } Áé∞Âú®ÂõûÂà∞value=10 Áé∞Âú®valueÊòØ10ÔºåÂáÜÂ§áËøõÂÖ•geiValueÈò∂ÊÆµ ËøòÊòØ10 Âú®ËøôÈáåËøîÂõûvalueÔºåÊ≠§Êó∂valueÊòØ11 try{}catch{}ÊâßË°åÂÆå‰∏ÄÂÆöË¶ÅËµ∞finnally valueÊòØ22‰∫Ü Áªà‰∫éÂºÄÂßãÊâìÂç∞‰∫ÜÔºåÊâìÂç∞Á¨¨‰∏Ä‰∏™Êï∞Â≠óÔºö22 ËøîÂõûvalue =22 ÂõûÂà∞ÂàöÂàöBÈÇ£ÈáåÔºåÁ¨¨‰∏ÄÊ¨°ËøîÂõûÁöÑvalueÊòØ11ÔºåÂ∞Ü11-3=8 Â∞Ü8*2=16ÂæóÂà∞value ÂõûÂà∞‰∏ªÊñπÊ≥ï ÂÜçËµ∞‰∏ÄËæπgetValueÔºàÔºâ ËøõÂÖ•finallyÔºåÂÜçÂ∞Üvalue*2=34 Á¨¨‰∫å‰∏™Êï∞Â≠óÂá∫Êù•‰∫ÜÔºåÊâìÂç∞34ÔºåÁÑ∂ÂêéËøîÂõû3 Âà∞ËøôÈáå‰∏ªÂáΩÊï∞ÊâßË°åÂÆåÊàêÔºå‰ΩÜÊòØÊ≥®ÊÑè‰∫Ü„ÄÇÁ¨¨‰∫åÊ¨°ËøîÂõûÂÄºÊòØ17ÔºåÁ¨¨‰∏âÊ¨°ÊòØ34„ÄÇÂà∞‰∫ÜÊúÄÂêéÂèàËæìÂá∫‰∫ÜgetValueÔºàÔºâÁ¨¨‰∫åÊ¨°ÁöÑËøîÂõûÂÄºÔºå‰πüÂ∞±ÊòØ17 ÊâÄ‰ª•Êï¥‰∏™ËøáÁ®ãÊâßË°åÂÆåÂêéÁöÑËæìÂá∫ÁªìÊûúÊòØ22„ÄÅ34„ÄÅ17„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ Ëøô‰∏™È¢òÊúâ‰∫õËØ≠Âè•ÊúâÁÇπÂ§ö‰ΩôÔºåË≠¨Â¶Çfinally‰ª£Á†ÅÂùóÂêéÈù¢returnÊ∞∏ËøúÁî®‰∏ç‰∏ä„ÄÇ ËøôÈÅìÈ¢òËôΩÁÑ∂È•∂‰∫ÜÂæàÂ§öÂºØÔºå‰ΩÜÁªÜÁªÜÂìÅÂë≥ÂêéÂÖ∂ÂÆûÂπ∂Ê≤°ÈÇ£‰πàÈöæÔºåËÄÉÁÇπÊòØÔºö 1.Ëá™Á±ªÁªßÊâøÁà∂Á±ªÔºåË∞ÉÁî®ÊñπÊ≥ïÊó∂ÂÖàÊòØË∞ÉÁî®Â≠êÁ±ª‰∏≠ÁöÑÊñπÊ≥ïÔºåÂ¶ÇÊûúÊ≤°ÊúâÂ∞±Ë∞ÉÁî®Áà∂Á±ª‰∏≠ÁöÑÊñπÊ≥ï„ÄÇ 2.try{ }„ÄÅcatch{ }„ÄÅfinally{ }ËøîÂõûÂÄºÁöÑÈóÆÈ¢òÔºå‰∏ÄÊó¶try{ }‰∏≠ËøîÂõû‰∫ÜÊüê‰∏Ä‰∏™ÂÄºÔºåÂ¶ÇÊûúfinallyÊúâËøîÂõûÂÄºÔºåfinally‰∏≠ÁöÑËøîÂõûÂÄº‰ºöË¶ÜÁõñtryÁöÑËøîÂõûÂÄºÔºåÂ¶ÇÊûúfinallyÊ≤°ÊúâËøîÂõûÂÄºÔºåÂ∞±ÊòØtry‰∏≠ÁöÑËøîÂõûÂÄº„ÄÇ]]></content>
      <tags>
        <tag>java</tag>
        <tag>ÈîôÈ¢ò</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖ≥‰∫éHashmapÁöÑ‰∏™‰∫∫ÁêÜËß£]]></title>
    <url>%2F2018%2F07%2F08%2F%E5%85%B3%E4%BA%8EHashmap%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%90%86%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[ÂàöÂàöÁúãÂà∞QQÁæ§Êúâ‰∫∫ÂêπHashmapÔºå‰∏ÄÊÉ≥ÊàëÂï•ÈÉΩ‰∏çÊáÇÔºåÂ∞±Ëµ∂Âø´Ë°•‰∫Ü‰∏ÄÊ≥¢„ÄÇ‰∏ãÈù¢ÂàÜ‰∫´‰∏Ä‰∏ãÊàëÂØπHashmapÁöÑÁêÜËß£Ôºå‰∏ªË¶ÅÁî®‰∫é‰∏™‰∫∫Â§áÂøò„ÄÇÂ¶ÇÊûúÊúâ‰∏çÂØπÔºåËØ∑ÊâπËØÑ„ÄÇÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆhttps://blog.tengshe789.tech/ ÊÄªËµ∑HashmapÊòØÊï£ÂàóË°®ÔºåÂ≠òÂÇ®ÁªìÊûÑÊòØÈîÆÂÄºÂØπÂΩ¢Âºè„ÄÇÊ†πÊçÆÂÅ•ÁöÑHashcodeÂÄºÂ≠òÂÇ®Êï∞ÊçÆÔºåÊúâËæÉÂø´ÁöÑËÆøÈóÆÈÄüÂ∫¶„ÄÇ ÂÆÉÁöÑÁ∫øÁ®ãÊòØ‰∏çÂÆâÂÖ®ÁöÑÔºåÂú®‰∏§‰∏™Á∫øÁ®ãÂêåÊó∂Â∞ùËØïÊâ©ÂÆπHashMapÊó∂ÔºåÂèØËÉΩÂ∞Ü‰∏Ä‰∏™ÈìæË°®ÂΩ¢ÊàêÁéØÂΩ¢ÁöÑÈìæË°®ÔºåÊâÄÊúâÁöÑnextÈÉΩ‰∏ç‰∏∫Á©∫ÔºåËøõÂÖ•Ê≠ªÂæ™ÁéØÔºõË¶ÅÊÉ≥ËÆ©ÂÆÉÂÆâÂÖ®ÔºåÂèØ‰ª•Áî® CollectionsÁöÑsynchronizedMap ÊñπÊ≥ï‰Ωø HashMapÂÖ∑ÊúâÁ∫øÁ®ãÂÆâÂÖ®ÁöÑËÉΩÂäõÔºåÊàñËÄÖ‰ΩøÁî®ConcurrentHashMap „ÄÇ ‰ªñÁöÑÈîÆÂÄºÂØπÈÉΩÂèØ‰ª•‰∏∫Á©∫ÔºåÊò†Â∞Ñ‰∏çÊòØÊúâÂ∫èÁöÑ„ÄÇ HashmapÊúâ‰∏§‰∏™ÂèÇÊï∞ÂΩ±ÂìçÊÄßËÉΩÔºöÂàùÂßãÂÆπÈáèÔºåÂä†ËΩΩÂõ†Â≠ê„ÄÇ HashmapÂ≠òÂÇ®ÁªìÊûÑJDK1.8‰∏≠HashmapÊòØÁî±ÈìæË°®„ÄÅÁ∫¢ÈªëÊ†ë„ÄÅÊï∞ÁªÑÂÆûÁé∞ÁöÑ 12345678910111213141516171819202122232425262728293031323334353637383940//Áî®Êù•ÂÆûÁé∞Êï∞ÁªÑ„ÄÅÈìæË°®ÁöÑÊï∞ÊçÆÁªìÊûÑstatic class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; &#123; final int hash;//‰øùÂ≠òËäÇÁÇπÁöÑHash final K key;//‰øùÂ≠òËäÇÁÇπÁöÑÈîÆÂÄº V value;//‰øùÂ≠òËäÇÁÇπÁöÑÂÄº Node&lt;K,V&gt; next;//ÊåáÂêëÈìæË°®ÊàñËÄÖÁ∫¢ÈªëÊ†ëÁöÑ‰∏ã‰∏Ä‰∏™ËäÇÁÇπ Node(int hash, K key, V value, Node&lt;K,V&gt; next) &#123; this.hash = hash; this.key = key; this.value = value; this.next = next; &#125; public final K getKey() &#123; return key; &#125; public final V getValue() &#123; return value; &#125; public final String toString() &#123; return key + "=" + value; &#125; public final int hashCode() &#123; return Objects.hashCode(key) ^ Objects.hashCode(value); &#125; public final V setValue(V newValue) &#123; V oldValue = value; value = newValue; return oldValue; &#125; public final boolean equals(Object o) &#123; if (o == this) return true; if (o instanceof Map.Entry) &#123; Map.Entry&lt;?,?&gt; e = (Map.Entry&lt;?,?&gt;)o; if (Objects.equals(key, e.getKey()) &amp;&amp; Objects.equals(value, e.getValue())) return true; &#125; return false; &#125; &#125; HashmapÊûÑÈÄ†ÊñπÊ≥ïHashMapÊúâ4‰∏™ÊûÑÈÄ†ÊñπÊ≥ï„ÄÇ ‰ª£Á†ÅÔºö 1234567891011121314151617181920212223242526272829//ÊñπÊ≥ï1.Âà∂ÂÆöÂàùÂßãÂÆπÈáèÂíåË¥üËΩΩÂõ†Â≠êpublic HashMap(int initialCapacity, float loadFactor) &#123; if (initialCapacity &lt; 0) throw new IllegalArgumentException("Illegal initial capacity: " + initialCapacity); if (initialCapacity &gt; MAXIMUM_CAPACITY) initialCapacity = MAXIMUM_CAPACITY; if (loadFactor &lt;= 0 || Float.isNaN(loadFactor)) throw new IllegalArgumentException("Illegal load factor: " + loadFactor); this.loadFactor = loadFactor; this.threshold = tableSizeFor(initialCapacity); &#125;//ÊñπÊ≥ï2.ÊåáÂÆöÂàùÂßãÂÆπÈáè public HashMap(int initialCapacity) &#123; this(initialCapacity, DEFAULT_LOAD_FACTOR); &#125;//ÊñπÊ≥ï‰∏â„ÄÇÊó†ÂèÇÊûÑÈÄ†„ÄÇ HashMap() &#123; this.loadFactor = DEFAULT_LOAD_FACTOR; // all other fields defaulted &#125;//ÊñπÊ≥ïÂõõ„ÄÇÂ∞ÜÂè¶‰∏Ä‰∏™ Map ‰∏≠ÁöÑÊò†Â∞ÑÊã∑Ë¥ù‰∏Ä‰ªΩÂà∞Ëá™Â∑±ÁöÑÂ≠òÂÇ®ÁªìÊûÑ‰∏≠Êù•ÔºåËøô‰∏™ÊñπÊ≥ï‰∏çÊòØÂæàÂ∏∏Áî® public HashMap(Map&lt;? extends K, ? extends V&gt; m) &#123; this.loadFactor = DEFAULT_LOAD_FACTOR; putMapEntries(m, false); &#125; HashmapÂèòÈáèÊàêÂëò12345678910111213141516//Êú™ÊåáÂÆöÂÆπÈáèÁöÑÊó∂ÂÄôÔºåÊï∞ÁªÑÁöÑÂàùÂßãÂÆπÈáè„ÄÇÂàùÂßãÂÆπÈáèÊòØ16//‰∏∫‰ªÄ‰πà‰∏çÁõ¥Êé•ÂÜô16ÔºüÂõ†‰∏∫ÈÄüÂ∫¶Âø´„ÄÇËÆ°ÁÆóÊú∫ÈáåÈù¢Ë¶ÅËΩ¨Êç¢‰∫åËøõÂà∂„ÄÇ//ÂøÖÈ°ª2ÁöÑnÊ¨°ÂπÇstatic final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4; // aka 16//Ë¥üËΩΩÂõ†Â≠ê„ÄÇÂΩìhashmapÂÆπÈáèË∂ÖËøá ÂÆπÈáè*Ë¥üËΩΩÂõ†Â≠ê Êó∂ÔºåËøõË°åÊâ©ÂÆπÊìç‰ΩúÔºàresizeÔºàÔºâÔºâstatic final float DEFAULT_LOAD_FACTOR = 0.75f;//Á°ÆÂÆö‰ΩïÊó∂Â∞ÜhashÂÜ≤Á™ÅÁöÑÈìæË°®ËΩ¨Êç¢ÊàêÁ∫¢ÈªëÊ†ëstatic final int TREEIFY_THRESHOLD = 8;//Áî®Êù•Á°Æ‰ΩïÊó∂Â∞ÜÁ∫¢ÈªëÊ†ëËΩ¨Êç¢ÊàêÈìæË°®static final int UNTREEIFY_THRESHOLD = 6;//ÂΩìÈìæË°®ËΩ¨Êç¢ÊàêÁ∫¢ÈªëÊ†ëÊó∂ÔºåÈúÄË¶ÅÂà§Êñ≠Êï∞ÁªÑÂÆπÈáè„ÄÇËã•Êï∞ÁªÑÂÆπÈáèÂ§™Â∞èÂØºËá¥hashÂÜ≤Á™ÅÂ§™Â§öÔºåÂàô‰∏çËøõË°åÁ∫¢ÈªëÊ†ëÊìç‰ΩúÔºåËΩ¨ËÄåÂà©Áî®reseizeÊâ©ÂÆπstatic final int MIN_TREEIFY_CAPACITY = 64; ÂàùÂßãÂÆπÈáè„ÄÅË¥üËΩΩÂõ†Â≠ê„ÄÅÈòàÂÄº.‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÔºå‰ΩøÁî®Êó†ÂèÇÊûÑÈÄ†ÊñπÊ≥ïÂàõÂª∫ HashMap„ÄÇ‰ΩÜÂΩìÊàë‰ª¨ÂØπÊó∂Èó¥ÂíåÁ©∫Èó¥Â§çÊùÇÂ∫¶ÊúâË¶ÅÊ±ÇÁöÑÊó∂ÂÄôÔºå‰ΩøÁî®ÈªòËÆ§ÂÄºÊúâÊó∂ÂèØËÉΩËææ‰∏çÂà∞Êàë‰ª¨ÁöÑË¶ÅÊ±ÇÔºåËøô‰∏™Êó∂ÂÄôÊàë‰ª¨Â∞±ÈúÄË¶ÅÊâãÂä®Ë∞ÉÂèÇ„ÄÇ Âú® HashMap ÊûÑÈÄ†ÊñπÊ≥ï‰∏≠ÔºåÂèØ‰æõÊàë‰ª¨Ë∞ÉÊï¥ÁöÑÂèÇÊï∞Êúâ‰∏§‰∏™Ôºå‰∏Ä‰∏™ÊòØÂàùÂßãÂÆπÈáèinitialCapacityÔºåÂè¶‰∏Ä‰∏™Ë¥üËΩΩÂõ†Â≠êloadFactor„ÄÇÈÄöËøáËøô‰∏§‰∏™ËÆæÂÆöËøô‰∏§‰∏™ÂèÇÊï∞ÔºåÂèØ‰ª•Ëøõ‰∏ÄÊ≠•ÂΩ±ÂìçÈòàÂÄºÂ§ßÂ∞è„ÄÇ‰ΩÜÂàùÂßãÈòàÂÄº threshold ‰ªÖÁî±initialCapacity ÁªèËøáÁßª‰ΩçÊìç‰ΩúËÆ°ÁÆóÂæóÂá∫„ÄÇ ÂêçÁß∞ Áî®ÈÄî initialCapacity HashMap ÂàùÂßãÂÆπÈáè loadFactor Ë¥üËΩΩÂõ†Â≠ê threshold ÂΩìÂâç HashMap ÊâÄËÉΩÂÆπÁ∫≥ÈîÆÂÄºÂØπÊï∞ÈáèÁöÑÊúÄÂ§ßÂÄºÔºåË∂ÖËøáËøô‰∏™ÂÄºÔºåÂàôÈúÄÊâ©ÂÆπ ÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºåHashMap ÂàùÂßãÂÆπÈáèÊòØ16ÔºåË¥üËΩΩÂõ†Â≠ê‰∏∫ 0.75„ÄÇ Ê≥®Èáä‰∏≠ÊúâËØ¥ÊòéÔºåÈòàÂÄºÂèØÁî±ÂÆπÈáè‰πò‰∏äË¥üËΩΩÂõ†Â≠êËÆ°ÁÆóËÄåÊù• ÔºåÂç≥threshold = capacity * loadFactor 123456789static final int tableSizeFor(int cap) &#123; int n = cap - 1; n |= n &gt;&gt;&gt; 1; n |= n &gt;&gt;&gt; 2; n |= n &gt;&gt;&gt; 4; n |= n &gt;&gt;&gt; 8; n |= n &gt;&gt;&gt; 16; return (n &lt; 0) ? 1 : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1; &#125; ËøôÊÆµ‰ª£Á†ÅÊúâÁÇπÈöæÔºåÊ†πÊçÆÂ§ßÁ•ûÁöÑËØ¥Ê≥ïÔºåËøô‰∏™ÊñπÊ≥ïÁöÑÊÑèÊÄùÊòØÔºåÊâæÂà∞Â§ß‰∫éÊàñÁ≠â‰∫é cap ÁöÑÊúÄÂ∞è2ÁöÑÂπÇ„ÄÇÊàë‰ª¨ÂÖàÊù•ÁúãÁúã tableSizeFor ÊñπÊ≥ïÁöÑÂõæËß£ Ôºö Âõæ‰∏≠ÂÆπÈáèÊòØ229+1ÔºåËÆ°ÁÆóÂêéÊòØ230 ÂºïÁî®‰∏Ä‰∏ãÂïäÂ§ßÁ•ûËØ¥ÁöÑÔºö ÂØπ‰∫é HashMap Êù•ËØ¥ÔºåË¥üËΩΩÂõ†Â≠êÊòØ‰∏Ä‰∏™ÂæàÈáçË¶ÅÁöÑÂèÇÊï∞ÔºåËØ•ÂèÇÊï∞ÂèçÂ∫î‰∫Ü HashMap Ê°∂Êï∞ÁªÑÁöÑ‰ΩøÁî®ÊÉÖÂÜµÔºàÂÅáËÆæÈîÆÂÄºÂØπËäÇÁÇπÂùáÂåÄÂàÜÂ∏ÉÂú®Ê°∂Êï∞ÁªÑ‰∏≠Ôºâ„ÄÇÈÄöËøáË∞ÉËäÇË¥üËΩΩÂõ†Â≠êÔºåÂèØ‰Ωø HashMap Êó∂Èó¥ÂíåÁ©∫Èó¥Â§çÊùÇÂ∫¶‰∏äÊúâ‰∏çÂêåÁöÑË°®Áé∞„ÄÇÂΩìÊàë‰ª¨Ë∞É‰ΩéË¥üËΩΩÂõ†Â≠êÊó∂ÔºåHashMap ÊâÄËÉΩÂÆπÁ∫≥ÁöÑÈîÆÂÄºÂØπÊï∞ÈáèÂèòÂ∞ë„ÄÇÊâ©ÂÆπÊó∂ÔºåÈáçÊñ∞Â∞ÜÈîÆÂÄºÂØπÂ≠òÂÇ®Êñ∞ÁöÑÊ°∂Êï∞ÁªÑÈáåÔºåÈîÆÁöÑÈîÆ‰πãÈó¥‰∫ßÁîüÁöÑÁ¢∞Êíû‰ºö‰∏ãÈôçÔºåÈìæË°®ÈïøÂ∫¶ÂèòÁü≠„ÄÇÊ≠§Êó∂ÔºåHashMap ÁöÑÂ¢ûÂà†ÊîπÊü•Á≠âÊìç‰ΩúÁöÑÊïàÁéáÂ∞Ü‰ºöÂèòÈ´òÔºåËøôÈáåÊòØÂÖ∏ÂûãÁöÑÊãøÁ©∫Èó¥Êç¢Êó∂Èó¥„ÄÇÁõ∏ÂèçÔºåÂ¶ÇÊûúÂ¢ûÂä†Ë¥üËΩΩÂõ†Â≠êÔºàË¥üËΩΩÂõ†Â≠êÂèØ‰ª•Â§ß‰∫é1ÔºâÔºåHashMap ÊâÄËÉΩÂÆπÁ∫≥ÁöÑÈîÆÂÄºÂØπÊï∞ÈáèÂèòÂ§öÔºåÁ©∫Èó¥Âà©Áî®ÁéáÈ´òÔºå‰ΩÜÁ¢∞ÊíûÁéá‰πüÈ´ò„ÄÇËøôÊÑèÂë≥ÁùÄÈìæË°®ÈïøÂ∫¶ÂèòÈïøÔºåÊïàÁéá‰πüÈöè‰πãÈôç‰ΩéÔºåËøôÁßçÊÉÖÂÜµÊòØÊãøÊó∂Èó¥Êç¢Á©∫Èó¥„ÄÇËá≥‰∫éË¥üËΩΩÂõ†Â≠êÊÄé‰πàË∞ÉËäÇÔºåËøô‰∏™Áúã‰ΩøÁî®Âú∫ÊôØ‰∫Ü„ÄÇ‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÔºåÊàë‰ª¨Áî®ÈªòËÆ§ÂÄºÂ∞±ÂèØ‰ª•‰∫Ü„ÄÇ ÊèíÂÖ•PUTËøáÁ®ãÔºö ÂØπKeyÊ±ÇhashÂÄºÔºåÁÑ∂ÂêéËÆ°ÁÆó‰∏ãÊ†á Â¶ÇÊûúÊ≤°ÊúâÁ¢∞ÊíûÔºåÂ∞±ÊîæÂÖ•Ê°∂‰∏≠ Â¶ÇÊûúÁ¢∞Êíû‰∫ÜÔºåÂ∞±‰ª•ÈìæË°®ÂΩ¢ÂºèÊîæÂà∞ÂêéÈù¢ Â¶ÇÊûúÈìæË°®ÈïøÂ∫¶Ë∂ÖËøáÈòàÂÄºÔºåÂ∞±ÊääÈìæË°®ËΩ¨Êç¢ÊàêÁ∫¢ÈªëÊ†ë Â¶ÇÊûúÈìæË°®Â≠òÂú®ÂàôÊõøÊç¢ÊóßÂÄº Â¶ÇÊûúÊ°∂Êª°‰∫ÜÔºàÂÆπÈáè*Ë¥üËΩΩÂõ†Â≠êÔºâÔºåÂàôÈáçÊñ∞resize 1234public V put(K key, V value) &#123; //Ë∞ÉÁî®Ê†∏ÂøÉÊñπÊ≥ï return putVal(hash(key), key, value, false, true); &#125; putValÊ†∏ÂøÉÁÆóÊ≥ïÂú®putValÔºàÔºâ‰∏≠„ÄÇË¶ÅÊÉ≥ÁêÜËß£ÔºåÂÖàË¶ÅÊòéÁôΩÊ°∂ÊéíÂ∫è(Bucket Sort) ÂÆÉÊòØËøÑ‰ªä‰∏∫Ê≠¢ÊúÄÂø´ÁöÑ‰∏ÄÁßçÊéíÂ∫èÊ≥ïÔºåÂÖ∂Êó∂Èó¥Â§çÊùÇÂ∫¶‰ªÖ‰∏∫Œü(n)Ôºå‰πüÂ∞±ÊòØÁ∫øÊÄßÂ§çÊùÇÂ∫¶„ÄÇ Ê°∂ÊéíÂ∫èÊ†∏ÂøÉÊÄùÊÉ≥ÊòØÔºöÊ†πÊçÆÊï∞ÊçÆËßÑÊ®°nÂàíÂàÜÔºåm‰∏™Áõ∏ÂêåÂ§ßÂ∞èÁöÑÂå∫Èó¥ ÔºàÊØè‰∏™Âå∫Èó¥‰∏∫‰∏Ä‰∏™Ê°∂ÔºåÊ°∂ÂèØÁêÜËß£‰∏∫ÂÆπÂô®Ôºâ „ÄÇÂ∞Ün‰∏™ÂÖÉÁ¥†ÊåâÁÖßËßÑÂÆöËåÉÂõ¥ÂàÜÂ∏ÉÂà∞ÂêÑ‰∏™Ê°∂‰∏≠Âéª ÔºåÂÜçÂØπÊØè‰∏™Ê°∂‰∏≠ÁöÑÂÖÉÁ¥†ËøõË°åÊéíÂ∫èÔºåÊéíÂ∫èÊñπÊ≥ïÂèØÊ†πÊçÆÈúÄË¶ÅÔºåÈÄâÊã©Âø´ÈÄüÊéíÂ∫èÔºåÊàñËÄÖÂΩíÂπ∂ÊéíÂ∫èÔºåÊàñËÄÖÊèíÂÖ•ÊéíÂ∫è ÔºåÁÑ∂Âêé‰æùÊ¨°‰ªéÊØè‰∏™Ê°∂‰∏≠ÂèñÂá∫ÂÖÉÁ¥†ÔºåÊåâÈ°∫Â∫èÊîæÂÖ•Âà∞ÊúÄÂàùÁöÑËæìÂá∫Â∫èÂàó‰∏≠(Áõ∏ÂΩì‰∫éÊääÊâÄÊúâÁöÑÊ°∂‰∏≠ÁöÑÂÖÉÁ¥†ÂêàÂπ∂Âà∞‰∏ÄËµ∑) „ÄÇ ‰∏ãÈù¢ÊòØ‰ª£Á†ÅÔºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354final V putVal(int hash, K key, V value, boolean onlyIfAbsent, boolean evict) &#123; //nÊòØÊï∞ÁªÑÈïøÂ∫¶ Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i; //Âà§Êñ≠Ê°∂Êï∞ÁªÑÊòØÂê¶ÊòØÁ©∫ if ((tab = table) == null || (n = tab.length) == 0) //ÊòØÂ∞±Áî®resizeÔºàÔºâÂàùÂßãÂåñ n = (tab = resize()).length; //Ê†πÊçÆ hash ÂÄºÁ°ÆÂÆöËäÇÁÇπÂú®Êï∞ÁªÑ‰∏≠ÁöÑÊèíÂÖ•‰ΩçÁΩÆ //Ëã•Ê≠§‰ΩçÁΩÆÊ≤°ÊúâÂÖÉÁ¥†ÂàôËøõË°åÊèíÂÖ•ÔºåÊ≥®ÊÑèÁ°ÆÂÆöÊèíÂÖ•‰ΩçÁΩÆÊâÄÁî®ÁöÑËÆ°ÁÆóÊñπÊ≥ï‰∏∫ (n - 1) &amp; hash,Áî±‰∫é n ‰∏ÄÂÆöÊòØÔºíÁöÑÂπÇÊ¨°ÔºåËøô‰∏™Êìç‰ΩúÁõ∏ÂΩì‰∫éhash % n if ((p = tab[i = (n - 1) &amp; hash]) == null) //Â∞ÜÊñ∞ËäÇÁÇπÂºïÂÖ•Ê°∂‰∏≠ tab[i] = newNode(hash, key, value, null); else &#123; //‰∏¥Êó∂ÂèòÈáèeËøõË°åËÆ∞ÂΩï„ÄÇÂ¶ÇÊûúÊúâÂÄºÔºåËØ¥Êòé‰ªÖ‰ªÖÊòØÂÄºÁöÑË¶ÜÁõñ„ÄÇ Node&lt;K,V&gt; e; K k; // Â¶ÇÊûúÈîÆÁöÑÂÄº‰ª•ÂèäËäÇÁÇπ hash Á≠â‰∫éÈìæË°®‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ÈîÆÂÄºÂØπËäÇÁÇπÊó∂ÔºåÂàôÂ∞Ü e ÊåáÂêëËØ•ÈîÆÂÄºÂØπ if (p.hash == hash &amp;&amp; ((k = p.key) == key || (key != null &amp;&amp; key.equals(k)))) e = p; else if (p instanceof TreeNode)// Â¶ÇÊûúÊ°∂‰∏≠ÁöÑÂºïÁî®Á±ªÂûã‰∏∫ TreeNodeÔºåÂàôË∞ÉÁî®Á∫¢ÈªëÊ†ëÁöÑÊèíÂÖ•ÊñπÊ≥ï e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value); else &#123;// ÂØπÈìæË°®ËøõË°åÈÅçÂéÜÔºåÂπ∂ÁªüËÆ°ÈìæË°®ÈïøÂ∫¶ for (int binCount = 0; ; ++binCount) &#123; if ((e = p.next) == null) &#123; p.next = newNode(hash, key, value, null); // ÈìæË°®‰∏≠‰∏çÂåÖÂê´Ë¶ÅÊèíÂÖ•ÁöÑÈîÆÂÄºÂØπËäÇÁÇπÊó∂ÔºåÂàôÂ∞ÜËØ•ËäÇÁÇπÊé•Âú®ÈìæË°®ÁöÑÊúÄÂêé if (binCount &gt;= TREEIFY_THRESHOLD - 1) // -1 for 1st treeifyBin(tab, hash); break; &#125; if (e.hash == hash &amp;&amp; ((k = e.key) == key || (key != null &amp;&amp; key.equals(k)))) break; p = e; &#125; &#125; //‰∏¥Êó∂ÂèòÈáèe‰∏ç‰∏∫Á©∫Êó∂ÔºåËØ¥ÊòéÂ∑≤ÁªèÊúâÂÄºËøõË°åÊõøÊç¢‰∫Ü if (e != null) &#123; // existing mapping for key V oldValue = e.value; if (!onlyIfAbsent || oldValue == null) e.value = value; afterNodeAccess(e); //ËøîÂõûËÄÅÂÄº return oldValue; &#125; &#125; ++modCount; //Êâ©ÂÆπ if (++size &gt; threshold) resize(); afterNodeInsertion(evict); return null; &#125; HASHhashÁÆóÊ≥ïÔºåÈ´òÂçÅÂÖ≠‰Ωç‰∏é‰ΩéÂçÅÂÖ≠ËøõË°åÂºÇÊàñËøêÁÆóÔºåËøôÊ†∑ÂÅöÁöÑÂ•ΩÂ§ÑÊòØ‰ΩøÂæóÂà∞ÁªìÊûú‰ºöÂ∞ΩÂèØËÉΩ‰∏çÂêå„ÄÇ 1234static final int hash(Object key) &#123; int h; return (key == null) ? 0 : (h = key.hashCode()) ^ (h &gt;&gt;&gt; 16); &#125; resize HashMap ÁöÑÊâ©ÂÆπÊú∫Âà∂‰∏éÂÖ∂‰ªñÂèòÈïøÈõÜÂêàÁöÑÂ•óË∑Ø‰∏çÂ§™‰∏ÄÊ†∑ÔºåHashMap ÊåâÂΩìÂâçÊ°∂Êï∞ÁªÑÈïøÂ∫¶ÁöÑ2ÂÄçËøõË°åÊâ©ÂÆπÔºåÈòàÂÄº‰πüÂèò‰∏∫ÂéüÊù•ÁöÑ2ÂÄçÔºàÂ¶ÇÊûúËÆ°ÁÆóËøáÁ®ã‰∏≠ÔºåÈòàÂÄºÊ∫¢Âá∫ÂΩíÈõ∂ÔºåÂàôÊåâÈòàÂÄºÂÖ¨ÂºèÈáçÊñ∞ËÆ°ÁÆóÔºâ„ÄÇÊâ©ÂÆπ‰πãÂêéÔºåË¶ÅÈáçÊñ∞ËÆ°ÁÆóÈîÆÂÄºÂØπÁöÑ‰ΩçÁΩÆÔºåÂπ∂ÊääÂÆÉ‰ª¨ÁßªÂä®Âà∞ÂêàÈÄÇÁöÑ‰ΩçÁΩÆ‰∏äÂéª„ÄÇ resizeÊÄªÂÖ±ÂÅö‰∫Ü3‰ª∂‰∫ãÔºåÂàÜÂà´ÊòØÔºö ËÆ°ÁÆóÊñ∞Ê°∂Êï∞ÁªÑÁöÑÂÆπÈáè newCap ÂíåÊñ∞ÈòàÂÄº newThr Ê†πÊçÆËÆ°ÁÆóÂá∫ÁöÑ newCap ÂàõÂª∫Êñ∞ÁöÑÊ°∂Êï∞ÁªÑÔºåÊ°∂Êï∞ÁªÑ table ‰πüÊòØÂú®ËøôÈáåËøõË°åÂàùÂßãÂåñÁöÑ Â∞ÜÈîÆÂÄºÂØπËäÇÁÇπÈáçÊñ∞Êò†Â∞ÑÂà∞Êñ∞ÁöÑÊ°∂Êï∞ÁªÑÈáå„ÄÇÂ¶ÇÊûúËäÇÁÇπÊòØ TreeNode Á±ªÂûãÔºåÂàôÈúÄË¶ÅÊãÜÂàÜÁ∫¢ÈªëÊ†ë„ÄÇÂ¶ÇÊûúÊòØÊôÆÈÄöËäÇÁÇπÔºåÂàôËäÇÁÇπÊåâÂéüÈ°∫Â∫èËøõË°åÂàÜÁªÑ„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394//resizeÔºàÔºâÂáΩÊï∞Âú®size &gt; thresholdÊó∂Ë¢´Ë∞ÉÁî®final Node&lt;K,V&gt;[] resize() &#123; Node&lt;K,V&gt;[] oldTab = table; int oldCap = (oldTab == null) ? 0 : oldTab.length; int oldThr = threshold; int newCap, newThr = 0; //oldCapÂ§ß‰∫é 0 ‰ª£Ë°®ÂéüÊù•ÁöÑ table ÈùûÁ©∫ if (oldCap &gt; 0) &#123; // ÂΩì table ÂÆπÈáèË∂ÖËøáÂÆπÈáèÊúÄÂ§ßÂÄºÔºåÂàô‰∏çÂÜçÊâ©ÂÆπ if (oldCap &gt;= MAXIMUM_CAPACITY) &#123; //ÈòàÂÄºËÆæ‰∏∫Êï¥ÂΩ¢ÊúÄÂ§ßÂÄº threshold = Integer.MAX_VALUE; return oldTab; &#125;// ÊåâÊóßÂÆπÈáèÂíåÈòàÂÄºÁöÑ2ÂÄçËÆ°ÁÆóÊñ∞ÂÆπÈáèÂíåÈòàÂÄºÁöÑÂ§ßÂ∞è else if ((newCap = oldCap &lt;&lt; 1) &lt; MAXIMUM_CAPACITY &amp;&amp; oldCap &gt;= DEFAULT_INITIAL_CAPACITY) newThr = oldThr &lt;&lt; 1; // double threshold &#125; else if (oldThr &gt; 0) // initial capacity was placed in threshold /* *oldCap Â∞è‰∫éÁ≠â‰∫é 0 ‰∏î oldThr Â§ß‰∫é0Ôºå‰ª£Ë°®Áî®Êà∑ÂàõÂª∫‰∫Ü‰∏Ä‰∏™ HashMapÔºå‰ΩÜÊòØ‰ΩøÁî®ÁöÑÊûÑÈÄ†ÂáΩÊï∞‰∏∫ * HashMap(int initialCapacity, float loadFactor) Êàñ HashMap(int initialCapacity) * Êàñ HashMap(Map&lt;? extends K, ? extends V&gt; m)ÔºåÂØºËá¥ oldTab ‰∏∫ nullÔºåoldCap ‰∏∫0Ôºå * oldThr ‰∏∫Áî®Êà∑ÊåáÂÆöÁöÑ HashMapÁöÑÂàùÂßãÂÆπÈáè */ newCap = oldThr; else &#123; //ËÆæÁΩÆÊñ∞ÂÆπÈáèÂíåÊñ∞ÈòàÂÄºÂ§ßÂ∞è newCap = DEFAULT_INITIAL_CAPACITY; newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY); &#125; // newThr ‰∏∫ 0 Êó∂ÔºåÊåâÈòàÂÄºËÆ°ÁÆóÂÖ¨ÂºèËøõË°åËÆ°ÁÆó if (newThr == 0) &#123; //ËÆ°ÁÆóÊñ∞ÈòàÂÄº float ft = (float)newCap * loadFactor; newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (float)MAXIMUM_CAPACITY ? (int)ft : Integer.MAX_VALUE); &#125; //ÂáÜÂ§áÂàùÂßãÂåñËøáÁ®ã threshold = newThr; @SuppressWarnings(&#123;"rawtypes","unchecked"&#125;) Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])new Node[newCap]; table = newTab; if (oldTab != null) &#123; //ÈÅçÂéÜ„ÄÇÊää oldTab ‰∏≠ÁöÑËäÇÁÇπ reHash Âà∞ newTab ‰∏≠Âéª for (int j = 0; j &lt; oldCap; ++j) &#123; Node&lt;K,V&gt; e; //Âà§Êñ≠ËÄÅÊï∞ÁªÑÊòØÂê¶‰∏∫Á©∫ if ((e = oldTab[j]) != null) &#123; //‰∏ç‰∏∫Á©∫ÔºåËÆæÊàêÁ©∫ oldTab[j] = null; //Ëã•ËäÇÁÇπÊòØÂçï‰∏™ËäÇÁÇπÔºåÁõ¥Êé•ÈáçÊñ∞ÂàÜÈÖçÂÆö‰Ωç if (e.next == null) newTab[e.hash &amp; (newCap - 1)] = e; //Ëã•ËäÇÁÇπÊòØ TreeNode ËäÇÁÇπÔºåË¶ÅËøõË°å Á∫¢ÈªëÊ†ëÁöÑ rehash Êìç‰Ωú else if (e instanceof TreeNode) ((TreeNode&lt;K,V&gt;)e).split(this, newTab, j, oldCap); //Ëã•ÊòØÈìæË°®ÔºåËøõË°åÈìæË°®ÁöÑ rehash Êìç‰Ωú else &#123; // preserve order Node&lt;K,V&gt; loHead = null, loTail = null; Node&lt;K,V&gt; hiHead = null, hiTail = null; Node&lt;K,V&gt; next; // ÈÅçÂéÜÈìæË°®ÔºåÂπ∂Â∞ÜÈìæË°®ËäÇÁÇπÊåâÂéüÈ°∫Â∫èËøõË°åÂàÜÁªÑ do &#123; next = e.next; if ((e.hash &amp; oldCap) == 0) &#123; if (loTail == null) loHead = e; else loTail.next = e; loTail = e; &#125; else &#123; if (hiTail == null) hiHead = e; else hiTail.next = e; hiTail = e; &#125; &#125; while ((e = next) != null); if (loTail != null) &#123; loTail.next = null; newTab[j] = loHead; &#125; if (hiTail != null) &#123; hiTail.next = null; // rehash ÂêéËäÇÁÇπÊñ∞ÁöÑ‰ΩçÁΩÆ‰∏ÄÂÆö‰∏∫ÂéüÊù•Âü∫Á°Ä‰∏äÂä†‰∏ä oldCap newTab[j + oldCap] = hiHead; &#125; &#125; &#125; &#125; &#125; return newTab; &#125; ÂÖ≥‰∫éHashMapÂú®‰ªÄ‰πàÊó∂ÂÄôÊó∂Èó¥Â§çÊùÇÂ∫¶ÊòØOÔºà1ÔºâÔºå‰ªÄ‰πàÊó∂ÂÄôÊòØOÔºànÔºâÔºå‰ªÄ‰πàÊó∂ÂÄôÂèàÊòØOÔºàlognÔºâÁöÑÈóÆÈ¢òOÔºà1ÔºâÔºöÈìæË°®ÁöÑÈïøÂ∫¶Â∞ΩÂèØËÉΩÁü≠ÔºåÁêÜÊÉ≥Áä∂ÊÄÅ‰∏ãÈìæË°®ÈïøÂ∫¶ÈÉΩ‰∏∫1 OÔºànÔºâÔºöÂΩì Hash ÂÜ≤Á™Å‰∏•ÈáçÊó∂ÔºåÂ¶ÇÊûúÊ≤°ÊúâÁ∫¢ÈªëÊ†ëÔºåÈÇ£‰πàÂú®Ê°∂‰∏äÂΩ¢ÊàêÁöÑÈìæË°®‰ºöÂèòÁöÑË∂äÊù•Ë∂äÈïøÔºåËøôÊ†∑Âú®Êü•ËØ¢Êó∂ÁöÑÊïàÁéáÂ∞±‰ºöË∂äÊù•Ë∂ä‰ΩéÔºõÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫O(N)„ÄÇ OÔºàlognÔºâÔºöÈááÁî®Á∫¢ÈªëÊ†ë‰πãÂêéÂèØ‰ª•‰øùËØÅÊü•ËØ¢ÊïàÁéáO(logn) ÊâãÂÜô123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186/** * @author tengshe789 */public class ÊâãÂÜôHashMap &#123; public static class Node&lt;K,V&gt;&#123; K key; V value; Node&lt;K,V&gt; next; public Node(K key, V value, Node&lt;K, V&gt; next) &#123; this.key = key; this.value = value; this.next = next; &#125; public K getKey() &#123; return this.key; &#125; public V getValue() &#123; return this.value; &#125; public V setValue(V value) &#123; this.value=value; return this.value; &#125; &#125; public static class HashMap&lt;K, V&gt;&#123; /*Êï∞ÊçÆÂ≠òÂÇ®ÁöÑÁªìÊûÑ==&gt;Êï∞ÁªÑ+ÈìæË°®*/ Node&lt;K,V&gt;[] array=null; /* ÂìàÂ∏åÊ°∂ÁöÑÈïøÂ∫¶ */ private static int defaultLength=16; /*Âä†ËΩΩÂõ†Â≠ê/Êâ©ÂÆπÂõ†Â≠ê*/ private static double factor=0.75D; /*ÈõÜÂêà‰∏≠ÁöÑÂÖÉÁ¥†‰∏™Êï∞*/ private int size; /*ÊâìÂç∞ÂáΩÊï∞*/ public void print() &#123; System.out.println("==============================="); if(array!=null) &#123; Node&lt;K, V&gt; node=null; for (int i = 0; i &lt; array.length; i++) &#123; node=array[i]; System.out.print("‰∏ãÊ†á["+i+"]"); //ÈÅçÂéÜÈìæË°® while(node!=null) &#123; System.out.print("["+node.getKey()+":"+node.getValue()+"]"); if(node.next!=null) &#123; node=node.next; &#125;else &#123; //Âà∞Â∞æÈÉ®ÂÖÉÁ¥† node=null; &#125; &#125; System.out.println(); &#125; &#125; &#125; //putÂÖÉÁ¥†ÊñπÊ≥ï public V put(K k, V v) &#123; //1.ÊáíÂä†ËΩΩÊú∫Âà∂Ôºå‰ΩøÁî®ÁöÑÊó∂ÂÄôËøõË°åÂàÜÈÖç if(array==null) &#123; array=new Node[defaultLength]; &#125; //2.ÈÄöËøáhashÁÆóÊ≥ïÔºåËÆ°ÁÆóÂá∫ÂÖ∑‰ΩìÊèíÂÖ•ÁöÑ‰ΩçÁΩÆ int index=position(k,defaultLength); //Êâ©ÂÆπ„ÄÇÂà§Êñ≠ÊòØÂê¶ÈúÄË¶ÅÊâ©ÂÆπ //Êâ©ÂÆπÁöÑÂáÜÂàôÔºåÂÖÉÁ¥†ÁöÑ‰∏™Êï∞ Â§ß‰∫é Ê°∂ÁöÑÂ∞∫ÂØ∏*Âä†ËΩΩÂõ†Â≠ê if(size &gt; defaultLength*factor) &#123; resize(); &#125; //3.ÊîæÂÖ•Ë¶ÅÊèíÂÖ•ÁöÑÂÖÉÁ¥† Node&lt;K, V&gt; node=array[index]; if(node==null) &#123; array[index]=new Node&lt;K,V&gt;(k,v,null); size++; &#125;else &#123; if(k.equals(node.getKey()) || k==node.getKey()) &#123; return node.setValue(v); &#125;else &#123; array[index]=new Node&lt;K,V&gt;(k,v,node); size++; &#125; &#125; return null; &#125; //Êâ©ÂÆπÔºåÂπ∂‰∏îÈáçÊñ∞ÊéíÂàóÂÖÉÁ¥† private void resize() &#123; //ÁøªÂÄçÊâ©ÂÆπ //1.ÂàõÂª∫Êñ∞ÁöÑarray‰∏¥Êó∂ÂèòÈáè,Áõ∏ÂΩì‰∫édefaultlength*2 Node&lt;K, V&gt;[] temp=new Node[defaultLength &lt;&lt; 1]; //2.ÈáçÊñ∞ËÆ°ÁÆóÊï£ÂàóÂÄºÔºåÊèíÂÖ•Âà∞Êñ∞ÁöÑarray‰∏≠Âéª„ÄÇ code=key % defaultLength ==&gt; code=key % defaultLength*2 Node&lt;K, V&gt; node=null; for (int i = 0; i &lt; array.length; i++) &#123; node=array[i]; while(node!=null) &#123; //ÈáçÊñ∞Êï£Âàó int index=position(node.getKey(),temp.length); //ÊèíÂÖ•Â§¥ÈÉ® Node&lt;K, V&gt; next = node.next; //3 node.next=temp[index]; //1 temp[index]=node; //2 node=next; &#125; &#125; //3.ÊõøÊç¢ÊéâËÄÅarray array=temp; defaultLength=temp.length; temp=null; &#125; private int position(K k,int length) &#123; int code=k.hashCode(); //ÂèñÊ®°ÁÆóÊ≥ï return code % (length-1); //Ê±Ç‰∏éÁÆóÊ≥ï //return code &amp; (defaultLength-1); &#125; public V get(K k) &#123; if(array!=null) &#123; int index=position(k,defaultLength); Node&lt;K, V&gt; node=array[index]; //ÈÅçÂéÜÈìæË°® while(node!=null) &#123; //Â¶ÇÊûúkeyÂÄºÁõ∏ÂêåËøîÂõûvalue if(node.getKey()==k) &#123; return node.getValue(); &#125; else //Â¶ÇÊûúkeyÂÄº‰∏çÂêåÂàôË∞ÉÂà∞‰∏ã‰∏Ä‰∏™ÂÖÉÁ¥† &#123; node=node.next; &#125; &#125; &#125; return null; &#125; &#125; public static void main(String[] args) &#123; HashMap&lt;String, String&gt; map=new HashMap&lt;String, String&gt;(); map.put("001Âè∑", "001"); map.put("002Âè∑", "002"); map.put("003Âè∑", "003"); map.put("004Âè∑", "004"); map.put("005Âè∑", "005"); map.put("006Âè∑", "006"); map.put("007Âè∑", "007"); map.put("008Âè∑", "008"); map.put("009Âè∑", "009"); map.put("010Âè∑", "010"); map.put("011Âè∑", "011"); map.print(); System.out.println("========&gt;"+map.get("009Âè∑")); &#125; &#125; ÂèÇËÄÉËµÑÊñôcoolblog ÈòøÈáåÊû∂ÊûÑÂ∏àÂ∏¶‰Ω†ÂàÜÊûêHashMapÊ∫êÁ†ÅÂÆûÁé∞ÂéüÁêÜ ÊÑüË∞¢ÔºÅ ‰ª•‰∏ãÊù•Ëá™nÂ§©ÂêéÁöÑÊàëÔºö Ë°•ÂÖÖ‰∏Ä‰∏ãÁúãÂà∞‰∏Ä‰∏™ÈùûÂ∏∏Â•ΩÁöÑÔºöÁÇπÂáªÈìæÊé•ÔºåÂÄºÂæóÂ≠¶‰π†]]></content>
      <tags>
        <tag>Ê∫êÁ†Å</tag>
        <tag>java</tag>
        <tag>ÊäÄÊúØ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â§öÁªàÁ´ØÂêåÊ≠•Hexo]]></title>
    <url>%2F2018%2F07%2F07%2F%E5%A4%9A%E7%BB%88%E7%AB%AF%E5%90%8C%E6%AD%A5Hexo%2F</url>
    <content type="text"><![CDATA[ÊîæÂØíÂÅá‰∫ÜÔºåÁé©Ê∏∏ÊàèÔºÅ Âë∏Âë∏Âë∏ ÊàëÊòØÈÇ£Áßç‰∫∫‰πàÔºüÔºüÔºü ÊîæÂÅá‰∫ÜË¶ÅÂ•ΩÂ•ΩÂ≠¶‰π†ÔºåËÄå‰∏îÂ≠¶‰ªÄ‰πàË¶ÅËÆ∞ÂΩï‰∏Ä‰∏ãÔºåÊØèÂ§©ÂÜôÁÇπÂçöÂÆ¢ËÆ∞ÂΩï‰∏Ä‰∏ãËá™Â∑±ÁöÑÁÇπÁÇπÊª¥Êª¥Âïä~ÔºÅÂèØÂûÉÂúæÁ¨îËÆ∞Êú¨Â±èÂπïÂ§™Â∞è‰∫ÜÔºåÁúãÁöÑÁúºÁñºÔºåÊ≤°ÊúâÂäûÊ≥ïÂú®ÂéüÂÖàÊú¨Êú¨‰∏äÂÜôMDÂçöÂÆ¢ ËÇø‰πàÂäûÔºü ‰∏çÊÖåÔºåÂèØ‰ª•Âà©Áî®GitÂú®Â§öÂπ≥Âè∞‰∏äÂêåÊ≠•HexoÔºÅ ‰∏ãÈù¢ÊàëÂ∞±ÂàÜ‰∫´‰∏Ä‰∏ãÊ≠•È™§~ ÂáÜÂ§áÁéØÂ¢ÉÊàëÂ∞±‰∏çËØ¥‰∫ÜÔºåNode.jsÔºåGitÔºåHexoÔºåËøô‰∫õÈÉΩÊòØÊúÄÂü∫Êú¨ÁöÑ ‰∏ãËΩΩGit‰∏ãËΩΩ git OSX Áâà:git-scm.com/download/ma‚Ä¶‰∏ãËΩΩ git Windows Áâà:git-scm.com/download/wi‚Ä¶‰∏ãËΩΩ git Linux Áâà:git-scm.com/download/li‚Ä¶ ÂÆâË£ÖGitLinux$ sudo yum install gitÊàñËÄÖ$ sudo apt-get install gitMacÁõ¥Êé•Âú® Terminal ÊâßË°å git ÂëΩ‰ª§, Â¶ÇÊûúÊ≤°Êúâ‰ºöÊèêÁ§∫ÂÆâË£ÖÊñπÊ≥ï. Á¨îËÆ∞Êú¨Á´ØÔºàÈúÄË¶ÅÂ§á‰ªΩÁöÑ‰∏ÄÁ´ØÔºâËøõÂÖ•ÊàëÂçöÂÆ¢ÁöÑÂéüÂßãÊñá‰ª∂Â§πÂÜÖÔºåÊâæÂà∞.gitignoreÔºàGitÂ∞±‰ºöËá™Âä®ÂøΩÁï•Êñá‰ª∂ÊÄªÊ±áÔºâÊñá‰ª∂ÔºåÁî®ËÆ∞‰∫ãÊú¨ÊâìÂºÄ~ Ê∑ªÂä†Â¶Ç‰∏ã 123public/.deploy*/node_modules/ #npm install‰∫ßÁîüÁöÑnode_modulesÁî±‰∫éË∑ØÂæÑËøáÈïø‰∏çÂ•ΩÂ§ÑÁêÜ Ê∑ªÂä†ÂÆåÊàêÂêéÔºåÂè≥ÈîÆ Git BashÔºåËæìÂÖ•‰ª•‰∏ã‰ª£Á†ÅÔºö 1234567git init #ÂàùÂßãÂåñÊú¨Âú∞‰ªìÂ∫ìgit add . #Â∞ÜÂøÖË¶ÅÁöÑÊñá‰ª∂‰æùÊ¨°Ê∑ªÂä†git commit -m "Êõ¥Êñ∞ËØ¥Êòé" #ÂºïÂè∑ÈáåÈù¢Èöè‰æøÊîπÂì¶~git branch hexo #Êñ∞Âª∫hexoÂàÜÊîØÔºåÂΩìÁÑ∂ÔºåÂàÜÊîØÂêçÂ≠ó‚Äúhexo‚Äù‰πüÂèØ‰ª•Èöè‰æøÊîπÂì¶~git checkout hexo #ÂàáÊç¢Âà∞hexoÂàÜÊîØ‰∏ägit remote add origin git@github.com:tengshe789/tengshe789.github.io.git #Â∞ÜÊú¨Âú∞‰∏éGithubÈ°πÁõÆÂØπÊé•Ôºåtengshe789‰∏∫ÊàëÁöÑÁî®Êà∑Âêçgit push origin hexo #pushÂà∞GithubÈ°πÁõÆÁöÑhexoÂàÜÊîØ‰∏ä ÂÆåÊàêÂêéÂêàÂΩ±~ ËøôÈáåÊúâÂæàÂ§öÈöêÁßÅÊñá‰ª∂Â§πÔºåË≠¨Â¶Çconfig.yml,db.json‚Ä¶..Êàë‰πü‰∏Ä‰∏Ä‰∏ä‰º†‰∫ÜÔºåÂõ†‰∏∫ÊàëÊòØ‰∏™‰∏çÊÄïÊö¥ÊºèÈöêÁßÅÁöÑ‰∫∫ÂìàÂìàÂìàÂìà„ÄÇË¶ÅÊÉ≥ÈÅøÂÖçËøô‰∏™ÊÉÖÂÜµÂè™Â∞ÜsourceÊ∑ªÂä†Âç≥ÂèØ Âè∞ÂºèÊú∫Á´ØÔºàÈúÄË¶ÅËøòÂéüÁöÑ‰∏ÄÁ´ØÔºâ12345678git clone -b hexo git@github.com:tengshe789/tengshe789.github.io.git #Â∞ÜGithub‰∏≠hexoÂàÜÊîØcloneÂà∞Êú¨Âú∞cd tengshe789.github.io #ÂàáÊç¢Âà∞ÂàöÂàöcloneÁöÑÊñá‰ª∂Â§πÂÜÖnpm install #Ê≥®ÊÑèÔºåËøôÈáå‰∏ÄÂÆöË¶ÅÂàáÊç¢Âà∞ÂàöÂàöcloneÁöÑÊñá‰ª∂Â§πÂÜÖÊâßË°åÔºåÂÆâË£ÖÂøÖË¶ÅÁöÑÊâÄÈúÄÁªÑ‰ª∂Ôºå‰∏çÁî®ÂÜçinitnpm install hexo-cli -g # Â¶ÇÊûú‰∏çÂêåÊú∫Âô®nodeÁâàÊú¨ÂçáÁ∫ß‰∫ÜÔºåÈúÄË¶ÅÈáçÊñ∞ËøêË°åËøô‰∏™npm install https://github.com/CodeFalling/hexo-asset-image --save #ÂõæÁâáÊèí‰ª∂npm install --save hexo-pdf #pdfÊèí‰ª∂npm install hexo-deployer-git #ÈÉ®ÁΩ≤npm install hexo-generator-restful --save #ÁîüÊàê restful È£éÊ†ºÁöÑ json Êï∞ÊçÆ https://github.com/yscoder/hexo-generator-restful ÂÆåÊàêÔºÅ Êé•‰∏ãÊù•ÂÜô‰∏ÄÁØáÂçöÂÆ¢Â∫ÜÁ•ù‰∏Ä‰∏ã~ 1hexo new post "new blog name" #Êñ∞Âª∫‰∏Ä‰∏™.mdÊñá‰ª∂ÔºåÂπ∂ÁºñËæëÂÆåÊàêËá™Â∑±ÁöÑÂçöÂÆ¢ÂÜÖÂÆπ ÂÜôÂÆåÔºåÂ§á‰ªΩ‰∏Ä‰∏ãÔºåÂÜçÂêåÊ≠•Âà∞githubÔºÅ 1234git add source #ÊØèÊ¨°Âè™Ë¶ÅÊõ¥Êñ∞sorcerer‰∏≠ÁöÑÊñá‰ª∂Âà∞Github‰∏≠Âç≥ÂèØÔºåÂõ†‰∏∫Âè™ÊòØÊñ∞Âª∫‰∫Ü‰∏ÄÁØáÊñ∞ÂçöÂÆ¢git commit -m "Êõ¥Êñ∞ËØ¥Êòé"git push origin hexo #Êõ¥Êñ∞ÂàÜÊîØhexo d -g #pushÊõ¥Êñ∞ÂÆåÂàÜÊîØ‰πãÂêéÂ∞ÜËá™Â∑±ÂÜôÁöÑÂçöÂÆ¢ÂØπÊé•Âà∞Ëá™Â∑±Êê≠ÁöÑÂçöÂÆ¢ÁΩëÁ´ô‰∏äÔºåÂêåÊó∂ÂêåÊ≠•‰∫ÜGithub‰∏≠ÁöÑmaster Áï™Â§ñÔºöÁ¨îËÆ∞Êú¨ÊÄé‰πàÂêåÊ≠•ÔºüËøõÂÖ•ÊàëÂçöÂÆ¢ÁöÑÂéüÂßãÊñá‰ª∂Â§πÂÜÖ 1git pull origin hexo #ÂÖàpullÂÆåÊàêÊú¨Âú∞‰∏éËøúÁ´ØÁöÑËûçÂêà HexoÂºÇÂ∏∏Ôºöfatal:inunpopulatedsubmodule‚Äô.deploy_git‚ÄôÊÄé‰πàËß£ÂÜ≥ÂÆûÂú®‰∏çË°åÔºåÂ∞±ÊääÂÆÉÂà†ÊéâÔºåÁÑ∂ÂêéÈáçÊñ∞ÁîüÊàêÂíåÈÉ®ÁΩ≤„ÄÇ 1`rm -rf .deploy_git``hexo g``hexo d` GitÂëΩ‰ª§Êï¥ÁêÜGitÈÖçÁΩÆgit config ‚Äìglobal user.name ‚Äúrobbin‚Äùgit config ‚Äìglobal user.email ‚Äúrandyvan007@hotmail.com‚Äúgit config ‚Äìglobal color.ui truegit config ‚Äìglobal alias.co checkoutgit config ‚Äìglobal alias.ci commitgit config ‚Äìglobal alias.st statusgit config ‚Äìglobal alias.br branchgit config ‚Äìglobal core.editor ‚Äúmate -w‚Äù # ËÆæÁΩÆEditor‰ΩøÁî®textmategit config -l # Âàó‰∏æÊâÄÊúâÈÖçÁΩÆÁî®Êà∑ÁöÑgitÈÖçÁΩÆÊñá‰ª∂~/.gitconfig GitÂ∏∏Áî®ÂëΩ‰ª§Êü•Áúã„ÄÅÊ∑ªÂä†„ÄÅÊèê‰∫§„ÄÅÂà†Èô§„ÄÅÊâæÂõûÔºåÈáçÁΩÆ‰øÆÊîπÊñá‰ª∂ 12345678910111213141516171819202122232425git help &lt;command&gt; # ÊòæÁ§∫commandÁöÑhelpgit show # ÊòæÁ§∫ÊüêÊ¨°Êèê‰∫§ÁöÑÂÜÖÂÆπgit show $idgit co -- &lt;file&gt; # ÊäõÂºÉÂ∑•‰ΩúÂå∫‰øÆÊîπgit co . # ÊäõÂºÉÂ∑•‰ΩúÂå∫‰øÆÊîπgit add &lt;file&gt; # Â∞ÜÂ∑•‰ΩúÊñá‰ª∂‰øÆÊîπÊèê‰∫§Âà∞Êú¨Âú∞ÊöÇÂ≠òÂå∫git add . # Â∞ÜÊâÄÊúâ‰øÆÊîπËøáÁöÑÂ∑•‰ΩúÊñá‰ª∂Êèê‰∫§ÊöÇÂ≠òÂå∫git rm &lt;file&gt; # ‰ªéÁâàÊú¨Â∫ì‰∏≠Âà†Èô§Êñá‰ª∂git rm &lt;file&gt; --cached # ‰ªéÁâàÊú¨Â∫ì‰∏≠Âà†Èô§Êñá‰ª∂Ôºå‰ΩÜ‰∏çÂà†Èô§Êñá‰ª∂git reset &lt;file&gt; # ‰ªéÊöÇÂ≠òÂå∫ÊÅ¢Â§çÂà∞Â∑•‰ΩúÊñá‰ª∂git reset -- . # ‰ªéÊöÇÂ≠òÂå∫ÊÅ¢Â§çÂà∞Â∑•‰ΩúÊñá‰ª∂git reset --hard # ÊÅ¢Â§çÊúÄËøë‰∏ÄÊ¨°Êèê‰∫§ËøáÁöÑÁä∂ÊÄÅÔºåÂç≥ÊîæÂºÉ‰∏äÊ¨°Êèê‰∫§ÂêéÁöÑÊâÄÊúâÊú¨Ê¨°‰øÆÊîπgit ci &lt;file&gt;git ci .git ci -a # Â∞Ügit add, git rmÂíågit ciÁ≠âÊìç‰ΩúÈÉΩÂêàÂπ∂Âú®‰∏ÄËµ∑ÂÅögit ci -am "some comments"git ci --amend # ‰øÆÊîπÊúÄÂêé‰∏ÄÊ¨°Êèê‰∫§ËÆ∞ÂΩïgit revert &lt;$id&gt; # ÊÅ¢Â§çÊüêÊ¨°Êèê‰∫§ÁöÑÁä∂ÊÄÅÔºåÊÅ¢Â§çÂä®‰ΩúÊú¨Ë∫´‰πüÂàõÂª∫‰∫Ü‰∏ÄÊ¨°Êèê‰∫§ÂØπË±°git revert HEAD # ÊÅ¢Â§çÊúÄÂêé‰∏ÄÊ¨°Êèê‰∫§ÁöÑÁä∂ÊÄÅ Êü•ÁúãÊñá‰ª∂diff1234567git diff &lt;file&gt; # ÊØîËæÉÂΩìÂâçÊñá‰ª∂ÂíåÊöÇÂ≠òÂå∫Êñá‰ª∂Â∑ÆÂºÇgit diffgit diff &lt;$id1&gt; &lt;$id2&gt; # ÊØîËæÉ‰∏§Ê¨°Êèê‰∫§‰πãÈó¥ÁöÑÂ∑ÆÂºÇgit diff &lt;branch1&gt;..&lt;branch2&gt; # Âú®‰∏§‰∏™ÂàÜÊîØ‰πãÈó¥ÊØîËæÉgit diff --staged # ÊØîËæÉÊöÇÂ≠òÂå∫ÂíåÁâàÊú¨Â∫ìÂ∑ÆÂºÇgit diff --cached # ÊØîËæÉÊöÇÂ≠òÂå∫ÂíåÁâàÊú¨Â∫ìÂ∑ÆÂºÇgit diff --stat # ‰ªÖ‰ªÖÊØîËæÉÁªüËÆ°‰ø°ÊÅØ Êü•ÁúãÊèê‰∫§ËÆ∞ÂΩï1234567git loggit log &lt;file&gt; # Êü•ÁúãËØ•Êñá‰ª∂ÊØèÊ¨°Êèê‰∫§ËÆ∞ÂΩïgit log -p &lt;file&gt; # Êü•ÁúãÊØèÊ¨°ËØ¶ÁªÜ‰øÆÊîπÂÜÖÂÆπÁöÑdiffgit log -p -2 # Êü•ÁúãÊúÄËøë‰∏§Ê¨°ËØ¶ÁªÜ‰øÆÊîπÂÜÖÂÆπÁöÑdiffgit log --stat # Êü•ÁúãÊèê‰∫§ÁªüËÆ°‰ø°ÊÅØtigMac‰∏äÂèØ‰ª•‰ΩøÁî®tig‰ª£ÊõødiffÂíålogÔºåbrew install tig Git Êú¨Âú∞ÂàÜÊîØÁÆ°ÁêÜÊü•Áúã„ÄÅÂàáÊç¢„ÄÅÂàõÂª∫ÂíåÂà†Èô§ÂàÜÊîØ 123456789101112131415git br -r # Êü•ÁúãËøúÁ®ãÂàÜÊîØgit br &lt;new_branch&gt; # ÂàõÂª∫Êñ∞ÁöÑÂàÜÊîØgit br -v # Êü•ÁúãÂêÑ‰∏™ÂàÜÊîØÊúÄÂêéÊèê‰∫§‰ø°ÊÅØgit br --merged # Êü•ÁúãÂ∑≤ÁªèË¢´ÂêàÂπ∂Âà∞ÂΩìÂâçÂàÜÊîØÁöÑÂàÜÊîØgit br --no-merged # Êü•ÁúãÂ∞öÊú™Ë¢´ÂêàÂπ∂Âà∞ÂΩìÂâçÂàÜÊîØÁöÑÂàÜÊîØgit co &lt;branch&gt; # ÂàáÊç¢Âà∞Êüê‰∏™ÂàÜÊîØgit co -b &lt;new_branch&gt; # ÂàõÂª∫Êñ∞ÁöÑÂàÜÊîØÔºåÂπ∂‰∏îÂàáÊç¢ËøáÂéªgit co -b &lt;new_branch&gt; &lt;branch&gt; # Âü∫‰∫ébranchÂàõÂª∫Êñ∞ÁöÑnew_branchgit co $id # ÊääÊüêÊ¨°ÂéÜÂè≤Êèê‰∫§ËÆ∞ÂΩïcheckoutÂá∫Êù•Ôºå‰ΩÜÊó†ÂàÜÊîØ‰ø°ÊÅØÔºåÂàáÊç¢Âà∞ÂÖ∂‰ªñÂàÜÊîØ‰ºöËá™Âä®Âà†Èô§git co $id -b &lt;new_branch&gt; # ÊääÊüêÊ¨°ÂéÜÂè≤Êèê‰∫§ËÆ∞ÂΩïcheckoutÂá∫Êù•ÔºåÂàõÂª∫Êàê‰∏Ä‰∏™ÂàÜÊîØgit br -d &lt;branch&gt; # Âà†Èô§Êüê‰∏™ÂàÜÊîØgit br -D &lt;branch&gt; # Âº∫Âà∂Âà†Èô§Êüê‰∏™ÂàÜÊîØ (Êú™Ë¢´ÂêàÂπ∂ÁöÑÂàÜÊîØË¢´Âà†Èô§ÁöÑÊó∂ÂÄôÈúÄË¶ÅÂº∫Âà∂) ÂàÜÊîØÂêàÂπ∂Âíårebase12345git merge &lt;branch&gt; # Â∞ÜbranchÂàÜÊîØÂêàÂπ∂Âà∞ÂΩìÂâçÂàÜÊîØgit merge origin/master --no-ff # ‰∏çË¶ÅFast-FowardÂêàÂπ∂ÔºåËøôÊ†∑ÂèØ‰ª•ÁîüÊàêmergeÊèê‰∫§git rebase master &lt;branch&gt; # Â∞Ümaster rebaseÂà∞branchÔºåÁõ∏ÂΩì‰∫éÔºögit co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt; GitË°•‰∏ÅÁÆ°ÁêÜ(Êñπ‰æøÂú®Â§öÂè∞Êú∫Âô®‰∏äÂºÄÂèëÂêåÊ≠•Êó∂Áî®)123git diff &gt; ../sync.patch # ÁîüÊàêË°•‰∏Ågit apply ../sync.patch # ÊâìË°•‰∏Ågit apply --check ../sync.patch # ÊµãËØïË°•‰∏ÅËÉΩÂê¶ÊàêÂäü GitÊöÇÂ≠òÁÆ°ÁêÜ1234git stash # ÊöÇÂ≠ògit stash list # ÂàóÊâÄÊúâstashgit stash apply # ÊÅ¢Â§çÊöÇÂ≠òÁöÑÂÜÖÂÆπgit stash drop # Âà†Èô§ÊöÇÂ≠òÂå∫ GitËøúÁ®ãÂàÜÊîØÁÆ°ÁêÜ12345678910111213git pull # ÊäìÂèñËøúÁ®ã‰ªìÂ∫ìÊâÄÊúâÂàÜÊîØÊõ¥Êñ∞Âπ∂ÂêàÂπ∂Âà∞Êú¨Âú∞git pull --no-ff # ÊäìÂèñËøúÁ®ã‰ªìÂ∫ìÊâÄÊúâÂàÜÊîØÊõ¥Êñ∞Âπ∂ÂêàÂπ∂Âà∞Êú¨Âú∞Ôºå‰∏çË¶ÅÂø´ËøõÂêàÂπ∂git fetch origin # ÊäìÂèñËøúÁ®ã‰ªìÂ∫ìÊõ¥Êñ∞git merge origin/master # Â∞ÜËøúÁ®ã‰∏ªÂàÜÊîØÂêàÂπ∂Âà∞Êú¨Âú∞ÂΩìÂâçÂàÜÊîØgit co --track origin/branch # Ë∑üË∏™Êüê‰∏™ËøúÁ®ãÂàÜÊîØÂàõÂª∫Áõ∏Â∫îÁöÑÊú¨Âú∞ÂàÜÊîØgit co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt; # Âü∫‰∫éËøúÁ®ãÂàÜÊîØÂàõÂª∫Êú¨Âú∞ÂàÜÊîØÔºåÂäüËÉΩÂêå‰∏ägit push # pushÊâÄÊúâÂàÜÊîØgit push origin master # Â∞ÜÊú¨Âú∞‰∏ªÂàÜÊîØÊé®Âà∞ËøúÁ®ã‰∏ªÂàÜÊîØgit push -u origin master # Â∞ÜÊú¨Âú∞‰∏ªÂàÜÊîØÊé®Âà∞ËøúÁ®ã(Â¶ÇÊó†ËøúÁ®ã‰∏ªÂàÜÊîØÂàôÂàõÂª∫ÔºåÁî®‰∫éÂàùÂßãÂåñËøúÁ®ã‰ªìÂ∫ì)git push origin &lt;local_branch&gt; # ÂàõÂª∫ËøúÁ®ãÂàÜÊîØÔºå originÊòØËøúÁ®ã‰ªìÂ∫ìÂêçgit push origin &lt;local_branch&gt;:&lt;remote_branch&gt; # ÂàõÂª∫ËøúÁ®ãÂàÜÊîØgit push origin :&lt;remote_branch&gt; #ÂÖàÂà†Èô§Êú¨Âú∞ÂàÜÊîØ(git br -d &lt;branch&gt;)ÔºåÁÑ∂ÂêéÂÜçpushÂà†Èô§ËøúÁ®ãÂàÜÊîØ GitËøúÁ®ã‰ªìÂ∫ìÁÆ°ÁêÜ12345git remote -v # Êü•ÁúãËøúÁ®ãÊúçÂä°Âô®Âú∞ÂùÄÂíå‰ªìÂ∫ìÂêçÁß∞git remote show origin # Êü•ÁúãËøúÁ®ãÊúçÂä°Âô®‰ªìÂ∫ìÁä∂ÊÄÅgit remote add origin git@github:robbin/robbin_site.git # Ê∑ªÂä†ËøúÁ®ã‰ªìÂ∫ìÂú∞ÂùÄgit remote set-url origin git@github.com:robbin/robbin_site.git # ËÆæÁΩÆËøúÁ®ã‰ªìÂ∫ìÂú∞ÂùÄ(Áî®‰∫é‰øÆÊîπËøúÁ®ã‰ªìÂ∫ìÂú∞ÂùÄ)git remote rm &lt;repository&gt; # Âà†Èô§ËøúÁ®ã‰ªìÂ∫ì ÂàõÂª∫ËøúÁ®ã‰ªìÂ∫ì 12345678910111213git clone --bare robbin_site robbin_site.git # Áî®Â∏¶ÁâàÊú¨ÁöÑÈ°πÁõÆÂàõÂª∫Á∫ØÁâàÊú¨‰ªìÂ∫ìscp -r my_project.git git@git.csdn.net:~ # Â∞ÜÁ∫Ø‰ªìÂ∫ì‰∏ä‰º†Âà∞ÊúçÂä°Âô®‰∏ämkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git --bare init # Âú®ÊúçÂä°Âô®ÂàõÂª∫Á∫Ø‰ªìÂ∫ìgit remote add origin git@github.com:robbin/robbin_site.git # ËÆæÁΩÆËøúÁ®ã‰ªìÂ∫ìÂú∞ÂùÄgit push -u origin master # ÂÆ¢Êà∑Á´ØÈ¶ñÊ¨°Êèê‰∫§git push -u origin develop # È¶ñÊ¨°Â∞ÜÊú¨Âú∞developÂàÜÊîØÊèê‰∫§Âà∞ËøúÁ®ãdevelopÂàÜÊîØÔºåÂπ∂‰∏îtrackgit remote set-head origin master # ËÆæÁΩÆËøúÁ®ã‰ªìÂ∫ìÁöÑHEADÊåáÂêëmasterÂàÜÊîØ‰πüÂèØ‰ª•ÂëΩ‰ª§ËÆæÁΩÆË∑üË∏™ËøúÁ®ãÂ∫ìÂíåÊú¨Âú∞Â∫ìgit branch --set-upstream master origin/mastergit branch --set-upstream develop origin/develop HappyEndingÂÆåÊàêÔºåÁªßÁª≠Áé©Ê∏∏ÊàèÔºÅ ÂèÇËÄÉÈìæÊé•1 ÂèÇËÄÉÈìæÊé•2 ÊÑüË∞¢ÔºÅ ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢]]></content>
      <tags>
        <tag>Êó•Â∏∏</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Windows10</tag>
        <tag>Hexo</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WIN10 1809ÈöêËóèÂ§ßÊùÄÂô®--ÂçìË∂äÊ®°Âºè]]></title>
    <url>%2F2018%2F07%2F06%2FWIN10-1809%E9%9A%90%E8%97%8F%E5%A4%A7%E6%9D%80%E5%99%A8-%E5%8D%93%E8%B6%8A%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[ÈìõÈìõÈìõ ÂºÄÁÆ±Âø´ÈÄíÊù•‰∫ÜÔºÅÊñ∞cpuÂà∞‰∫ÜÂÖ∂ÂÆû‰πü‰∏çÁÆóÊñ∞cpuÔºåÊØïÁ´üËøô‰∏™cpuÂ∑≤ÁªèÂá∫‰∫Ü6Âπ¥‰∫Ü„ÄÇ ÊîæÊöëÂÅá‰∫ÜÔºåÊÄªË¶ÅÂ®±‰πê‰∏Ä‰∏ã„ÄÇÂ•à‰ΩïÂÆ∂ÈáåÁöÑËÄÅÁîµËÑëcpuÊÄßËÉΩ‰∏çÂ§ßÂ§üÔºà‰∫å‰ª£i5 @2.9ghzÔºâÔºåÂπ≤Âï•Âï•‰∏çÁóõÂø´ÔºåÂæàÊòØËã¶ÊÅº„ÄÇÊ≠£Â•ΩÔºåË∂ÅÁùÄi7 9900KÂ∞ÜË¶ÅÂèëÂîÆÁöÑÊó∂ÂÄôÔºåËµ∂Âø´‰π∞‰∫Ü‰∏™E3-1240V2ÂÖÖÂÄº‰ø°‰ª∞ÔºÅ ÂÖàÊù•ÂõûÈ°æ‰∏Ä‰∏ãÊñ∞‰π∞cpuÁöÑÂèÇÊï∞„ÄÇ Âü∫Êú¨ÂèÇÊï∞CPUÁ≥ªÂàó Xeon E3 v2Á≥ªÂàóÂà∂‰ΩúÂ∑•Ëâ∫ 22Á∫≥Á±≥Ê†∏ÂøÉ‰ª£Âè∑ Ivy Bridge ÊÄßËÉΩÂèÇÊï∞Ê†∏ÂøÉÊï∞Èáè ÂõõÊ†∏ÂøÉÁ∫øÁ®ãÊï∞Èáè ÂÖ´Á∫øÁ®ãCPU‰∏ªÈ¢ë 3.4GHzÂä®ÊÄÅÂä†ÈÄüÈ¢ëÁéá 3.8GHzL3ÁºìÂ≠ò 8MBÊÄªÁ∫øËßÑÊ†º DMI 5GT/sÁÉ≠ËÆæËÆ°ÂäüËÄó(TDP) 69W ÂÜÖÂ≠òËßÑÊ†ºÊîØÊåÅÊúÄÂ§ßÂÜÖÂ≠òÂÆπÈáè 32GBÂÜÖÂ≠òÁ±ªÂûã DDR3 1333/1600MHzÂÜÖÂ≠òÊèèËø∞ ÂèåÈÄöÈÅìDDR3-1333/1600MHz Â∞ÅË£ÖËßÑÊ†ºÊèíÊßΩÁ±ªÂûã LGA 1155Â∞ÅË£ÖÂ§ßÂ∞è 37.5√ó37.5mmÊúÄÂ§ßCPUÈÖçÁΩÆ 1È¢ó ÊäÄÊúØÂèÇÊï∞ÁùøÈ¢ëÂä†ÈÄüÊäÄÊúØ ÊîØÊåÅÔºå2.0Ë∂ÖÁ∫øÁ®ãÊäÄÊúØ ÊîØÊåÅËôöÊãüÂåñÊäÄÊúØ Intel VT-xÊåá‰ª§ÈõÜ AVXÔºåSSE4.1ÔºåSSE4.264‰ΩçÂ§ÑÁêÜÂô® ÊîØÊåÅÂÖ∂ÂÆÉÊäÄÊúØ ÊîØÊåÅÂçöÈîêÊäÄÊúØÔºåÂÆöÂêëI/OËôöÊãüÂåñÊäÄÊúØÔºåÂ¢ûÂº∫ÂûãSpeedStepÊäÄÊúØÔºåÊåâÈúÄÈÖçÁîµÊäÄÊúØÔºåÊ∏©Â∫¶ÁõëËßÜÊäÄÊúØÔºåË∫´‰ªΩ‰øùÊä§ÊäÄÊúØÔºåÊï∞ÊçÆ‰øùÊä§ÊäÄÊúØÔºåÂπ≥Âè∞‰øùÊä§ÊäÄÊúØÈõÜÊàêÊòæÂç° ‰∏çÊîØÊåÅ Ëøô‰∏™cpuÁé∞Âú®Êù•ÁúãÂèÇÊï∞‰∏çÊÄé‰πàÊ†∑ÔºåÊÄßËÉΩ‰πüÂ§ßÊ¶ÇÊØîi3-8100È´ò‰∏ÄÁÇπÔºå‰ΩÜÊòØËøôÁöÑÁ°ÆÊòØLGA1155Âπ≥Âè∞‰∏äÊÄßËÉΩÊØîËæÉÈ´òÁöÑ‰∫Ü„ÄÇ‰∏çÂ∏¶ÈõÜÊàêÊòæÂç°ÔºåËßÑÊ†º‰∏ªÈ¢ëÂíåi7 3770kÂ∑Æ‰∏çÂ§öÔºåÁî±‰∫éÊàëËøôËæπËÄÅ‰∏ªÊùøÊòØb75Ôºå‰∏çËÉΩÁªôi7Ë∂ÖÈ¢ëÔºåÊâÄ‰ª•‰πüÂ∞±Ê≤°ÈÄâ„ÄÇ Ë£ÖÊú∫Ë£ÖÊú∫ËøáÁ®ãÊ≤°ÊúâÊãçÊëÑÔºå‰∏ä‰∏ÄÁªÑË£ÖÊú∫ÊàêÂäüÁöÑBIOSÊà™ÂõæÂêß„ÄÇ‰∏ÄÊ¨°ÊàêÂäüÁÇπ‰∫ÆÔºÅÁî±‰∫éÊàë‰π∞ÁöÑ1240v2ÊòØ‰∫åÂ≠óÂ§¥Ôºå‰ΩìË¥®Â•ΩÔºåÂèØ‰ª•Ë∞ÉÈ¢ë„ÄÇÊûúÊñ≠Êääc1„ÄÅc3„ÄÅc6ÂÖ≥ÊéâÔºåËäÇÁîµÂÖ≥ÊéâÔºåÂÜÖÂ≠òË∂ÖÂØº1600ÔºåÊó∂Â∫èÈôç‰Ωé‰∏ÄÁÇπËÆæÁΩÆÊàêÂçïÊ†∏3.8ghzÔºåÊúÄ‰Ωé3.6ghz Ê∏∏ÊàèÊµãËØïÊµãËØï‰∏Ä‰∏ãÊàëÊúÄËøëÂñúÊ¨¢Áé©ÁöÑÊ∏∏ÊàèÔºåÊÉäÈ≠Ç5ÔºåÁîªË¥®ÂÖ®È´ò ÂÆûÈôÖËøêË°åË°®ÊòéÔºåÊúÄÈ´òÂ∏ß81ÔºåÊúÄ‰Ωé62ÔºåÂèØ‰ª•ÊµÅÁïÖËøêË°å„ÄÇËÄåËÄÅÂπ≥Âè∞ÊúÄ‰Ωé51ÔºåÊúÄÈ´ò72„ÄÇÊµÅÁïÖÊÄßÊúâÊòæËëóÊèêÂçá„ÄÇ win10ÁîµÊ∫êÁÆ°ÁêÜ‚ÄìÂçìË∂äÊ®°ÂºèÊé•‰∏ãÊù•ÊòØÊ†áÈ¢òÂÜÖÂÆπ‰∫Ü~ Ëøô‰∏™Ê≤°‰ªÄ‰πàÂ•ΩËØ¥ÁöÑÔºåWin10Êõ¥Êñ∞1803‰ª•Êù•ÔºåÂæÆËΩØ‰∏ç‰ªÖÂ∏¶Êù•‰∫Ü‰∏Ä‰∫õÊñ∞ÂäüËÉΩÔºàÂíåBUGÔºâÔºåËøòÊÇÑÊÇÑÂú∞Âä†ÂÖ•‰∫Ü‰∏Ä‰∏™‚ÄúÂçìË∂äÊÄßËÉΩÊ®°Âºè‚ÄùÔºåÂºÄ‰∫ÜÂÆÉÔºåCPUÁîµÂéã‰ºöÊØîÈ´òÊÄßËÉΩÊ®°ÂºèÊõ¥‰ΩéÔºå‰ªéËÄåÂ∏¶Êù•Áõ∏ÂØπÊõ¥‰Ωé‰∏Ä‰∫õÁöÑÊ∏©Â∫¶‰ª•ÂèäÁ®≥ÂÆöÊÄßÔºåÂπ∂‰∏îÂØπÂÜÖÂ≠òË∂ÖÈ¢ë‰πüÊúâ‰∏ÄÂÆöÂ∏ÆÂä© ÂºÄÂêØÈ¶ñÂÖàÔºåÊàë‰ª¨ÈúÄË¶ÅÊåâWinÈîÆÊêúÁ¥¢Âπ∂Âè≥ÈîÆ‰ª•ÁÆ°ÁêÜÂëòË∫´‰ªΩÊâìÂºÄ[ Windows Powershell ]Ôºå ÁÑ∂ÂêéËæìÂÖ•powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61Ôºö ÈÇ£‰πàÊÅ≠Âñú‰Ω†Ôºå‰Ω†ÁöÑÁîµËÑëÂ∑≤ÁªèÊàêÂäüÂºÄÂêØ‰∫Ü‚ÄúÂçìË∂äÊÄßËÉΩÊ®°Âºè‚ÄùÔºåÂú®ÁîµÊ∫êÈÄâÈ°π‰∏≠ËΩªÊùæÊâæÂà∞ÂÆÉÂï¶~ ÁªìÊùüÊ≠§ÁâáÂÆå‰∫Ü~ ÂºÄÂêØÂçìË∂äÊ®°ÂºèÁöÑÊñáÁ´†ÁΩë‰∏ä‰∏ÄÂ§ßÂ†Ü‰∏ÄÂ§ßÂ†ÜÁöÑÔºåËøôÊ¨°Âë¢ÈáçÁÇπËøòÊòØ‰∏ªË¶ÅÂàÜ‰∫´‰∏Ä‰∏ãÊàëÊç¢cpuÁöÑÊïÖ‰∫ã„ÄÇÂΩìÁÑ∂Ôºå‚ÄúÂçìË∂äÊÄßËÉΩ‚ÄùÂü∫Êú¨ÂèØ‰ª•‰ª£Êõø‚ÄúÈ´òÊÄßËÉΩ‚ÄùÊ®°Âºè‰ΩøÁî®ÔºåÊØïÁ´üÊúâ‰∫ÜÔºàÁúãËµ∑Êù•ÔºâÊõ¥Â•ΩÁöÑËá™ÁÑ∂Â∞±ÈÄâÊã©Êõ¥Â•ΩÁöÑ‰∫Ü„ÄÇÂπ∂‰∏îÈùûÂ∏∏Êé®ËçêÂñúÊ¨¢Ë∂ÖË∂ÖÈ¢ë„ÄÅÁé©Á°¨‰ª∂ÁöÑÁî®Êà∑‰ΩøÁî®ÔºåÂõ†‰∏∫Á°ÆÂÆûÊúâÊÄßËÉΩÊèêÂçáÔºåËÉΩÂºÄÂ∞±ÂºÄÂêß„ÄÇ]]></content>
      <tags>
        <tag>Êó•Â∏∏</tag>
        <tag>ÊäÄÊúØ</tag>
        <tag>Windows10</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[=_=ÊàëÁöÑ‰∏ä‰∏Ä‰∏™ÂçöÂÆ¢Ë¢´ÊîªÂáªÁò´Áó™‰∫Ü=_=]]></title>
    <url>%2F2018%2F07%2F04%2FHelloWorld%2F</url>
    <content type="text"><![CDATA[ÂàöÂàöÁªìÊùüÊúüÊú´ËÄÉËØïÔºåÂëºÂëº(_ _)„ÇúzÔΩöÔº∫ÔºåÁ¥ØÊ≠ª‰∫Ü„ÄÇ ‰∏ÄÊÉ≥Âà∞ÂéüÊù•ÁöÑÂçöÂÆ¢Ê≤°Êúâ‰∫ÜÔºå ËøòË¶ÅÂú®Êê≠‰∏Ä‰∏™ÔºåÂ∞±Êõ¥Á¥Ø‰∫ÜÔºÅ ‰∏á‰∫ãÂºÄÂ§¥ÈöæÔºåhelloWorld‰∏çËÉΩ‰∏çÂÜô„ÄÇËÄå‰∏îÂõ†‰∏∫‰∏çÊòØÁ¨¨‰∏ÄÊ¨°ÂÜôHelloWorld‰∫ÜÔºåÊâÄ‰ª•ËøôÊ¨°ÂÜôÁöÑÁÆÄÂçïÁÇπÂêß„ÄÇ Âì¶ÔºåÂøò‰∫Ü‰∫§‰ª£‰∫ÜÔºåÊàëÁöÑ‰∏ä‰∏Ä‰∏™ÂçöÂÆ¢ÊåÇÊéâ‰∫ÜÔºå Ë¢´DDOSÊîªÂáªÊîªÂáªÔºåÊîªÂáªÂÆå‰∫ÜÊöÇ‰∏î‰∏çËØ¥ÔºåÁôªÈôÜÂØÜÁ†ÅÂèàË¢´Êö¥ÂäõÁ†¥Ëß£‰∫Ü„ÄÇÂìéÔºåÈöæÂèóÔºåÂõæÁúÅÈí±‰π∞ÁöÑOpenVZÊúçÂä°Âô®ÔºåÊîªÂáªÂêéÂú®Êï∞ÊçÆ‰∏≠ÂøÉÁÆ°ÁêÜÂëòÁöÑÂá†ÁªèÁ°ÆËÆ§‰∏ãÔºåË¢´Âà§ÂÆöÊ≠ª‰∫°„ÄÇÊï∞ÊçÆÊó†Ê≥ï‰øÆÂ§çÔºåÂÜÖÊ†∏Ë¢´Á†¥ÂùèÔºåÊó†Ê≥ïÂêØÂä®„ÄÇ ËÄåÊàë‰πüÊ≤°ÊúâËÆæÁΩÆÂ§á‰ªΩÔºàËøò‰∏çÊòØÂõ†‰∏∫ÊáíÔºÅÔºâÔºåÈõ™‰∏äÂä†ÈúúÔºÅ üòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòï Êú¨Áà∂‰∫≤Â•ΩÈöæÂèóÔºÅ üòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòïüòï ËøôÊ¨°ÊàëÂ≠¶‰πñ‰∫ÜÔºåÊñ∞ÁöÑÂçöÂÆ¢Êê≠Âª∫Âú®GithubPage‰∏äÔºåÈªëÂÆ¢‰Ω†‰ª¨Èöè‰æøÊîªÂáªÔºåÂ§ß‰∏ç‰∫ÜÂ∞±Ê≤°ÊúâÊµÅÈáè„ÄÇÂæÖËÄÅÂ§´ÊúâÈí±‰∫ÜÔºåÂ∞±ÂéªÊ∂àË¥π‰∏™CDNÔºåÁà±ÂíãÂú∞Âú®Âú∞„ÄÇ Ë°åÔºåÂ∞±ËøôÊ†∑ÂêßÔºå ÊÉ≥Ë¶ÅËß£ÈîÅÊõ¥Â§öÊñ∞ÂßøÂäøÔºüËØ∑ËÆøÈóÆÊàëÁöÑÂçöÂÆ¢]]></content>
      <tags>
        <tag>Êó•Â∏∏</tag>
        <tag>Âàù</tag>
      </tags>
  </entry>
</search>
